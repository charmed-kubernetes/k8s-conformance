I0813 11:54:24.945444      18 e2e.go:129] Starting e2e run "e8e02f4f-a66a-4433-bc1b-a817a64c7307" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1660391664 - Will randomize all specs
Will run 356 of 6971 specs

Aug 13 11:54:27.367: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 11:54:27.368: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Aug 13 11:54:27.388: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Aug 13 11:54:27.403: INFO: 4 / 4 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Aug 13 11:54:27.403: INFO: expected 4 pod replicas in namespace 'kube-system', 4 are Running and Ready.
Aug 13 11:54:27.403: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Aug 13 11:54:27.406: INFO: e2e test version: v1.24.3
Aug 13 11:54:27.407: INFO: kube-apiserver version: v1.24.3
Aug 13 11:54:27.407: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 11:54:27.411: INFO: Cluster IP family: ipv4
S
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:54:27.411: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename init-container
W0813 11:54:27.512704      18 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 13 11:54:27.512: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Aug 13 11:54:27.526: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0813 11:54:27.529996      18 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0813 11:54:27.534746      18 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 13 11:54:27.545: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-616
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 13 11:54:27.666: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 13 11:54:33.350: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-616" for this suite.

• [SLOW TEST:5.953 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":1,"skipped":1,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:54:33.364: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-1532
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 13 11:54:39.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-1532" for this suite.

• [SLOW TEST:6.116 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":2,"skipped":27,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:54:39.480: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-1611
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Aug 13 11:54:39.621: INFO: Waiting up to 5m0s for pod "client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca" in namespace "containers-1611" to be "Succeeded or Failed"
Aug 13 11:54:39.624: INFO: Pod "client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.611097ms
Aug 13 11:54:41.631: INFO: Pod "client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010233022s
Aug 13 11:54:43.638: INFO: Pod "client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca": Phase="Running", Reason="", readiness=true. Elapsed: 4.016988328s
Aug 13 11:54:45.646: INFO: Pod "client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca": Phase="Running", Reason="", readiness=false. Elapsed: 6.024480242s
Aug 13 11:54:47.653: INFO: Pod "client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.032060984s
STEP: Saw pod success
Aug 13 11:54:47.653: INFO: Pod "client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca" satisfied condition "Succeeded or Failed"
Aug 13 11:54:47.657: INFO: Trying to get logs from node ip-172-31-79-226 pod client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca container agnhost-container: <nil>
STEP: delete the pod
Aug 13 11:54:47.687: INFO: Waiting for pod client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca to disappear
Aug 13 11:54:47.697: INFO: Pod client-containers-d5231ef1-0a3d-4aa7-ad15-7cfdb21cedca no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 13 11:54:47.697: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-1611" for this suite.

• [SLOW TEST:8.229 seconds]
[sig-node] Containers
test/e2e/common/node/framework.go:23
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":3,"skipped":52,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:54:47.709: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-b21357aa-2aac-4d7d-8653-a3017ca18626
STEP: Creating a pod to test consume configMaps
Aug 13 11:54:47.855: INFO: Waiting up to 5m0s for pod "pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7" in namespace "configmap-6512" to be "Succeeded or Failed"
Aug 13 11:54:47.859: INFO: Pod "pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.528115ms
Aug 13 11:54:49.868: INFO: Pod "pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013235554s
Aug 13 11:54:51.877: INFO: Pod "pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022230548s
STEP: Saw pod success
Aug 13 11:54:51.877: INFO: Pod "pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7" satisfied condition "Succeeded or Failed"
Aug 13 11:54:51.880: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 11:54:51.901: INFO: Waiting for pod pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7 to disappear
Aug 13 11:54:51.904: INFO: Pod pod-configmaps-f15b045a-ee54-4144-8240-1f99b0d47bf7 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 11:54:51.904: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6512" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":4,"skipped":105,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:54:51.915: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-5
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 13 11:54:58.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-5" for this suite.

• [SLOW TEST:6.210 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":5,"skipped":128,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:54:58.126: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4005
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4005
STEP: creating service affinity-clusterip-transition in namespace services-4005
STEP: creating replication controller affinity-clusterip-transition in namespace services-4005
I0813 11:54:58.281862      18 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-4005, replica count: 3
I0813 11:55:01.332874      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0813 11:55:04.333443      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0813 11:55:07.333879      18 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 11:55:07.350: INFO: Creating new exec pod
Aug 13 11:55:10.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4005 exec execpod-affinity9sslc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Aug 13 11:55:10.701: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Aug 13 11:55:10.701: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 11:55:10.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4005 exec execpod-affinity9sslc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
Aug 13 11:55:10.818: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
Aug 13 11:55:10.818: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 11:55:10.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4005 exec execpod-affinity9sslc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
Aug 13 11:55:11.035: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
Aug 13 11:55:11.035: INFO: stdout: "\naffinity-clusterip-transition-prlpr\naffinity-clusterip-transition-tchnm\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-prlpr\naffinity-clusterip-transition-tchnm\naffinity-clusterip-transition-tchnm\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-tchnm\naffinity-clusterip-transition-prlpr\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-tchnm\naffinity-clusterip-transition-prlpr\naffinity-clusterip-transition-prlpr\naffinity-clusterip-transition-tchnm\naffinity-clusterip-transition-pfgch"
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-prlpr
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-tchnm
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-prlpr
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-tchnm
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-tchnm
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-tchnm
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-prlpr
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-tchnm
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-prlpr
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-prlpr
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-tchnm
Aug 13 11:55:11.035: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4005 exec execpod-affinity9sslc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
Aug 13 11:55:11.234: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
Aug 13 11:55:11.234: INFO: stdout: "\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch\naffinity-clusterip-transition-pfgch"
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Received response from host: affinity-clusterip-transition-pfgch
Aug 13 11:55:11.234: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-4005, will wait for the garbage collector to delete the pods
Aug 13 11:55:11.308: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.431011ms
Aug 13 11:55:11.409: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.460353ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 11:55:13.850: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4005" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:15.736 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":6,"skipped":146,"failed":0}
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:55:13.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8652
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-157418c2-ba7b-4fca-ad40-74272a39b609
STEP: Creating the pod
Aug 13 11:55:14.018: INFO: The status of Pod pod-projected-configmaps-1d8878d8-927a-4bfd-85ba-70859908131e is Pending, waiting for it to be Running (with Ready = true)
Aug 13 11:55:16.026: INFO: The status of Pod pod-projected-configmaps-1d8878d8-927a-4bfd-85ba-70859908131e is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-157418c2-ba7b-4fca-ad40-74272a39b609
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 11:55:18.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8652" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":7,"skipped":146,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:55:18.072: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-491
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Aug 13 11:55:19.255: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0813 11:55:19.255702      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 13 11:55:19.255: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-491" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":8,"skipped":156,"failed":0}
SSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:55:19.268: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-9746
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9746.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9746.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9746.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9746.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9746.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9746.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 11:55:31.462: INFO: DNS probes using dns-9746/dns-test-72e76edc-8591-4f14-b7e4-857b248f0642 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 11:55:31.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-9746" for this suite.

• [SLOW TEST:12.225 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":9,"skipped":159,"failed":0}
SSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:55:31.493: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2561
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 11:55:31.624: INFO: Creating simple deployment test-new-deployment
Aug 13 11:55:31.646: INFO: deployment "test-new-deployment" doesn't have the required revision set
Aug 13 11:55:33.660: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-55df494869\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 11:55:35.669: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 55, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-55df494869\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 11:55:37.705: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-2561  6be50e33-0a51-43d4-bc57-55e203ce03a4 2607 3 2022-08-13 11:55:31 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-08-13 11:55:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 11:55:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001e95378 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-13 11:55:36 +0000 UTC,LastTransitionTime:2022-08-13 11:55:36 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-08-13 11:55:36 +0000 UTC,LastTransitionTime:2022-08-13 11:55:31 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 13 11:55:37.708: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-2561  f2fb1b64-be30-4837-8987-3034ad40bcca 2610 3 2022-08-13 11:55:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:4 deployment.kubernetes.io/max-replicas:5 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 6be50e33-0a51-43d4-bc57-55e203ce03a4 0xc001e95780 0xc001e95781}] []  [{kube-controller-manager Update apps/v1 2022-08-13 11:55:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6be50e33-0a51-43d4-bc57-55e203ce03a4\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 11:55:36 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001e95808 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 13 11:55:37.712: INFO: Pod "test-new-deployment-55df494869-mwspt" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-mwspt test-new-deployment-55df494869- deployment-2561  f892fde2-955a-4299-8f0b-135b2b97ab4b 2582 0 2022-08-13 11:55:31 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 f2fb1b64-be30-4837-8987-3034ad40bcca 0xc001f30c80 0xc001f30c81}] []  [{kube-controller-manager Update v1 2022-08-13 11:55:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f2fb1b64-be30-4837-8987-3034ad40bcca\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 11:55:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.10\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2lvg9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2lvg9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 11:55:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 11:55:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 11:55:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 11:55:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.10,StartTime:2022-08-13 11:55:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 11:55:35 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://e7210b72a0bcb968a50cdcba259eddaaa90f92111e64c4f0f27888d43d3577e5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.10,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 11:55:37.713: INFO: Pod "test-new-deployment-55df494869-smg4s" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-smg4s test-new-deployment-55df494869- deployment-2561  ada09107-2c6a-4585-a0ce-ac791fa41849 2612 0 2022-08-13 11:55:37 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 f2fb1b64-be30-4837-8987-3034ad40bcca 0xc001f30e67 0xc001f30e68}] []  [{kube-controller-manager Update v1 2022-08-13 11:55:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f2fb1b64-be30-4837-8987-3034ad40bcca\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5299t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5299t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 11:55:37 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 11:55:37.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2561" for this suite.

• [SLOW TEST:6.233 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":10,"skipped":164,"failed":0}
S
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:55:37.726: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4431
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Aug 13 11:55:37.872: INFO: Waiting up to 5m0s for pod "var-expansion-5cd6f6b5-313f-4298-b165-796db84def66" in namespace "var-expansion-4431" to be "Succeeded or Failed"
Aug 13 11:55:37.877: INFO: Pod "var-expansion-5cd6f6b5-313f-4298-b165-796db84def66": Phase="Pending", Reason="", readiness=false. Elapsed: 4.081968ms
Aug 13 11:55:39.885: INFO: Pod "var-expansion-5cd6f6b5-313f-4298-b165-796db84def66": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012904955s
Aug 13 11:55:41.894: INFO: Pod "var-expansion-5cd6f6b5-313f-4298-b165-796db84def66": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021388372s
STEP: Saw pod success
Aug 13 11:55:41.894: INFO: Pod "var-expansion-5cd6f6b5-313f-4298-b165-796db84def66" satisfied condition "Succeeded or Failed"
Aug 13 11:55:41.897: INFO: Trying to get logs from node ip-172-31-79-226 pod var-expansion-5cd6f6b5-313f-4298-b165-796db84def66 container dapi-container: <nil>
STEP: delete the pod
Aug 13 11:55:41.916: INFO: Waiting for pod var-expansion-5cd6f6b5-313f-4298-b165-796db84def66 to disappear
Aug 13 11:55:41.918: INFO: Pod var-expansion-5cd6f6b5-313f-4298-b165-796db84def66 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 11:55:41.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4431" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":11,"skipped":165,"failed":0}
SS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:55:41.928: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7899
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7899
Aug 13 11:55:42.072: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 13 11:55:44.079: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 13 11:55:44.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7899 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 13 11:55:44.224: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 13 11:55:44.224: INFO: stdout: "iptables"
Aug 13 11:55:44.224: INFO: proxyMode: iptables
Aug 13 11:55:44.236: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 13 11:55:44.239: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-7899
STEP: creating replication controller affinity-clusterip-timeout in namespace services-7899
I0813 11:55:44.256923      18 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-7899, replica count: 3
I0813 11:55:47.307410      18 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 11:55:47.319: INFO: Creating new exec pod
Aug 13 11:55:50.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7899 exec execpod-affinity2t44b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Aug 13 11:55:50.567: INFO: stderr: "+ + ncecho -v -t hostName -w\n 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Aug 13 11:55:50.567: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 11:55:50.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7899 exec execpod-affinity2t44b -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.211 80'
Aug 13 11:55:50.714: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 10.152.183.211 80\nConnection to 10.152.183.211 80 port [tcp/http] succeeded!\n"
Aug 13 11:55:50.714: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 11:55:50.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7899 exec execpod-affinity2t44b -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.211:80/ ; done'
Aug 13 11:55:50.889: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n"
Aug 13 11:55:50.889: INFO: stdout: "\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q\naffinity-clusterip-timeout-j7j5q"
Aug 13 11:55:50.889: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.889: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.889: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.889: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.889: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.889: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.889: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Received response from host: affinity-clusterip-timeout-j7j5q
Aug 13 11:55:50.890: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7899 exec execpod-affinity2t44b -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.211:80/'
Aug 13 11:55:50.995: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n"
Aug 13 11:55:50.995: INFO: stdout: "affinity-clusterip-timeout-j7j5q"
Aug 13 11:56:10.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7899 exec execpod-affinity2t44b -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.211:80/'
Aug 13 11:56:11.136: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.211:80/\n"
Aug 13 11:56:11.136: INFO: stdout: "affinity-clusterip-timeout-9jhwp"
Aug 13 11:56:11.136: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-7899, will wait for the garbage collector to delete the pods
Aug 13 11:56:11.224: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 7.252669ms
Aug 13 11:56:11.325: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.641104ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 11:56:13.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7899" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:31.723 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":12,"skipped":167,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:13.652: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6252
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 13 11:56:13.789: INFO: Waiting up to 5m0s for pod "downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2" in namespace "downward-api-6252" to be "Succeeded or Failed"
Aug 13 11:56:13.795: INFO: Pod "downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.246078ms
Aug 13 11:56:15.802: INFO: Pod "downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012458044s
Aug 13 11:56:17.808: INFO: Pod "downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018899527s
STEP: Saw pod success
Aug 13 11:56:17.808: INFO: Pod "downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2" satisfied condition "Succeeded or Failed"
Aug 13 11:56:17.812: INFO: Trying to get logs from node ip-172-31-79-226 pod downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2 container dapi-container: <nil>
STEP: delete the pod
Aug 13 11:56:17.831: INFO: Waiting for pod downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2 to disappear
Aug 13 11:56:17.834: INFO: Pod downward-api-6d2a12fc-5638-4730-a73b-94a5762370b2 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 13 11:56:17.834: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6252" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":13,"skipped":201,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:17.845: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-9767
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 13 11:56:18.006: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 13 11:56:18.010: INFO: starting watch
STEP: patching
STEP: updating
Aug 13 11:56:18.025: INFO: waiting for watch events with expected annotations
Aug 13 11:56:18.025: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 13 11:56:18.054: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-9767" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":14,"skipped":258,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:18.063: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7380
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 11:56:18.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-7380 create -f -'
Aug 13 11:56:20.292: INFO: stderr: ""
Aug 13 11:56:20.292: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Aug 13 11:56:20.292: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-7380 create -f -'
Aug 13 11:56:21.302: INFO: stderr: ""
Aug 13 11:56:21.302: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 13 11:56:22.310: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 11:56:22.310: INFO: Found 1 / 1
Aug 13 11:56:22.310: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 13 11:56:22.313: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 11:56:22.313: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 13 11:56:22.313: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-7380 describe pod agnhost-primary-mtzbk'
Aug 13 11:56:22.380: INFO: stderr: ""
Aug 13 11:56:22.380: INFO: stdout: "Name:         agnhost-primary-mtzbk\nNamespace:    kubectl-7380\nPriority:     0\nNode:         ip-172-31-79-226/172.31.79.226\nStart Time:   Sat, 13 Aug 2022 11:56:20 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           192.168.176.15\nIPs:\n  IP:           192.168.176.15\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://98953fa4b129a1e51071e9d8c0475fd2a9f53a42c0cc91967a01085a89b2360a\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 13 Aug 2022 11:56:21 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mhlss (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-mhlss:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-7380/agnhost-primary-mtzbk to ip-172-31-79-226\n  Normal  Pulled     2s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Aug 13 11:56:22.380: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-7380 describe rc agnhost-primary'
Aug 13 11:56:22.448: INFO: stderr: ""
Aug 13 11:56:22.448: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7380\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-mtzbk\n"
Aug 13 11:56:22.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-7380 describe service agnhost-primary'
Aug 13 11:56:22.507: INFO: stderr: ""
Aug 13 11:56:22.507: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7380\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.218\nIPs:               10.152.183.218\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.176.15:6379\nSession Affinity:  None\nEvents:            <none>\n"
Aug 13 11:56:22.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-7380 describe node ip-172-31-22-206'
Aug 13 11:56:22.592: INFO: stderr: ""
Aug 13 11:56:22.592: INFO: stdout: "Name:               ip-172-31-22-206\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-22-206\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 13 Aug 2022 11:48:36 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-22-206\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 13 Aug 2022 11:56:13 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Sat, 13 Aug 2022 11:55:14 +0000   Sat, 13 Aug 2022 11:48:36 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Sat, 13 Aug 2022 11:55:14 +0000   Sat, 13 Aug 2022 11:48:36 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Sat, 13 Aug 2022 11:55:14 +0000   Sat, 13 Aug 2022 11:48:36 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Sat, 13 Aug 2022 11:55:14 +0000   Sat, 13 Aug 2022 11:49:15 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.22.206\n  Hostname:    ip-172-31-22-206\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7923708Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7821308Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec22b4d489f04974d8f414e305b9bc93\n  System UUID:                     ec22b4d4-89f0-4974-d8f4-14e305b9bc93\n  Boot ID:                         083dd405-7c7f-4d81-bf0e-ca6bc7e13d26\n  Kernel Version:                  5.15.0-1017-aws\n  OS Image:                        Ubuntu 20.04.4 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.5.9\n  Kubelet Version:                 v1.24.3\n  Kube-Proxy Version:              v1.24.3\nNon-terminated Pods:               (9 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  default-http-backend-kubernetes-worker-6c59687bf6-sgrjp    10m (0%)      10m (0%)    20Mi (0%)        20Mi (0%)      7m39s\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-bvm57           0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m32s\n  kube-system                      calico-kube-controllers-5f6d88cdb-fjtjt                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m34s\n  kube-system                      coredns-86c98bfcdb-ctwtg                                   100m (5%)     0 (0%)      70Mi (0%)        170Mi (2%)     9m35s\n  kube-system                      kube-state-metrics-5cdbfd47b4-pwbt8                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m35s\n  kube-system                      metrics-server-v0.5.2-6bfd958b56-82nrj                     5m (0%)       100m (5%)   50Mi (0%)        300Mi (3%)     9m35s\n  kubernetes-dashboard             dashboard-metrics-scraper-8669b59d4f-fmmvg                 0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m35s\n  kubernetes-dashboard             kubernetes-dashboard-585fc6bc87-pvfzw                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         9m35s\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-16b82a983830493d-n5n8f    0 (0%)        0 (0%)      0 (0%)           0 (0%)         2m20s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                115m (5%)   110m (5%)\n  memory             140Mi (1%)  490Mi (6%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age                    From             Message\n  ----     ------                   ----                   ----             -------\n  Normal   Starting                 7m44s                  kube-proxy       \n  Normal   Starting                 7m17s                  kube-proxy       \n  Normal   Starting                 7m42s                  kube-proxy       \n  Normal   Starting                 7m30s                  kube-proxy       \n  Normal   NodeHasNoDiskPressure    7m46s (x2 over 7m46s)  kubelet          Node ip-172-31-22-206 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     7m46s (x2 over 7m46s)  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  7m46s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  7m46s (x2 over 7m46s)  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientMemory\n  Warning  InvalidDiskCapacity      7m46s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 7m46s                  kubelet          Starting kubelet.\n  Normal   Starting                 7m42s                  kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      7m42s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  7m42s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientMemory\n  Normal   NodeHasSufficientPID     7m42s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  7m42s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    7m42s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasNoDiskPressure\n  Normal   RegisteredNode           7m41s                  node-controller  Node ip-172-31-22-206 event: Registered Node ip-172-31-22-206 in Controller\n  Normal   NodeReady                7m32s                  kubelet          Node ip-172-31-22-206 status is now: NodeReady\n  Warning  InvalidDiskCapacity      7m30s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  7m30s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    7m30s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     7m30s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientPID\n  Normal   NodeNotReady             7m30s                  kubelet          Node ip-172-31-22-206 status is now: NodeNotReady\n  Normal   NodeAllocatableEnforced  7m30s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 7m30s                  kubelet          Starting kubelet.\n  Normal   NodeReady                7m20s                  kubelet          Node ip-172-31-22-206 status is now: NodeReady\n  Normal   Starting                 7m18s                  kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      7m18s                  kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  7m18s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    7m18s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     7m18s                  kubelet          Node ip-172-31-22-206 status is now: NodeHasSufficientPID\n  Normal   NodeNotReady             7m18s                  kubelet          Node ip-172-31-22-206 status is now: NodeNotReady\n  Normal   NodeAllocatableEnforced  7m17s                  kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeReady                7m7s                   kubelet          Node ip-172-31-22-206 status is now: NodeReady\n"
Aug 13 11:56:22.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-7380 describe namespace kubectl-7380'
Aug 13 11:56:22.653: INFO: stderr: ""
Aug 13 11:56:22.653: INFO: stdout: "Name:         kubectl-7380\nLabels:       e2e-framework=kubectl\n              e2e-run=e8e02f4f-a66a-4433-bc1b-a817a64c7307\n              kubernetes.io/metadata.name=kubectl-7380\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 11:56:22.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7380" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":15,"skipped":263,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:22.667: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8728
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 13 11:56:22.811: INFO: The status of Pod labelsupdatee9e5df59-5af9-4592-8ea3-8a6c3fef2258 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 11:56:24.820: INFO: The status of Pod labelsupdatee9e5df59-5af9-4592-8ea3-8a6c3fef2258 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 11:56:26.819: INFO: The status of Pod labelsupdatee9e5df59-5af9-4592-8ea3-8a6c3fef2258 is Running (Ready = true)
Aug 13 11:56:27.355: INFO: Successfully updated pod "labelsupdatee9e5df59-5af9-4592-8ea3-8a6c3fef2258"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 11:56:29.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8728" for this suite.

• [SLOW TEST:6.716 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":16,"skipped":273,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:29.382: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9178
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 13 11:56:31.550: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9178" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":17,"skipped":294,"failed":0}
SSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:31.560: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6066
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 11:56:31.701: INFO: Waiting up to 5m0s for pod "downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3" in namespace "downward-api-6066" to be "Succeeded or Failed"
Aug 13 11:56:31.706: INFO: Pod "downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3": Phase="Pending", Reason="", readiness=false. Elapsed: 4.654192ms
Aug 13 11:56:33.716: INFO: Pod "downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014269566s
Aug 13 11:56:35.725: INFO: Pod "downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02357809s
STEP: Saw pod success
Aug 13 11:56:35.725: INFO: Pod "downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3" satisfied condition "Succeeded or Failed"
Aug 13 11:56:35.729: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3 container client-container: <nil>
STEP: delete the pod
Aug 13 11:56:35.747: INFO: Waiting for pod downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3 to disappear
Aug 13 11:56:35.750: INFO: Pod downwardapi-volume-52a9d3d7-510c-4f74-886a-71efe77413c3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 11:56:35.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6066" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":18,"skipped":299,"failed":0}

------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:35.759: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-6807
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 13 11:56:36.251: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
Aug 13 11:56:38.264: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 56, 36, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 56, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 56, 36, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 56, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-656754656d\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 11:56:41.284: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 11:56:41.289: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 11:56:44.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6807" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:8.698 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":19,"skipped":299,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:56:44.458: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-9130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-tq6p
STEP: Creating a pod to test atomic-volume-subpath
Aug 13 11:56:44.650: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-tq6p" in namespace "subpath-9130" to be "Succeeded or Failed"
Aug 13 11:56:44.657: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Pending", Reason="", readiness=false. Elapsed: 7.2679ms
Aug 13 11:56:46.666: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 2.015652424s
Aug 13 11:56:48.674: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 4.024329846s
Aug 13 11:56:50.683: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 6.03302254s
Aug 13 11:56:52.692: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 8.041532861s
Aug 13 11:56:54.699: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 10.048878444s
Aug 13 11:56:56.708: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 12.058295053s
Aug 13 11:56:58.717: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 14.066965028s
Aug 13 11:57:00.725: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 16.074783355s
Aug 13 11:57:02.733: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 18.082669838s
Aug 13 11:57:04.744: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=true. Elapsed: 20.093925442s
Aug 13 11:57:06.758: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Running", Reason="", readiness=false. Elapsed: 22.107812777s
Aug 13 11:57:08.766: INFO: Pod "pod-subpath-test-secret-tq6p": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.115599117s
STEP: Saw pod success
Aug 13 11:57:08.766: INFO: Pod "pod-subpath-test-secret-tq6p" satisfied condition "Succeeded or Failed"
Aug 13 11:57:08.769: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-subpath-test-secret-tq6p container test-container-subpath-secret-tq6p: <nil>
STEP: delete the pod
Aug 13 11:57:08.788: INFO: Waiting for pod pod-subpath-test-secret-tq6p to disappear
Aug 13 11:57:08.791: INFO: Pod pod-subpath-test-secret-tq6p no longer exists
STEP: Deleting pod pod-subpath-test-secret-tq6p
Aug 13 11:57:08.791: INFO: Deleting pod "pod-subpath-test-secret-tq6p" in namespace "subpath-9130"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 13 11:57:08.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-9130" for this suite.

• [SLOW TEST:24.346 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":20,"skipped":307,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:57:08.805: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5166
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5166
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-5166
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5166
Aug 13 11:57:08.953: INFO: Found 0 stateful pods, waiting for 1
Aug 13 11:57:18.971: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Aug 13 11:57:18.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 11:57:19.101: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 11:57:19.101: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 11:57:19.101: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 11:57:19.105: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 13 11:57:29.122: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 11:57:29.122: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 11:57:29.143: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999843s
Aug 13 11:57:30.149: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.995051622s
Aug 13 11:57:31.156: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.989437511s
Aug 13 11:57:32.164: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.981946127s
Aug 13 11:57:33.170: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.974278989s
Aug 13 11:57:34.178: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.968373882s
Aug 13 11:57:35.185: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.961043939s
Aug 13 11:57:36.191: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.954669867s
Aug 13 11:57:37.198: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.948575626s
Aug 13 11:57:38.204: INFO: Verifying statefulset ss doesn't scale past 1 for another 941.760496ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5166
Aug 13 11:57:39.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 11:57:39.353: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 13 11:57:39.353: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 11:57:39.353: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 13 11:57:39.358: INFO: Found 1 stateful pods, waiting for 3
Aug 13 11:57:49.375: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 11:57:49.375: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 11:57:49.375: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Pending - Ready=false
Aug 13 11:57:59.376: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 11:57:59.376: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 11:57:59.376: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Aug 13 11:57:59.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 11:57:59.521: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 11:57:59.521: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 11:57:59.521: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 11:57:59.521: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 11:57:59.672: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 11:57:59.672: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 11:57:59.672: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 11:57:59.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 11:57:59.816: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 11:57:59.816: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 11:57:59.816: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 11:57:59.816: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 11:57:59.819: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Aug 13 11:58:09.840: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 11:58:09.840: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 11:58:09.840: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 11:58:09.852: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999837s
Aug 13 11:58:10.860: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995651423s
Aug 13 11:58:11.866: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988542292s
Aug 13 11:58:12.872: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.983036332s
Aug 13 11:58:13.878: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.976409024s
Aug 13 11:58:14.885: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.970493164s
Aug 13 11:58:15.893: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.963183885s
Aug 13 11:58:16.900: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.956381218s
Aug 13 11:58:17.907: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.948453249s
Aug 13 11:58:18.913: INFO: Verifying statefulset ss doesn't scale past 3 for another 942.056441ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5166
Aug 13 11:58:19.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 11:58:20.053: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 13 11:58:20.053: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 11:58:20.053: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 13 11:58:20.053: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 11:58:20.192: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 13 11:58:20.192: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 11:58:20.192: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 13 11:58:20.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-5166 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 11:58:20.316: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 13 11:58:20.316: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 11:58:20.316: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 13 11:58:20.316: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 11:58:30.346: INFO: Deleting all statefulset in ns statefulset-5166
Aug 13 11:58:30.349: INFO: Scaling statefulset ss to 0
Aug 13 11:58:30.362: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 11:58:30.364: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 11:58:30.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5166" for this suite.

• [SLOW TEST:81.583 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":21,"skipped":368,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:58:30.388: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4946
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Aug 13 11:58:30.521: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 11:58:34.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4946" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":22,"skipped":381,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:58:34.836: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-7764
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 13 11:58:34.979: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 13 11:59:34.997: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:59:35.001: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-9312
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Aug 13 11:59:37.174: INFO: found a healthy node: ip-172-31-79-226
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 11:59:47.259: INFO: pods created so far: [1 1 1]
Aug 13 11:59:47.259: INFO: length of pods created so far: 3
Aug 13 11:59:49.276: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Aug 13 11:59:56.277: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-9312" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 13 11:59:56.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-7764" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:81.534 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":23,"skipped":411,"failed":0}
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:59:56.371: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-672
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 11:59:56.516: INFO: The status of Pod busybox-scheduling-fdcec05d-0a71-4046-b031-0484b18eb11c is Pending, waiting for it to be Running (with Ready = true)
Aug 13 11:59:58.524: INFO: The status of Pod busybox-scheduling-fdcec05d-0a71-4046-b031-0484b18eb11c is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 13 11:59:58.542: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-672" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":24,"skipped":411,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:59:58.554: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1284
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 11:59:58.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-1284 version'
Aug 13 11:59:58.733: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Aug 13 11:59:58.733: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.3\", GitCommit:\"aef86a93758dc3cb2c658dd9657ab4ad4afc21cb\", GitTreeState:\"clean\", BuildDate:\"2022-07-13T14:30:46Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.3\", GitCommit:\"aef86a93758dc3cb2c658dd9657ab4ad4afc21cb\", GitTreeState:\"clean\", BuildDate:\"2022-07-14T02:10:44Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 11:59:58.733: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1284" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":25,"skipped":447,"failed":0}
S
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 11:59:58.744: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-7850
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Aug 13 11:59:58.874: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Aug 13 11:59:59.557: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
Aug 13 12:00:01.634: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:00:03.646: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:00:05.648: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:00:07.642: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:00:09.646: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:00:11.650: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 11, 59, 59, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:00:14.474: INFO: Waited 822.907507ms for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Aug 13 12:00:14.555: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Aug 13 12:00:14.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-7850" for this suite.

• [SLOW TEST:16.332 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":26,"skipped":448,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:15.077: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8681
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 13 12:00:15.266: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:15.266: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:15.271: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:00:15.271: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:00:16.280: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:16.280: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:16.289: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:00:16.289: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:00:17.281: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:17.281: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:17.285: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:00:17.285: INFO: Node ip-172-31-79-226 is running 0 daemon pod, expected 1
Aug 13 12:00:18.277: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:18.277: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:18.280: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:00:18.280: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Aug 13 12:00:18.299: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:18.299: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:18.303: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:00:18.303: INFO: Node ip-172-31-79-226 is running 0 daemon pod, expected 1
Aug 13 12:00:19.311: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:19.311: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:19.314: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:00:19.314: INFO: Node ip-172-31-79-226 is running 0 daemon pod, expected 1
Aug 13 12:00:20.309: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:20.309: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:20.312: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:00:20.312: INFO: Node ip-172-31-79-226 is running 0 daemon pod, expected 1
Aug 13 12:00:21.311: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:21.311: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:21.314: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:00:21.314: INFO: Node ip-172-31-79-226 is running 0 daemon pod, expected 1
Aug 13 12:00:22.309: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:22.310: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:22.314: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:00:22.314: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8681, will wait for the garbage collector to delete the pods
Aug 13 12:00:22.379: INFO: Deleting DaemonSet.extensions daemon-set took: 7.719399ms
Aug 13 12:00:22.480: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.55404ms
Aug 13 12:00:25.085: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:00:25.085: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 13 12:00:25.087: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4435"},"items":null}

Aug 13 12:00:25.091: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4435"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:00:25.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8681" for this suite.

• [SLOW TEST:10.037 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":27,"skipped":468,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:25.115: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-243
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:00:25.263: INFO: Create a RollingUpdate DaemonSet
Aug 13 12:00:25.269: INFO: Check that daemon pods launch on every node of the cluster
Aug 13 12:00:25.275: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:25.275: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:25.278: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:00:25.278: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:00:26.284: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:26.284: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:26.288: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:00:26.288: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:00:27.285: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:27.285: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:27.288: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:00:27.288: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Aug 13 12:00:27.288: INFO: Update the DaemonSet to trigger a rollout
Aug 13 12:00:27.298: INFO: Updating DaemonSet daemon-set
Aug 13 12:00:30.319: INFO: Roll back the DaemonSet before rollout is complete
Aug 13 12:00:30.334: INFO: Updating DaemonSet daemon-set
Aug 13 12:00:30.334: INFO: Make sure DaemonSet rollback is complete
Aug 13 12:00:30.337: INFO: Wrong image for pod: daemon-set-jcpsc. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Aug 13 12:00:30.337: INFO: Pod daemon-set-jcpsc is not available
Aug 13 12:00:30.341: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:30.341: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:31.352: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:31.352: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:32.348: INFO: Pod daemon-set-lj9gk is not available
Aug 13 12:00:32.353: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:00:32.353: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-243, will wait for the garbage collector to delete the pods
Aug 13 12:00:32.420: INFO: Deleting DaemonSet.extensions daemon-set took: 7.228049ms
Aug 13 12:00:32.521: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.973323ms
Aug 13 12:00:35.526: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:00:35.526: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 13 12:00:35.530: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"4619"},"items":null}

Aug 13 12:00:35.533: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"4619"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:00:35.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-243" for this suite.

• [SLOW TEST:10.441 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":28,"skipped":476,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:35.556: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8063
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 13 12:00:35.705: INFO: The status of Pod pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:00:37.713: INFO: The status of Pod pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 13 12:00:38.235: INFO: Successfully updated pod "pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8"
Aug 13 12:00:38.235: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8" in namespace "pods-8063" to be "terminated due to deadline exceeded"
Aug 13 12:00:38.238: INFO: Pod "pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8": Phase="Running", Reason="", readiness=true. Elapsed: 3.166053ms
Aug 13 12:00:40.246: INFO: Pod "pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8": Phase="Running", Reason="", readiness=true. Elapsed: 2.010697228s
Aug 13 12:00:42.254: INFO: Pod "pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.018914019s
Aug 13 12:00:42.254: INFO: Pod "pod-update-activedeadlineseconds-852a376c-4c01-4094-8383-85d32b898ee8" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 12:00:42.254: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8063" for this suite.

• [SLOW TEST:6.708 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":29,"skipped":488,"failed":0}
S
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:42.265: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4473
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-a2fc9222-edb8-4116-aa16-de3a1f4bf48c
STEP: Creating a pod to test consume secrets
Aug 13 12:00:42.417: INFO: Waiting up to 5m0s for pod "pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9" in namespace "secrets-4473" to be "Succeeded or Failed"
Aug 13 12:00:42.420: INFO: Pod "pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.141532ms
Aug 13 12:00:44.429: INFO: Pod "pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012362812s
Aug 13 12:00:46.437: INFO: Pod "pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020485458s
STEP: Saw pod success
Aug 13 12:00:46.438: INFO: Pod "pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9" satisfied condition "Succeeded or Failed"
Aug 13 12:00:46.442: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9 container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:00:46.470: INFO: Waiting for pod pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9 to disappear
Aug 13 12:00:46.473: INFO: Pod pod-secrets-80308104-cfd8-48c6-9a34-457cf337f6a9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:00:46.473: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4473" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":30,"skipped":489,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:46.484: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7114
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-a68cd905-a4ff-42de-a564-7156ebead9bd
STEP: Creating a pod to test consume secrets
Aug 13 12:00:46.642: INFO: Waiting up to 5m0s for pod "pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e" in namespace "secrets-7114" to be "Succeeded or Failed"
Aug 13 12:00:46.647: INFO: Pod "pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.862892ms
Aug 13 12:00:48.655: INFO: Pod "pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0131634s
Aug 13 12:00:50.665: INFO: Pod "pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022628857s
STEP: Saw pod success
Aug 13 12:00:50.665: INFO: Pod "pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e" satisfied condition "Succeeded or Failed"
Aug 13 12:00:50.667: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:00:50.691: INFO: Waiting for pod pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e to disappear
Aug 13 12:00:50.695: INFO: Pod pod-secrets-fdf78489-d7ef-46ce-ba32-2405154f847e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:00:50.695: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7114" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":31,"skipped":521,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:50.704: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9386
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:00:50.891: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9386" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":32,"skipped":530,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:50.901: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2906
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
W0813 12:00:52.079854      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 13 12:00:52.079: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 13 12:00:52.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2906" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":33,"skipped":539,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:00:52.091: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8689
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-5ebfe9dc-0ed0-4dcb-a100-ad9d9300e6ce in namespace container-probe-8689
Aug 13 12:00:54.250: INFO: Started pod busybox-5ebfe9dc-0ed0-4dcb-a100-ad9d9300e6ce in namespace container-probe-8689
STEP: checking the pod's current state and verifying that restartCount is present
Aug 13 12:00:54.254: INFO: Initial restart count of pod busybox-5ebfe9dc-0ed0-4dcb-a100-ad9d9300e6ce is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 12:04:55.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8689" for this suite.

• [SLOW TEST:243.229 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":34,"skipped":549,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:04:55.320: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2772
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-4cb4fd02-4f43-42ce-9283-58f2cf3296f2
STEP: Creating secret with name secret-projected-all-test-volume-db0ce566-ee26-4d8b-8646-73c04754df93
STEP: Creating a pod to test Check all projections for projected volume plugin
Aug 13 12:04:55.477: INFO: Waiting up to 5m0s for pod "projected-volume-229b11ce-f8fb-45ef-9204-979989102523" in namespace "projected-2772" to be "Succeeded or Failed"
Aug 13 12:04:55.480: INFO: Pod "projected-volume-229b11ce-f8fb-45ef-9204-979989102523": Phase="Pending", Reason="", readiness=false. Elapsed: 3.071326ms
Aug 13 12:04:57.487: INFO: Pod "projected-volume-229b11ce-f8fb-45ef-9204-979989102523": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009454931s
Aug 13 12:04:59.496: INFO: Pod "projected-volume-229b11ce-f8fb-45ef-9204-979989102523": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018233812s
STEP: Saw pod success
Aug 13 12:04:59.496: INFO: Pod "projected-volume-229b11ce-f8fb-45ef-9204-979989102523" satisfied condition "Succeeded or Failed"
Aug 13 12:04:59.498: INFO: Trying to get logs from node ip-172-31-79-226 pod projected-volume-229b11ce-f8fb-45ef-9204-979989102523 container projected-all-volume-test: <nil>
STEP: delete the pod
Aug 13 12:04:59.524: INFO: Waiting for pod projected-volume-229b11ce-f8fb-45ef-9204-979989102523 to disappear
Aug 13 12:04:59.528: INFO: Pod projected-volume-229b11ce-f8fb-45ef-9204-979989102523 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Aug 13 12:04:59.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2772" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":35,"skipped":567,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:04:59.539: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-8379
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:04:59.672: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: creating replication controller svc-latency-rc in namespace svc-latency-8379
I0813 12:04:59.678659      18 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-8379, replica count: 1
I0813 12:05:00.729066      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0813 12:05:01.729201      18 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 12:05:01.844: INFO: Created: latency-svc-rr9n8
Aug 13 12:05:01.849: INFO: Got endpoints: latency-svc-rr9n8 [19.707774ms]
Aug 13 12:05:01.866: INFO: Created: latency-svc-5dfmt
Aug 13 12:05:01.871: INFO: Got endpoints: latency-svc-5dfmt [20.91371ms]
Aug 13 12:05:01.871: INFO: Created: latency-svc-p89bq
Aug 13 12:05:01.879: INFO: Got endpoints: latency-svc-p89bq [29.205787ms]
Aug 13 12:05:01.886: INFO: Created: latency-svc-qxzg4
Aug 13 12:05:01.892: INFO: Got endpoints: latency-svc-qxzg4 [41.943182ms]
Aug 13 12:05:01.896: INFO: Created: latency-svc-4wgzg
Aug 13 12:05:01.900: INFO: Got endpoints: latency-svc-4wgzg [49.702492ms]
Aug 13 12:05:01.904: INFO: Created: latency-svc-tl5z8
Aug 13 12:05:01.910: INFO: Got endpoints: latency-svc-tl5z8 [60.11212ms]
Aug 13 12:05:01.911: INFO: Created: latency-svc-xgbpv
Aug 13 12:05:01.918: INFO: Got endpoints: latency-svc-xgbpv [66.926721ms]
Aug 13 12:05:01.921: INFO: Created: latency-svc-sf5qt
Aug 13 12:05:01.929: INFO: Created: latency-svc-6pbtp
Aug 13 12:05:01.929: INFO: Got endpoints: latency-svc-sf5qt [78.426509ms]
Aug 13 12:05:02.136: INFO: Got endpoints: latency-svc-6pbtp [284.920153ms]
Aug 13 12:05:02.140: INFO: Created: latency-svc-2cqfv
Aug 13 12:05:02.146: INFO: Got endpoints: latency-svc-2cqfv [295.378722ms]
Aug 13 12:05:02.151: INFO: Created: latency-svc-rkcv5
Aug 13 12:05:02.152: INFO: Created: latency-svc-qqnnh
Aug 13 12:05:02.159: INFO: Created: latency-svc-8j6vl
Aug 13 12:05:02.160: INFO: Got endpoints: latency-svc-qqnnh [309.226074ms]
Aug 13 12:05:02.161: INFO: Got endpoints: latency-svc-rkcv5 [310.20418ms]
Aug 13 12:05:02.167: INFO: Got endpoints: latency-svc-8j6vl [315.990994ms]
Aug 13 12:05:02.168: INFO: Created: latency-svc-9vmm4
Aug 13 12:05:02.172: INFO: Got endpoints: latency-svc-9vmm4 [320.262864ms]
Aug 13 12:05:02.239: INFO: Created: latency-svc-b74l9
Aug 13 12:05:02.242: INFO: Created: latency-svc-hmpps
Aug 13 12:05:02.243: INFO: Created: latency-svc-p6tqx
Aug 13 12:05:02.244: INFO: Created: latency-svc-76rnj
Aug 13 12:05:02.244: INFO: Created: latency-svc-s88bc
Aug 13 12:05:02.245: INFO: Created: latency-svc-jbz5q
Aug 13 12:05:02.245: INFO: Created: latency-svc-plk9p
Aug 13 12:05:02.245: INFO: Created: latency-svc-lr4vr
Aug 13 12:05:02.245: INFO: Created: latency-svc-tmgd9
Aug 13 12:05:02.245: INFO: Created: latency-svc-s4lj6
Aug 13 12:05:02.246: INFO: Created: latency-svc-cq8zx
Aug 13 12:05:02.247: INFO: Created: latency-svc-7tbvc
Aug 13 12:05:02.247: INFO: Created: latency-svc-k2ddd
Aug 13 12:05:02.247: INFO: Created: latency-svc-zq76t
Aug 13 12:05:02.247: INFO: Created: latency-svc-5qlss
Aug 13 12:05:02.252: INFO: Got endpoints: latency-svc-b74l9 [352.240894ms]
Aug 13 12:05:02.266: INFO: Got endpoints: latency-svc-plk9p [373.45966ms]
Aug 13 12:05:02.267: INFO: Got endpoints: latency-svc-hmpps [356.297703ms]
Aug 13 12:05:02.267: INFO: Got endpoints: latency-svc-s88bc [387.640436ms]
Aug 13 12:05:02.267: INFO: Got endpoints: latency-svc-p6tqx [415.332994ms]
Aug 13 12:05:02.270: INFO: Got endpoints: latency-svc-jbz5q [103.007519ms]
Aug 13 12:05:02.274: INFO: Got endpoints: latency-svc-76rnj [113.106998ms]
Aug 13 12:05:02.275: INFO: Created: latency-svc-q22bz
Aug 13 12:05:02.278: INFO: Got endpoints: latency-svc-tmgd9 [360.053082ms]
Aug 13 12:05:02.279: INFO: Got endpoints: latency-svc-s4lj6 [349.28891ms]
Aug 13 12:05:02.285: INFO: Got endpoints: latency-svc-lr4vr [433.906636ms]
Aug 13 12:05:02.289: INFO: Got endpoints: latency-svc-zq76t [116.935144ms]
Aug 13 12:05:02.290: INFO: Created: latency-svc-c7fbw
Aug 13 12:05:02.292: INFO: Got endpoints: latency-svc-5qlss [146.282866ms]
Aug 13 12:05:02.295: INFO: Got endpoints: latency-svc-k2ddd [133.230622ms]
Aug 13 12:05:02.295: INFO: Got endpoints: latency-svc-7tbvc [159.368773ms]
Aug 13 12:05:02.299: INFO: Got endpoints: latency-svc-cq8zx [428.727783ms]
Aug 13 12:05:02.300: INFO: Got endpoints: latency-svc-q22bz [47.419454ms]
Aug 13 12:05:02.302: INFO: Got endpoints: latency-svc-c7fbw [36.007321ms]
Aug 13 12:05:02.306: INFO: Created: latency-svc-scckp
Aug 13 12:05:02.313: INFO: Created: latency-svc-w6c4k
Aug 13 12:05:02.313: INFO: Got endpoints: latency-svc-scckp [46.835699ms]
Aug 13 12:05:02.321: INFO: Created: latency-svc-86258
Aug 13 12:05:02.330: INFO: Created: latency-svc-sj9sw
Aug 13 12:05:02.333: INFO: Got endpoints: latency-svc-86258 [66.001376ms]
Aug 13 12:05:02.335: INFO: Created: latency-svc-crhfr
Aug 13 12:05:02.337: INFO: Got endpoints: latency-svc-w6c4k [69.703046ms]
Aug 13 12:05:02.343: INFO: Got endpoints: latency-svc-sj9sw [72.3554ms]
Aug 13 12:05:02.344: INFO: Created: latency-svc-6mcpp
Aug 13 12:05:02.347: INFO: Got endpoints: latency-svc-crhfr [73.083788ms]
Aug 13 12:05:02.350: INFO: Got endpoints: latency-svc-6mcpp [72.070564ms]
Aug 13 12:05:02.355: INFO: Created: latency-svc-q2kvb
Aug 13 12:05:02.359: INFO: Created: latency-svc-q7556
Aug 13 12:05:02.359: INFO: Got endpoints: latency-svc-q2kvb [80.190174ms]
Aug 13 12:05:02.366: INFO: Got endpoints: latency-svc-q7556 [81.027157ms]
Aug 13 12:05:02.369: INFO: Created: latency-svc-fxkhs
Aug 13 12:05:02.376: INFO: Got endpoints: latency-svc-fxkhs [86.690696ms]
Aug 13 12:05:02.379: INFO: Created: latency-svc-tf87c
Aug 13 12:05:02.382: INFO: Created: latency-svc-97xpv
Aug 13 12:05:02.388: INFO: Created: latency-svc-s8nms
Aug 13 12:05:02.396: INFO: Created: latency-svc-hmxcw
Aug 13 12:05:02.401: INFO: Got endpoints: latency-svc-tf87c [108.331705ms]
Aug 13 12:05:02.403: INFO: Created: latency-svc-r649c
Aug 13 12:05:02.410: INFO: Created: latency-svc-52sxd
Aug 13 12:05:02.421: INFO: Created: latency-svc-2d725
Aug 13 12:05:02.424: INFO: Created: latency-svc-xj2dh
Aug 13 12:05:02.430: INFO: Created: latency-svc-kds64
Aug 13 12:05:02.445: INFO: Created: latency-svc-njlx8
Aug 13 12:05:02.445: INFO: Created: latency-svc-qdprf
Aug 13 12:05:02.453: INFO: Got endpoints: latency-svc-97xpv [157.737772ms]
Aug 13 12:05:02.454: INFO: Created: latency-svc-4m9tw
Aug 13 12:05:02.462: INFO: Created: latency-svc-mzz9s
Aug 13 12:05:02.466: INFO: Created: latency-svc-86cqn
Aug 13 12:05:02.471: INFO: Created: latency-svc-hrdnq
Aug 13 12:05:02.479: INFO: Created: latency-svc-9z8t2
Aug 13 12:05:02.482: INFO: Created: latency-svc-5t7x6
Aug 13 12:05:02.498: INFO: Got endpoints: latency-svc-s8nms [202.459204ms]
Aug 13 12:05:02.507: INFO: Created: latency-svc-4jn4x
Aug 13 12:05:02.550: INFO: Got endpoints: latency-svc-hmxcw [250.501081ms]
Aug 13 12:05:02.563: INFO: Created: latency-svc-bcttv
Aug 13 12:05:02.600: INFO: Got endpoints: latency-svc-r649c [300.052975ms]
Aug 13 12:05:02.610: INFO: Created: latency-svc-bgkss
Aug 13 12:05:02.647: INFO: Got endpoints: latency-svc-52sxd [345.174007ms]
Aug 13 12:05:02.659: INFO: Created: latency-svc-c8t7k
Aug 13 12:05:02.698: INFO: Got endpoints: latency-svc-2d725 [384.479402ms]
Aug 13 12:05:02.712: INFO: Created: latency-svc-64lgz
Aug 13 12:05:02.751: INFO: Got endpoints: latency-svc-xj2dh [417.687035ms]
Aug 13 12:05:02.760: INFO: Created: latency-svc-dszsd
Aug 13 12:05:02.797: INFO: Got endpoints: latency-svc-kds64 [460.641987ms]
Aug 13 12:05:02.809: INFO: Created: latency-svc-q8lcf
Aug 13 12:05:02.851: INFO: Got endpoints: latency-svc-qdprf [507.739697ms]
Aug 13 12:05:02.866: INFO: Created: latency-svc-tpvkx
Aug 13 12:05:02.899: INFO: Got endpoints: latency-svc-njlx8 [552.481542ms]
Aug 13 12:05:02.909: INFO: Created: latency-svc-nn5vj
Aug 13 12:05:02.948: INFO: Got endpoints: latency-svc-4m9tw [597.6ms]
Aug 13 12:05:02.958: INFO: Created: latency-svc-sf6kq
Aug 13 12:05:02.999: INFO: Got endpoints: latency-svc-mzz9s [640.403177ms]
Aug 13 12:05:03.011: INFO: Created: latency-svc-twg6h
Aug 13 12:05:03.050: INFO: Got endpoints: latency-svc-86cqn [683.732058ms]
Aug 13 12:05:03.059: INFO: Created: latency-svc-6jwmv
Aug 13 12:05:03.098: INFO: Got endpoints: latency-svc-hrdnq [722.106315ms]
Aug 13 12:05:03.110: INFO: Created: latency-svc-t82n2
Aug 13 12:05:03.148: INFO: Got endpoints: latency-svc-9z8t2 [747.317532ms]
Aug 13 12:05:03.160: INFO: Created: latency-svc-xjmkh
Aug 13 12:05:03.199: INFO: Got endpoints: latency-svc-5t7x6 [745.95893ms]
Aug 13 12:05:03.207: INFO: Created: latency-svc-5pksh
Aug 13 12:05:03.249: INFO: Got endpoints: latency-svc-4jn4x [751.281434ms]
Aug 13 12:05:03.260: INFO: Created: latency-svc-bls9k
Aug 13 12:05:03.300: INFO: Got endpoints: latency-svc-bcttv [750.312539ms]
Aug 13 12:05:03.311: INFO: Created: latency-svc-tpv5k
Aug 13 12:05:03.349: INFO: Got endpoints: latency-svc-bgkss [748.956977ms]
Aug 13 12:05:03.362: INFO: Created: latency-svc-lhzzk
Aug 13 12:05:03.398: INFO: Got endpoints: latency-svc-c8t7k [750.613733ms]
Aug 13 12:05:03.410: INFO: Created: latency-svc-kxtl8
Aug 13 12:05:03.449: INFO: Got endpoints: latency-svc-64lgz [751.024692ms]
Aug 13 12:05:03.459: INFO: Created: latency-svc-5twlg
Aug 13 12:05:03.499: INFO: Got endpoints: latency-svc-dszsd [748.537168ms]
Aug 13 12:05:03.509: INFO: Created: latency-svc-99dvp
Aug 13 12:05:03.550: INFO: Got endpoints: latency-svc-q8lcf [751.90516ms]
Aug 13 12:05:03.561: INFO: Created: latency-svc-6ggwb
Aug 13 12:05:03.599: INFO: Got endpoints: latency-svc-tpvkx [747.949808ms]
Aug 13 12:05:03.610: INFO: Created: latency-svc-2c2bw
Aug 13 12:05:03.649: INFO: Got endpoints: latency-svc-nn5vj [749.600647ms]
Aug 13 12:05:03.659: INFO: Created: latency-svc-7dlsm
Aug 13 12:05:03.699: INFO: Got endpoints: latency-svc-sf6kq [750.982651ms]
Aug 13 12:05:03.712: INFO: Created: latency-svc-z8l8f
Aug 13 12:05:03.751: INFO: Got endpoints: latency-svc-twg6h [751.378971ms]
Aug 13 12:05:03.762: INFO: Created: latency-svc-psv9v
Aug 13 12:05:03.800: INFO: Got endpoints: latency-svc-6jwmv [749.590659ms]
Aug 13 12:05:03.812: INFO: Created: latency-svc-v78dv
Aug 13 12:05:03.851: INFO: Got endpoints: latency-svc-t82n2 [752.849272ms]
Aug 13 12:05:03.864: INFO: Created: latency-svc-rvbgj
Aug 13 12:05:03.900: INFO: Got endpoints: latency-svc-xjmkh [752.074836ms]
Aug 13 12:05:03.911: INFO: Created: latency-svc-gb4zd
Aug 13 12:05:03.949: INFO: Got endpoints: latency-svc-5pksh [750.811116ms]
Aug 13 12:05:03.959: INFO: Created: latency-svc-fgs6x
Aug 13 12:05:03.999: INFO: Got endpoints: latency-svc-bls9k [750.026039ms]
Aug 13 12:05:04.011: INFO: Created: latency-svc-s5m24
Aug 13 12:05:04.050: INFO: Got endpoints: latency-svc-tpv5k [749.370178ms]
Aug 13 12:05:04.061: INFO: Created: latency-svc-4bkns
Aug 13 12:05:04.101: INFO: Got endpoints: latency-svc-lhzzk [751.342092ms]
Aug 13 12:05:04.112: INFO: Created: latency-svc-jzn67
Aug 13 12:05:04.149: INFO: Got endpoints: latency-svc-kxtl8 [751.492749ms]
Aug 13 12:05:04.162: INFO: Created: latency-svc-4x9gb
Aug 13 12:05:04.203: INFO: Got endpoints: latency-svc-5twlg [753.522403ms]
Aug 13 12:05:04.225: INFO: Created: latency-svc-hjp7k
Aug 13 12:05:04.250: INFO: Got endpoints: latency-svc-99dvp [750.906861ms]
Aug 13 12:05:04.260: INFO: Created: latency-svc-cx5rg
Aug 13 12:05:04.302: INFO: Got endpoints: latency-svc-6ggwb [752.136987ms]
Aug 13 12:05:04.313: INFO: Created: latency-svc-cc9sc
Aug 13 12:05:04.354: INFO: Got endpoints: latency-svc-2c2bw [754.10293ms]
Aug 13 12:05:04.364: INFO: Created: latency-svc-4kq9m
Aug 13 12:05:04.400: INFO: Got endpoints: latency-svc-7dlsm [751.446796ms]
Aug 13 12:05:04.411: INFO: Created: latency-svc-k7qv8
Aug 13 12:05:04.449: INFO: Got endpoints: latency-svc-z8l8f [750.320402ms]
Aug 13 12:05:04.462: INFO: Created: latency-svc-pmckm
Aug 13 12:05:04.499: INFO: Got endpoints: latency-svc-psv9v [748.469326ms]
Aug 13 12:05:04.509: INFO: Created: latency-svc-bzjt9
Aug 13 12:05:04.558: INFO: Got endpoints: latency-svc-v78dv [758.197903ms]
Aug 13 12:05:04.569: INFO: Created: latency-svc-gg7hl
Aug 13 12:05:04.600: INFO: Got endpoints: latency-svc-rvbgj [748.608778ms]
Aug 13 12:05:04.613: INFO: Created: latency-svc-g5vh4
Aug 13 12:05:04.650: INFO: Got endpoints: latency-svc-gb4zd [749.517818ms]
Aug 13 12:05:04.660: INFO: Created: latency-svc-545mk
Aug 13 12:05:04.700: INFO: Got endpoints: latency-svc-fgs6x [750.581738ms]
Aug 13 12:05:04.711: INFO: Created: latency-svc-s4wp8
Aug 13 12:05:04.749: INFO: Got endpoints: latency-svc-s5m24 [749.639042ms]
Aug 13 12:05:04.760: INFO: Created: latency-svc-9wdck
Aug 13 12:05:04.797: INFO: Got endpoints: latency-svc-4bkns [747.216772ms]
Aug 13 12:05:04.810: INFO: Created: latency-svc-p4twq
Aug 13 12:05:04.850: INFO: Got endpoints: latency-svc-jzn67 [748.990131ms]
Aug 13 12:05:04.860: INFO: Created: latency-svc-vt27h
Aug 13 12:05:04.901: INFO: Got endpoints: latency-svc-4x9gb [750.996733ms]
Aug 13 12:05:04.912: INFO: Created: latency-svc-dxkwn
Aug 13 12:05:04.948: INFO: Got endpoints: latency-svc-hjp7k [744.481506ms]
Aug 13 12:05:04.957: INFO: Created: latency-svc-tsc6n
Aug 13 12:05:05.000: INFO: Got endpoints: latency-svc-cx5rg [749.284761ms]
Aug 13 12:05:05.010: INFO: Created: latency-svc-c2dh6
Aug 13 12:05:05.052: INFO: Got endpoints: latency-svc-cc9sc [749.996808ms]
Aug 13 12:05:05.063: INFO: Created: latency-svc-6w48m
Aug 13 12:05:05.099: INFO: Got endpoints: latency-svc-4kq9m [745.823221ms]
Aug 13 12:05:05.109: INFO: Created: latency-svc-9ck8p
Aug 13 12:05:05.150: INFO: Got endpoints: latency-svc-k7qv8 [749.463276ms]
Aug 13 12:05:05.160: INFO: Created: latency-svc-dkwvf
Aug 13 12:05:05.202: INFO: Got endpoints: latency-svc-pmckm [752.429546ms]
Aug 13 12:05:05.213: INFO: Created: latency-svc-85njs
Aug 13 12:05:05.250: INFO: Got endpoints: latency-svc-bzjt9 [750.746909ms]
Aug 13 12:05:05.261: INFO: Created: latency-svc-sxrrz
Aug 13 12:05:05.300: INFO: Got endpoints: latency-svc-gg7hl [741.348764ms]
Aug 13 12:05:05.310: INFO: Created: latency-svc-qbvjc
Aug 13 12:05:05.351: INFO: Got endpoints: latency-svc-g5vh4 [751.37107ms]
Aug 13 12:05:05.364: INFO: Created: latency-svc-2g9kq
Aug 13 12:05:05.399: INFO: Got endpoints: latency-svc-545mk [749.561385ms]
Aug 13 12:05:05.409: INFO: Created: latency-svc-xcfmd
Aug 13 12:05:05.450: INFO: Got endpoints: latency-svc-s4wp8 [749.842151ms]
Aug 13 12:05:05.461: INFO: Created: latency-svc-jlln5
Aug 13 12:05:05.501: INFO: Got endpoints: latency-svc-9wdck [751.864269ms]
Aug 13 12:05:05.513: INFO: Created: latency-svc-pfk4w
Aug 13 12:05:05.548: INFO: Got endpoints: latency-svc-p4twq [751.2974ms]
Aug 13 12:05:05.558: INFO: Created: latency-svc-pbzzh
Aug 13 12:05:05.600: INFO: Got endpoints: latency-svc-vt27h [750.57981ms]
Aug 13 12:05:05.611: INFO: Created: latency-svc-9k5sp
Aug 13 12:05:05.650: INFO: Got endpoints: latency-svc-dxkwn [748.943482ms]
Aug 13 12:05:05.662: INFO: Created: latency-svc-f65mw
Aug 13 12:05:05.699: INFO: Got endpoints: latency-svc-tsc6n [751.370338ms]
Aug 13 12:05:05.712: INFO: Created: latency-svc-mfhfr
Aug 13 12:05:05.751: INFO: Got endpoints: latency-svc-c2dh6 [751.421485ms]
Aug 13 12:05:05.761: INFO: Created: latency-svc-2669v
Aug 13 12:05:05.799: INFO: Got endpoints: latency-svc-6w48m [747.547419ms]
Aug 13 12:05:05.812: INFO: Created: latency-svc-n94b2
Aug 13 12:05:05.848: INFO: Got endpoints: latency-svc-9ck8p [748.143418ms]
Aug 13 12:05:05.860: INFO: Created: latency-svc-92tbw
Aug 13 12:05:05.899: INFO: Got endpoints: latency-svc-dkwvf [749.453092ms]
Aug 13 12:05:05.910: INFO: Created: latency-svc-vx646
Aug 13 12:05:05.950: INFO: Got endpoints: latency-svc-85njs [748.055836ms]
Aug 13 12:05:05.963: INFO: Created: latency-svc-sbrnl
Aug 13 12:05:05.999: INFO: Got endpoints: latency-svc-sxrrz [748.83001ms]
Aug 13 12:05:06.010: INFO: Created: latency-svc-d4nbr
Aug 13 12:05:06.050: INFO: Got endpoints: latency-svc-qbvjc [750.357469ms]
Aug 13 12:05:06.062: INFO: Created: latency-svc-85297
Aug 13 12:05:06.101: INFO: Got endpoints: latency-svc-2g9kq [750.317552ms]
Aug 13 12:05:06.115: INFO: Created: latency-svc-c954d
Aug 13 12:05:06.147: INFO: Got endpoints: latency-svc-xcfmd [747.427707ms]
Aug 13 12:05:06.157: INFO: Created: latency-svc-p4l2r
Aug 13 12:05:06.199: INFO: Got endpoints: latency-svc-jlln5 [749.414757ms]
Aug 13 12:05:06.210: INFO: Created: latency-svc-hwksx
Aug 13 12:05:06.250: INFO: Got endpoints: latency-svc-pfk4w [748.855263ms]
Aug 13 12:05:06.263: INFO: Created: latency-svc-x47tq
Aug 13 12:05:06.297: INFO: Got endpoints: latency-svc-pbzzh [748.707597ms]
Aug 13 12:05:06.309: INFO: Created: latency-svc-gqjhp
Aug 13 12:05:06.351: INFO: Got endpoints: latency-svc-9k5sp [750.248124ms]
Aug 13 12:05:06.361: INFO: Created: latency-svc-qp678
Aug 13 12:05:06.402: INFO: Got endpoints: latency-svc-f65mw [752.013242ms]
Aug 13 12:05:06.416: INFO: Created: latency-svc-xghpl
Aug 13 12:05:06.448: INFO: Got endpoints: latency-svc-mfhfr [748.853179ms]
Aug 13 12:05:06.460: INFO: Created: latency-svc-xmjms
Aug 13 12:05:06.502: INFO: Got endpoints: latency-svc-2669v [750.359604ms]
Aug 13 12:05:06.515: INFO: Created: latency-svc-8nhpl
Aug 13 12:05:06.552: INFO: Got endpoints: latency-svc-n94b2 [752.753851ms]
Aug 13 12:05:06.565: INFO: Created: latency-svc-gnpzb
Aug 13 12:05:06.601: INFO: Got endpoints: latency-svc-92tbw [753.469841ms]
Aug 13 12:05:06.612: INFO: Created: latency-svc-8vdw9
Aug 13 12:05:06.651: INFO: Got endpoints: latency-svc-vx646 [751.576634ms]
Aug 13 12:05:06.662: INFO: Created: latency-svc-n7shc
Aug 13 12:05:06.699: INFO: Got endpoints: latency-svc-sbrnl [749.385228ms]
Aug 13 12:05:06.712: INFO: Created: latency-svc-55rq9
Aug 13 12:05:06.751: INFO: Got endpoints: latency-svc-d4nbr [752.010501ms]
Aug 13 12:05:06.761: INFO: Created: latency-svc-wgmw4
Aug 13 12:05:06.801: INFO: Got endpoints: latency-svc-85297 [750.769591ms]
Aug 13 12:05:06.811: INFO: Created: latency-svc-bfdss
Aug 13 12:05:06.851: INFO: Got endpoints: latency-svc-c954d [749.438437ms]
Aug 13 12:05:06.867: INFO: Created: latency-svc-4wm8x
Aug 13 12:05:06.906: INFO: Got endpoints: latency-svc-p4l2r [759.564643ms]
Aug 13 12:05:06.919: INFO: Created: latency-svc-d2vz7
Aug 13 12:05:06.949: INFO: Got endpoints: latency-svc-hwksx [750.049877ms]
Aug 13 12:05:06.960: INFO: Created: latency-svc-76j5w
Aug 13 12:05:06.999: INFO: Got endpoints: latency-svc-x47tq [749.492071ms]
Aug 13 12:05:07.011: INFO: Created: latency-svc-j7g5s
Aug 13 12:05:07.049: INFO: Got endpoints: latency-svc-gqjhp [752.093722ms]
Aug 13 12:05:07.059: INFO: Created: latency-svc-9jflk
Aug 13 12:05:07.102: INFO: Got endpoints: latency-svc-qp678 [751.655384ms]
Aug 13 12:05:07.112: INFO: Created: latency-svc-vn6mw
Aug 13 12:05:07.153: INFO: Got endpoints: latency-svc-xghpl [751.564671ms]
Aug 13 12:05:07.165: INFO: Created: latency-svc-2ltr4
Aug 13 12:05:07.199: INFO: Got endpoints: latency-svc-xmjms [750.748151ms]
Aug 13 12:05:07.216: INFO: Created: latency-svc-snkjs
Aug 13 12:05:07.252: INFO: Got endpoints: latency-svc-8nhpl [750.153561ms]
Aug 13 12:05:07.269: INFO: Created: latency-svc-7dl98
Aug 13 12:05:07.301: INFO: Got endpoints: latency-svc-gnpzb [748.448772ms]
Aug 13 12:05:07.314: INFO: Created: latency-svc-qrxdx
Aug 13 12:05:07.351: INFO: Got endpoints: latency-svc-8vdw9 [750.051111ms]
Aug 13 12:05:07.367: INFO: Created: latency-svc-l4fdg
Aug 13 12:05:07.399: INFO: Got endpoints: latency-svc-n7shc [747.743858ms]
Aug 13 12:05:07.410: INFO: Created: latency-svc-nj54c
Aug 13 12:05:07.451: INFO: Got endpoints: latency-svc-55rq9 [751.827929ms]
Aug 13 12:05:07.465: INFO: Created: latency-svc-7zs8p
Aug 13 12:05:07.500: INFO: Got endpoints: latency-svc-wgmw4 [749.054244ms]
Aug 13 12:05:07.510: INFO: Created: latency-svc-htj6p
Aug 13 12:05:07.550: INFO: Got endpoints: latency-svc-bfdss [748.500433ms]
Aug 13 12:05:07.560: INFO: Created: latency-svc-5v5rc
Aug 13 12:05:07.600: INFO: Got endpoints: latency-svc-4wm8x [749.314056ms]
Aug 13 12:05:07.612: INFO: Created: latency-svc-qglt9
Aug 13 12:05:07.650: INFO: Got endpoints: latency-svc-d2vz7 [743.095374ms]
Aug 13 12:05:07.661: INFO: Created: latency-svc-swsnv
Aug 13 12:05:07.699: INFO: Got endpoints: latency-svc-76j5w [749.00266ms]
Aug 13 12:05:07.708: INFO: Created: latency-svc-pmwm8
Aug 13 12:05:07.748: INFO: Got endpoints: latency-svc-j7g5s [749.03134ms]
Aug 13 12:05:07.760: INFO: Created: latency-svc-zfbw4
Aug 13 12:05:07.866: INFO: Got endpoints: latency-svc-9jflk [817.206778ms]
Aug 13 12:05:07.868: INFO: Got endpoints: latency-svc-vn6mw [765.705614ms]
Aug 13 12:05:07.880: INFO: Created: latency-svc-5f6fr
Aug 13 12:05:07.886: INFO: Created: latency-svc-n4xxd
Aug 13 12:05:07.898: INFO: Got endpoints: latency-svc-2ltr4 [744.728575ms]
Aug 13 12:05:07.912: INFO: Created: latency-svc-wm8fq
Aug 13 12:05:07.950: INFO: Got endpoints: latency-svc-snkjs [751.271929ms]
Aug 13 12:05:07.961: INFO: Created: latency-svc-z6brv
Aug 13 12:05:07.999: INFO: Got endpoints: latency-svc-7dl98 [747.32601ms]
Aug 13 12:05:08.009: INFO: Created: latency-svc-srhk4
Aug 13 12:05:08.049: INFO: Got endpoints: latency-svc-qrxdx [748.026699ms]
Aug 13 12:05:08.060: INFO: Created: latency-svc-h97hd
Aug 13 12:05:08.099: INFO: Got endpoints: latency-svc-l4fdg [747.547739ms]
Aug 13 12:05:08.121: INFO: Created: latency-svc-zpvhh
Aug 13 12:05:08.151: INFO: Got endpoints: latency-svc-nj54c [751.638944ms]
Aug 13 12:05:08.161: INFO: Created: latency-svc-dlqdv
Aug 13 12:05:08.199: INFO: Got endpoints: latency-svc-7zs8p [748.074022ms]
Aug 13 12:05:08.210: INFO: Created: latency-svc-94mrf
Aug 13 12:05:08.250: INFO: Got endpoints: latency-svc-htj6p [749.746406ms]
Aug 13 12:05:08.261: INFO: Created: latency-svc-sc5cq
Aug 13 12:05:08.299: INFO: Got endpoints: latency-svc-5v5rc [749.128101ms]
Aug 13 12:05:08.310: INFO: Created: latency-svc-tqkw8
Aug 13 12:05:08.348: INFO: Got endpoints: latency-svc-qglt9 [747.57929ms]
Aug 13 12:05:08.360: INFO: Created: latency-svc-2nmzc
Aug 13 12:05:08.398: INFO: Got endpoints: latency-svc-swsnv [748.629173ms]
Aug 13 12:05:08.408: INFO: Created: latency-svc-gfvnw
Aug 13 12:05:08.481: INFO: Got endpoints: latency-svc-pmwm8 [782.74129ms]
Aug 13 12:05:08.492: INFO: Created: latency-svc-x658m
Aug 13 12:05:08.499: INFO: Got endpoints: latency-svc-zfbw4 [750.219763ms]
Aug 13 12:05:08.510: INFO: Created: latency-svc-cjm52
Aug 13 12:05:08.551: INFO: Got endpoints: latency-svc-5f6fr [683.8566ms]
Aug 13 12:05:08.562: INFO: Created: latency-svc-jlpzd
Aug 13 12:05:08.601: INFO: Got endpoints: latency-svc-n4xxd [732.470028ms]
Aug 13 12:05:08.611: INFO: Created: latency-svc-krprg
Aug 13 12:05:08.648: INFO: Got endpoints: latency-svc-wm8fq [750.102472ms]
Aug 13 12:05:08.662: INFO: Created: latency-svc-qchbf
Aug 13 12:05:08.698: INFO: Got endpoints: latency-svc-z6brv [748.118726ms]
Aug 13 12:05:08.708: INFO: Created: latency-svc-fnt9s
Aug 13 12:05:08.750: INFO: Got endpoints: latency-svc-srhk4 [750.658412ms]
Aug 13 12:05:08.761: INFO: Created: latency-svc-9j86v
Aug 13 12:05:08.800: INFO: Got endpoints: latency-svc-h97hd [750.744825ms]
Aug 13 12:05:08.811: INFO: Created: latency-svc-x4nph
Aug 13 12:05:08.849: INFO: Got endpoints: latency-svc-zpvhh [750.312747ms]
Aug 13 12:05:08.863: INFO: Created: latency-svc-qs2xr
Aug 13 12:05:08.901: INFO: Got endpoints: latency-svc-dlqdv [750.51937ms]
Aug 13 12:05:08.913: INFO: Created: latency-svc-7k5rn
Aug 13 12:05:08.949: INFO: Got endpoints: latency-svc-94mrf [749.848754ms]
Aug 13 12:05:08.961: INFO: Created: latency-svc-f5pvb
Aug 13 12:05:09.000: INFO: Got endpoints: latency-svc-sc5cq [749.876523ms]
Aug 13 12:05:09.010: INFO: Created: latency-svc-7p98z
Aug 13 12:05:09.049: INFO: Got endpoints: latency-svc-tqkw8 [750.310185ms]
Aug 13 12:05:09.060: INFO: Created: latency-svc-cm72l
Aug 13 12:05:09.099: INFO: Got endpoints: latency-svc-2nmzc [751.506264ms]
Aug 13 12:05:09.122: INFO: Created: latency-svc-5x6b9
Aug 13 12:05:09.149: INFO: Got endpoints: latency-svc-gfvnw [750.453487ms]
Aug 13 12:05:09.159: INFO: Created: latency-svc-2qr7t
Aug 13 12:05:09.200: INFO: Got endpoints: latency-svc-x658m [718.51255ms]
Aug 13 12:05:09.210: INFO: Created: latency-svc-j8fqz
Aug 13 12:05:09.250: INFO: Got endpoints: latency-svc-cjm52 [751.603135ms]
Aug 13 12:05:09.261: INFO: Created: latency-svc-rdcdr
Aug 13 12:05:09.299: INFO: Got endpoints: latency-svc-jlpzd [748.386335ms]
Aug 13 12:05:09.310: INFO: Created: latency-svc-zhc86
Aug 13 12:05:09.349: INFO: Got endpoints: latency-svc-krprg [748.633386ms]
Aug 13 12:05:09.360: INFO: Created: latency-svc-rdwpk
Aug 13 12:05:09.400: INFO: Got endpoints: latency-svc-qchbf [751.383263ms]
Aug 13 12:05:09.411: INFO: Created: latency-svc-whtxc
Aug 13 12:05:09.449: INFO: Got endpoints: latency-svc-fnt9s [750.734264ms]
Aug 13 12:05:09.459: INFO: Created: latency-svc-xw742
Aug 13 12:05:09.500: INFO: Got endpoints: latency-svc-9j86v [749.728503ms]
Aug 13 12:05:09.510: INFO: Created: latency-svc-j8t6h
Aug 13 12:05:09.548: INFO: Got endpoints: latency-svc-x4nph [748.381855ms]
Aug 13 12:05:09.561: INFO: Created: latency-svc-cdkk9
Aug 13 12:05:09.598: INFO: Got endpoints: latency-svc-qs2xr [749.21976ms]
Aug 13 12:05:09.610: INFO: Created: latency-svc-vxjnz
Aug 13 12:05:09.649: INFO: Got endpoints: latency-svc-7k5rn [747.939717ms]
Aug 13 12:05:09.659: INFO: Created: latency-svc-lwnf7
Aug 13 12:05:09.701: INFO: Got endpoints: latency-svc-f5pvb [752.230506ms]
Aug 13 12:05:09.749: INFO: Got endpoints: latency-svc-7p98z [748.951682ms]
Aug 13 12:05:09.800: INFO: Got endpoints: latency-svc-cm72l [750.242632ms]
Aug 13 12:05:09.849: INFO: Got endpoints: latency-svc-5x6b9 [749.877368ms]
Aug 13 12:05:09.902: INFO: Got endpoints: latency-svc-2qr7t [753.222511ms]
Aug 13 12:05:09.954: INFO: Got endpoints: latency-svc-j8fqz [753.310741ms]
Aug 13 12:05:10.000: INFO: Got endpoints: latency-svc-rdcdr [749.502038ms]
Aug 13 12:05:10.049: INFO: Got endpoints: latency-svc-zhc86 [749.707067ms]
Aug 13 12:05:10.101: INFO: Got endpoints: latency-svc-rdwpk [751.42966ms]
Aug 13 12:05:10.148: INFO: Got endpoints: latency-svc-whtxc [748.114552ms]
Aug 13 12:05:10.202: INFO: Got endpoints: latency-svc-xw742 [752.492536ms]
Aug 13 12:05:10.249: INFO: Got endpoints: latency-svc-j8t6h [749.066641ms]
Aug 13 12:05:10.299: INFO: Got endpoints: latency-svc-cdkk9 [750.650062ms]
Aug 13 12:05:10.349: INFO: Got endpoints: latency-svc-vxjnz [750.244257ms]
Aug 13 12:05:10.401: INFO: Got endpoints: latency-svc-lwnf7 [751.718471ms]
Aug 13 12:05:10.401: INFO: Latencies: [20.91371ms 29.205787ms 36.007321ms 41.943182ms 46.835699ms 47.419454ms 49.702492ms 60.11212ms 66.001376ms 66.926721ms 69.703046ms 72.070564ms 72.3554ms 73.083788ms 78.426509ms 80.190174ms 81.027157ms 86.690696ms 103.007519ms 108.331705ms 113.106998ms 116.935144ms 133.230622ms 146.282866ms 157.737772ms 159.368773ms 202.459204ms 250.501081ms 284.920153ms 295.378722ms 300.052975ms 309.226074ms 310.20418ms 315.990994ms 320.262864ms 345.174007ms 349.28891ms 352.240894ms 356.297703ms 360.053082ms 373.45966ms 384.479402ms 387.640436ms 415.332994ms 417.687035ms 428.727783ms 433.906636ms 460.641987ms 507.739697ms 552.481542ms 597.6ms 640.403177ms 683.732058ms 683.8566ms 718.51255ms 722.106315ms 732.470028ms 741.348764ms 743.095374ms 744.481506ms 744.728575ms 745.823221ms 745.95893ms 747.216772ms 747.317532ms 747.32601ms 747.427707ms 747.547419ms 747.547739ms 747.57929ms 747.743858ms 747.939717ms 747.949808ms 748.026699ms 748.055836ms 748.074022ms 748.114552ms 748.118726ms 748.143418ms 748.381855ms 748.386335ms 748.448772ms 748.469326ms 748.500433ms 748.537168ms 748.608778ms 748.629173ms 748.633386ms 748.707597ms 748.83001ms 748.853179ms 748.855263ms 748.943482ms 748.951682ms 748.956977ms 748.990131ms 749.00266ms 749.03134ms 749.054244ms 749.066641ms 749.128101ms 749.21976ms 749.284761ms 749.314056ms 749.370178ms 749.385228ms 749.414757ms 749.438437ms 749.453092ms 749.463276ms 749.492071ms 749.502038ms 749.517818ms 749.561385ms 749.590659ms 749.600647ms 749.639042ms 749.707067ms 749.728503ms 749.746406ms 749.842151ms 749.848754ms 749.876523ms 749.877368ms 749.996808ms 750.026039ms 750.049877ms 750.051111ms 750.102472ms 750.153561ms 750.219763ms 750.242632ms 750.244257ms 750.248124ms 750.310185ms 750.312539ms 750.312747ms 750.317552ms 750.320402ms 750.357469ms 750.359604ms 750.453487ms 750.51937ms 750.57981ms 750.581738ms 750.613733ms 750.650062ms 750.658412ms 750.734264ms 750.744825ms 750.746909ms 750.748151ms 750.769591ms 750.811116ms 750.906861ms 750.982651ms 750.996733ms 751.024692ms 751.271929ms 751.281434ms 751.2974ms 751.342092ms 751.370338ms 751.37107ms 751.378971ms 751.383263ms 751.421485ms 751.42966ms 751.446796ms 751.492749ms 751.506264ms 751.564671ms 751.576634ms 751.603135ms 751.638944ms 751.655384ms 751.718471ms 751.827929ms 751.864269ms 751.90516ms 752.010501ms 752.013242ms 752.074836ms 752.093722ms 752.136987ms 752.230506ms 752.429546ms 752.492536ms 752.753851ms 752.849272ms 753.222511ms 753.310741ms 753.469841ms 753.522403ms 754.10293ms 758.197903ms 759.564643ms 765.705614ms 782.74129ms 817.206778ms]
Aug 13 12:05:10.402: INFO: 50 %ile: 749.128101ms
Aug 13 12:05:10.402: INFO: 90 %ile: 752.010501ms
Aug 13 12:05:10.402: INFO: 99 %ile: 782.74129ms
Aug 13 12:05:10.402: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Aug 13 12:05:10.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-8379" for this suite.

• [SLOW TEST:10.878 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":36,"skipped":593,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:10.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7844
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Aug 13 12:05:10.561: INFO: observed Pod pod-test in namespace pods-7844 in phase Pending with labels: map[test-pod-static:true] & conditions []
Aug 13 12:05:10.563: INFO: observed Pod pod-test in namespace pods-7844 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:10 +0000 UTC  }]
Aug 13 12:05:10.587: INFO: observed Pod pod-test in namespace pods-7844 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:10 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:10 +0000 UTC  }]
Aug 13 12:05:11.715: INFO: Found Pod pod-test in namespace pods-7844 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:10 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:11 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:11 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 12:05:10 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Aug 13 12:05:11.756: INFO: observed event type MODIFIED
Aug 13 12:05:13.724: INFO: observed event type MODIFIED
Aug 13 12:05:14.725: INFO: observed event type MODIFIED
Aug 13 12:05:14.735: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 12:05:14.746: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7844" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":37,"skipped":601,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:14.757: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7385
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-7385/configmap-test-60bbbc50-96c9-4ea3-8533-3e2dfc21b15a
STEP: Creating a pod to test consume configMaps
Aug 13 12:05:14.905: INFO: Waiting up to 5m0s for pod "pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958" in namespace "configmap-7385" to be "Succeeded or Failed"
Aug 13 12:05:14.911: INFO: Pod "pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958": Phase="Pending", Reason="", readiness=false. Elapsed: 5.805923ms
Aug 13 12:05:16.917: INFO: Pod "pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012013125s
Aug 13 12:05:18.925: INFO: Pod "pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01980985s
STEP: Saw pod success
Aug 13 12:05:18.925: INFO: Pod "pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958" satisfied condition "Succeeded or Failed"
Aug 13 12:05:18.929: INFO: Trying to get logs from node ip-172-31-3-251 pod pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958 container env-test: <nil>
STEP: delete the pod
Aug 13 12:05:18.957: INFO: Waiting for pod pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958 to disappear
Aug 13 12:05:18.960: INFO: Pod pod-configmaps-2974e0b8-4d5a-44dd-b52a-434e80708958 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:05:18.960: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7385" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":38,"skipped":645,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:18.975: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-2012
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:05:19.121: INFO: The status of Pod busybox-readonly-fs3e3f6493-e896-41ec-9a17-c9fd7f8c25cd is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:05:21.129: INFO: The status of Pod busybox-readonly-fs3e3f6493-e896-41ec-9a17-c9fd7f8c25cd is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 13 12:05:21.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-2012" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":39,"skipped":680,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:21.157: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-1032
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-020dc965-4825-4df2-8d90-ab69412499c6-2647
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:05:21.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-1032" for this suite.
STEP: Destroying namespace "nspatchtest-020dc965-4825-4df2-8d90-ab69412499c6-2647" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":40,"skipped":687,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:21.444: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1370
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1370.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1370.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1370.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1370.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 12:05:23.621: INFO: DNS probes using dns-test-56c5ef93-e54b-424a-b0fc-9f67a546d2df succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1370.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1370.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1370.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1370.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 12:05:25.674: INFO: File wheezy_udp@dns-test-service-3.dns-1370.svc.cluster.local from pod  dns-1370/dns-test-1752c92e-c8bd-4858-b2c5-c97a6f1ebb3b contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 13 12:05:25.677: INFO: File jessie_udp@dns-test-service-3.dns-1370.svc.cluster.local from pod  dns-1370/dns-test-1752c92e-c8bd-4858-b2c5-c97a6f1ebb3b contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 13 12:05:25.677: INFO: Lookups using dns-1370/dns-test-1752c92e-c8bd-4858-b2c5-c97a6f1ebb3b failed for: [wheezy_udp@dns-test-service-3.dns-1370.svc.cluster.local jessie_udp@dns-test-service-3.dns-1370.svc.cluster.local]

Aug 13 12:05:30.686: INFO: DNS probes using dns-test-1752c92e-c8bd-4858-b2c5-c97a6f1ebb3b succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1370.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1370.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1370.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1370.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 12:05:32.766: INFO: DNS probes using dns-test-a06dd683-2e50-4d33-9008-977335aa5241 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 12:05:32.799: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1370" for this suite.

• [SLOW TEST:11.367 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":41,"skipped":701,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:32.813: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8026
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Aug 13 12:05:32.966: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug 13 12:05:32.991: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8026" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":42,"skipped":751,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:33.003: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3393
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-50546379-e2e7-4e00-a103-882112a6719f
STEP: Creating secret with name s-test-opt-upd-1d5f043e-a7f0-4420-aaf9-3918a8957920
STEP: Creating the pod
Aug 13 12:05:33.162: INFO: The status of Pod pod-secrets-ca3192d1-a265-4bc5-b4d4-1a8efdf10a32 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:05:35.171: INFO: The status of Pod pod-secrets-ca3192d1-a265-4bc5-b4d4-1a8efdf10a32 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-50546379-e2e7-4e00-a103-882112a6719f
STEP: Updating secret s-test-opt-upd-1d5f043e-a7f0-4420-aaf9-3918a8957920
STEP: Creating secret with name s-test-opt-create-55743e35-d514-4709-a1d2-227dd7614986
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:05:37.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3393" for this suite.
•{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":43,"skipped":777,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:37.260: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7382
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Aug 13 12:05:40.025: INFO: Successfully updated pod "adopt-release-5bv94"
STEP: Checking that the Job readopts the Pod
Aug 13 12:05:40.025: INFO: Waiting up to 15m0s for pod "adopt-release-5bv94" in namespace "job-7382" to be "adopted"
Aug 13 12:05:40.028: INFO: Pod "adopt-release-5bv94": Phase="Running", Reason="", readiness=true. Elapsed: 3.026686ms
Aug 13 12:05:42.036: INFO: Pod "adopt-release-5bv94": Phase="Running", Reason="", readiness=true. Elapsed: 2.011243432s
Aug 13 12:05:42.036: INFO: Pod "adopt-release-5bv94" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Aug 13 12:05:42.549: INFO: Successfully updated pod "adopt-release-5bv94"
STEP: Checking that the Job releases the Pod
Aug 13 12:05:42.549: INFO: Waiting up to 15m0s for pod "adopt-release-5bv94" in namespace "job-7382" to be "released"
Aug 13 12:05:42.554: INFO: Pod "adopt-release-5bv94": Phase="Running", Reason="", readiness=true. Elapsed: 4.270402ms
Aug 13 12:05:44.562: INFO: Pod "adopt-release-5bv94": Phase="Running", Reason="", readiness=true. Elapsed: 2.012449398s
Aug 13 12:05:44.562: INFO: Pod "adopt-release-5bv94" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 13 12:05:44.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7382" for this suite.

• [SLOW TEST:7.313 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":44,"skipped":797,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:44.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-6679
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:05:44.705: INFO: Creating deployment "test-recreate-deployment"
Aug 13 12:05:44.712: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Aug 13 12:05:44.718: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Aug 13 12:05:46.726: INFO: Waiting deployment "test-recreate-deployment" to complete
Aug 13 12:05:46.730: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Aug 13 12:05:46.740: INFO: Updating deployment test-recreate-deployment
Aug 13 12:05:46.740: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 12:05:46.816: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-6679  1a95eaa5-bb4e-465a-9478-4901838625de 7672 2 2022-08-13 12:05:44 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-13 12:05:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:05:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00340ddb8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-13 12:05:46 +0000 UTC,LastTransitionTime:2022-08-13 12:05:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-08-13 12:05:46 +0000 UTC,LastTransitionTime:2022-08-13 12:05:44 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Aug 13 12:05:46.820: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-6679  20f6f8a0-682a-48b8-94cd-a2366a487282 7670 1 2022-08-13 12:05:46 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 1a95eaa5-bb4e-465a-9478-4901838625de 0xc003301900 0xc003301901}] []  [{kube-controller-manager Update apps/v1 2022-08-13 12:05:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a95eaa5-bb4e-465a-9478-4901838625de\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:05:46 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003301998 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:05:46.821: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Aug 13 12:05:46.821: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-6679  c1455fb6-8fb5-4152-9e54-57163c265475 7660 2 2022-08-13 12:05:44 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 1a95eaa5-bb4e-465a-9478-4901838625de 0xc0033017f7 0xc0033017f8}] []  [{kube-controller-manager Update apps/v1 2022-08-13 12:05:44 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1a95eaa5-bb4e-465a-9478-4901838625de\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:05:46 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0033018a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:05:46.824: INFO: Pod "test-recreate-deployment-cd8586fc7-fq67p" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-fq67p test-recreate-deployment-cd8586fc7- deployment-6679  ef6aa5c1-113c-4ea6-9bf7-39cdb3c6744e 7671 0 2022-08-13 12:05:46 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 20f6f8a0-682a-48b8-94cd-a2366a487282 0xc0034c4130 0xc0034c4131}] []  [{kube-controller-manager Update v1 2022-08-13 12:05:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20f6f8a0-682a-48b8-94cd-a2366a487282\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 12:05:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7qj2x,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7qj2x,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:05:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:05:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:05:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:05:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:,StartTime:2022-08-13 12:05:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 12:05:46.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-6679" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":45,"skipped":817,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:46.838: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8994
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 13 12:05:56.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8994" for this suite.

• [SLOW TEST:10.158 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":46,"skipped":855,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:05:56.996: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7766
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Aug 13 12:05:57.149: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7766  f4269aff-6adb-4a52-b4c2-c0521a7ebda1 7853 0 2022-08-13 12:05:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-13 12:05:57 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 12:05:57.149: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7766  f4269aff-6adb-4a52-b4c2-c0521a7ebda1 7854 0 2022-08-13 12:05:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-13 12:05:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 12:05:57.149: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7766  f4269aff-6adb-4a52-b4c2-c0521a7ebda1 7855 0 2022-08-13 12:05:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-13 12:05:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Aug 13 12:06:07.196: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7766  f4269aff-6adb-4a52-b4c2-c0521a7ebda1 7919 0 2022-08-13 12:05:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-13 12:05:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 12:06:07.196: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7766  f4269aff-6adb-4a52-b4c2-c0521a7ebda1 7920 0 2022-08-13 12:05:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-13 12:05:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 12:06:07.196: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7766  f4269aff-6adb-4a52-b4c2-c0521a7ebda1 7921 0 2022-08-13 12:05:57 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-13 12:05:57 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 13 12:06:07.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7766" for this suite.

• [SLOW TEST:10.212 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":47,"skipped":859,"failed":0}
SS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:06:07.209: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-3935
Aug 13 12:06:07.359: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:06:09.366: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 13 12:06:09.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 13 12:06:09.514: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 13 12:06:09.514: INFO: stdout: "iptables"
Aug 13 12:06:09.514: INFO: proxyMode: iptables
Aug 13 12:06:09.528: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 13 12:06:09.531: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-3935
STEP: creating replication controller affinity-nodeport-timeout in namespace services-3935
I0813 12:06:09.552808      18 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-3935, replica count: 3
I0813 12:06:12.603577      18 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 12:06:12.622: INFO: Creating new exec pod
Aug 13 12:06:15.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec execpod-affinity6772d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Aug 13 12:06:15.781: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Aug 13 12:06:15.781: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:06:15.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec execpod-affinity6772d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.222 80'
Aug 13 12:06:15.915: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 10.152.183.222 80\nConnection to 10.152.183.222 80 port [tcp/http] succeeded!\n"
Aug 13 12:06:15.915: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:06:15.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec execpod-affinity6772d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.206 31971'
Aug 13 12:06:16.029: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.206 31971\nConnection to 172.31.22.206 31971 port [tcp/*] succeeded!\n"
Aug 13 12:06:16.029: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:06:16.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec execpod-affinity6772d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.251 31971'
Aug 13 12:06:16.131: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 172.31.3.251 31971\nConnection to 172.31.3.251 31971 port [tcp/*] succeeded!\n"
Aug 13 12:06:16.131: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:06:16.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec execpod-affinity6772d -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.206:31971/ ; done'
Aug 13 12:06:16.322: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n"
Aug 13 12:06:16.322: INFO: stdout: "\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc\naffinity-nodeport-timeout-9pnrc"
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Received response from host: affinity-nodeport-timeout-9pnrc
Aug 13 12:06:16.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec execpod-affinity6772d -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.22.206:31971/'
Aug 13 12:06:16.429: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n"
Aug 13 12:06:16.429: INFO: stdout: "affinity-nodeport-timeout-9pnrc"
Aug 13 12:06:36.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3935 exec execpod-affinity6772d -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.22.206:31971/'
Aug 13 12:06:36.566: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.22.206:31971/\n"
Aug 13 12:06:36.567: INFO: stdout: "affinity-nodeport-timeout-zpfxd"
Aug 13 12:06:36.567: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-3935, will wait for the garbage collector to delete the pods
Aug 13 12:06:36.646: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 7.34514ms
Aug 13 12:06:36.746: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.392496ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:06:39.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3935" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:31.981 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":48,"skipped":861,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:06:39.190: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-31
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 13 12:06:39.351: INFO: starting watch
STEP: patching
STEP: updating
Aug 13 12:06:39.361: INFO: waiting for watch events with expected annotations
Aug 13 12:06:39.361: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Aug 13 12:06:39.388: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-31" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":49,"skipped":872,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:06:39.398: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7913
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-dff61582-6473-45d0-b532-bed08f69aaf1
STEP: Creating a pod to test consume configMaps
Aug 13 12:06:39.544: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e" in namespace "projected-7913" to be "Succeeded or Failed"
Aug 13 12:06:39.623: INFO: Pod "pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e": Phase="Pending", Reason="", readiness=false. Elapsed: 79.007645ms
Aug 13 12:06:41.632: INFO: Pod "pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.087390431s
Aug 13 12:06:43.640: INFO: Pod "pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.095653402s
STEP: Saw pod success
Aug 13 12:06:43.640: INFO: Pod "pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e" satisfied condition "Succeeded or Failed"
Aug 13 12:06:43.643: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:06:43.668: INFO: Waiting for pod pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e to disappear
Aug 13 12:06:43.670: INFO: Pod pod-projected-configmaps-27d94a92-66b8-4d5a-ac1c-7fa4d0b1bc5e no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 12:06:43.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7913" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":50,"skipped":895,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:06:43.680: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4498
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4498
STEP: creating service affinity-clusterip in namespace services-4498
STEP: creating replication controller affinity-clusterip in namespace services-4498
I0813 12:06:43.828941      18 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-4498, replica count: 3
I0813 12:06:46.879613      18 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 12:06:46.887: INFO: Creating new exec pod
Aug 13 12:06:49.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4498 exec execpod-affinity7vkt7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug 13 12:06:50.050: INFO: stderr: "+ nc -v -t+  -wecho 2 hostName affinity-clusterip\n 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Aug 13 12:06:50.050: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:06:50.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4498 exec execpod-affinity7vkt7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.182 80'
Aug 13 12:06:50.182: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 10.152.183.182 80\nConnection to 10.152.183.182 80 port [tcp/http] succeeded!\n"
Aug 13 12:06:50.182: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:06:50.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4498 exec execpod-affinity7vkt7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.182:80/ ; done'
Aug 13 12:06:50.360: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.182:80/\n"
Aug 13 12:06:50.361: INFO: stdout: "\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r\naffinity-clusterip-g4m4r"
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Received response from host: affinity-clusterip-g4m4r
Aug 13 12:06:50.361: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-4498, will wait for the garbage collector to delete the pods
Aug 13 12:06:50.436: INFO: Deleting ReplicationController affinity-clusterip took: 8.287442ms
Aug 13 12:06:50.537: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.725997ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:06:52.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4498" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.994 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":51,"skipped":920,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:06:52.674: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3157
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:06:52.822: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Aug 13 12:06:52.831: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:52.831: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:52.835: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:06:52.835: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:06:53.841: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:53.841: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:53.845: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:06:53.845: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:06:54.842: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:54.842: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:54.845: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:06:54.845: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Aug 13 12:06:54.876: INFO: Wrong image for pod: daemon-set-2slxg. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:54.876: INFO: Wrong image for pod: daemon-set-8vzcl. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:54.876: INFO: Wrong image for pod: daemon-set-md6pw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:54.882: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:54.882: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:55.889: INFO: Wrong image for pod: daemon-set-8vzcl. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:55.889: INFO: Wrong image for pod: daemon-set-md6pw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:55.892: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:55.892: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:56.888: INFO: Wrong image for pod: daemon-set-8vzcl. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:56.888: INFO: Wrong image for pod: daemon-set-md6pw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:56.892: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:56.892: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:57.889: INFO: Wrong image for pod: daemon-set-8vzcl. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:57.889: INFO: Pod daemon-set-cp45d is not available
Aug 13 12:06:57.889: INFO: Wrong image for pod: daemon-set-md6pw. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:57.895: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:57.895: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:58.889: INFO: Wrong image for pod: daemon-set-8vzcl. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:58.892: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:58.892: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:59.889: INFO: Wrong image for pod: daemon-set-8vzcl. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 13 12:06:59.889: INFO: Pod daemon-set-rtfwf is not available
Aug 13 12:06:59.893: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:06:59.893: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:07:00.889: INFO: Pod daemon-set-54wvt is not available
Aug 13 12:07:00.894: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:07:00.894: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Aug 13 12:07:00.897: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:07:00.897: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:07:00.900: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:07:00.900: INFO: Node ip-172-31-79-226 is running 0 daemon pod, expected 1
Aug 13 12:07:01.907: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:07:01.907: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:07:01.910: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:07:01.910: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3157, will wait for the garbage collector to delete the pods
Aug 13 12:07:01.990: INFO: Deleting DaemonSet.extensions daemon-set took: 7.43893ms
Aug 13 12:07:02.090: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.606898ms
Aug 13 12:07:04.699: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:07:04.699: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 13 12:07:04.702: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"8573"},"items":null}

Aug 13 12:07:04.705: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"8573"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:07:04.718: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3157" for this suite.

• [SLOW TEST:12.053 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":52,"skipped":963,"failed":0}
SSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:04.728: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9866
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Aug 13 12:07:04.864: INFO: Waiting up to 5m0s for pod "pod-aabeac79-ae98-47a5-ba0f-7701378f5639" in namespace "emptydir-9866" to be "Succeeded or Failed"
Aug 13 12:07:04.870: INFO: Pod "pod-aabeac79-ae98-47a5-ba0f-7701378f5639": Phase="Pending", Reason="", readiness=false. Elapsed: 5.557468ms
Aug 13 12:07:06.874: INFO: Pod "pod-aabeac79-ae98-47a5-ba0f-7701378f5639": Phase="Running", Reason="", readiness=false. Elapsed: 2.010132704s
Aug 13 12:07:08.881: INFO: Pod "pod-aabeac79-ae98-47a5-ba0f-7701378f5639": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017294143s
STEP: Saw pod success
Aug 13 12:07:08.881: INFO: Pod "pod-aabeac79-ae98-47a5-ba0f-7701378f5639" satisfied condition "Succeeded or Failed"
Aug 13 12:07:08.885: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-aabeac79-ae98-47a5-ba0f-7701378f5639 container test-container: <nil>
STEP: delete the pod
Aug 13 12:07:08.904: INFO: Waiting for pod pod-aabeac79-ae98-47a5-ba0f-7701378f5639 to disappear
Aug 13 12:07:08.907: INFO: Pod pod-aabeac79-ae98-47a5-ba0f-7701378f5639 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:07:08.907: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9866" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":53,"skipped":966,"failed":0}
SSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:08.916: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:07:09.060: INFO: Waiting up to 5m0s for pod "downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966" in namespace "downward-api-9208" to be "Succeeded or Failed"
Aug 13 12:07:09.065: INFO: Pod "downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966": Phase="Pending", Reason="", readiness=false. Elapsed: 4.516197ms
Aug 13 12:07:11.073: INFO: Pod "downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012317621s
Aug 13 12:07:13.081: INFO: Pod "downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020445706s
STEP: Saw pod success
Aug 13 12:07:13.081: INFO: Pod "downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966" satisfied condition "Succeeded or Failed"
Aug 13 12:07:13.084: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966 container client-container: <nil>
STEP: delete the pod
Aug 13 12:07:13.103: INFO: Waiting for pod downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966 to disappear
Aug 13 12:07:13.106: INFO: Pod downwardapi-volume-dc7efca6-23f1-4ac6-8e92-384f201b3966 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 12:07:13.106: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9208" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":54,"skipped":969,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:13.116: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8591
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:07:13.839: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:07:16.866: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:07:16.871: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6927-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:07:19.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8591" for this suite.
STEP: Destroying namespace "webhook-8591-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.929 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":55,"skipped":976,"failed":0}
SSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:20.046: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6410
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-9d9f7b67-a738-4d1a-bf1c-0983571d0c92
STEP: Creating a pod to test consume configMaps
Aug 13 12:07:20.255: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa" in namespace "projected-6410" to be "Succeeded or Failed"
Aug 13 12:07:20.258: INFO: Pod "pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa": Phase="Pending", Reason="", readiness=false. Elapsed: 3.121102ms
Aug 13 12:07:22.265: INFO: Pod "pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010221405s
Aug 13 12:07:24.274: INFO: Pod "pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018471019s
STEP: Saw pod success
Aug 13 12:07:24.274: INFO: Pod "pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa" satisfied condition "Succeeded or Failed"
Aug 13 12:07:24.276: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:07:24.295: INFO: Waiting for pod pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa to disappear
Aug 13 12:07:24.299: INFO: Pod pod-projected-configmaps-58f35d79-d9f4-49f4-a3fc-43210e5182fa no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 12:07:24.299: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6410" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":56,"skipped":979,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:24.309: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-7711
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:07:24.453: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-33f5fcec-f455-44b2-b4a0-9f09dc3425d0" in namespace "security-context-test-7711" to be "Succeeded or Failed"
Aug 13 12:07:24.458: INFO: Pod "alpine-nnp-false-33f5fcec-f455-44b2-b4a0-9f09dc3425d0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.203612ms
Aug 13 12:07:26.473: INFO: Pod "alpine-nnp-false-33f5fcec-f455-44b2-b4a0-9f09dc3425d0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020183815s
Aug 13 12:07:28.481: INFO: Pod "alpine-nnp-false-33f5fcec-f455-44b2-b4a0-9f09dc3425d0": Phase="Pending", Reason="", readiness=false. Elapsed: 4.027916306s
Aug 13 12:07:30.488: INFO: Pod "alpine-nnp-false-33f5fcec-f455-44b2-b4a0-9f09dc3425d0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035184857s
Aug 13 12:07:30.488: INFO: Pod "alpine-nnp-false-33f5fcec-f455-44b2-b4a0-9f09dc3425d0" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 13 12:07:30.495: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-7711" for this suite.

• [SLOW TEST:6.198 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":57,"skipped":987,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:30.508: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3279
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-3279
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-3279
I0813 12:07:30.669653      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3279, replica count: 2
I0813 12:07:33.721241      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 12:07:33.721: INFO: Creating new exec pod
Aug 13 12:07:36.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3279 exec execpodf5lsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 13 12:07:36.889: INFO: stderr: "+ + echo hostNamenc\n -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 13 12:07:36.889: INFO: stdout: "externalname-service-48fnc"
Aug 13 12:07:36.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3279 exec execpodf5lsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
Aug 13 12:07:36.994: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 10.152.183.155 80\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n"
Aug 13 12:07:36.994: INFO: stdout: ""
Aug 13 12:07:37.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3279 exec execpodf5lsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
Aug 13 12:07:38.122: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.155 80\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n"
Aug 13 12:07:38.122: INFO: stdout: ""
Aug 13 12:07:38.994: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3279 exec execpodf5lsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
Aug 13 12:07:39.105: INFO: stderr: "+ nc -v -t -w 2 10.152.183.155 80\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Aug 13 12:07:39.105: INFO: stdout: ""
Aug 13 12:07:39.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-3279 exec execpodf5lsg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.155 80'
Aug 13 12:07:40.119: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.155 80\nConnection to 10.152.183.155 80 port [tcp/http] succeeded!\n"
Aug 13 12:07:40.119: INFO: stdout: "externalname-service-fx92g"
Aug 13 12:07:40.119: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:07:40.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3279" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.653 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":58,"skipped":1005,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:40.161: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-6797
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Aug 13 12:07:40.300: INFO: Major version: 1
STEP: Confirm minor version
Aug 13 12:07:40.300: INFO: cleanMinorVersion: 24
Aug 13 12:07:40.300: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Aug 13 12:07:40.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-6797" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":59,"skipped":1027,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:40.311: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5660
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:07:40.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5660" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":60,"skipped":1032,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:40.453: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3945
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:07:40.583: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 13 12:07:40.597: INFO: The status of Pod pod-logs-websocket-27270dfa-78bd-4ef7-9ebf-f2c3851c2cee is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:07:42.606: INFO: The status of Pod pod-logs-websocket-27270dfa-78bd-4ef7-9ebf-f2c3851c2cee is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 12:07:42.620: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3945" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":61,"skipped":1052,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:42.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-2758
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:07:43.079: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:07:46.103: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:07:46.109: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:07:49.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-2758" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.718 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":62,"skipped":1058,"failed":0}
S
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:49.351: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-7888
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Aug 13 12:07:49.512: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Aug 13 12:07:49.534: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 13 12:07:49.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-7888" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":63,"skipped":1059,"failed":0}
SSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:49.575: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-749
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:07:49.705: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 13 12:07:49.720: INFO: The status of Pod pod-exec-websocket-4ee56d62-be44-4e07-9beb-6c4796975ca9 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:07:51.728: INFO: The status of Pod pod-exec-websocket-4ee56d62-be44-4e07-9beb-6c4796975ca9 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 12:07:51.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-749" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":64,"skipped":1063,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:51.829: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:07:51.974: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6" in namespace "projected-6967" to be "Succeeded or Failed"
Aug 13 12:07:51.979: INFO: Pod "downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.734605ms
Aug 13 12:07:53.987: INFO: Pod "downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013116038s
Aug 13 12:07:55.996: INFO: Pod "downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021998526s
STEP: Saw pod success
Aug 13 12:07:55.996: INFO: Pod "downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6" satisfied condition "Succeeded or Failed"
Aug 13 12:07:55.999: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6 container client-container: <nil>
STEP: delete the pod
Aug 13 12:07:56.021: INFO: Waiting for pod downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6 to disappear
Aug 13 12:07:56.023: INFO: Pod downwardapi-volume-a4c2a2c0-2630-47af-b900-d03b1985f0e6 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 12:07:56.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6967" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":65,"skipped":1087,"failed":0}
S
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:56.033: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Aug 13 12:07:56.192: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7101  10125b04-fba1-442d-886b-51e6487621d5 9263 0 2022-08-13 12:07:56 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-13 12:07:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 12:07:56.193: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-7101  10125b04-fba1-442d-886b-51e6487621d5 9264 0 2022-08-13 12:07:56 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-13 12:07:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 13 12:07:56.193: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7101" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":66,"skipped":1088,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:07:56.203: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6570
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-8325ed75-b028-4194-855e-56fe3dd81719
STEP: Creating a pod to test consume secrets
Aug 13 12:07:56.348: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6" in namespace "projected-6570" to be "Succeeded or Failed"
Aug 13 12:07:56.354: INFO: Pod "pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.669218ms
Aug 13 12:07:58.361: INFO: Pod "pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012804449s
Aug 13 12:08:00.369: INFO: Pod "pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021426631s
STEP: Saw pod success
Aug 13 12:08:00.369: INFO: Pod "pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6" satisfied condition "Succeeded or Failed"
Aug 13 12:08:00.373: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:08:00.390: INFO: Waiting for pod pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6 to disappear
Aug 13 12:08:00.392: INFO: Pod pod-projected-secrets-b621e5be-5e91-433d-8c33-ba54443741b6 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 13 12:08:00.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6570" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":67,"skipped":1106,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:08:00.403: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-569
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 13 12:08:00.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-569" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":68,"skipped":1150,"failed":0}
SSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:08:00.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 13 12:13:00.732: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9738" for this suite.

• [SLOW TEST:300.169 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":69,"skipped":1157,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:00.742: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-844
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-1833d611-d52d-4da8-93e7-38435437e752
STEP: Creating a pod to test consume secrets
Aug 13 12:13:00.895: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08" in namespace "projected-844" to be "Succeeded or Failed"
Aug 13 12:13:00.897: INFO: Pod "pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08": Phase="Pending", Reason="", readiness=false. Elapsed: 2.683836ms
Aug 13 12:13:02.905: INFO: Pod "pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010040271s
Aug 13 12:13:04.915: INFO: Pod "pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02014663s
STEP: Saw pod success
Aug 13 12:13:04.915: INFO: Pod "pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08" satisfied condition "Succeeded or Failed"
Aug 13 12:13:04.918: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:13:04.949: INFO: Waiting for pod pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08 to disappear
Aug 13 12:13:04.952: INFO: Pod pod-projected-secrets-e2ee186b-3119-4a9f-a254-c872c6a0cb08 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 13 12:13:04.952: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-844" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1190,"failed":0}
SSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:04.963: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-5489
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:13:07.123: INFO: Deleting pod "var-expansion-cd9bc433-f98f-41f9-8f22-d34332f05b6c" in namespace "var-expansion-5489"
Aug 13 12:13:07.131: INFO: Wait up to 5m0s for pod "var-expansion-cd9bc433-f98f-41f9-8f22-d34332f05b6c" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 12:13:09.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-5489" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":71,"skipped":1195,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:09.152: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-785
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Aug 13 12:13:09.286: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-785 proxy --unix-socket=/tmp/kubectl-proxy-unix2075069170/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:13:09.321: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-785" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":72,"skipped":1238,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:09.335: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8309
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:13:09.512: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8309" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":73,"skipped":1245,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:09.526: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-354
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:13:09.665: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 13 12:13:12.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-354 --namespace=crd-publish-openapi-354 create -f -'
Aug 13 12:13:13.675: INFO: stderr: ""
Aug 13 12:13:13.675: INFO: stdout: "e2e-test-crd-publish-openapi-5115-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 13 12:13:13.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-354 --namespace=crd-publish-openapi-354 delete e2e-test-crd-publish-openapi-5115-crds test-cr'
Aug 13 12:13:13.760: INFO: stderr: ""
Aug 13 12:13:13.760: INFO: stdout: "e2e-test-crd-publish-openapi-5115-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Aug 13 12:13:13.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-354 --namespace=crd-publish-openapi-354 apply -f -'
Aug 13 12:13:14.195: INFO: stderr: ""
Aug 13 12:13:14.195: INFO: stdout: "e2e-test-crd-publish-openapi-5115-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 13 12:13:14.195: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-354 --namespace=crd-publish-openapi-354 delete e2e-test-crd-publish-openapi-5115-crds test-cr'
Aug 13 12:13:14.255: INFO: stderr: ""
Aug 13 12:13:14.255: INFO: stdout: "e2e-test-crd-publish-openapi-5115-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Aug 13 12:13:14.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-354 explain e2e-test-crd-publish-openapi-5115-crds'
Aug 13 12:13:14.408: INFO: stderr: ""
Aug 13 12:13:14.408: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5115-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:13:16.663: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-354" for this suite.

• [SLOW TEST:7.153 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":74,"skipped":1264,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:16.679: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4767
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Aug 13 12:13:16.817: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 13 12:13:21.826: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 13 12:13:21.851: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4767" for this suite.

• [SLOW TEST:5.198 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":75,"skipped":1272,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:21.877: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-758
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Aug 13 12:13:22.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Aug 13 12:13:22.073: INFO: stderr: ""
Aug 13 12:13:22.073: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Aug 13 12:13:22.073: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Aug 13 12:13:22.073: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-758" to be "running and ready, or succeeded"
Aug 13 12:13:22.078: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 5.022508ms
Aug 13 12:13:24.088: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.014931516s
Aug 13 12:13:24.088: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Aug 13 12:13:24.088: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Aug 13 12:13:24.088: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 logs logs-generator logs-generator'
Aug 13 12:13:24.152: INFO: stderr: ""
Aug 13 12:13:24.152: INFO: stdout: "I0813 12:13:22.865434       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/j4lw 342\nI0813 12:13:23.065517       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/f6b 469\nI0813 12:13:23.266052       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/9wb4 500\nI0813 12:13:23.466336       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/b8d6 505\nI0813 12:13:23.665502       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/9mwd 253\nI0813 12:13:23.865780       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/hjr7 486\nI0813 12:13:24.066060       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/tmd 537\n"
STEP: limiting log lines
Aug 13 12:13:24.152: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 logs logs-generator logs-generator --tail=1'
Aug 13 12:13:24.208: INFO: stderr: ""
Aug 13 12:13:24.208: INFO: stdout: "I0813 12:13:24.066060       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/tmd 537\n"
Aug 13 12:13:24.208: INFO: got output "I0813 12:13:24.066060       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/tmd 537\n"
STEP: limiting log bytes
Aug 13 12:13:24.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 logs logs-generator logs-generator --limit-bytes=1'
Aug 13 12:13:24.265: INFO: stderr: ""
Aug 13 12:13:24.265: INFO: stdout: "I"
Aug 13 12:13:24.265: INFO: got output "I"
STEP: exposing timestamps
Aug 13 12:13:24.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 logs logs-generator logs-generator --tail=1 --timestamps'
Aug 13 12:13:24.323: INFO: stderr: ""
Aug 13 12:13:24.323: INFO: stdout: "2022-08-13T12:13:24.266392994Z I0813 12:13:24.266342       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/66wb 365\n"
Aug 13 12:13:24.323: INFO: got output "2022-08-13T12:13:24.266392994Z I0813 12:13:24.266342       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/66wb 365\n"
STEP: restricting to a time range
Aug 13 12:13:26.823: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 logs logs-generator logs-generator --since=1s'
Aug 13 12:13:26.887: INFO: stderr: ""
Aug 13 12:13:26.887: INFO: stdout: "I0813 12:13:26.065773       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/nrb 221\nI0813 12:13:26.266055       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/st84 542\nI0813 12:13:26.466334       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/7bx 206\nI0813 12:13:26.665554       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/lnsf 499\nI0813 12:13:26.865900       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/svph 413\n"
Aug 13 12:13:26.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 logs logs-generator logs-generator --since=24h'
Aug 13 12:13:26.954: INFO: stderr: ""
Aug 13 12:13:26.954: INFO: stdout: "I0813 12:13:22.865434       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/j4lw 342\nI0813 12:13:23.065517       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/f6b 469\nI0813 12:13:23.266052       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/9wb4 500\nI0813 12:13:23.466336       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/b8d6 505\nI0813 12:13:23.665502       1 logs_generator.go:76] 4 POST /api/v1/namespaces/kube-system/pods/9mwd 253\nI0813 12:13:23.865780       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/hjr7 486\nI0813 12:13:24.066060       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/tmd 537\nI0813 12:13:24.266342       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/66wb 365\nI0813 12:13:24.465562       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/2hp 397\nI0813 12:13:24.665858       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/d7h5 598\nI0813 12:13:24.866136       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/5mv 571\nI0813 12:13:25.066426       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/77j2 550\nI0813 12:13:25.265727       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/j8b 599\nI0813 12:13:25.466012       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/8cml 414\nI0813 12:13:25.666309       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/2fb 294\nI0813 12:13:25.865495       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/ns/pods/swhq 294\nI0813 12:13:26.065773       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/nrb 221\nI0813 12:13:26.266055       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/st84 542\nI0813 12:13:26.466334       1 logs_generator.go:76] 18 GET /api/v1/namespaces/ns/pods/7bx 206\nI0813 12:13:26.665554       1 logs_generator.go:76] 19 GET /api/v1/namespaces/default/pods/lnsf 499\nI0813 12:13:26.865900       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/svph 413\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Aug 13 12:13:26.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-758 delete pod logs-generator'
Aug 13 12:13:28.247: INFO: stderr: ""
Aug 13 12:13:28.247: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:13:28.247: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-758" for this suite.

• [SLOW TEST:6.384 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":76,"skipped":1279,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:28.261: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-9605
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Aug 13 12:13:30.421: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 13 12:13:32.463: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-9605" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":77,"skipped":1311,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:32.474: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-113
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 13 12:13:32.606: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 13 12:13:32.613: INFO: Waiting for terminating namespaces to be deleted...
Aug 13 12:13:32.616: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-22-206 before test
Aug 13 12:13:32.626: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sgrjp from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 13 12:13:32.626: INFO: nginx-ingress-controller-kubernetes-worker-bvm57 from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:13:32.626: INFO: calico-kube-controllers-5f6d88cdb-fjtjt from kube-system started at 2022-08-13 11:48:50 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 13 12:13:32.626: INFO: coredns-86c98bfcdb-ctwtg from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container coredns ready: true, restart count 0
Aug 13 12:13:32.626: INFO: kube-state-metrics-5cdbfd47b4-pwbt8 from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 13 12:13:32.626: INFO: metrics-server-v0.5.2-6bfd958b56-82nrj from kube-system started at 2022-08-13 11:48:50 +0000 UTC (2 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container metrics-server ready: true, restart count 0
Aug 13 12:13:32.626: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 13 12:13:32.626: INFO: dashboard-metrics-scraper-8669b59d4f-fmmvg from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 13 12:13:32.626: INFO: kubernetes-dashboard-585fc6bc87-pvfzw from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 13 12:13:32.626: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-n5n8f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:13:32.626: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:13:32.626: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 12:13:32.626: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-3-251 before test
Aug 13 12:13:32.632: INFO: nginx-ingress-controller-kubernetes-worker-52j7t from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:55 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.632: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:13:32.632: INFO: sonobuoy-e2e-job-d7ed694d834d4e6f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:13:32.632: INFO: 	Container e2e ready: true, restart count 0
Aug 13 12:13:32.632: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:13:32.632: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-kcvmg from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:13:32.632: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:13:32.632: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 12:13:32.632: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-79-226 before test
Aug 13 12:13:32.638: INFO: pod-0 from disruption-9605 started at 2022-08-13 12:13:30 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.638: INFO: 	Container donothing ready: true, restart count 0
Aug 13 12:13:32.638: INFO: nginx-ingress-controller-kubernetes-worker-j6fbx from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:54 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.638: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:13:32.638: INFO: sonobuoy from sonobuoy started at 2022-08-13 11:53:59 +0000 UTC (1 container statuses recorded)
Aug 13 12:13:32.638: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 13 12:13:32.638: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-bdtv7 from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:13:32.638: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:13:32.638: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-1c70dfd7-82ea-48be-b5a1-195ecc7ed588 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-1c70dfd7-82ea-48be-b5a1-195ecc7ed588 off the node ip-172-31-79-226
STEP: verifying the node doesn't have the label kubernetes.io/e2e-1c70dfd7-82ea-48be-b5a1-195ecc7ed588
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:13:36.724: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-113" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":78,"skipped":1344,"failed":0}
S
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:36.737: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-8208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Aug 13 12:13:36.872: INFO: created test-podtemplate-1
Aug 13 12:13:36.877: INFO: created test-podtemplate-2
Aug 13 12:13:36.882: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Aug 13 12:13:36.886: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Aug 13 12:13:36.905: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 13 12:13:36.909: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-8208" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":79,"skipped":1345,"failed":0}
S
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:36.919: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-2997
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:13:37.058: INFO: Creating pod...
Aug 13 12:13:39.085: INFO: Creating service...
Aug 13 12:13:39.109: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/pods/agnhost/proxy/some/path/with/DELETE
Aug 13 12:13:39.115: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 13 12:13:39.115: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/pods/agnhost/proxy/some/path/with/GET
Aug 13 12:13:39.120: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 13 12:13:39.121: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/pods/agnhost/proxy/some/path/with/HEAD
Aug 13 12:13:39.125: INFO: http.Client request:HEAD | StatusCode:200
Aug 13 12:13:39.125: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/pods/agnhost/proxy/some/path/with/OPTIONS
Aug 13 12:13:39.129: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 13 12:13:39.129: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/pods/agnhost/proxy/some/path/with/PATCH
Aug 13 12:13:39.134: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 13 12:13:39.134: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/pods/agnhost/proxy/some/path/with/POST
Aug 13 12:13:39.138: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 13 12:13:39.138: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/pods/agnhost/proxy/some/path/with/PUT
Aug 13 12:13:39.142: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 13 12:13:39.142: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/services/test-service/proxy/some/path/with/DELETE
Aug 13 12:13:39.149: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 13 12:13:39.149: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/services/test-service/proxy/some/path/with/GET
Aug 13 12:13:39.154: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 13 12:13:39.154: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/services/test-service/proxy/some/path/with/HEAD
Aug 13 12:13:39.159: INFO: http.Client request:HEAD | StatusCode:200
Aug 13 12:13:39.159: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/services/test-service/proxy/some/path/with/OPTIONS
Aug 13 12:13:39.167: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 13 12:13:39.167: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/services/test-service/proxy/some/path/with/PATCH
Aug 13 12:13:39.171: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 13 12:13:39.171: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/services/test-service/proxy/some/path/with/POST
Aug 13 12:13:39.177: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 13 12:13:39.177: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-2997/services/test-service/proxy/some/path/with/PUT
Aug 13 12:13:39.186: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 13 12:13:39.186: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-2997" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":80,"skipped":1346,"failed":0}

------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:39.196: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5769
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:13:39.333: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8" in namespace "projected-5769" to be "Succeeded or Failed"
Aug 13 12:13:39.336: INFO: Pod "downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.136401ms
Aug 13 12:13:41.345: INFO: Pod "downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011488874s
Aug 13 12:13:43.352: INFO: Pod "downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018334663s
STEP: Saw pod success
Aug 13 12:13:43.352: INFO: Pod "downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8" satisfied condition "Succeeded or Failed"
Aug 13 12:13:43.355: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8 container client-container: <nil>
STEP: delete the pod
Aug 13 12:13:43.374: INFO: Waiting for pod downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8 to disappear
Aug 13 12:13:43.377: INFO: Pod downwardapi-volume-2fe6b8fb-7190-4098-842f-7e74d66be1f8 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 12:13:43.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5769" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1346,"failed":0}

------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:43.389: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9103
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:13:43.532: INFO: Waiting up to 5m0s for pod "downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43" in namespace "projected-9103" to be "Succeeded or Failed"
Aug 13 12:13:43.537: INFO: Pod "downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43": Phase="Pending", Reason="", readiness=false. Elapsed: 4.445486ms
Aug 13 12:13:45.545: INFO: Pod "downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013105802s
Aug 13 12:13:47.554: INFO: Pod "downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021333679s
STEP: Saw pod success
Aug 13 12:13:47.554: INFO: Pod "downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43" satisfied condition "Succeeded or Failed"
Aug 13 12:13:47.558: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43 container client-container: <nil>
STEP: delete the pod
Aug 13 12:13:47.573: INFO: Waiting for pod downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43 to disappear
Aug 13 12:13:47.577: INFO: Pod downwardapi-volume-736a29a5-72b4-4957-a1a5-ccf00e0b9f43 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 12:13:47.577: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9103" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1346,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:47.589: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-5500
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:13:47.730: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Aug 13 12:13:52.743: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 13 12:13:52.744: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 12:13:57.052: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-5500  c8f5fcf8-1147-4429-8624-74589f519a78 10582 1 2022-08-13 12:13:52 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-13 12:13:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:13:55 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0038cffa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-13 12:13:53 +0000 UTC,LastTransitionTime:2022-08-13 12:13:53 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-cleanup-deployment-6755c7b765" has successfully progressed.,LastUpdateTime:2022-08-13 12:13:56 +0000 UTC,LastTransitionTime:2022-08-13 12:13:52 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 13 12:13:57.055: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-5500  e0a7e595-fbc5-43b7-b5ef-dc692fb305dc 10570 1 2022-08-13 12:13:52 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment c8f5fcf8-1147-4429-8624-74589f519a78 0xc0009963e7 0xc0009963e8}] []  [{kube-controller-manager Update apps/v1 2022-08-13 12:13:52 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c8f5fcf8-1147-4429-8624-74589f519a78\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:13:55 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc000996a98 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:13:57.058: INFO: Pod "test-cleanup-deployment-6755c7b765-z25bm" is available:
&Pod{ObjectMeta:{test-cleanup-deployment-6755c7b765-z25bm test-cleanup-deployment-6755c7b765- deployment-5500  8743e9d6-60f5-40b5-a308-c1bf6cf82037 10569 0 2022-08-13 12:13:52 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-deployment-6755c7b765 e0a7e595-fbc5-43b7-b5ef-dc692fb305dc 0xc001bb23c7 0xc001bb23c8}] []  [{kube-controller-manager Update v1 2022-08-13 12:13:52 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e0a7e595-fbc5-43b7-b5ef-dc692fb305dc\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 12:13:55 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.96\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rfvt7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rfvt7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:13:53 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:13:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:13:55 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:13:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.96,StartTime:2022-08-13 12:13:53 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 12:13:54 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://2a2680867976eaf64abbf388ccd524cff8af7eb44bfc7bbd21cf260792731c4c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.96,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 12:13:57.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-5500" for this suite.

• [SLOW TEST:9.545 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":83,"skipped":1387,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:13:57.135: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-499
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:13:57.603: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40" in namespace "projected-499" to be "Succeeded or Failed"
Aug 13 12:13:57.608: INFO: Pod "downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40": Phase="Pending", Reason="", readiness=false. Elapsed: 5.221243ms
Aug 13 12:13:59.614: INFO: Pod "downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011119224s
Aug 13 12:14:01.621: INFO: Pod "downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017989023s
STEP: Saw pod success
Aug 13 12:14:01.621: INFO: Pod "downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40" satisfied condition "Succeeded or Failed"
Aug 13 12:14:01.625: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40 container client-container: <nil>
STEP: delete the pod
Aug 13 12:14:01.645: INFO: Waiting for pod downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40 to disappear
Aug 13 12:14:01.917: INFO: Pod downwardapi-volume-6af54af3-0b95-4e68-821d-8fa26f4b2b40 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 12:14:01.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-499" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":84,"skipped":1460,"failed":0}
SS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:14:01.929: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4493
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 13 12:14:02.312: INFO: Waiting up to 5m0s for pod "downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a" in namespace "downward-api-4493" to be "Succeeded or Failed"
Aug 13 12:14:02.317: INFO: Pod "downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.175744ms
Aug 13 12:14:04.324: INFO: Pod "downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012705171s
Aug 13 12:14:06.332: INFO: Pod "downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.020496089s
Aug 13 12:14:08.343: INFO: Pod "downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.03172949s
STEP: Saw pod success
Aug 13 12:14:08.343: INFO: Pod "downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a" satisfied condition "Succeeded or Failed"
Aug 13 12:14:08.347: INFO: Trying to get logs from node ip-172-31-79-226 pod downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a container dapi-container: <nil>
STEP: delete the pod
Aug 13 12:14:08.486: INFO: Waiting for pod downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a to disappear
Aug 13 12:14:08.490: INFO: Pod downward-api-413a3dd1-44c2-4898-87f3-984bfc81216a no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 13 12:14:08.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4493" for this suite.

• [SLOW TEST:6.670 seconds]
[sig-node] Downward API
test/e2e/common/node/framework.go:23
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1462,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:14:08.599: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2109
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2109.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2109.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2109.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2109.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 12:14:19.036: INFO: DNS probes using dns-2109/dns-test-dd3b3b7d-73cd-4737-80c8-086815853742 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 12:14:19.049: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2109" for this suite.

• [SLOW TEST:10.628 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":86,"skipped":1476,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:14:19.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7861
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 13 12:14:19.690: INFO: Waiting up to 5m0s for pod "pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c" in namespace "emptydir-7861" to be "Succeeded or Failed"
Aug 13 12:14:19.693: INFO: Pod "pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.551469ms
Aug 13 12:14:21.702: INFO: Pod "pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012032356s
Aug 13 12:14:23.710: INFO: Pod "pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019839166s
STEP: Saw pod success
Aug 13 12:14:23.710: INFO: Pod "pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c" satisfied condition "Succeeded or Failed"
Aug 13 12:14:23.714: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c container test-container: <nil>
STEP: delete the pod
Aug 13 12:14:23.732: INFO: Waiting for pod pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c to disappear
Aug 13 12:14:23.844: INFO: Pod pod-3be25a6b-c004-4a6d-a054-2b85ab55d39c no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:14:23.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7861" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":87,"skipped":1549,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:14:23.920: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-4254
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 13 12:14:24.404: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-4254" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":88,"skipped":1611,"failed":0}
SSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:14:24.455: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-1743
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Aug 13 12:14:24.616: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 13 12:15:24.633: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:15:24.637: INFO: Starting informer...
STEP: Starting pods...
Aug 13 12:15:24.859: INFO: Pod1 is running on ip-172-31-79-226. Tainting Node
Aug 13 12:15:27.084: INFO: Pod2 is running on ip-172-31-79-226. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Aug 13 12:15:32.807: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Aug 13 12:15:52.546: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:15:52.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-1743" for this suite.

• [SLOW TEST:88.121 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":89,"skipped":1616,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:15:52.576: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6061
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 13 12:15:52.716: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-6061 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 13 12:15:52.773: INFO: stderr: ""
Aug 13 12:15:52.773: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Aug 13 12:15:57.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-6061 get pod e2e-test-httpd-pod -o json'
Aug 13 12:15:57.887: INFO: stderr: ""
Aug 13 12:15:57.887: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-08-13T12:15:52Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6061\",\n        \"resourceVersion\": \"11095\",\n        \"uid\": \"3e7f50f6-535b-4331-a6d9-578325ad7b00\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-tz6lz\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-79-226\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-tz6lz\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-13T12:15:52Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-13T12:15:54Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-13T12:15:54Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-13T12:15:52Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://4810f589b395f3f0f4817582ae382eb01134f6a0ec5b28df3fdc5ee9b98abed3\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-08-13T12:15:53Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.79.226\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.176.12\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.176.12\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-08-13T12:15:52Z\"\n    }\n}\n"
STEP: replace the image in the pod
Aug 13 12:15:57.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-6061 replace -f -'
Aug 13 12:15:58.394: INFO: stderr: ""
Aug 13 12:15:58.394: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Aug 13 12:15:58.399: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-6061 delete pods e2e-test-httpd-pod'
Aug 13 12:16:00.579: INFO: stderr: ""
Aug 13 12:16:00.579: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:16:00.579: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6061" for this suite.

• [SLOW TEST:8.016 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":90,"skipped":1620,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:16:00.593: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9049
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 13 12:16:00.734: INFO: Waiting up to 5m0s for pod "pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a" in namespace "emptydir-9049" to be "Succeeded or Failed"
Aug 13 12:16:00.740: INFO: Pod "pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.894963ms
Aug 13 12:16:02.749: INFO: Pod "pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a": Phase="Running", Reason="", readiness=false. Elapsed: 2.015110702s
Aug 13 12:16:04.758: INFO: Pod "pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024160887s
STEP: Saw pod success
Aug 13 12:16:04.758: INFO: Pod "pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a" satisfied condition "Succeeded or Failed"
Aug 13 12:16:04.761: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a container test-container: <nil>
STEP: delete the pod
Aug 13 12:16:04.784: INFO: Waiting for pod pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a to disappear
Aug 13 12:16:04.788: INFO: Pod pod-f6d9d7e1-1229-40e3-8b32-0aae4fae315a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:16:04.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9049" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":91,"skipped":1672,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:16:04.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3037
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:16:04.940: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9" in namespace "projected-3037" to be "Succeeded or Failed"
Aug 13 12:16:04.945: INFO: Pod "downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9": Phase="Pending", Reason="", readiness=false. Elapsed: 4.970384ms
Aug 13 12:16:06.953: INFO: Pod "downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013632016s
Aug 13 12:16:08.960: INFO: Pod "downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020707041s
STEP: Saw pod success
Aug 13 12:16:08.960: INFO: Pod "downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9" satisfied condition "Succeeded or Failed"
Aug 13 12:16:08.964: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9 container client-container: <nil>
STEP: delete the pod
Aug 13 12:16:08.981: INFO: Waiting for pod downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9 to disappear
Aug 13 12:16:08.983: INFO: Pod downwardapi-volume-8175bc89-e12e-4329-adf4-6aa98bb1fbd9 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 12:16:08.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3037" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1696,"failed":0}
SSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:16:08.995: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-5238
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 13 12:18:01.150: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-5238" for this suite.

• [SLOW TEST:112.164 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":93,"skipped":1700,"failed":0}
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:18:01.159: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-3607
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 13 12:18:01.304: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:18:03.312: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 13 12:18:03.326: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:18:05.332: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 13 12:18:05.345: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 13 12:18:05.348: INFO: Pod pod-with-prestop-http-hook still exists
Aug 13 12:18:07.349: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 13 12:18:07.356: INFO: Pod pod-with-prestop-http-hook still exists
Aug 13 12:18:09.349: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 13 12:18:09.357: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 13 12:18:09.376: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3607" for this suite.

• [SLOW TEST:8.227 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":94,"skipped":1704,"failed":0}
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:18:09.386: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-1101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:18:20.585: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-1101" for this suite.

• [SLOW TEST:11.212 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":95,"skipped":1704,"failed":0}
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:18:20.598: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-9614
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Aug 13 12:18:22.775: INFO: running pods: 0 < 3
Aug 13 12:18:24.783: INFO: running pods: 2 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 13 12:18:26.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-9614" for this suite.

• [SLOW TEST:6.203 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":96,"skipped":1713,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:18:26.801: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-4054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 13 12:18:26.934: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 13 12:18:26.941: INFO: Waiting for terminating namespaces to be deleted...
Aug 13 12:18:26.944: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-22-206 before test
Aug 13 12:18:26.949: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sgrjp from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 13 12:18:26.949: INFO: nginx-ingress-controller-kubernetes-worker-bvm57 from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:18:26.949: INFO: calico-kube-controllers-5f6d88cdb-fjtjt from kube-system started at 2022-08-13 11:48:50 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 13 12:18:26.949: INFO: coredns-86c98bfcdb-ctwtg from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container coredns ready: true, restart count 0
Aug 13 12:18:26.949: INFO: kube-state-metrics-5cdbfd47b4-pwbt8 from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 13 12:18:26.949: INFO: metrics-server-v0.5.2-6bfd958b56-82nrj from kube-system started at 2022-08-13 11:48:50 +0000 UTC (2 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container metrics-server ready: true, restart count 0
Aug 13 12:18:26.949: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 13 12:18:26.949: INFO: dashboard-metrics-scraper-8669b59d4f-fmmvg from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 13 12:18:26.949: INFO: kubernetes-dashboard-585fc6bc87-pvfzw from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 13 12:18:26.949: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-n5n8f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:18:26.949: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:18:26.949: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 12:18:26.949: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-3-251 before test
Aug 13 12:18:26.954: INFO: concurrent-27673218-bj9kf from cronjob-5238 started at 2022-08-13 12:18:00 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.954: INFO: 	Container c ready: true, restart count 0
Aug 13 12:18:26.954: INFO: pod-1 from disruption-9614 started at 2022-08-13 12:18:22 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.954: INFO: 	Container donothing ready: true, restart count 0
Aug 13 12:18:26.954: INFO: nginx-ingress-controller-kubernetes-worker-52j7t from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:55 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.954: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:18:26.954: INFO: sonobuoy-e2e-job-d7ed694d834d4e6f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:18:26.954: INFO: 	Container e2e ready: true, restart count 0
Aug 13 12:18:26.954: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:18:26.954: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-kcvmg from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:18:26.954: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:18:26.954: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 12:18:26.954: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-79-226 before test
Aug 13 12:18:26.960: INFO: concurrent-27673217-4zbm9 from cronjob-5238 started at 2022-08-13 12:17:00 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.960: INFO: 	Container c ready: true, restart count 0
Aug 13 12:18:26.960: INFO: pod-0 from disruption-9614 started at 2022-08-13 12:18:22 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.960: INFO: 	Container donothing ready: true, restart count 0
Aug 13 12:18:26.960: INFO: pod-2 from disruption-9614 started at 2022-08-13 12:18:22 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.960: INFO: 	Container donothing ready: true, restart count 0
Aug 13 12:18:26.960: INFO: nginx-ingress-controller-kubernetes-worker-8vxtn from ingress-nginx-kubernetes-worker started at 2022-08-13 12:15:52 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.960: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:18:26.960: INFO: sonobuoy from sonobuoy started at 2022-08-13 11:53:59 +0000 UTC (1 container statuses recorded)
Aug 13 12:18:26.960: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 13 12:18:26.960: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-bdtv7 from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:18:26.960: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:18:26.960: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-893ba636-2cde-420c-a4c1-e87e10b79cf1 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.79.226 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-893ba636-2cde-420c-a4c1-e87e10b79cf1 off the node ip-172-31-79-226
STEP: verifying the node doesn't have the label kubernetes.io/e2e-893ba636-2cde-420c-a4c1-e87e10b79cf1
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:23:31.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-4054" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:304.282 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":97,"skipped":1739,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:23:31.084: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-6501
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 13 12:23:31.234: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:23:33.240: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 13 12:23:33.253: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:23:35.261: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 13 12:23:35.291: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 13 12:23:35.294: INFO: Pod pod-with-poststart-http-hook still exists
Aug 13 12:23:37.294: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 13 12:23:37.301: INFO: Pod pod-with-poststart-http-hook still exists
Aug 13 12:23:39.295: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 13 12:23:39.302: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 13 12:23:39.302: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-6501" for this suite.

• [SLOW TEST:8.229 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":98,"skipped":1763,"failed":0}
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:23:39.313: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3653
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 13 12:23:39.453: INFO: Waiting up to 5m0s for pod "pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6" in namespace "emptydir-3653" to be "Succeeded or Failed"
Aug 13 12:23:39.458: INFO: Pod "pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.414927ms
Aug 13 12:23:41.465: INFO: Pod "pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012726376s
Aug 13 12:23:43.473: INFO: Pod "pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020426348s
STEP: Saw pod success
Aug 13 12:23:43.473: INFO: Pod "pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6" satisfied condition "Succeeded or Failed"
Aug 13 12:23:43.476: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6 container test-container: <nil>
STEP: delete the pod
Aug 13 12:23:43.506: INFO: Waiting for pod pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6 to disappear
Aug 13 12:23:43.509: INFO: Pod pod-9e7e777e-e9e3-4f24-b0e9-56f8e32f4ef6 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:23:43.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3653" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":99,"skipped":1763,"failed":0}

------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:23:43.525: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6974
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:23:44.426: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:23:47.450: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:23:47.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6974" for this suite.
STEP: Destroying namespace "webhook-6974-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":100,"skipped":1763,"failed":0}
SSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:23:47.592: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3511
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:23:47.738: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:23:49.746: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:23:51.746: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:23:53.744: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:23:55.746: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:23:57.746: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:23:59.746: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:24:01.747: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:24:03.746: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:24:05.745: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:24:07.747: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = false)
Aug 13 12:24:09.745: INFO: The status of Pod test-webserver-012dd906-72ab-422a-9997-ea76b36de7c0 is Running (Ready = true)
Aug 13 12:24:09.749: INFO: Container started at 2022-08-13 12:23:48 +0000 UTC, pod became ready at 2022-08-13 12:24:08 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 12:24:09.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3511" for this suite.

• [SLOW TEST:22.168 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":101,"skipped":1766,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:24:09.760: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-6479
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
W0813 12:24:19.945390      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 13 12:24:19.945: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 13 12:24:19.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-6479" for this suite.

• [SLOW TEST:10.195 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":102,"skipped":1778,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:24:19.956: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-565
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-565
I0813 12:24:20.123400      18 runners.go:193] Created replication controller with name: externalname-service, namespace: services-565, replica count: 2
Aug 13 12:24:23.174: INFO: Creating new exec pod
I0813 12:24:23.174246      18 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 12:24:26.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 13 12:24:26.344: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 13 12:24:26.344: INFO: stdout: "externalname-service-9c9hf"
Aug 13 12:24:26.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
Aug 13 12:24:26.474: INFO: stderr: "+ + ncecho -v -t hostName -w\n 2 10.152.183.126 80\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
Aug 13 12:24:26.474: INFO: stdout: ""
Aug 13 12:24:27.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.126 80'
Aug 13 12:24:27.610: INFO: stderr: "+ nc -v -t -w 2 10.152.183.126 80\n+ echo hostName\nConnection to 10.152.183.126 80 port [tcp/http] succeeded!\n"
Aug 13 12:24:27.610: INFO: stdout: "externalname-service-9c9hf"
Aug 13 12:24:27.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.251 31258'
Aug 13 12:24:27.774: INFO: stderr: "+ nc -v -t -w 2 172.31.3.251 31258\n+ echo hostName\nConnection to 172.31.3.251 31258 port [tcp/*] succeeded!\n"
Aug 13 12:24:27.774: INFO: stdout: ""
Aug 13 12:24:28.774: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.251 31258'
Aug 13 12:24:28.907: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.3.251 31258\nConnection to 172.31.3.251 31258 port [tcp/*] succeeded!\n"
Aug 13 12:24:28.907: INFO: stdout: "externalname-service-4wr4z"
Aug 13 12:24:28.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.226 31258'
Aug 13 12:24:29.017: INFO: stderr: "+ + ncecho -v -t hostName -w\n 2 172.31.79.226 31258\nConnection to 172.31.79.226 31258 port [tcp/*] succeeded!\n"
Aug 13 12:24:29.017: INFO: stdout: ""
Aug 13 12:24:30.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.226 31258'
Aug 13 12:24:30.156: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 172.31.79.226 31258\nConnection to 172.31.79.226 31258 port [tcp/*] succeeded!\n"
Aug 13 12:24:30.156: INFO: stdout: ""
Aug 13 12:24:31.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-565 exec execpodbnhzl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.226 31258'
Aug 13 12:24:31.130: INFO: stderr: "+ nc -v -t -w 2 172.31.79.226 31258\n+ echo hostName\nConnection to 172.31.79.226 31258 port [tcp/*] succeeded!\n"
Aug 13 12:24:31.130: INFO: stdout: "externalname-service-9c9hf"
Aug 13 12:24:31.130: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:24:31.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-565" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:11.209 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":103,"skipped":1801,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:24:31.165: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-6280
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:24:31.301: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Creating first CR 
Aug 13 12:24:33.861: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-13T12:24:33Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-13T12:24:33Z]] name:name1 resourceVersion:12855 uid:ee9162e8-cf99-4a39-bcab-c5907e135479] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Aug 13 12:24:43.873: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-13T12:24:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-13T12:24:43Z]] name:name2 resourceVersion:12917 uid:e9c12f12-1f59-4d10-8bcf-bd446fd4f4e0] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Aug 13 12:24:53.901: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-13T12:24:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-13T12:24:53Z]] name:name1 resourceVersion:12936 uid:ee9162e8-cf99-4a39-bcab-c5907e135479] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Aug 13 12:25:03.913: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-13T12:24:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-13T12:25:03Z]] name:name2 resourceVersion:12957 uid:e9c12f12-1f59-4d10-8bcf-bd446fd4f4e0] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Aug 13 12:25:13.927: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-13T12:24:33Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-13T12:24:53Z]] name:name1 resourceVersion:12976 uid:ee9162e8-cf99-4a39-bcab-c5907e135479] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Aug 13 12:25:23.941: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-13T12:24:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-13T12:25:03Z]] name:name2 resourceVersion:12996 uid:e9c12f12-1f59-4d10-8bcf-bd446fd4f4e0] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:25:34.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-6280" for this suite.

• [SLOW TEST:63.312 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":104,"skipped":1856,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:25:34.477: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7808
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-a0939584-0594-4be2-b06d-321dd242ea0d
STEP: Creating secret with name s-test-opt-upd-15081ed3-7dfe-4e79-bd0a-38c9a408462a
STEP: Creating the pod
Aug 13 12:25:34.646: INFO: The status of Pod pod-projected-secrets-c245926d-cadb-4873-8c87-a2a1fac86019 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:25:36.655: INFO: The status of Pod pod-projected-secrets-c245926d-cadb-4873-8c87-a2a1fac86019 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-a0939584-0594-4be2-b06d-321dd242ea0d
STEP: Updating secret s-test-opt-upd-15081ed3-7dfe-4e79-bd0a-38c9a408462a
STEP: Creating secret with name s-test-opt-create-f8ecfa19-2920-4a47-aeb7-a359ba9921ce
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 13 12:25:40.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7808" for this suite.

• [SLOW TEST:6.283 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":105,"skipped":1876,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:25:40.760: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9063
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:25:40.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9063" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":106,"skipped":1878,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:25:40.931: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3292
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:25:41.061: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Aug 13 12:25:41.068: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 13 12:25:46.077: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 13 12:25:46.077: INFO: Creating deployment "test-rolling-update-deployment"
Aug 13 12:25:46.082: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Aug 13 12:25:46.090: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Aug 13 12:25:48.103: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Aug 13 12:25:48.106: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 12:25:48.115: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-3292  bc1e6544-5f10-41eb-8cf2-5d52f5d879bd 13178 1 2022-08-13 12:25:46 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-08-13 12:25:46 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:25:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0012412a8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-13 12:25:46 +0000 UTC,LastTransitionTime:2022-08-13 12:25:46 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-08-13 12:25:47 +0000 UTC,LastTransitionTime:2022-08-13 12:25:46 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 13 12:25:48.118: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-3292  d2683674-8c92-43b5-9d28-0b9c3b53a063 13168 1 2022-08-13 12:25:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment bc1e6544-5f10-41eb-8cf2-5d52f5d879bd 0xc0012417b7 0xc0012417b8}] []  [{kube-controller-manager Update apps/v1 2022-08-13 12:25:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bc1e6544-5f10-41eb-8cf2-5d52f5d879bd\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:25:47 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001241868 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:25:48.118: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Aug 13 12:25:48.119: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-3292  193d12a4-718a-4ab4-ae68-f486b44bf2a2 13177 2 2022-08-13 12:25:41 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment bc1e6544-5f10-41eb-8cf2-5d52f5d879bd 0xc001241687 0xc001241688}] []  [{e2e.test Update apps/v1 2022-08-13 12:25:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:25:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bc1e6544-5f10-41eb-8cf2-5d52f5d879bd\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:25:47 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc001241748 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:25:48.123: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-98gx7" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-98gx7 test-rolling-update-deployment-67c8f74c6c- deployment-3292  8259d6b5-208e-44c4-bb6e-9eddaaae32d5 13167 0 2022-08-13 12:25:46 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c d2683674-8c92-43b5-9d28-0b9c3b53a063 0xc003219b07 0xc003219b08}] []  [{kube-controller-manager Update v1 2022-08-13 12:25:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"d2683674-8c92-43b5-9d28-0b9c3b53a063\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 12:25:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.104\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5tbwq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5tbwq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:25:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:25:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:25:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:25:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.104,StartTime:2022-08-13 12:25:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 12:25:47 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://6e4f745a78195489f249db525163c7abbe4e8b47c5ff5bfcf6a151c161961f09,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.104,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 12:25:48.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3292" for this suite.

• [SLOW TEST:7.201 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":107,"skipped":1920,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:25:48.133: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-184
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 12:25:50.303: INFO: DNS probes using dns-184/dns-test-2fa4deaa-4c84-4fe8-8d10-7a3a203e84d6 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 12:25:50.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-184" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":108,"skipped":1939,"failed":0}
SSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:25:50.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-4300
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:25:50.460: INFO: Creating pod...
Aug 13 12:25:52.496: INFO: Creating service...
Aug 13 12:25:52.506: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/pods/agnhost/proxy?method=DELETE
Aug 13 12:25:52.512: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 13 12:25:52.512: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/pods/agnhost/proxy?method=OPTIONS
Aug 13 12:25:52.519: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 13 12:25:52.519: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/pods/agnhost/proxy?method=PATCH
Aug 13 12:25:52.524: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 13 12:25:52.524: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/pods/agnhost/proxy?method=POST
Aug 13 12:25:52.528: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 13 12:25:52.528: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/pods/agnhost/proxy?method=PUT
Aug 13 12:25:52.532: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 13 12:25:52.532: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/services/e2e-proxy-test-service/proxy?method=DELETE
Aug 13 12:25:52.538: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 13 12:25:52.538: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/services/e2e-proxy-test-service/proxy?method=OPTIONS
Aug 13 12:25:52.544: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 13 12:25:52.544: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/services/e2e-proxy-test-service/proxy?method=PATCH
Aug 13 12:25:52.550: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 13 12:25:52.550: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/services/e2e-proxy-test-service/proxy?method=POST
Aug 13 12:25:52.557: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 13 12:25:52.557: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/services/e2e-proxy-test-service/proxy?method=PUT
Aug 13 12:25:52.563: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 13 12:25:52.563: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/pods/agnhost/proxy?method=GET
Aug 13 12:25:52.566: INFO: http.Client request:GET StatusCode:301
Aug 13 12:25:52.566: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/services/e2e-proxy-test-service/proxy?method=GET
Aug 13 12:25:52.572: INFO: http.Client request:GET StatusCode:301
Aug 13 12:25:52.572: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/pods/agnhost/proxy?method=HEAD
Aug 13 12:25:52.574: INFO: http.Client request:HEAD StatusCode:301
Aug 13 12:25:52.574: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4300/services/e2e-proxy-test-service/proxy?method=HEAD
Aug 13 12:25:52.580: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 13 12:25:52.580: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-4300" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":109,"skipped":1944,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:25:52.592: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-5640
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-596
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-3505
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:26:06.030: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-5640" for this suite.
STEP: Destroying namespace "nsdeletetest-596" for this suite.
Aug 13 12:26:06.046: INFO: Namespace nsdeletetest-596 was already deleted
STEP: Destroying namespace "nsdeletetest-3505" for this suite.

• [SLOW TEST:13.462 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":110,"skipped":1962,"failed":0}
S
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:26:06.054: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-9834
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-9834
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 13 12:26:06.193: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 13 12:26:06.253: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:26:08.260: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:10.263: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:12.278: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:14.261: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:16.267: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:18.267: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:20.262: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:22.260: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:24.259: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:26.263: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:26:28.264: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 13 12:26:28.270: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 13 12:26:28.276: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 13 12:26:30.315: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 13 12:26:30.315: INFO: Going to poll 192.168.132.20 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 13 12:26:30.318: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.132.20:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9834 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:26:30.318: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:26:30.319: INFO: ExecWithOptions: Clientset creation
Aug 13 12:26:30.319: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9834/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.132.20%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 13 12:26:30.406: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 13 12:26:30.406: INFO: Going to poll 192.168.74.105 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 13 12:26:30.409: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.74.105:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9834 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:26:30.409: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:26:30.410: INFO: ExecWithOptions: Clientset creation
Aug 13 12:26:30.410: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9834/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.74.105%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 13 12:26:30.464: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 13 12:26:30.464: INFO: Going to poll 192.168.176.31 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 13 12:26:30.468: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.176.31:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-9834 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:26:30.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:26:30.469: INFO: ExecWithOptions: Clientset creation
Aug 13 12:26:30.469: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9834/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.176.31%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 13 12:26:30.528: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 13 12:26:30.528: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-9834" for this suite.

• [SLOW TEST:24.486 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":111,"skipped":1963,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:26:30.540: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 13 12:26:30.682: INFO: Waiting up to 5m0s for pod "pod-06d7fce6-ab6e-49a3-9524-8744048a1d13" in namespace "emptydir-7105" to be "Succeeded or Failed"
Aug 13 12:26:30.685: INFO: Pod "pod-06d7fce6-ab6e-49a3-9524-8744048a1d13": Phase="Pending", Reason="", readiness=false. Elapsed: 3.10149ms
Aug 13 12:26:32.695: INFO: Pod "pod-06d7fce6-ab6e-49a3-9524-8744048a1d13": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013479843s
Aug 13 12:26:34.702: INFO: Pod "pod-06d7fce6-ab6e-49a3-9524-8744048a1d13": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020203278s
STEP: Saw pod success
Aug 13 12:26:34.702: INFO: Pod "pod-06d7fce6-ab6e-49a3-9524-8744048a1d13" satisfied condition "Succeeded or Failed"
Aug 13 12:26:34.706: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-06d7fce6-ab6e-49a3-9524-8744048a1d13 container test-container: <nil>
STEP: delete the pod
Aug 13 12:26:34.724: INFO: Waiting for pod pod-06d7fce6-ab6e-49a3-9524-8744048a1d13 to disappear
Aug 13 12:26:34.726: INFO: Pod pod-06d7fce6-ab6e-49a3-9524-8744048a1d13 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:26:34.726: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7105" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":112,"skipped":1971,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:26:34.736: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4762
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 13 12:26:34.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4762" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":113,"skipped":1997,"failed":0}
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:26:34.905: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-4184
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:26:35.055: INFO: The status of Pod pod-secrets-6e4a1e48-d3fb-4a2c-8e8d-236962ea789c is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:26:37.064: INFO: The status of Pod pod-secrets-6e4a1e48-d3fb-4a2c-8e8d-236962ea789c is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug 13 12:26:37.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-4184" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":114,"skipped":2004,"failed":0}
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:26:37.101: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-5450
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Aug 13 12:26:37.235: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:26:39.466: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:26:48.405: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5450" for this suite.

• [SLOW TEST:11.320 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":115,"skipped":2008,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:26:48.423: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8168
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-4dde2751-9aef-4e31-9091-e7c6b66af0e5
STEP: Creating a pod to test consume secrets
Aug 13 12:26:48.566: INFO: Waiting up to 5m0s for pod "pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474" in namespace "secrets-8168" to be "Succeeded or Failed"
Aug 13 12:26:48.571: INFO: Pod "pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474": Phase="Pending", Reason="", readiness=false. Elapsed: 5.3533ms
Aug 13 12:26:50.579: INFO: Pod "pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013045082s
Aug 13 12:26:52.589: INFO: Pod "pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023866s
STEP: Saw pod success
Aug 13 12:26:52.589: INFO: Pod "pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474" satisfied condition "Succeeded or Failed"
Aug 13 12:26:52.593: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474 container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:26:52.610: INFO: Waiting for pod pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474 to disappear
Aug 13 12:26:52.614: INFO: Pod pod-secrets-53ad2b59-13d8-4c57-a6ce-8fb18722e474 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:26:52.614: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8168" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":116,"skipped":2070,"failed":0}
SSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:26:52.625: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8999
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:27:08.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8999" for this suite.

• [SLOW TEST:16.358 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":117,"skipped":2073,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:27:08.982: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-5778
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Aug 13 12:27:29.245: INFO: EndpointSlice for Service endpointslice-5778/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 13 12:27:39.270: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-5778" for this suite.

• [SLOW TEST:30.301 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":118,"skipped":2087,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:27:39.283: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2860
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-219dea82-3222-47d0-8577-f437c4aa1638
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:27:39.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2860" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":119,"skipped":2116,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:27:39.428: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5690
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:27:52.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5690" for this suite.

• [SLOW TEST:13.239 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":120,"skipped":2133,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:27:52.668: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3287
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:27:53.226: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:27:56.254: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:27:56.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3287" for this suite.
STEP: Destroying namespace "webhook-3287-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":121,"skipped":2153,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:27:56.442: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4553
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-885d8171-29f0-4a02-a164-06ce8a6c9b53
STEP: Creating a pod to test consume configMaps
Aug 13 12:27:56.593: INFO: Waiting up to 5m0s for pod "pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5" in namespace "configmap-4553" to be "Succeeded or Failed"
Aug 13 12:27:56.596: INFO: Pod "pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.508369ms
Aug 13 12:27:58.604: INFO: Pod "pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010624009s
Aug 13 12:28:00.612: INFO: Pod "pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018456677s
STEP: Saw pod success
Aug 13 12:28:00.612: INFO: Pod "pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5" satisfied condition "Succeeded or Failed"
Aug 13 12:28:00.615: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:28:00.636: INFO: Waiting for pod pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5 to disappear
Aug 13 12:28:00.638: INFO: Pod pod-configmaps-fd604d73-0d73-483a-b2a5-73e0065ac4c5 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:28:00.638: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4553" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":122,"skipped":2172,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:28:00.649: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7269
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Aug 13 12:28:00.787: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:28:02.970: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:28:12.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7269" for this suite.

• [SLOW TEST:12.322 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":123,"skipped":2183,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:28:12.971: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-7799
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Aug 13 12:28:13.479: INFO: Pod name wrapped-volume-race-a3aba83c-a86c-483d-a10f-c10fc0f27e50: Found 4 pods out of 5
Aug 13 12:28:18.485: INFO: Pod name wrapped-volume-race-a3aba83c-a86c-483d-a10f-c10fc0f27e50: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-a3aba83c-a86c-483d-a10f-c10fc0f27e50 in namespace emptydir-wrapper-7799, will wait for the garbage collector to delete the pods
Aug 13 12:28:28.567: INFO: Deleting ReplicationController wrapped-volume-race-a3aba83c-a86c-483d-a10f-c10fc0f27e50 took: 6.641465ms
Aug 13 12:28:28.767: INFO: Terminating ReplicationController wrapped-volume-race-a3aba83c-a86c-483d-a10f-c10fc0f27e50 pods took: 200.667682ms
STEP: Creating RC which spawns configmap-volume pods
Aug 13 12:28:32.189: INFO: Pod name wrapped-volume-race-4fd2cc08-cb09-472f-8f13-640c0e26039d: Found 0 pods out of 5
Aug 13 12:28:37.197: INFO: Pod name wrapped-volume-race-4fd2cc08-cb09-472f-8f13-640c0e26039d: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-4fd2cc08-cb09-472f-8f13-640c0e26039d in namespace emptydir-wrapper-7799, will wait for the garbage collector to delete the pods
Aug 13 12:28:47.281: INFO: Deleting ReplicationController wrapped-volume-race-4fd2cc08-cb09-472f-8f13-640c0e26039d took: 7.368784ms
Aug 13 12:28:47.482: INFO: Terminating ReplicationController wrapped-volume-race-4fd2cc08-cb09-472f-8f13-640c0e26039d pods took: 200.400401ms
STEP: Creating RC which spawns configmap-volume pods
Aug 13 12:28:50.506: INFO: Pod name wrapped-volume-race-7d0a54dc-b767-47e2-ac92-73cc61c88aec: Found 0 pods out of 5
Aug 13 12:28:55.517: INFO: Pod name wrapped-volume-race-7d0a54dc-b767-47e2-ac92-73cc61c88aec: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-7d0a54dc-b767-47e2-ac92-73cc61c88aec in namespace emptydir-wrapper-7799, will wait for the garbage collector to delete the pods
Aug 13 12:29:07.608: INFO: Deleting ReplicationController wrapped-volume-race-7d0a54dc-b767-47e2-ac92-73cc61c88aec took: 6.524356ms
Aug 13 12:29:07.709: INFO: Terminating ReplicationController wrapped-volume-race-7d0a54dc-b767-47e2-ac92-73cc61c88aec pods took: 101.108819ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug 13 12:29:11.412: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-7799" for this suite.

• [SLOW TEST:58.454 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":124,"skipped":2197,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:29:11.425: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-7188
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:29:11.569: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Aug 13 12:29:11.576: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:11.576: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Aug 13 12:29:11.597: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:11.597: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:29:12.601: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:12.601: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:29:13.601: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 13 12:29:13.601: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Aug 13 12:29:13.620: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 13 12:29:13.620: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Aug 13 12:29:14.625: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:14.625: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Aug 13 12:29:14.635: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:14.635: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:29:15.640: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:15.640: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:29:16.642: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:16.642: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:29:17.639: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 13 12:29:17.639: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7188, will wait for the garbage collector to delete the pods
Aug 13 12:29:17.708: INFO: Deleting DaemonSet.extensions daemon-set took: 7.95575ms
Aug 13 12:29:17.808: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.289177ms
Aug 13 12:29:20.412: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:29:20.412: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 13 12:29:20.414: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15305"},"items":null}

Aug 13 12:29:20.417: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15305"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:29:20.439: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-7188" for this suite.

• [SLOW TEST:9.023 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":125,"skipped":2208,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:29:20.449: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2991
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:29:20.592: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c" in namespace "projected-2991" to be "Succeeded or Failed"
Aug 13 12:29:20.596: INFO: Pod "downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.289185ms
Aug 13 12:29:22.601: INFO: Pod "downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009822514s
Aug 13 12:29:24.606: INFO: Pod "downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014720933s
STEP: Saw pod success
Aug 13 12:29:24.606: INFO: Pod "downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c" satisfied condition "Succeeded or Failed"
Aug 13 12:29:24.609: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c container client-container: <nil>
STEP: delete the pod
Aug 13 12:29:24.634: INFO: Waiting for pod downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c to disappear
Aug 13 12:29:24.636: INFO: Pod downwardapi-volume-f7cdf3c1-a337-4129-94e8-936d6b82267c no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 12:29:24.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2991" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":126,"skipped":2223,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:29:24.645: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-4611
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Aug 13 12:29:30.825: INFO: 80 pods remaining
Aug 13 12:29:30.825: INFO: 80 pods has nil DeletionTimestamp
Aug 13 12:29:30.825: INFO: 
Aug 13 12:29:31.825: INFO: 70 pods remaining
Aug 13 12:29:31.825: INFO: 70 pods has nil DeletionTimestamp
Aug 13 12:29:31.825: INFO: 
Aug 13 12:29:32.829: INFO: 60 pods remaining
Aug 13 12:29:32.829: INFO: 60 pods has nil DeletionTimestamp
Aug 13 12:29:32.829: INFO: 
Aug 13 12:29:33.823: INFO: 40 pods remaining
Aug 13 12:29:33.823: INFO: 40 pods has nil DeletionTimestamp
Aug 13 12:29:33.823: INFO: 
Aug 13 12:29:34.825: INFO: 30 pods remaining
Aug 13 12:29:34.825: INFO: 30 pods has nil DeletionTimestamp
Aug 13 12:29:34.825: INFO: 
Aug 13 12:29:35.826: INFO: 20 pods remaining
Aug 13 12:29:35.826: INFO: 20 pods has nil DeletionTimestamp
Aug 13 12:29:35.826: INFO: 
STEP: Gathering metrics
W0813 12:29:36.826832      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 13 12:29:36.826: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 13 12:29:36.827: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-4611" for this suite.

• [SLOW TEST:12.195 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":127,"skipped":2240,"failed":0}
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:29:36.841: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-4513
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 13 12:29:36.985: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 13 12:29:46.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4513" for this suite.

• [SLOW TEST:9.600 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":128,"skipped":2248,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:29:46.442: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-3910
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-3910
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 13 12:29:46.567: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 13 12:29:46.603: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:29:48.609: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:29:50.612: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:29:52.612: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:29:54.611: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:29:56.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:29:58.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:30:00.613: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:30:02.611: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:30:04.612: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:30:06.610: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 12:30:08.610: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 13 12:30:08.616: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 13 12:30:08.622: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 13 12:30:10.647: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 13 12:30:10.647: INFO: Breadth first check of 192.168.132.53 on host 172.31.22.206...
Aug 13 12:30:10.651: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.176.14:9080/dial?request=hostname&protocol=http&host=192.168.132.53&port=8083&tries=1'] Namespace:pod-network-test-3910 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:30:10.651: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:30:10.651: INFO: ExecWithOptions: Clientset creation
Aug 13 12:30:10.651: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3910/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.176.14%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.132.53%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 13 12:30:10.751: INFO: Waiting for responses: map[]
Aug 13 12:30:10.751: INFO: reached 192.168.132.53 after 0/1 tries
Aug 13 12:30:10.751: INFO: Breadth first check of 192.168.74.76 on host 172.31.3.251...
Aug 13 12:30:10.755: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.176.14:9080/dial?request=hostname&protocol=http&host=192.168.74.76&port=8083&tries=1'] Namespace:pod-network-test-3910 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:30:10.755: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:30:10.756: INFO: ExecWithOptions: Clientset creation
Aug 13 12:30:10.756: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3910/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.176.14%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.74.76%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 13 12:30:10.845: INFO: Waiting for responses: map[]
Aug 13 12:30:10.845: INFO: reached 192.168.74.76 after 0/1 tries
Aug 13 12:30:10.845: INFO: Breadth first check of 192.168.176.12 on host 172.31.79.226...
Aug 13 12:30:10.849: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.176.14:9080/dial?request=hostname&protocol=http&host=192.168.176.12&port=8083&tries=1'] Namespace:pod-network-test-3910 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:30:10.849: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:30:10.849: INFO: ExecWithOptions: Clientset creation
Aug 13 12:30:10.849: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3910/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.176.14%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.176.12%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 13 12:30:10.921: INFO: Waiting for responses: map[]
Aug 13 12:30:10.921: INFO: reached 192.168.176.12 after 0/1 tries
Aug 13 12:30:10.921: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 13 12:30:10.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-3910" for this suite.

• [SLOW TEST:24.492 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":129,"skipped":2285,"failed":0}
S
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:30:10.934: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-6888
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 13 12:30:13.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-6888" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":130,"skipped":2286,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:30:13.122: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-318
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-37267512-2b3d-44dc-aae5-7fb1d4f4785d
STEP: Creating a pod to test consume configMaps
Aug 13 12:30:13.262: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe" in namespace "projected-318" to be "Succeeded or Failed"
Aug 13 12:30:13.267: INFO: Pod "pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe": Phase="Pending", Reason="", readiness=false. Elapsed: 5.230017ms
Aug 13 12:30:15.273: INFO: Pod "pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010756704s
Aug 13 12:30:17.277: INFO: Pod "pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014667544s
STEP: Saw pod success
Aug 13 12:30:17.277: INFO: Pod "pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe" satisfied condition "Succeeded or Failed"
Aug 13 12:30:17.281: INFO: Trying to get logs from node ip-172-31-3-251 pod pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:30:17.309: INFO: Waiting for pod pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe to disappear
Aug 13 12:30:17.311: INFO: Pod pod-projected-configmaps-ee4bf769-01c8-4d1a-9620-be8862fd43fe no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 12:30:17.312: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-318" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":131,"skipped":2410,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:30:17.321: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8702
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:30:18.270: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:30:21.291: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:30:21.299: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7910-crds.webhook.example.com via the AdmissionRegistration API
Aug 13 12:30:21.830: INFO: Waiting for webhook configuration to be ready...
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:30:24.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8702" for this suite.
STEP: Destroying namespace "webhook-8702-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.267 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":132,"skipped":2418,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:30:24.588: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2207
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:30:52.784: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2207" for this suite.

• [SLOW TEST:28.208 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":133,"skipped":2429,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:30:52.797: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2396
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug 13 12:30:52.930: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2396 create -f -'
Aug 13 12:30:53.750: INFO: stderr: ""
Aug 13 12:30:53.750: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 13 12:30:54.756: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 12:30:54.756: INFO: Found 0 / 1
Aug 13 12:30:55.755: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 12:30:55.755: INFO: Found 1 / 1
Aug 13 12:30:55.755: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Aug 13 12:30:55.759: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 12:30:55.759: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 13 12:30:55.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2396 patch pod agnhost-primary-gx59q -p {"metadata":{"annotations":{"x":"y"}}}'
Aug 13 12:30:55.820: INFO: stderr: ""
Aug 13 12:30:55.820: INFO: stdout: "pod/agnhost-primary-gx59q patched\n"
STEP: checking annotations
Aug 13 12:30:55.824: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 12:30:55.824: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:30:55.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2396" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":134,"skipped":2447,"failed":0}

------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:30:55.835: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-1403
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1403
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-1403
STEP: Waiting until pod test-pod will start running in namespace statefulset-1403
STEP: Creating statefulset with conflicting port in namespace statefulset-1403
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1403
Aug 13 12:30:58.014: INFO: Observed stateful pod in namespace: statefulset-1403, name: ss-0, uid: 476476f4-bb92-45ac-a1b2-55c2b6c1540d, status phase: Pending. Waiting for statefulset controller to delete.
Aug 13 12:30:58.033: INFO: Observed stateful pod in namespace: statefulset-1403, name: ss-0, uid: 476476f4-bb92-45ac-a1b2-55c2b6c1540d, status phase: Failed. Waiting for statefulset controller to delete.
Aug 13 12:30:58.048: INFO: Observed stateful pod in namespace: statefulset-1403, name: ss-0, uid: 476476f4-bb92-45ac-a1b2-55c2b6c1540d, status phase: Failed. Waiting for statefulset controller to delete.
Aug 13 12:30:58.052: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1403
STEP: Removing pod with conflicting port in namespace statefulset-1403
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1403 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 12:31:00.081: INFO: Deleting all statefulset in ns statefulset-1403
Aug 13 12:31:00.084: INFO: Scaling statefulset ss to 0
Aug 13 12:31:10.107: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 12:31:10.111: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 12:31:10.130: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1403" for this suite.

• [SLOW TEST:14.305 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":135,"skipped":2447,"failed":0}
S
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:10.140: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-4603
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821
Aug 13 12:31:10.282: INFO: Pod name my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821: Found 0 pods out of 1
Aug 13 12:31:15.287: INFO: Pod name my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821: Found 1 pods out of 1
Aug 13 12:31:15.287: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821" are running
Aug 13 12:31:15.291: INFO: Pod "my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821-4wlts" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:31:10 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:31:11 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:31:11 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:31:10 +0000 UTC Reason: Message:}])
Aug 13 12:31:15.291: INFO: Trying to dial the pod
Aug 13 12:31:20.304: INFO: Controller my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821: Got expected result from replica 1 [my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821-4wlts]: "my-hostname-basic-bf86ffe4-ac27-48e1-8a8c-9c498b2c6821-4wlts", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 13 12:31:20.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-4603" for this suite.

• [SLOW TEST:10.173 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":136,"skipped":2448,"failed":0}
SSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:20.313: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9241
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 13 12:31:20.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9241" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":137,"skipped":2451,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:20.457: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4629
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug 13 12:31:20.583: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:31:33.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4629" for this suite.

• [SLOW TEST:13.394 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":138,"skipped":2457,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:33.852: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8220
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Aug 13 12:31:33.980: INFO: Creating e2e-svc-a-p2lgm
Aug 13 12:31:33.988: INFO: Creating e2e-svc-b-prk54
Aug 13 12:31:34.001: INFO: Creating e2e-svc-c-p79fl
STEP: deleting service collection
Aug 13 12:31:34.055: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:31:34.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8220" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":139,"skipped":2491,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:34.069: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8849
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 13 12:31:34.222: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:31:34.222: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:31:34.225: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:31:34.225: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:31:35.232: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:31:35.232: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:31:35.236: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:31:35.236: INFO: Node ip-172-31-79-226 is running 0 daemon pod, expected 1
Aug 13 12:31:36.231: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:31:36.231: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:31:36.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:31:36.233: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Aug 13 12:31:36.265: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17761"},"items":null}

Aug 13 12:31:36.272: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17761"},"items":[{"metadata":{"name":"daemon-set-8lt5f","generateName":"daemon-set-","namespace":"daemonsets-8849","uid":"79a11919-b28f-4d2f-8672-6c7c6336e57e","resourceVersion":"17755","creationTimestamp":"2022-08-13T12:31:34Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"44f80b87-a326-4034-9093-366a6ea586bf","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-13T12:31:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"44f80b87-a326-4034-9093-366a6ea586bf\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-13T12:31:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.132.54\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-tmtdf","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-tmtdf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-22-206","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-22-206"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:34Z"}],"hostIP":"172.31.22.206","podIP":"192.168.132.54","podIPs":[{"ip":"192.168.132.54"}],"startTime":"2022-08-13T12:31:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-13T12:31:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://725819afb110cef479e6fb39e7d0689fbdb4d3ce2eeb1fd9b8fe37ccf103ac8f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-mfjhm","generateName":"daemon-set-","namespace":"daemonsets-8849","uid":"48f73aea-ecae-4829-85a2-8c6a2865af7b","resourceVersion":"17757","creationTimestamp":"2022-08-13T12:31:34Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"44f80b87-a326-4034-9093-366a6ea586bf","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-13T12:31:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"44f80b87-a326-4034-9093-366a6ea586bf\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-13T12:31:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.17\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-l6cmb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-l6cmb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-79-226","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-79-226"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:34Z"}],"hostIP":"172.31.79.226","podIP":"192.168.176.17","podIPs":[{"ip":"192.168.176.17"}],"startTime":"2022-08-13T12:31:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-13T12:31:35Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://cc67e0d702388af941cbf4ae54b5cb292befb91a2063534f766b5fb0cbed409e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-pxwwq","generateName":"daemon-set-","namespace":"daemonsets-8849","uid":"f036a1df-1380-426c-a69f-04d94cece0ca","resourceVersion":"17753","creationTimestamp":"2022-08-13T12:31:34Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"44f80b87-a326-4034-9093-366a6ea586bf","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-13T12:31:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"44f80b87-a326-4034-9093-366a6ea586bf\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-13T12:31:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.79\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-r7msk","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-r7msk","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-251","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-251"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:34Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-13T12:31:34Z"}],"hostIP":"172.31.3.251","podIP":"192.168.74.79","podIPs":[{"ip":"192.168.74.79"}],"startTime":"2022-08-13T12:31:34Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-13T12:31:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://59b9e01124af1d2f04845e24a88313ec27780e795efcf58053264c05a5a2a686","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:31:36.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8849" for this suite.
•{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":140,"skipped":2560,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:36.300: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7633
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-fba18ff1-2f43-42dc-9260-62103c0ae43f
STEP: Creating a pod to test consume configMaps
Aug 13 12:31:36.434: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843" in namespace "projected-7633" to be "Succeeded or Failed"
Aug 13 12:31:36.440: INFO: Pod "pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843": Phase="Pending", Reason="", readiness=false. Elapsed: 5.120506ms
Aug 13 12:31:38.444: INFO: Pod "pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009129601s
Aug 13 12:31:40.447: INFO: Pod "pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012835128s
STEP: Saw pod success
Aug 13 12:31:40.447: INFO: Pod "pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843" satisfied condition "Succeeded or Failed"
Aug 13 12:31:40.450: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:31:40.469: INFO: Waiting for pod pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843 to disappear
Aug 13 12:31:40.471: INFO: Pod pod-projected-configmaps-0ba3c3c7-9277-4d90-baf4-30e28e00b843 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 12:31:40.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7633" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":141,"skipped":2574,"failed":0}

------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:40.480: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-816
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-816/configmap-test-000ea3e4-0b78-4f05-b311-ab402fff8d25
STEP: Creating a pod to test consume configMaps
Aug 13 12:31:40.619: INFO: Waiting up to 5m0s for pod "pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797" in namespace "configmap-816" to be "Succeeded or Failed"
Aug 13 12:31:40.622: INFO: Pod "pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797": Phase="Pending", Reason="", readiness=false. Elapsed: 3.311031ms
Aug 13 12:31:42.627: INFO: Pod "pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008450682s
Aug 13 12:31:44.632: INFO: Pod "pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01341079s
STEP: Saw pod success
Aug 13 12:31:44.632: INFO: Pod "pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797" satisfied condition "Succeeded or Failed"
Aug 13 12:31:44.636: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797 container env-test: <nil>
STEP: delete the pod
Aug 13 12:31:44.651: INFO: Waiting for pod pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797 to disappear
Aug 13 12:31:44.654: INFO: Pod pod-configmaps-0d91c73b-ac1b-4b60-b9fd-25c527d4c797 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:31:44.654: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-816" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":142,"skipped":2574,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:44.664: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8383
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:31:44.797: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 13 12:31:46.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-8383 --namespace=crd-publish-openapi-8383 create -f -'
Aug 13 12:31:47.644: INFO: stderr: ""
Aug 13 12:31:47.644: INFO: stdout: "e2e-test-crd-publish-openapi-282-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 13 12:31:47.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-8383 --namespace=crd-publish-openapi-8383 delete e2e-test-crd-publish-openapi-282-crds test-cr'
Aug 13 12:31:47.734: INFO: stderr: ""
Aug 13 12:31:47.734: INFO: stdout: "e2e-test-crd-publish-openapi-282-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Aug 13 12:31:47.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-8383 --namespace=crd-publish-openapi-8383 apply -f -'
Aug 13 12:31:48.278: INFO: stderr: ""
Aug 13 12:31:48.278: INFO: stdout: "e2e-test-crd-publish-openapi-282-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 13 12:31:48.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-8383 --namespace=crd-publish-openapi-8383 delete e2e-test-crd-publish-openapi-282-crds test-cr'
Aug 13 12:31:48.337: INFO: stderr: ""
Aug 13 12:31:48.337: INFO: stdout: "e2e-test-crd-publish-openapi-282-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 13 12:31:48.337: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-8383 explain e2e-test-crd-publish-openapi-282-crds'
Aug 13 12:31:48.555: INFO: stderr: ""
Aug 13 12:31:48.555: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-282-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:31:50.656: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8383" for this suite.

• [SLOW TEST:6.007 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":143,"skipped":2601,"failed":0}
SSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:50.671: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9263
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:31:50.807: INFO: Waiting up to 5m0s for pod "downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626" in namespace "downward-api-9263" to be "Succeeded or Failed"
Aug 13 12:31:50.810: INFO: Pod "downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626": Phase="Pending", Reason="", readiness=false. Elapsed: 3.054107ms
Aug 13 12:31:52.816: INFO: Pod "downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008406063s
Aug 13 12:31:54.822: INFO: Pod "downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014370845s
STEP: Saw pod success
Aug 13 12:31:54.822: INFO: Pod "downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626" satisfied condition "Succeeded or Failed"
Aug 13 12:31:54.825: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626 container client-container: <nil>
STEP: delete the pod
Aug 13 12:31:54.840: INFO: Waiting for pod downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626 to disappear
Aug 13 12:31:54.843: INFO: Pod downwardapi-volume-1b05296a-9097-4d8a-be63-2738140f8626 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 12:31:54.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9263" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":144,"skipped":2604,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:54.853: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7503
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Aug 13 12:31:55.000: INFO: Waiting up to 5m0s for pod "pod-c558a451-3c96-4199-966b-b73c0ecfe428" in namespace "emptydir-7503" to be "Succeeded or Failed"
Aug 13 12:31:55.005: INFO: Pod "pod-c558a451-3c96-4199-966b-b73c0ecfe428": Phase="Pending", Reason="", readiness=false. Elapsed: 5.2021ms
Aug 13 12:31:57.011: INFO: Pod "pod-c558a451-3c96-4199-966b-b73c0ecfe428": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011060358s
Aug 13 12:31:59.017: INFO: Pod "pod-c558a451-3c96-4199-966b-b73c0ecfe428": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016688266s
STEP: Saw pod success
Aug 13 12:31:59.017: INFO: Pod "pod-c558a451-3c96-4199-966b-b73c0ecfe428" satisfied condition "Succeeded or Failed"
Aug 13 12:31:59.021: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-c558a451-3c96-4199-966b-b73c0ecfe428 container test-container: <nil>
STEP: delete the pod
Aug 13 12:31:59.035: INFO: Waiting for pod pod-c558a451-3c96-4199-966b-b73c0ecfe428 to disappear
Aug 13 12:31:59.038: INFO: Pod pod-c558a451-3c96-4199-966b-b73c0ecfe428 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:31:59.038: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7503" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":145,"skipped":2655,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:31:59.048: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:31:59.191: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-710cffb7-102c-488e-a7dc-317714e2cd15" in namespace "security-context-test-9927" to be "Succeeded or Failed"
Aug 13 12:31:59.206: INFO: Pod "busybox-readonly-false-710cffb7-102c-488e-a7dc-317714e2cd15": Phase="Pending", Reason="", readiness=false. Elapsed: 14.680275ms
Aug 13 12:32:01.216: INFO: Pod "busybox-readonly-false-710cffb7-102c-488e-a7dc-317714e2cd15": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024545285s
Aug 13 12:32:03.220: INFO: Pod "busybox-readonly-false-710cffb7-102c-488e-a7dc-317714e2cd15": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028618337s
Aug 13 12:32:03.220: INFO: Pod "busybox-readonly-false-710cffb7-102c-488e-a7dc-317714e2cd15" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 13 12:32:03.220: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9927" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":146,"skipped":2668,"failed":0}
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:32:03.229: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-7662
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Aug 13 12:32:03.367: INFO: Waiting up to 5m0s for pod "test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227" in namespace "svcaccounts-7662" to be "Succeeded or Failed"
Aug 13 12:32:03.372: INFO: Pod "test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227": Phase="Pending", Reason="", readiness=false. Elapsed: 4.962648ms
Aug 13 12:32:05.379: INFO: Pod "test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011532978s
Aug 13 12:32:07.386: INFO: Pod "test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01912416s
STEP: Saw pod success
Aug 13 12:32:07.386: INFO: Pod "test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227" satisfied condition "Succeeded or Failed"
Aug 13 12:32:07.389: INFO: Trying to get logs from node ip-172-31-79-226 pod test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:32:07.408: INFO: Waiting for pod test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227 to disappear
Aug 13 12:32:07.411: INFO: Pod test-pod-2d311bfb-937f-4c0f-b8a8-e59d34c4f227 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 13 12:32:07.411: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-7662" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":147,"skipped":2676,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:32:07.420: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9009
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 13 12:32:07.558: INFO: Waiting up to 5m0s for pod "pod-21c59e88-3cf6-4928-b2e8-26a1208e8131" in namespace "emptydir-9009" to be "Succeeded or Failed"
Aug 13 12:32:07.562: INFO: Pod "pod-21c59e88-3cf6-4928-b2e8-26a1208e8131": Phase="Pending", Reason="", readiness=false. Elapsed: 4.603884ms
Aug 13 12:32:09.568: INFO: Pod "pod-21c59e88-3cf6-4928-b2e8-26a1208e8131": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010709658s
Aug 13 12:32:11.578: INFO: Pod "pod-21c59e88-3cf6-4928-b2e8-26a1208e8131": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020700766s
STEP: Saw pod success
Aug 13 12:32:11.578: INFO: Pod "pod-21c59e88-3cf6-4928-b2e8-26a1208e8131" satisfied condition "Succeeded or Failed"
Aug 13 12:32:11.582: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-21c59e88-3cf6-4928-b2e8-26a1208e8131 container test-container: <nil>
STEP: delete the pod
Aug 13 12:32:11.603: INFO: Waiting for pod pod-21c59e88-3cf6-4928-b2e8-26a1208e8131 to disappear
Aug 13 12:32:11.607: INFO: Pod pod-21c59e88-3cf6-4928-b2e8-26a1208e8131 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:32:11.607: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9009" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":148,"skipped":2697,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:32:11.619: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3355
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-f0a7283c-bbe8-4392-92cb-8c14974f2633
STEP: Creating a pod to test consume secrets
Aug 13 12:32:11.762: INFO: Waiting up to 5m0s for pod "pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a" in namespace "secrets-3355" to be "Succeeded or Failed"
Aug 13 12:32:11.767: INFO: Pod "pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.142135ms
Aug 13 12:32:13.772: INFO: Pod "pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010354373s
Aug 13 12:32:15.779: INFO: Pod "pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017484407s
STEP: Saw pod success
Aug 13 12:32:15.779: INFO: Pod "pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a" satisfied condition "Succeeded or Failed"
Aug 13 12:32:15.783: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:32:15.800: INFO: Waiting for pod pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a to disappear
Aug 13 12:32:15.803: INFO: Pod pod-secrets-cd7fc938-2109-43fe-b596-eda30aa8f60a no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:32:15.803: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3355" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":149,"skipped":2775,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:32:15.817: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5828
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:32:16.555: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:32:19.576: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:32:19.581: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5437-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:32:22.746: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5828" for this suite.
STEP: Destroying namespace "webhook-5828-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.018 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":150,"skipped":2780,"failed":0}
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:32:22.835: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-2127
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 13 12:32:26.134: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 13 12:32:26.147: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-2127" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":151,"skipped":2781,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:32:26.157: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3865
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 13 12:32:26.310: INFO: Waiting up to 5m0s for pod "pod-bd20cf2f-1471-4995-a5b1-05da8874500b" in namespace "emptydir-3865" to be "Succeeded or Failed"
Aug 13 12:32:26.346: INFO: Pod "pod-bd20cf2f-1471-4995-a5b1-05da8874500b": Phase="Pending", Reason="", readiness=false. Elapsed: 35.703514ms
Aug 13 12:32:28.350: INFO: Pod "pod-bd20cf2f-1471-4995-a5b1-05da8874500b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.03927569s
Aug 13 12:32:30.358: INFO: Pod "pod-bd20cf2f-1471-4995-a5b1-05da8874500b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.04755695s
STEP: Saw pod success
Aug 13 12:32:30.358: INFO: Pod "pod-bd20cf2f-1471-4995-a5b1-05da8874500b" satisfied condition "Succeeded or Failed"
Aug 13 12:32:30.360: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-bd20cf2f-1471-4995-a5b1-05da8874500b container test-container: <nil>
STEP: delete the pod
Aug 13 12:32:30.379: INFO: Waiting for pod pod-bd20cf2f-1471-4995-a5b1-05da8874500b to disappear
Aug 13 12:32:30.381: INFO: Pod pod-bd20cf2f-1471-4995-a5b1-05da8874500b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:32:30.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3865" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":152,"skipped":2795,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:32:30.393: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-842
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:32:30.539: INFO: created pod
Aug 13 12:32:30.539: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-842" to be "Succeeded or Failed"
Aug 13 12:32:30.546: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 6.916578ms
Aug 13 12:32:32.550: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011490429s
Aug 13 12:32:34.556: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017379344s
STEP: Saw pod success
Aug 13 12:32:34.556: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Aug 13 12:33:04.556: INFO: polling logs
Aug 13 12:33:04.562: INFO: Pod logs: 
I0813 12:32:31.299788       1 log.go:195] OK: Got token
I0813 12:32:31.299812       1 log.go:195] validating with in-cluster discovery
I0813 12:32:31.300091       1 log.go:195] OK: got issuer https://kubernetes.default.svc
I0813 12:32:31.300128       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-842:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1660394550, NotBefore:1660393950, IssuedAt:1660393950, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-842", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"900361b2-be76-4e9f-94ab-64b6b66418ad"}}}
I0813 12:32:31.317204       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0813 12:32:31.322112       1 log.go:195] OK: Validated signature on JWT
I0813 12:32:31.322195       1 log.go:195] OK: Got valid claims from token!
I0813 12:32:31.322219       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-842:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1660394550, NotBefore:1660393950, IssuedAt:1660393950, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-842", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"900361b2-be76-4e9f-94ab-64b6b66418ad"}}}

Aug 13 12:33:04.562: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 13 12:33:04.570: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-842" for this suite.

• [SLOW TEST:34.188 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":153,"skipped":2809,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:04.582: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-2264
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 13 12:33:04.717: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 13 12:33:04.724: INFO: Waiting for terminating namespaces to be deleted...
Aug 13 12:33:04.727: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-22-206 before test
Aug 13 12:33:04.731: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sgrjp from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 13 12:33:04.731: INFO: nginx-ingress-controller-kubernetes-worker-bvm57 from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:33:04.731: INFO: calico-kube-controllers-5f6d88cdb-fjtjt from kube-system started at 2022-08-13 11:48:50 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 13 12:33:04.731: INFO: coredns-86c98bfcdb-ctwtg from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container coredns ready: true, restart count 0
Aug 13 12:33:04.731: INFO: kube-state-metrics-5cdbfd47b4-pwbt8 from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 13 12:33:04.731: INFO: metrics-server-v0.5.2-6bfd958b56-82nrj from kube-system started at 2022-08-13 11:48:50 +0000 UTC (2 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container metrics-server ready: true, restart count 0
Aug 13 12:33:04.731: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 13 12:33:04.731: INFO: dashboard-metrics-scraper-8669b59d4f-fmmvg from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 13 12:33:04.731: INFO: kubernetes-dashboard-585fc6bc87-pvfzw from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 13 12:33:04.731: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-n5n8f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:33:04.731: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:33:04.731: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 12:33:04.731: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-3-251 before test
Aug 13 12:33:04.735: INFO: nginx-ingress-controller-kubernetes-worker-52j7t from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:55 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.735: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:33:04.735: INFO: sonobuoy-e2e-job-d7ed694d834d4e6f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:33:04.735: INFO: 	Container e2e ready: true, restart count 0
Aug 13 12:33:04.735: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:33:04.736: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-kcvmg from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:33:04.736: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:33:04.736: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 12:33:04.736: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-79-226 before test
Aug 13 12:33:04.741: INFO: nginx-ingress-controller-kubernetes-worker-8vxtn from ingress-nginx-kubernetes-worker started at 2022-08-13 12:15:52 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.741: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 12:33:04.741: INFO: sonobuoy from sonobuoy started at 2022-08-13 11:53:59 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.741: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 13 12:33:04.741: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-bdtv7 from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 12:33:04.741: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 12:33:04.741: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 12:33:04.741: INFO: oidc-discovery-validator from svcaccounts-842 started at 2022-08-13 12:32:30 +0000 UTC (1 container statuses recorded)
Aug 13 12:33:04.741: INFO: 	Container oidc-discovery-validator ready: false, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.170ae788306619cf], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:33:05.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-2264" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":154,"skipped":2828,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:05.774: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3456
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:33:05.922: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e" in namespace "downward-api-3456" to be "Succeeded or Failed"
Aug 13 12:33:05.926: INFO: Pod "downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.328393ms
Aug 13 12:33:07.931: INFO: Pod "downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008294427s
Aug 13 12:33:09.938: INFO: Pod "downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016099821s
STEP: Saw pod success
Aug 13 12:33:09.938: INFO: Pod "downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e" satisfied condition "Succeeded or Failed"
Aug 13 12:33:09.941: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e container client-container: <nil>
STEP: delete the pod
Aug 13 12:33:09.956: INFO: Waiting for pod downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e to disappear
Aug 13 12:33:09.959: INFO: Pod downwardapi-volume-d75d0226-4649-4f8c-843e-461df4290d4e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 12:33:09.959: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3456" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":155,"skipped":2852,"failed":0}
S
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:09.967: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1192
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-1192
STEP: creating service affinity-nodeport in namespace services-1192
STEP: creating replication controller affinity-nodeport in namespace services-1192
I0813 12:33:10.125139      18 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1192, replica count: 3
I0813 12:33:13.176210      18 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 12:33:13.187: INFO: Creating new exec pod
Aug 13 12:33:16.207: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-1192 exec execpod-affinitygvtd2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Aug 13 12:33:16.343: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Aug 13 12:33:16.343: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:33:16.343: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-1192 exec execpod-affinitygvtd2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.103 80'
Aug 13 12:33:16.481: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.103 80\nConnection to 10.152.183.103 80 port [tcp/http] succeeded!\n"
Aug 13 12:33:16.481: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:33:16.482: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-1192 exec execpod-affinitygvtd2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.206 31633'
Aug 13 12:33:16.584: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.22.206 31633\nConnection to 172.31.22.206 31633 port [tcp/*] succeeded!\n"
Aug 13 12:33:16.584: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:33:16.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-1192 exec execpod-affinitygvtd2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.226 31633'
Aug 13 12:33:16.699: INFO: stderr: "+ + ncecho -v hostName\n -t -w 2 172.31.79.226 31633\nConnection to 172.31.79.226 31633 port [tcp/*] succeeded!\n"
Aug 13 12:33:16.699: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 12:33:16.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-1192 exec execpod-affinitygvtd2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.206:31633/ ; done'
Aug 13 12:33:16.876: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:31633/\n"
Aug 13 12:33:16.876: INFO: stdout: "\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs\naffinity-nodeport-s5czs"
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Received response from host: affinity-nodeport-s5czs
Aug 13 12:33:16.876: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-1192, will wait for the garbage collector to delete the pods
Aug 13 12:33:16.949: INFO: Deleting ReplicationController affinity-nodeport took: 5.955856ms
Aug 13 12:33:17.050: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.14867ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:33:19.373: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1192" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.415 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":156,"skipped":2853,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:19.382: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-1335
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:33:19.543: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"4ecaeb77-93bb-4e5e-a0ee-170d571d3d25", Controller:(*bool)(0xc004f0f3d6), BlockOwnerDeletion:(*bool)(0xc004f0f3d7)}}
Aug 13 12:33:19.556: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"66ae78e6-4939-41c7-b64b-e90add5008d1", Controller:(*bool)(0xc004f0f676), BlockOwnerDeletion:(*bool)(0xc004f0f677)}}
Aug 13 12:33:19.561: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"93682980-a2a6-4d01-b84b-0916a8a16d55", Controller:(*bool)(0xc004f0f94e), BlockOwnerDeletion:(*bool)(0xc004f0f94f)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 13 12:33:24.594: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1335" for this suite.

• [SLOW TEST:5.221 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":157,"skipped":2860,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:24.604: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2131
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 13 12:33:24.761: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:24.761: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:24.765: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:33:24.765: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:33:25.771: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:25.771: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:25.775: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:33:25.775: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 12:33:26.769: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:26.769: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:26.773: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:33:26.773: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Aug 13 12:33:26.789: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:26.789: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:26.795: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:33:26.795: INFO: Node ip-172-31-3-251 is running 0 daemon pod, expected 1
Aug 13 12:33:27.801: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:27.801: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:27.804: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 13 12:33:27.804: INFO: Node ip-172-31-3-251 is running 0 daemon pod, expected 1
Aug 13 12:33:28.799: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:28.799: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 12:33:28.802: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 12:33:28.802: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2131, will wait for the garbage collector to delete the pods
Aug 13 12:33:28.871: INFO: Deleting DaemonSet.extensions daemon-set took: 5.981676ms
Aug 13 12:33:28.971: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.272863ms
Aug 13 12:33:31.379: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 12:33:31.380: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 13 12:33:31.382: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18900"},"items":null}

Aug 13 12:33:31.386: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18900"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:33:31.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2131" for this suite.

• [SLOW TEST:6.802 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":158,"skipped":2868,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:31.407: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3603
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:33:31.543: INFO: Pod name rollover-pod: Found 0 pods out of 1
Aug 13 12:33:36.550: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 13 12:33:36.550: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Aug 13 12:33:38.554: INFO: Creating deployment "test-rollover-deployment"
Aug 13 12:33:38.562: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Aug 13 12:33:40.570: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Aug 13 12:33:40.576: INFO: Ensure that both replica sets have 1 created replica
Aug 13 12:33:40.581: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Aug 13 12:33:40.591: INFO: Updating deployment test-rollover-deployment
Aug 13 12:33:40.591: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Aug 13 12:33:42.598: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Aug 13 12:33:42.604: INFO: Make sure deployment "test-rollover-deployment" is complete
Aug 13 12:33:42.612: INFO: all replica sets need to contain the pod-template-hash label
Aug 13 12:33:42.612: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:33:44.620: INFO: all replica sets need to contain the pod-template-hash label
Aug 13 12:33:44.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:33:46.622: INFO: all replica sets need to contain the pod-template-hash label
Aug 13 12:33:46.622: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:33:48.621: INFO: all replica sets need to contain the pod-template-hash label
Aug 13 12:33:48.621: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:33:50.620: INFO: all replica sets need to contain the pod-template-hash label
Aug 13 12:33:50.620: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 33, 42, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 33, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 13 12:33:52.621: INFO: 
Aug 13 12:33:52.621: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 12:33:52.629: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-3603  848e28a0-b7d8-469d-b059-e50f57e0cc1a 19063 2 2022-08-13 12:33:38 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-13 12:33:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:33:52 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001240dc8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-13 12:33:38 +0000 UTC,LastTransitionTime:2022-08-13 12:33:38 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-08-13 12:33:52 +0000 UTC,LastTransitionTime:2022-08-13 12:33:38 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 13 12:33:52.632: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-3603  8326fc8f-95bf-475e-95ed-683902efd8f7 19053 2 2022-08-13 12:33:40 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 848e28a0-b7d8-469d-b059-e50f57e0cc1a 0xc001241287 0xc001241288}] []  [{kube-controller-manager Update apps/v1 2022-08-13 12:33:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"848e28a0-b7d8-469d-b059-e50f57e0cc1a\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:33:52 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001241338 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:33:52.632: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Aug 13 12:33:52.633: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-3603  dfe55d0f-89cc-4b84-8e5d-93c82101d732 19062 2 2022-08-13 12:33:31 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 848e28a0-b7d8-469d-b059-e50f57e0cc1a 0xc001241147 0xc001241148}] []  [{e2e.test Update apps/v1 2022-08-13 12:33:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:33:52 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"848e28a0-b7d8-469d-b059-e50f57e0cc1a\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:33:52 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc001241208 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:33:52.633: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-3603  acd0c0c8-ffa6-4495-be47-b6a0907b0cd5 19015 2 2022-08-13 12:33:38 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 848e28a0-b7d8-469d-b059-e50f57e0cc1a 0xc0012413a0 0xc0012413a1}] []  [{kube-controller-manager Update apps/v1 2022-08-13 12:33:38 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"848e28a0-b7d8-469d-b059-e50f57e0cc1a\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:33:40 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001241448 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:33:52.636: INFO: Pod "test-rollover-deployment-779c67f4f8-x9jtp" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-x9jtp test-rollover-deployment-779c67f4f8- deployment-3603  641d2856-fd21-4583-83a9-2d61a70aa1e8 19032 0 2022-08-13 12:33:40 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 8326fc8f-95bf-475e-95ed-683902efd8f7 0xc0012419b7 0xc0012419b8}] []  [{kube-controller-manager Update v1 2022-08-13 12:33:40 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8326fc8f-95bf-475e-95ed-683902efd8f7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 12:33:42 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.86\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2tzlf,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2tzlf,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:33:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:33:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:33:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:33:40 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.86,StartTime:2022-08-13 12:33:40 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 12:33:41 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://578955e5bd20e5c69c2b6203f3a3eb577e5d32a2312161a1b5a419287007d2ad,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.86,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 12:33:52.636: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3603" for this suite.

• [SLOW TEST:21.239 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":159,"skipped":2885,"failed":0}
SSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:52.645: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9526
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-1972
STEP: Creating secret with name secret-test-ffd4c123-1225-4ac3-99b8-0c8fc17e1c2d
STEP: Creating a pod to test consume secrets
Aug 13 12:33:52.915: INFO: Waiting up to 5m0s for pod "pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687" in namespace "secrets-9526" to be "Succeeded or Failed"
Aug 13 12:33:52.920: INFO: Pod "pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687": Phase="Pending", Reason="", readiness=false. Elapsed: 5.250935ms
Aug 13 12:33:54.926: INFO: Pod "pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01088522s
Aug 13 12:33:56.932: INFO: Pod "pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016854144s
STEP: Saw pod success
Aug 13 12:33:56.932: INFO: Pod "pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687" satisfied condition "Succeeded or Failed"
Aug 13 12:33:56.934: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687 container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:33:56.951: INFO: Waiting for pod pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687 to disappear
Aug 13 12:33:56.955: INFO: Pod pod-secrets-bf38dcb8-dd96-4e58-a5d6-fc4f0cacf687 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:33:56.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9526" for this suite.
STEP: Destroying namespace "secret-namespace-1972" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":160,"skipped":2891,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:56.971: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-3128
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 13 12:33:59.146: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-3128" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":161,"skipped":2921,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:59.157: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-4307
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Aug 13 12:33:59.297: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 13 12:33:59.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-4307" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":162,"skipped":2938,"failed":0}
SSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:33:59.308: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1018
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 13 12:33:59.443: INFO: Waiting up to 5m0s for pod "downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120" in namespace "downward-api-1018" to be "Succeeded or Failed"
Aug 13 12:33:59.448: INFO: Pod "downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120": Phase="Pending", Reason="", readiness=false. Elapsed: 4.516865ms
Aug 13 12:34:01.455: INFO: Pod "downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011835482s
Aug 13 12:34:03.459: INFO: Pod "downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016034371s
STEP: Saw pod success
Aug 13 12:34:03.459: INFO: Pod "downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120" satisfied condition "Succeeded or Failed"
Aug 13 12:34:03.462: INFO: Trying to get logs from node ip-172-31-3-251 pod downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120 container dapi-container: <nil>
STEP: delete the pod
Aug 13 12:34:03.487: INFO: Waiting for pod downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120 to disappear
Aug 13 12:34:03.489: INFO: Pod downward-api-1f429f8d-5e5f-43a4-a68b-c128b6420120 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 13 12:34:03.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1018" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":163,"skipped":2943,"failed":0}
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:03.497: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-3607
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 13 12:34:03.642: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:34:05.649: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 13 12:34:05.662: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:34:07.669: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 13 12:34:07.679: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 13 12:34:07.683: INFO: Pod pod-with-prestop-exec-hook still exists
Aug 13 12:34:09.683: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 13 12:34:09.687: INFO: Pod pod-with-prestop-exec-hook still exists
Aug 13 12:34:11.684: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 13 12:34:11.687: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 13 12:34:11.707: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3607" for this suite.

• [SLOW TEST:8.221 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":164,"skipped":2947,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:11.719: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7973
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Aug 13 12:34:11.864: INFO: Pod name pod-release: Found 0 pods out of 1
Aug 13 12:34:16.877: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 13 12:34:16.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7973" for this suite.

• [SLOW TEST:5.198 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":165,"skipped":3004,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:16.918: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2107
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 13 12:34:17.071: INFO: Waiting up to 5m0s for pod "downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307" in namespace "downward-api-2107" to be "Succeeded or Failed"
Aug 13 12:34:17.081: INFO: Pod "downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307": Phase="Pending", Reason="", readiness=false. Elapsed: 10.388689ms
Aug 13 12:34:19.086: INFO: Pod "downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01513349s
Aug 13 12:34:21.093: INFO: Pod "downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021982196s
STEP: Saw pod success
Aug 13 12:34:21.093: INFO: Pod "downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307" satisfied condition "Succeeded or Failed"
Aug 13 12:34:21.095: INFO: Trying to get logs from node ip-172-31-79-226 pod downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307 container dapi-container: <nil>
STEP: delete the pod
Aug 13 12:34:21.110: INFO: Waiting for pod downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307 to disappear
Aug 13 12:34:21.114: INFO: Pod downward-api-22f5b5b7-1640-49fe-b9b2-2af83c81c307 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 13 12:34:21.114: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2107" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":166,"skipped":3017,"failed":0}
SSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:21.125: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-828
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:34:32.390: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-828" for this suite.

• [SLOW TEST:11.276 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":167,"skipped":3020,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:32.402: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-3800
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:34:32.536: INFO: Got root ca configmap in namespace "svcaccounts-3800"
Aug 13 12:34:32.542: INFO: Deleted root ca configmap in namespace "svcaccounts-3800"
STEP: waiting for a new root ca configmap created
Aug 13 12:34:33.047: INFO: Recreated root ca configmap in namespace "svcaccounts-3800"
Aug 13 12:34:33.053: INFO: Updated root ca configmap in namespace "svcaccounts-3800"
STEP: waiting for the root ca configmap reconciled
Aug 13 12:34:33.558: INFO: Reconciled root ca configmap in namespace "svcaccounts-3800"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 13 12:34:33.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-3800" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":168,"skipped":3072,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:33.569: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Aug 13 12:34:33.705: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-6506 create -f -'
Aug 13 12:34:35.034: INFO: stderr: ""
Aug 13 12:34:35.034: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Aug 13 12:34:35.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-6506 diff -f -'
Aug 13 12:34:35.238: INFO: rc: 1
Aug 13 12:34:35.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-6506 delete -f -'
Aug 13 12:34:35.297: INFO: stderr: ""
Aug 13 12:34:35.297: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:34:35.297: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6506" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":169,"skipped":3079,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:35.314: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-8691
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Aug 13 12:34:35.457: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8691  63bbeedc-9dc1-4c95-8b22-d841a3f4ab48 19566 0 2022-08-13 12:34:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-13 12:34:35 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 12:34:35.457: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8691  63bbeedc-9dc1-4c95-8b22-d841a3f4ab48 19567 0 2022-08-13 12:34:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-13 12:34:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Aug 13 12:34:35.471: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8691  63bbeedc-9dc1-4c95-8b22-d841a3f4ab48 19568 0 2022-08-13 12:34:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-13 12:34:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 12:34:35.471: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8691  63bbeedc-9dc1-4c95-8b22-d841a3f4ab48 19569 0 2022-08-13 12:34:35 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-13 12:34:35 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 13 12:34:35.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-8691" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":170,"skipped":3087,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:35.480: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5585
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:34:35.619: INFO: The status of Pod busybox-host-aliases14a0edad-c988-4d16-9923-f682af20fb0b is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:34:37.625: INFO: The status of Pod busybox-host-aliases14a0edad-c988-4d16-9923-f682af20fb0b is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 13 12:34:37.634: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5585" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":171,"skipped":3099,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:37.646: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5590
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-97fc211a-f24a-48ab-923a-c29640f09ca5
STEP: Creating a pod to test consume configMaps
Aug 13 12:34:37.784: INFO: Waiting up to 5m0s for pod "pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561" in namespace "configmap-5590" to be "Succeeded or Failed"
Aug 13 12:34:37.787: INFO: Pod "pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561": Phase="Pending", Reason="", readiness=false. Elapsed: 3.006527ms
Aug 13 12:34:39.794: INFO: Pod "pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009776515s
Aug 13 12:34:41.799: INFO: Pod "pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014641749s
STEP: Saw pod success
Aug 13 12:34:41.799: INFO: Pod "pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561" satisfied condition "Succeeded or Failed"
Aug 13 12:34:41.801: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:34:41.833: INFO: Waiting for pod pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561 to disappear
Aug 13 12:34:41.836: INFO: Pod pod-configmaps-ffac5e78-6107-41ea-811c-e937eea6f561 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:34:41.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5590" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":172,"skipped":3122,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:41.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9562
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Aug 13 12:34:41.991: INFO: Pod name sample-pod: Found 0 pods out of 3
Aug 13 12:34:46.999: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Aug 13 12:34:47.002: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 13 12:34:47.033: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9562" for this suite.

• [SLOW TEST:5.210 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":173,"skipped":3152,"failed":0}
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:47.066: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-8025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Aug 13 12:34:47.306: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-8025" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":174,"skipped":3153,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:47.321: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7116
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-7dfa0cb4-efb4-4c0d-a5fe-09a3c02dbaae
STEP: Creating the pod
Aug 13 12:34:47.482: INFO: The status of Pod pod-configmaps-1f67f590-4188-480d-bb12-14d15a84a5af is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:34:49.487: INFO: The status of Pod pod-configmaps-1f67f590-4188-480d-bb12-14d15a84a5af is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-7dfa0cb4-efb4-4c0d-a5fe-09a3c02dbaae
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:34:51.525: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7116" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":175,"skipped":3163,"failed":0}

------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:34:51.550: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-9545
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 13 12:34:51.707: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 13 12:35:51.725: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug 13 12:35:51.752: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 13 12:35:51.761: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 13 12:35:51.779: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 13 12:35:51.787: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 13 12:35:51.804: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 13 12:35:51.812: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:36:03.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-9545" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:72.387 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":176,"skipped":3163,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:36:03.938: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3518
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 13 12:38:02.100: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3518" for this suite.

• [SLOW TEST:118.171 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":177,"skipped":3204,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:02.110: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6743
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 13 12:38:04.968: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6743" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":178,"skipped":3221,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:05.069: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6071
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-589042eb-fe53-4e34-b658-444499738b5b
STEP: Creating a pod to test consume configMaps
Aug 13 12:38:05.216: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79" in namespace "projected-6071" to be "Succeeded or Failed"
Aug 13 12:38:05.221: INFO: Pod "pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79": Phase="Pending", Reason="", readiness=false. Elapsed: 4.534932ms
Aug 13 12:38:07.233: INFO: Pod "pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01650632s
Aug 13 12:38:09.240: INFO: Pod "pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023975037s
STEP: Saw pod success
Aug 13 12:38:09.241: INFO: Pod "pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79" satisfied condition "Succeeded or Failed"
Aug 13 12:38:09.243: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:38:09.265: INFO: Waiting for pod pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79 to disappear
Aug 13 12:38:09.268: INFO: Pod pod-projected-configmaps-a8b32b36-0460-4d54-a764-b9ab8583ac79 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 12:38:09.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6071" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":179,"skipped":3241,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:09.277: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4382
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-69771c86-c091-47ae-885c-34c39bb5a6c7
STEP: Creating a pod to test consume configMaps
Aug 13 12:38:09.420: INFO: Waiting up to 5m0s for pod "pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da" in namespace "configmap-4382" to be "Succeeded or Failed"
Aug 13 12:38:09.425: INFO: Pod "pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da": Phase="Pending", Reason="", readiness=false. Elapsed: 5.21143ms
Aug 13 12:38:11.432: INFO: Pod "pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012044539s
Aug 13 12:38:13.438: INFO: Pod "pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017510311s
STEP: Saw pod success
Aug 13 12:38:13.438: INFO: Pod "pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da" satisfied condition "Succeeded or Failed"
Aug 13 12:38:13.440: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da container configmap-volume-test: <nil>
STEP: delete the pod
Aug 13 12:38:13.458: INFO: Waiting for pod pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da to disappear
Aug 13 12:38:13.460: INFO: Pod pod-configmaps-f93c9e21-b6e7-4c83-a711-becc498727da no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:38:13.461: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4382" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":180,"skipped":3252,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:13.471: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-b5569df3-ccf5-446d-88fa-0f35d819ba0f
STEP: Creating a pod to test consume configMaps
Aug 13 12:38:13.609: INFO: Waiting up to 5m0s for pod "pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57" in namespace "configmap-2208" to be "Succeeded or Failed"
Aug 13 12:38:13.611: INFO: Pod "pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57": Phase="Pending", Reason="", readiness=false. Elapsed: 2.355395ms
Aug 13 12:38:15.615: INFO: Pod "pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57": Phase="Pending", Reason="", readiness=false. Elapsed: 2.006018162s
Aug 13 12:38:17.620: INFO: Pod "pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.011393186s
STEP: Saw pod success
Aug 13 12:38:17.620: INFO: Pod "pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57" satisfied condition "Succeeded or Failed"
Aug 13 12:38:17.624: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:38:17.641: INFO: Waiting for pod pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57 to disappear
Aug 13 12:38:17.644: INFO: Pod pod-configmaps-8af406b1-ddff-4280-8772-dd02c98f6b57 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:38:17.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2208" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":181,"skipped":3301,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:17.656: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-7454
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:38:17.787: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Aug 13 12:38:19.823: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 13 12:38:20.832: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-7454" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":182,"skipped":3344,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:20.843: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9747
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug 13 12:38:20.971: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 create -f -'
Aug 13 12:38:21.132: INFO: stderr: ""
Aug 13 12:38:21.132: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 13 12:38:21.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 12:38:21.194: INFO: stderr: ""
Aug 13 12:38:21.194: INFO: stdout: "update-demo-nautilus-6vhd7 update-demo-nautilus-c8gmw "
Aug 13 12:38:21.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods update-demo-nautilus-6vhd7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 12:38:21.247: INFO: stderr: ""
Aug 13 12:38:21.247: INFO: stdout: ""
Aug 13 12:38:21.247: INFO: update-demo-nautilus-6vhd7 is created but not running
Aug 13 12:38:26.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 12:38:26.359: INFO: stderr: ""
Aug 13 12:38:26.359: INFO: stdout: "update-demo-nautilus-6vhd7 update-demo-nautilus-c8gmw "
Aug 13 12:38:26.359: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods update-demo-nautilus-6vhd7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 12:38:26.460: INFO: stderr: ""
Aug 13 12:38:26.460: INFO: stdout: ""
Aug 13 12:38:26.460: INFO: update-demo-nautilus-6vhd7 is created but not running
Aug 13 12:38:31.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 12:38:31.519: INFO: stderr: ""
Aug 13 12:38:31.519: INFO: stdout: "update-demo-nautilus-6vhd7 update-demo-nautilus-c8gmw "
Aug 13 12:38:31.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods update-demo-nautilus-6vhd7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 12:38:31.574: INFO: stderr: ""
Aug 13 12:38:31.574: INFO: stdout: "true"
Aug 13 12:38:31.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods update-demo-nautilus-6vhd7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 13 12:38:31.623: INFO: stderr: ""
Aug 13 12:38:31.623: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 13 12:38:31.623: INFO: validating pod update-demo-nautilus-6vhd7
Aug 13 12:38:31.629: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 13 12:38:31.629: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 13 12:38:31.629: INFO: update-demo-nautilus-6vhd7 is verified up and running
Aug 13 12:38:31.629: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods update-demo-nautilus-c8gmw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 12:38:31.680: INFO: stderr: ""
Aug 13 12:38:31.680: INFO: stdout: "true"
Aug 13 12:38:31.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods update-demo-nautilus-c8gmw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 13 12:38:31.733: INFO: stderr: ""
Aug 13 12:38:31.733: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 13 12:38:31.733: INFO: validating pod update-demo-nautilus-c8gmw
Aug 13 12:38:31.738: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 13 12:38:31.738: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 13 12:38:31.738: INFO: update-demo-nautilus-c8gmw is verified up and running
STEP: using delete to clean up resources
Aug 13 12:38:31.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 delete --grace-period=0 --force -f -'
Aug 13 12:38:31.795: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 12:38:31.795: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 13 12:38:31.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get rc,svc -l name=update-demo --no-headers'
Aug 13 12:38:31.866: INFO: stderr: "No resources found in kubectl-9747 namespace.\n"
Aug 13 12:38:31.866: INFO: stdout: ""
Aug 13 12:38:31.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9747 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 13 12:38:31.934: INFO: stderr: ""
Aug 13 12:38:31.934: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:38:31.934: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9747" for this suite.

• [SLOW TEST:11.101 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":183,"skipped":3345,"failed":0}
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:31.944: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-269
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Aug 13 12:38:32.072: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-269 api-versions'
Aug 13 12:38:32.199: INFO: stderr: ""
Aug 13 12:38:32.199: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:38:32.199: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-269" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":184,"skipped":3345,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:32.214: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8482
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:38:34.375: INFO: Deleting pod "var-expansion-fcc08915-a2f5-4896-935a-ba7b16da5dba" in namespace "var-expansion-8482"
Aug 13 12:38:34.382: INFO: Wait up to 5m0s for pod "var-expansion-fcc08915-a2f5-4896-935a-ba7b16da5dba" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 12:38:36.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8482" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":185,"skipped":3367,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:36.402: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8678
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:38:36.979: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:38:40.003: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:38:40.009: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8678" for this suite.
STEP: Destroying namespace "webhook-8678-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":186,"skipped":3378,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:40.075: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-3333
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 13 12:38:40.468: INFO: starting watch
STEP: patching
STEP: updating
Aug 13 12:38:40.480: INFO: waiting for watch events with expected annotations
Aug 13 12:38:40.480: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:38:40.543: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-3333" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":187,"skipped":3390,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:38:40.553: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9494
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-44a4b440-3219-4169-9d13-fc907d242223 in namespace container-probe-9494
Aug 13 12:38:42.695: INFO: Started pod liveness-44a4b440-3219-4169-9d13-fc907d242223 in namespace container-probe-9494
STEP: checking the pod's current state and verifying that restartCount is present
Aug 13 12:38:42.698: INFO: Initial restart count of pod liveness-44a4b440-3219-4169-9d13-fc907d242223 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 12:42:43.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9494" for this suite.

• [SLOW TEST:242.905 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":188,"skipped":3411,"failed":0}
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:42:43.458: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4253
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 13 12:42:43.595: INFO: The status of Pod pod-update-655d7627-e5ed-488a-a312-5218a6581b76 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:42:45.600: INFO: The status of Pod pod-update-655d7627-e5ed-488a-a312-5218a6581b76 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 13 12:42:46.120: INFO: Successfully updated pod "pod-update-655d7627-e5ed-488a-a312-5218a6581b76"
STEP: verifying the updated pod is in kubernetes
Aug 13 12:42:46.126: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 12:42:46.126: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4253" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":189,"skipped":3411,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:42:46.136: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-1469
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:42:46.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-1469" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":190,"skipped":3417,"failed":0}
SSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:42:46.280: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3687
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-7f8bb7f3-5558-4f16-bc93-65446dd0dce4
STEP: Creating a pod to test consume secrets
Aug 13 12:42:46.420: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6" in namespace "projected-3687" to be "Succeeded or Failed"
Aug 13 12:42:46.427: INFO: Pod "pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6": Phase="Pending", Reason="", readiness=false. Elapsed: 7.372459ms
Aug 13 12:42:48.433: INFO: Pod "pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012855818s
Aug 13 12:42:50.437: INFO: Pod "pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016918555s
STEP: Saw pod success
Aug 13 12:42:50.437: INFO: Pod "pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6" satisfied condition "Succeeded or Failed"
Aug 13 12:42:50.440: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 13 12:42:50.470: INFO: Waiting for pod pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6 to disappear
Aug 13 12:42:50.473: INFO: Pod pod-projected-secrets-2bb7106b-f501-4b31-b1c8-3b40e9c198e6 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 13 12:42:50.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3687" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":191,"skipped":3421,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:42:50.484: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4027
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 13 12:42:50.621: INFO: Waiting up to 5m0s for pod "pod-603d09bc-b616-49d7-af3e-e2b98576652f" in namespace "emptydir-4027" to be "Succeeded or Failed"
Aug 13 12:42:50.627: INFO: Pod "pod-603d09bc-b616-49d7-af3e-e2b98576652f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.495533ms
Aug 13 12:42:52.632: INFO: Pod "pod-603d09bc-b616-49d7-af3e-e2b98576652f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010067589s
Aug 13 12:42:54.638: INFO: Pod "pod-603d09bc-b616-49d7-af3e-e2b98576652f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01646135s
STEP: Saw pod success
Aug 13 12:42:54.638: INFO: Pod "pod-603d09bc-b616-49d7-af3e-e2b98576652f" satisfied condition "Succeeded or Failed"
Aug 13 12:42:54.640: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-603d09bc-b616-49d7-af3e-e2b98576652f container test-container: <nil>
STEP: delete the pod
Aug 13 12:42:54.659: INFO: Waiting for pod pod-603d09bc-b616-49d7-af3e-e2b98576652f to disappear
Aug 13 12:42:54.661: INFO: Pod pod-603d09bc-b616-49d7-af3e-e2b98576652f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:42:54.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4027" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":192,"skipped":3433,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:42:54.675: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:42:55.488: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:42:58.506: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:42:58.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-348" for this suite.
STEP: Destroying namespace "webhook-348-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":193,"skipped":3473,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:42:58.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-2017
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Aug 13 12:42:58.771: INFO: Waiting up to 5m0s for pod "client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29" in namespace "containers-2017" to be "Succeeded or Failed"
Aug 13 12:42:58.776: INFO: Pod "client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29": Phase="Pending", Reason="", readiness=false. Elapsed: 5.4041ms
Aug 13 12:43:00.780: INFO: Pod "client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009149768s
Aug 13 12:43:02.786: INFO: Pod "client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015176001s
STEP: Saw pod success
Aug 13 12:43:02.786: INFO: Pod "client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29" satisfied condition "Succeeded or Failed"
Aug 13 12:43:02.789: INFO: Trying to get logs from node ip-172-31-79-226 pod client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:43:02.806: INFO: Waiting for pod client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29 to disappear
Aug 13 12:43:02.808: INFO: Pod client-containers-b75b7848-31b4-4764-9d44-1e6c4aba5b29 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 13 12:43:02.808: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-2017" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":194,"skipped":3485,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:43:02.818: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-3514
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-9184cd07-7b2d-451c-8951-f2cec78959ea in namespace container-probe-3514
Aug 13 12:43:04.964: INFO: Started pod liveness-9184cd07-7b2d-451c-8951-f2cec78959ea in namespace container-probe-3514
STEP: checking the pod's current state and verifying that restartCount is present
Aug 13 12:43:04.967: INFO: Initial restart count of pod liveness-9184cd07-7b2d-451c-8951-f2cec78959ea is 0
Aug 13 12:43:25.026: INFO: Restart count of pod container-probe-3514/liveness-9184cd07-7b2d-451c-8951-f2cec78959ea is now 1 (20.058708429s elapsed)
Aug 13 12:43:45.078: INFO: Restart count of pod container-probe-3514/liveness-9184cd07-7b2d-451c-8951-f2cec78959ea is now 2 (40.111301447s elapsed)
Aug 13 12:44:05.134: INFO: Restart count of pod container-probe-3514/liveness-9184cd07-7b2d-451c-8951-f2cec78959ea is now 3 (1m0.167266284s elapsed)
Aug 13 12:44:25.196: INFO: Restart count of pod container-probe-3514/liveness-9184cd07-7b2d-451c-8951-f2cec78959ea is now 4 (1m20.228642301s elapsed)
Aug 13 12:45:31.380: INFO: Restart count of pod container-probe-3514/liveness-9184cd07-7b2d-451c-8951-f2cec78959ea is now 5 (2m26.412732648s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 12:45:31.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-3514" for this suite.

• [SLOW TEST:148.584 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":195,"skipped":3511,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:45:31.403: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2809
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-c6708398-1592-4290-aca4-520a09bd3069
STEP: Creating a pod to test consume configMaps
Aug 13 12:45:31.540: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f" in namespace "projected-2809" to be "Succeeded or Failed"
Aug 13 12:45:31.546: INFO: Pod "pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.626057ms
Aug 13 12:45:33.550: INFO: Pod "pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009881792s
Aug 13 12:45:35.554: INFO: Pod "pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014317208s
STEP: Saw pod success
Aug 13 12:45:35.554: INFO: Pod "pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f" satisfied condition "Succeeded or Failed"
Aug 13 12:45:35.557: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f container agnhost-container: <nil>
STEP: delete the pod
Aug 13 12:45:35.579: INFO: Waiting for pod pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f to disappear
Aug 13 12:45:35.581: INFO: Pod pod-projected-configmaps-4b953ec7-26df-4738-ad0c-cd7266b3138f no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 12:45:35.581: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2809" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":196,"skipped":3539,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:45:35.591: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3327
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Aug 13 12:45:46.156: INFO: 66 pods remaining
Aug 13 12:45:46.156: INFO: 66 pods has nil DeletionTimestamp
Aug 13 12:45:46.156: INFO: 
STEP: Gathering metrics
W0813 12:45:51.160329      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 13 12:45:51.160: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Aug 13 12:45:51.160: INFO: Deleting pod "simpletest-rc-to-be-deleted-2k8n5" in namespace "gc-3327"
Aug 13 12:45:51.173: INFO: Deleting pod "simpletest-rc-to-be-deleted-2x8rs" in namespace "gc-3327"
Aug 13 12:45:51.252: INFO: Deleting pod "simpletest-rc-to-be-deleted-4bskj" in namespace "gc-3327"
Aug 13 12:45:51.265: INFO: Deleting pod "simpletest-rc-to-be-deleted-4h5km" in namespace "gc-3327"
Aug 13 12:45:51.277: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vwhr" in namespace "gc-3327"
Aug 13 12:45:51.288: INFO: Deleting pod "simpletest-rc-to-be-deleted-54xxm" in namespace "gc-3327"
Aug 13 12:45:51.298: INFO: Deleting pod "simpletest-rc-to-be-deleted-58f89" in namespace "gc-3327"
Aug 13 12:45:51.307: INFO: Deleting pod "simpletest-rc-to-be-deleted-59426" in namespace "gc-3327"
Aug 13 12:45:51.318: INFO: Deleting pod "simpletest-rc-to-be-deleted-59szp" in namespace "gc-3327"
Aug 13 12:45:51.328: INFO: Deleting pod "simpletest-rc-to-be-deleted-5c2k9" in namespace "gc-3327"
Aug 13 12:45:51.338: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fmkv" in namespace "gc-3327"
Aug 13 12:45:51.410: INFO: Deleting pod "simpletest-rc-to-be-deleted-5hpzk" in namespace "gc-3327"
Aug 13 12:45:51.422: INFO: Deleting pod "simpletest-rc-to-be-deleted-5jd5t" in namespace "gc-3327"
Aug 13 12:45:51.435: INFO: Deleting pod "simpletest-rc-to-be-deleted-5z9ff" in namespace "gc-3327"
Aug 13 12:45:51.444: INFO: Deleting pod "simpletest-rc-to-be-deleted-6stwx" in namespace "gc-3327"
Aug 13 12:45:51.454: INFO: Deleting pod "simpletest-rc-to-be-deleted-7579z" in namespace "gc-3327"
Aug 13 12:45:51.465: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cm8w" in namespace "gc-3327"
Aug 13 12:45:51.475: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ct6z" in namespace "gc-3327"
Aug 13 12:45:51.485: INFO: Deleting pod "simpletest-rc-to-be-deleted-7pn8j" in namespace "gc-3327"
Aug 13 12:45:51.494: INFO: Deleting pod "simpletest-rc-to-be-deleted-86wb9" in namespace "gc-3327"
Aug 13 12:45:51.506: INFO: Deleting pod "simpletest-rc-to-be-deleted-87bpm" in namespace "gc-3327"
Aug 13 12:45:51.516: INFO: Deleting pod "simpletest-rc-to-be-deleted-8jmkh" in namespace "gc-3327"
Aug 13 12:45:51.525: INFO: Deleting pod "simpletest-rc-to-be-deleted-8z5k7" in namespace "gc-3327"
Aug 13 12:45:51.535: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ghg5" in namespace "gc-3327"
Aug 13 12:45:51.545: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hzm7" in namespace "gc-3327"
Aug 13 12:45:51.555: INFO: Deleting pod "simpletest-rc-to-be-deleted-9xbbr" in namespace "gc-3327"
Aug 13 12:45:51.565: INFO: Deleting pod "simpletest-rc-to-be-deleted-bcp2q" in namespace "gc-3327"
Aug 13 12:45:51.576: INFO: Deleting pod "simpletest-rc-to-be-deleted-bjrg2" in namespace "gc-3327"
Aug 13 12:45:51.588: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpn49" in namespace "gc-3327"
Aug 13 12:45:51.603: INFO: Deleting pod "simpletest-rc-to-be-deleted-bppbx" in namespace "gc-3327"
Aug 13 12:45:51.617: INFO: Deleting pod "simpletest-rc-to-be-deleted-bwdq6" in namespace "gc-3327"
Aug 13 12:45:51.627: INFO: Deleting pod "simpletest-rc-to-be-deleted-cd42k" in namespace "gc-3327"
Aug 13 12:45:51.636: INFO: Deleting pod "simpletest-rc-to-be-deleted-cft2f" in namespace "gc-3327"
Aug 13 12:45:51.646: INFO: Deleting pod "simpletest-rc-to-be-deleted-cpkgc" in namespace "gc-3327"
Aug 13 12:45:51.656: INFO: Deleting pod "simpletest-rc-to-be-deleted-crrm4" in namespace "gc-3327"
Aug 13 12:45:51.665: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5ds7" in namespace "gc-3327"
Aug 13 12:45:51.676: INFO: Deleting pod "simpletest-rc-to-be-deleted-dcr5r" in namespace "gc-3327"
Aug 13 12:45:51.689: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgfsk" in namespace "gc-3327"
Aug 13 12:45:51.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-f9h5g" in namespace "gc-3327"
Aug 13 12:45:51.711: INFO: Deleting pod "simpletest-rc-to-be-deleted-fldkc" in namespace "gc-3327"
Aug 13 12:45:51.721: INFO: Deleting pod "simpletest-rc-to-be-deleted-fxfqj" in namespace "gc-3327"
Aug 13 12:45:51.730: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4hb7" in namespace "gc-3327"
Aug 13 12:45:51.742: INFO: Deleting pod "simpletest-rc-to-be-deleted-g5ngw" in namespace "gc-3327"
Aug 13 12:45:51.755: INFO: Deleting pod "simpletest-rc-to-be-deleted-gm8h9" in namespace "gc-3327"
Aug 13 12:45:51.764: INFO: Deleting pod "simpletest-rc-to-be-deleted-h2hwt" in namespace "gc-3327"
Aug 13 12:45:51.774: INFO: Deleting pod "simpletest-rc-to-be-deleted-h4v58" in namespace "gc-3327"
Aug 13 12:45:51.784: INFO: Deleting pod "simpletest-rc-to-be-deleted-hrjcd" in namespace "gc-3327"
Aug 13 12:45:51.793: INFO: Deleting pod "simpletest-rc-to-be-deleted-j4b95" in namespace "gc-3327"
Aug 13 12:45:51.802: INFO: Deleting pod "simpletest-rc-to-be-deleted-j88x2" in namespace "gc-3327"
Aug 13 12:45:51.813: INFO: Deleting pod "simpletest-rc-to-be-deleted-k4fkl" in namespace "gc-3327"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 13 12:45:51.826: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3327" for this suite.

• [SLOW TEST:16.243 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":197,"skipped":3545,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:45:51.835: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3713
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Aug 13 12:45:51.973: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 13 12:45:56.977: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Aug 13 12:46:02.987: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Aug 13 12:46:03.000: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Aug 13 12:46:03.002: INFO: Observed &ReplicaSet event: ADDED
Aug 13 12:46:03.002: INFO: Observed &ReplicaSet event: MODIFIED
Aug 13 12:46:03.002: INFO: Observed &ReplicaSet event: MODIFIED
Aug 13 12:46:03.002: INFO: Observed &ReplicaSet event: MODIFIED
Aug 13 12:46:03.002: INFO: Found replicaset test-rs in namespace replicaset-3713 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 13 12:46:03.002: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Aug 13 12:46:03.002: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 13 12:46:03.007: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Aug 13 12:46:03.009: INFO: Observed &ReplicaSet event: ADDED
Aug 13 12:46:03.009: INFO: Observed &ReplicaSet event: MODIFIED
Aug 13 12:46:03.009: INFO: Observed &ReplicaSet event: MODIFIED
Aug 13 12:46:03.009: INFO: Observed &ReplicaSet event: MODIFIED
Aug 13 12:46:03.009: INFO: Observed replicaset test-rs in namespace replicaset-3713 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 13 12:46:03.009: INFO: Observed &ReplicaSet event: MODIFIED
Aug 13 12:46:03.009: INFO: Found replicaset test-rs in namespace replicaset-3713 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Aug 13 12:46:03.009: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 13 12:46:03.009: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3713" for this suite.

• [SLOW TEST:11.186 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":198,"skipped":3562,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:03.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3269
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 13 12:46:07.186: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 13 12:46:07.201: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3269" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":199,"skipped":3572,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:07.213: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9156
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Aug 13 12:46:07.357: INFO: Found Service test-service-lk8qt in namespace services-9156 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Aug 13 12:46:07.358: INFO: Service test-service-lk8qt created
STEP: Getting /status
Aug 13 12:46:07.361: INFO: Service test-service-lk8qt has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Aug 13 12:46:07.371: INFO: observed Service test-service-lk8qt in namespace services-9156 with annotations: map[] & LoadBalancer: {[]}
Aug 13 12:46:07.371: INFO: Found Service test-service-lk8qt in namespace services-9156 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Aug 13 12:46:07.371: INFO: Service test-service-lk8qt has service status patched
STEP: updating the ServiceStatus
Aug 13 12:46:07.380: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Aug 13 12:46:07.382: INFO: Observed Service test-service-lk8qt in namespace services-9156 with annotations: map[] & Conditions: {[]}
Aug 13 12:46:07.382: INFO: Observed event: &Service{ObjectMeta:{test-service-lk8qt  services-9156  509f3c94-a222-44be-a853-f47977f88028 24364 0 2022-08-13 12:46:07 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-08-13 12:46:07 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-08-13 12:46:07 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.104,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.104],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Aug 13 12:46:07.383: INFO: Found Service test-service-lk8qt in namespace services-9156 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 13 12:46:07.383: INFO: Service test-service-lk8qt has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Aug 13 12:46:07.395: INFO: observed Service test-service-lk8qt in namespace services-9156 with labels: map[test-service-static:true]
Aug 13 12:46:07.395: INFO: observed Service test-service-lk8qt in namespace services-9156 with labels: map[test-service-static:true]
Aug 13 12:46:07.395: INFO: observed Service test-service-lk8qt in namespace services-9156 with labels: map[test-service-static:true]
Aug 13 12:46:07.395: INFO: Found Service test-service-lk8qt in namespace services-9156 with labels: map[test-service:patched test-service-static:true]
Aug 13 12:46:07.395: INFO: Service test-service-lk8qt patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Aug 13 12:46:07.413: INFO: Observed event: ADDED
Aug 13 12:46:07.413: INFO: Observed event: MODIFIED
Aug 13 12:46:07.413: INFO: Observed event: MODIFIED
Aug 13 12:46:07.413: INFO: Observed event: MODIFIED
Aug 13 12:46:07.413: INFO: Found Service test-service-lk8qt in namespace services-9156 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Aug 13 12:46:07.413: INFO: Service test-service-lk8qt deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:46:07.413: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9156" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":200,"skipped":3596,"failed":0}
S
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:07.425: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-684
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-dxwm
STEP: Creating a pod to test atomic-volume-subpath
Aug 13 12:46:07.578: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-dxwm" in namespace "subpath-684" to be "Succeeded or Failed"
Aug 13 12:46:07.581: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Pending", Reason="", readiness=false. Elapsed: 2.472748ms
Aug 13 12:46:09.585: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 2.007372344s
Aug 13 12:46:11.593: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 4.015108246s
Aug 13 12:46:13.600: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 6.022118552s
Aug 13 12:46:15.604: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 8.025564269s
Aug 13 12:46:17.608: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 10.030358829s
Aug 13 12:46:19.613: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 12.034468876s
Aug 13 12:46:21.618: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 14.040038369s
Aug 13 12:46:23.625: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 16.046573753s
Aug 13 12:46:25.630: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 18.052185216s
Aug 13 12:46:27.634: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=true. Elapsed: 20.056383479s
Aug 13 12:46:29.640: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Running", Reason="", readiness=false. Elapsed: 22.062254427s
Aug 13 12:46:31.647: INFO: Pod "pod-subpath-test-downwardapi-dxwm": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.068650416s
STEP: Saw pod success
Aug 13 12:46:31.647: INFO: Pod "pod-subpath-test-downwardapi-dxwm" satisfied condition "Succeeded or Failed"
Aug 13 12:46:31.650: INFO: Trying to get logs from node ip-172-31-3-251 pod pod-subpath-test-downwardapi-dxwm container test-container-subpath-downwardapi-dxwm: <nil>
STEP: delete the pod
Aug 13 12:46:31.676: INFO: Waiting for pod pod-subpath-test-downwardapi-dxwm to disappear
Aug 13 12:46:31.678: INFO: Pod pod-subpath-test-downwardapi-dxwm no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-dxwm
Aug 13 12:46:31.678: INFO: Deleting pod "pod-subpath-test-downwardapi-dxwm" in namespace "subpath-684"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 13 12:46:31.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-684" for this suite.

• [SLOW TEST:24.265 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":201,"skipped":3597,"failed":0}
SSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:31.690: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-5719
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Aug 13 12:46:31.821: INFO: Creating simple deployment test-deployment-ljh76
Aug 13 12:46:31.843: INFO: deployment "test-deployment-ljh76" doesn't have the required revision set
STEP: Getting /status
Aug 13 12:46:33.861: INFO: Deployment test-deployment-ljh76 has Conditions: [{Available True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ljh76-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Aug 13 12:46:33.870: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 46, 33, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 46, 33, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 13, 12, 46, 33, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 13, 12, 46, 31, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-ljh76-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Aug 13 12:46:33.872: INFO: Observed &Deployment event: ADDED
Aug 13 12:46:33.872: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ljh76-688c4d6789"}
Aug 13 12:46:33.872: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.872: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ljh76-688c4d6789"}
Aug 13 12:46:33.872: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 13 12:46:33.872: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.872: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 13 12:46:33.872: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ljh76-688c4d6789" is progressing.}
Aug 13 12:46:33.872: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.872: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 13 12:46:33.873: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ljh76-688c4d6789" has successfully progressed.}
Aug 13 12:46:33.873: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.873: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 13 12:46:33.873: INFO: Observed Deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ljh76-688c4d6789" has successfully progressed.}
Aug 13 12:46:33.873: INFO: Found Deployment test-deployment-ljh76 in namespace deployment-5719 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 13 12:46:33.873: INFO: Deployment test-deployment-ljh76 has an updated status
STEP: patching the Statefulset Status
Aug 13 12:46:33.873: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 13 12:46:33.879: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Aug 13 12:46:33.881: INFO: Observed &Deployment event: ADDED
Aug 13 12:46:33.881: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ljh76-688c4d6789"}
Aug 13 12:46:33.881: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.881: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-ljh76-688c4d6789"}
Aug 13 12:46:33.881: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 13 12:46:33.881: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.881: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 13 12:46:33.881: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:31 +0000 UTC 2022-08-13 12:46:31 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-ljh76-688c4d6789" is progressing.}
Aug 13 12:46:33.882: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.882: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 13 12:46:33.882: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ljh76-688c4d6789" has successfully progressed.}
Aug 13 12:46:33.882: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.882: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:33 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 13 12:46:33.882: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-13 12:46:33 +0000 UTC 2022-08-13 12:46:31 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-ljh76-688c4d6789" has successfully progressed.}
Aug 13 12:46:33.882: INFO: Observed deployment test-deployment-ljh76 in namespace deployment-5719 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 13 12:46:33.882: INFO: Observed &Deployment event: MODIFIED
Aug 13 12:46:33.882: INFO: Found deployment test-deployment-ljh76 in namespace deployment-5719 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Aug 13 12:46:33.882: INFO: Deployment test-deployment-ljh76 has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 12:46:33.887: INFO: Deployment "test-deployment-ljh76":
&Deployment{ObjectMeta:{test-deployment-ljh76  deployment-5719  bf2a6512-8e6b-4e79-9341-842bbe981e59 24511 1 2022-08-13 12:46:31 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-13 12:46:31 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2022-08-13 12:46:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2022-08-13 12:46:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0038ecf78 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-ljh76-688c4d6789",LastUpdateTime:2022-08-13 12:46:33 +0000 UTC,LastTransitionTime:2022-08-13 12:46:33 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 13 12:46:33.890: INFO: New ReplicaSet "test-deployment-ljh76-688c4d6789" of Deployment "test-deployment-ljh76":
&ReplicaSet{ObjectMeta:{test-deployment-ljh76-688c4d6789  deployment-5719  c90cb961-df99-4e52-b1f4-2839118af3d7 24504 1 2022-08-13 12:46:31 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-ljh76 bf2a6512-8e6b-4e79-9341-842bbe981e59 0xc0038ed350 0xc0038ed351}] []  [{kube-controller-manager Update apps/v1 2022-08-13 12:46:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"bf2a6512-8e6b-4e79-9341-842bbe981e59\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 12:46:33 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0038ed3f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 13 12:46:33.894: INFO: Pod "test-deployment-ljh76-688c4d6789-fdm7t" is available:
&Pod{ObjectMeta:{test-deployment-ljh76-688c4d6789-fdm7t test-deployment-ljh76-688c4d6789- deployment-5719  97e50d7f-dcbe-4667-a561-cf0a021c10d6 24503 0 2022-08-13 12:46:31 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-ljh76-688c4d6789 c90cb961-df99-4e52-b1f4-2839118af3d7 0xc0038ed770 0xc0038ed771}] []  [{kube-controller-manager Update v1 2022-08-13 12:46:31 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c90cb961-df99-4e52-b1f4-2839118af3d7\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 12:46:33 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.33\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qn9q9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qn9q9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:46:31 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:46:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:46:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 12:46:31 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.33,StartTime:2022-08-13 12:46:31 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 12:46:32 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://68b7b4aa76f0e3fdd4abaa94136087549b3c3ce83e56192401394b193d50c09a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.33,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 12:46:33.894: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-5719" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":202,"skipped":3602,"failed":0}
SSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:33.905: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-6198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Aug 13 12:46:34.045: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:46:36.051: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Aug 13 12:46:36.067: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:46:38.072: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Aug 13 12:46:38.075: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.075: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.076: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.076: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 13 12:46:38.165: INFO: Exec stderr: ""
Aug 13 12:46:38.165: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.165: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.166: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.166: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 13 12:46:38.243: INFO: Exec stderr: ""
Aug 13 12:46:38.243: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.243: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.243: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.243: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 13 12:46:38.319: INFO: Exec stderr: ""
Aug 13 12:46:38.319: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.319: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.320: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.320: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 13 12:46:38.377: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Aug 13 12:46:38.377: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.377: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.378: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.378: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug 13 12:46:38.446: INFO: Exec stderr: ""
Aug 13 12:46:38.446: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.446: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.446: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.446: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug 13 12:46:38.501: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Aug 13 12:46:38.501: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.501: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.502: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.502: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 13 12:46:38.584: INFO: Exec stderr: ""
Aug 13 12:46:38.584: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.584: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.584: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.584: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 13 12:46:38.667: INFO: Exec stderr: ""
Aug 13 12:46:38.667: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.667: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.668: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.668: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 13 12:46:38.727: INFO: Exec stderr: ""
Aug 13 12:46:38.727: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6198 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:46:38.728: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:46:38.728: INFO: ExecWithOptions: Clientset creation
Aug 13 12:46:38.728: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6198/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 13 12:46:38.788: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Aug 13 12:46:38.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-6198" for this suite.
•{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":203,"skipped":3605,"failed":0}
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:38.803: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-3334
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:38.934: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-3135
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-3334
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Aug 13 12:46:43.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-3135" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 13 12:46:43.144: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-3334" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":204,"skipped":3611,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:43.154: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7453
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-a560d74e-6d21-42f3-973f-c6158975df65
STEP: Creating configMap with name cm-test-opt-upd-8916257b-2aac-4222-8a77-a0e7df845b5e
STEP: Creating the pod
Aug 13 12:46:43.363: INFO: The status of Pod pod-configmaps-9e8a801e-882f-4389-a12c-ba056453eda0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:46:45.368: INFO: The status of Pod pod-configmaps-9e8a801e-882f-4389-a12c-ba056453eda0 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-a560d74e-6d21-42f3-973f-c6158975df65
STEP: Updating configmap cm-test-opt-upd-8916257b-2aac-4222-8a77-a0e7df845b5e
STEP: Creating configMap with name cm-test-opt-create-836852be-8ea9-41fd-a990-73cf9d2a4f0b
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:46:49.435: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7453" for this suite.

• [SLOW TEST:6.295 seconds]
[sig-storage] ConfigMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":205,"skipped":3690,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:49.450: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6664
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:46:49.590: INFO: Waiting up to 5m0s for pod "downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57" in namespace "downward-api-6664" to be "Succeeded or Failed"
Aug 13 12:46:49.593: INFO: Pod "downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57": Phase="Pending", Reason="", readiness=false. Elapsed: 2.90912ms
Aug 13 12:46:51.602: INFO: Pod "downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011728532s
Aug 13 12:46:53.607: INFO: Pod "downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01689869s
STEP: Saw pod success
Aug 13 12:46:53.607: INFO: Pod "downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57" satisfied condition "Succeeded or Failed"
Aug 13 12:46:53.613: INFO: Trying to get logs from node ip-172-31-3-251 pod downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57 container client-container: <nil>
STEP: delete the pod
Aug 13 12:46:53.632: INFO: Waiting for pod downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57 to disappear
Aug 13 12:46:53.635: INFO: Pod downwardapi-volume-7d554bef-323c-4f1b-9852-e072fff5bf57 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 12:46:53.635: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6664" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":206,"skipped":3750,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:53.648: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8934
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-31b200c8-caa1-412b-a487-a8466070b507
STEP: Creating a pod to test consume secrets
Aug 13 12:46:53.803: INFO: Waiting up to 5m0s for pod "pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8" in namespace "secrets-8934" to be "Succeeded or Failed"
Aug 13 12:46:53.809: INFO: Pod "pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.077132ms
Aug 13 12:46:55.816: INFO: Pod "pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01301486s
Aug 13 12:46:57.820: INFO: Pod "pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016989956s
STEP: Saw pod success
Aug 13 12:46:57.820: INFO: Pod "pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8" satisfied condition "Succeeded or Failed"
Aug 13 12:46:57.824: INFO: Trying to get logs from node ip-172-31-3-251 pod pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8 container secret-env-test: <nil>
STEP: delete the pod
Aug 13 12:46:57.839: INFO: Waiting for pod pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8 to disappear
Aug 13 12:46:57.844: INFO: Pod pod-secrets-8de290a8-9c68-4d74-8116-de44665a9ba8 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 13 12:46:57.844: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8934" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":207,"skipped":3758,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:57.855: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-6357
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:46:58.251: INFO: Checking APIGroup: apiregistration.k8s.io
Aug 13 12:46:58.252: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Aug 13 12:46:58.252: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Aug 13 12:46:58.252: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Aug 13 12:46:58.252: INFO: Checking APIGroup: apps
Aug 13 12:46:58.253: INFO: PreferredVersion.GroupVersion: apps/v1
Aug 13 12:46:58.253: INFO: Versions found [{apps/v1 v1}]
Aug 13 12:46:58.253: INFO: apps/v1 matches apps/v1
Aug 13 12:46:58.253: INFO: Checking APIGroup: events.k8s.io
Aug 13 12:46:58.253: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Aug 13 12:46:58.253: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Aug 13 12:46:58.253: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Aug 13 12:46:58.253: INFO: Checking APIGroup: authentication.k8s.io
Aug 13 12:46:58.254: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Aug 13 12:46:58.254: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Aug 13 12:46:58.254: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Aug 13 12:46:58.254: INFO: Checking APIGroup: authorization.k8s.io
Aug 13 12:46:58.255: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Aug 13 12:46:58.255: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Aug 13 12:46:58.255: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Aug 13 12:46:58.255: INFO: Checking APIGroup: autoscaling
Aug 13 12:46:58.256: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Aug 13 12:46:58.256: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Aug 13 12:46:58.256: INFO: autoscaling/v2 matches autoscaling/v2
Aug 13 12:46:58.256: INFO: Checking APIGroup: batch
Aug 13 12:46:58.257: INFO: PreferredVersion.GroupVersion: batch/v1
Aug 13 12:46:58.257: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Aug 13 12:46:58.257: INFO: batch/v1 matches batch/v1
Aug 13 12:46:58.257: INFO: Checking APIGroup: certificates.k8s.io
Aug 13 12:46:58.258: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Aug 13 12:46:58.258: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Aug 13 12:46:58.258: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Aug 13 12:46:58.258: INFO: Checking APIGroup: networking.k8s.io
Aug 13 12:46:58.259: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Aug 13 12:46:58.259: INFO: Versions found [{networking.k8s.io/v1 v1}]
Aug 13 12:46:58.259: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Aug 13 12:46:58.259: INFO: Checking APIGroup: policy
Aug 13 12:46:58.260: INFO: PreferredVersion.GroupVersion: policy/v1
Aug 13 12:46:58.260: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Aug 13 12:46:58.260: INFO: policy/v1 matches policy/v1
Aug 13 12:46:58.260: INFO: Checking APIGroup: rbac.authorization.k8s.io
Aug 13 12:46:58.261: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Aug 13 12:46:58.261: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Aug 13 12:46:58.261: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Aug 13 12:46:58.261: INFO: Checking APIGroup: storage.k8s.io
Aug 13 12:46:58.262: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Aug 13 12:46:58.262: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Aug 13 12:46:58.262: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Aug 13 12:46:58.262: INFO: Checking APIGroup: admissionregistration.k8s.io
Aug 13 12:46:58.263: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Aug 13 12:46:58.263: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Aug 13 12:46:58.263: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Aug 13 12:46:58.263: INFO: Checking APIGroup: apiextensions.k8s.io
Aug 13 12:46:58.264: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Aug 13 12:46:58.264: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Aug 13 12:46:58.264: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Aug 13 12:46:58.264: INFO: Checking APIGroup: scheduling.k8s.io
Aug 13 12:46:58.265: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Aug 13 12:46:58.265: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Aug 13 12:46:58.265: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Aug 13 12:46:58.265: INFO: Checking APIGroup: coordination.k8s.io
Aug 13 12:46:58.266: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Aug 13 12:46:58.266: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Aug 13 12:46:58.266: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Aug 13 12:46:58.266: INFO: Checking APIGroup: node.k8s.io
Aug 13 12:46:58.267: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Aug 13 12:46:58.267: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Aug 13 12:46:58.267: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Aug 13 12:46:58.267: INFO: Checking APIGroup: discovery.k8s.io
Aug 13 12:46:58.268: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Aug 13 12:46:58.268: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Aug 13 12:46:58.268: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Aug 13 12:46:58.268: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Aug 13 12:46:58.269: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Aug 13 12:46:58.269: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Aug 13 12:46:58.269: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Aug 13 12:46:58.269: INFO: Checking APIGroup: metrics.k8s.io
Aug 13 12:46:58.270: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Aug 13 12:46:58.270: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Aug 13 12:46:58.270: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Aug 13 12:46:58.270: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-6357" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":208,"skipped":3766,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:46:58.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2242
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Aug 13 12:48:58.953: INFO: Successfully updated pod "var-expansion-3ad3bfcc-8c40-4211-b939-7a8f7d0c9a5d"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Aug 13 12:49:00.963: INFO: Deleting pod "var-expansion-3ad3bfcc-8c40-4211-b939-7a8f7d0c9a5d" in namespace "var-expansion-2242"
Aug 13 12:49:00.971: INFO: Wait up to 5m0s for pod "var-expansion-3ad3bfcc-8c40-4211-b939-7a8f7d0c9a5d" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 12:49:32.979: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2242" for this suite.

• [SLOW TEST:154.711 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":209,"skipped":3788,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:49:32.992: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-1598
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:49:49.274: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-1598" for this suite.

• [SLOW TEST:16.292 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":210,"skipped":3805,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:49:49.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9412
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:49:49.428: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9412" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":211,"skipped":3813,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:49:49.438: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1990
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 13 12:49:49.587: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 13 12:50:49.626: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug 13 12:50:49.649: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 13 12:50:49.656: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 13 12:50:49.670: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 13 12:50:49.680: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 13 12:50:49.697: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 13 12:50:49.704: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:50:55.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1990" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:66.401 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":212,"skipped":3827,"failed":0}
SSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:50:55.839: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-2566
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 13 12:51:05.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-2566" for this suite.

• [SLOW TEST:10.154 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":213,"skipped":3830,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:51:05.993: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4151
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 13 12:51:06.142: INFO: Waiting up to 5m0s for pod "pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0" in namespace "emptydir-4151" to be "Succeeded or Failed"
Aug 13 12:51:06.146: INFO: Pod "pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.918445ms
Aug 13 12:51:08.151: INFO: Pod "pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008874132s
Aug 13 12:51:10.156: INFO: Pod "pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014430817s
STEP: Saw pod success
Aug 13 12:51:10.156: INFO: Pod "pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0" satisfied condition "Succeeded or Failed"
Aug 13 12:51:10.159: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0 container test-container: <nil>
STEP: delete the pod
Aug 13 12:51:10.189: INFO: Waiting for pod pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0 to disappear
Aug 13 12:51:10.191: INFO: Pod pod-84b009fc-4014-4e00-81ee-0f57d5c8a0a0 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:51:10.191: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4151" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":214,"skipped":3851,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:51:10.201: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-419
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:51:10.978: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:51:14.002: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:51:14.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-419" for this suite.
STEP: Destroying namespace "webhook-419-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":215,"skipped":3860,"failed":0}
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:51:14.104: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7747
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7747
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-7747
Aug 13 12:51:14.250: INFO: Found 0 stateful pods, waiting for 1
Aug 13 12:51:24.254: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Aug 13 12:51:24.274: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Aug 13 12:51:24.283: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Aug 13 12:51:24.285: INFO: Observed &StatefulSet event: ADDED
Aug 13 12:51:24.285: INFO: Found Statefulset ss in namespace statefulset-7747 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 13 12:51:24.285: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Aug 13 12:51:24.285: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 13 12:51:24.291: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Aug 13 12:51:24.293: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 12:51:24.293: INFO: Deleting all statefulset in ns statefulset-7747
Aug 13 12:51:24.297: INFO: Scaling statefulset ss to 0
Aug 13 12:51:34.316: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 12:51:34.320: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 12:51:34.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7747" for this suite.

• [SLOW TEST:20.238 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":216,"skipped":3862,"failed":0}
S
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:51:34.343: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-3843
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 12:51:34.495: INFO: Waiting up to 5m0s for pod "downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1" in namespace "downward-api-3843" to be "Succeeded or Failed"
Aug 13 12:51:34.498: INFO: Pod "downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.902838ms
Aug 13 12:51:36.503: INFO: Pod "downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.007581749s
Aug 13 12:51:38.509: INFO: Pod "downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.013085502s
STEP: Saw pod success
Aug 13 12:51:38.509: INFO: Pod "downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1" satisfied condition "Succeeded or Failed"
Aug 13 12:51:38.512: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1 container client-container: <nil>
STEP: delete the pod
Aug 13 12:51:38.529: INFO: Waiting for pod downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1 to disappear
Aug 13 12:51:38.532: INFO: Pod downwardapi-volume-bb3fe8af-c8ae-4bc3-98d5-782bc18bcbe1 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 12:51:38.532: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-3843" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":217,"skipped":3863,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:51:38.544: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-2399
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-2399
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-2399
Aug 13 12:51:38.690: INFO: Found 0 stateful pods, waiting for 1
Aug 13 12:51:48.699: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 12:51:48.758: INFO: Deleting all statefulset in ns statefulset-2399
Aug 13 12:51:48.763: INFO: Scaling statefulset ss to 0
Aug 13 12:51:58.781: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 12:51:58.785: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 12:51:58.815: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-2399" for this suite.

• [SLOW TEST:20.282 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":218,"skipped":3933,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:51:58.827: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-162
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 13 12:51:58.971: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:52:00.979: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 13 12:52:00.993: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:52:02.996: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 13 12:52:03.024: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 13 12:52:03.027: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 13 12:52:05.028: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 13 12:52:05.031: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 13 12:52:07.029: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 13 12:52:07.034: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 13 12:52:07.034: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-162" for this suite.

• [SLOW TEST:8.219 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":219,"skipped":3961,"failed":0}
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:07.047: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-1553
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 13 12:52:11.219: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 13 12:52:11.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-1553" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":220,"skipped":3968,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:11.244: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 13 12:52:11.391: INFO: Waiting up to 5m0s for pod "pod-4a5aa343-b781-4211-9acb-cd17d8356591" in namespace "emptydir-3565" to be "Succeeded or Failed"
Aug 13 12:52:11.395: INFO: Pod "pod-4a5aa343-b781-4211-9acb-cd17d8356591": Phase="Pending", Reason="", readiness=false. Elapsed: 4.631504ms
Aug 13 12:52:13.400: INFO: Pod "pod-4a5aa343-b781-4211-9acb-cd17d8356591": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009039904s
Aug 13 12:52:15.406: INFO: Pod "pod-4a5aa343-b781-4211-9acb-cd17d8356591": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014900123s
STEP: Saw pod success
Aug 13 12:52:15.406: INFO: Pod "pod-4a5aa343-b781-4211-9acb-cd17d8356591" satisfied condition "Succeeded or Failed"
Aug 13 12:52:15.409: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-4a5aa343-b781-4211-9acb-cd17d8356591 container test-container: <nil>
STEP: delete the pod
Aug 13 12:52:15.427: INFO: Waiting for pod pod-4a5aa343-b781-4211-9acb-cd17d8356591 to disappear
Aug 13 12:52:15.430: INFO: Pod pod-4a5aa343-b781-4211-9acb-cd17d8356591 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:52:15.430: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3565" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":221,"skipped":3987,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:15.439: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8845
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 13 12:52:15.579: INFO: Waiting up to 5m0s for pod "pod-e0816e8a-016a-4d1c-bce6-46d26453efbb" in namespace "emptydir-8845" to be "Succeeded or Failed"
Aug 13 12:52:15.584: INFO: Pod "pod-e0816e8a-016a-4d1c-bce6-46d26453efbb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.694255ms
Aug 13 12:52:17.589: INFO: Pod "pod-e0816e8a-016a-4d1c-bce6-46d26453efbb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009609311s
Aug 13 12:52:19.596: INFO: Pod "pod-e0816e8a-016a-4d1c-bce6-46d26453efbb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016903661s
STEP: Saw pod success
Aug 13 12:52:19.596: INFO: Pod "pod-e0816e8a-016a-4d1c-bce6-46d26453efbb" satisfied condition "Succeeded or Failed"
Aug 13 12:52:19.599: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-e0816e8a-016a-4d1c-bce6-46d26453efbb container test-container: <nil>
STEP: delete the pod
Aug 13 12:52:19.615: INFO: Waiting for pod pod-e0816e8a-016a-4d1c-bce6-46d26453efbb to disappear
Aug 13 12:52:19.619: INFO: Pod pod-e0816e8a-016a-4d1c-bce6-46d26453efbb no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 12:52:19.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8845" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":222,"skipped":4012,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:19.628: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2329
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 13 12:52:19.765: INFO: The status of Pod labelsupdate98dc810b-62b3-4a83-8397-24ace04875d4 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:52:21.770: INFO: The status of Pod labelsupdate98dc810b-62b3-4a83-8397-24ace04875d4 is Running (Ready = true)
Aug 13 12:52:22.293: INFO: Successfully updated pod "labelsupdate98dc810b-62b3-4a83-8397-24ace04875d4"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 12:52:26.311: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2329" for this suite.

• [SLOW TEST:6.697 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":223,"skipped":4020,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:26.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6579
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:52:26.463: INFO: The status of Pod server-envvars-4cfd0b87-6dbf-4f29-8b62-89d550682235 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:52:28.468: INFO: The status of Pod server-envvars-4cfd0b87-6dbf-4f29-8b62-89d550682235 is Running (Ready = true)
Aug 13 12:52:28.497: INFO: Waiting up to 5m0s for pod "client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704" in namespace "pods-6579" to be "Succeeded or Failed"
Aug 13 12:52:28.513: INFO: Pod "client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704": Phase="Pending", Reason="", readiness=false. Elapsed: 16.479515ms
Aug 13 12:52:30.521: INFO: Pod "client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024141029s
Aug 13 12:52:32.527: INFO: Pod "client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03013221s
STEP: Saw pod success
Aug 13 12:52:32.527: INFO: Pod "client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704" satisfied condition "Succeeded or Failed"
Aug 13 12:52:32.529: INFO: Trying to get logs from node ip-172-31-79-226 pod client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704 container env3cont: <nil>
STEP: delete the pod
Aug 13 12:52:32.547: INFO: Waiting for pod client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704 to disappear
Aug 13 12:52:32.551: INFO: Pod client-envvars-147b6ca8-f2c1-45e6-90a7-8f0c3099c704 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 12:52:32.551: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6579" for this suite.

• [SLOW TEST:6.235 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":224,"skipped":4028,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:32.560: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9060
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-9060
STEP: creating replication controller nodeport-test in namespace services-9060
I0813 12:52:32.711533      18 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-9060, replica count: 2
Aug 13 12:52:35.762: INFO: Creating new exec pod
I0813 12:52:35.762496      18 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 12:52:38.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9060 exec execpod5vplx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug 13 12:52:38.948: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug 13 12:52:38.948: INFO: stdout: ""
Aug 13 12:52:39.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9060 exec execpod5vplx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug 13 12:52:40.076: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug 13 12:52:40.076: INFO: stdout: ""
Aug 13 12:52:40.948: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9060 exec execpod5vplx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug 13 12:52:41.090: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug 13 12:52:41.090: INFO: stdout: "nodeport-test-zwjfr"
Aug 13 12:52:41.090: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9060 exec execpod5vplx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
Aug 13 12:52:41.203: INFO: stderr: "+ + echonc -v hostName\n -t -w 2 10.152.183.32 80\nConnection to 10.152.183.32 80 port [tcp/http] succeeded!\n"
Aug 13 12:52:41.203: INFO: stdout: ""
Aug 13 12:52:42.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9060 exec execpod5vplx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.32 80'
Aug 13 12:52:42.340: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 10.152.183.32 80\nConnection to 10.152.183.32 80 port [tcp/http] succeeded!\n"
Aug 13 12:52:42.341: INFO: stdout: "nodeport-test-zwjfr"
Aug 13 12:52:42.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9060 exec execpod5vplx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.206 31092'
Aug 13 12:52:42.453: INFO: stderr: "+ nc -v -t -w 2 172.31.22.206 31092\n+ echo hostName\nConnection to 172.31.22.206 31092 port [tcp/*] succeeded!\n"
Aug 13 12:52:42.453: INFO: stdout: "nodeport-test-zwjfr"
Aug 13 12:52:42.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9060 exec execpod5vplx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.79.226 31092'
Aug 13 12:52:42.584: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.79.226 31092\nConnection to 172.31.79.226 31092 port [tcp/*] succeeded!\n"
Aug 13 12:52:42.584: INFO: stdout: "nodeport-test-bn6wg"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 12:52:42.584: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9060" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:10.035 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":225,"skipped":4044,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:42.595: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-5012
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-5012
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-5012
STEP: Deleting pre-stop pod
Aug 13 12:52:51.778: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Aug 13 12:52:51.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-5012" for this suite.

• [SLOW TEST:9.210 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":226,"skipped":4080,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:51.805: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2324
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Aug 13 12:52:51.942: INFO: Waiting up to 5m0s for pod "var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb" in namespace "var-expansion-2324" to be "Succeeded or Failed"
Aug 13 12:52:52.009: INFO: Pod "var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb": Phase="Pending", Reason="", readiness=false. Elapsed: 66.208289ms
Aug 13 12:52:54.015: INFO: Pod "var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.072920471s
Aug 13 12:52:56.022: INFO: Pod "var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.080128786s
STEP: Saw pod success
Aug 13 12:52:56.023: INFO: Pod "var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb" satisfied condition "Succeeded or Failed"
Aug 13 12:52:56.025: INFO: Trying to get logs from node ip-172-31-79-226 pod var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb container dapi-container: <nil>
STEP: delete the pod
Aug 13 12:52:56.042: INFO: Waiting for pod var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb to disappear
Aug 13 12:52:56.046: INFO: Pod var-expansion-2157ebb1-79ad-428e-8fab-6e25e2a158bb no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 12:52:56.046: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2324" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":227,"skipped":4130,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:56.055: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-1844
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:52:56.491: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 12:52:59.514: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:52:59.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-1844" for this suite.
STEP: Destroying namespace "webhook-1844-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":228,"skipped":4141,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:52:59.734: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-5693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:52:59.881: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:53:00.904: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5693" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":229,"skipped":4202,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:53:00.913: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4231
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:53:01.041: INFO: Creating ReplicaSet my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a
Aug 13 12:53:01.049: INFO: Pod name my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a: Found 0 pods out of 1
Aug 13 12:53:06.052: INFO: Pod name my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a: Found 1 pods out of 1
Aug 13 12:53:06.052: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a" is running
Aug 13 12:53:06.056: INFO: Pod "my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a-n5sf2" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:53:01 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:53:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:53:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-13 12:53:01 +0000 UTC Reason: Message:}])
Aug 13 12:53:06.056: INFO: Trying to dial the pod
Aug 13 12:53:11.071: INFO: Controller my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a: Got expected result from replica 1 [my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a-n5sf2]: "my-hostname-basic-193b677b-6e6e-490a-a3a8-8282f7a1f57a-n5sf2", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 13 12:53:11.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4231" for this suite.

• [SLOW TEST:10.169 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":230,"skipped":4217,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:53:11.082: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1145
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-ddec65d4-1c60-4b40-a0b8-ee2af6fb764a
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 12:53:11.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1145" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":231,"skipped":4226,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:53:11.225: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5226
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 13 12:53:40.623: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5226" for this suite.

• [SLOW TEST:29.407 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":232,"skipped":4246,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:53:40.632: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-1425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 12:53:40.760: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 12:53:43.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-1425" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":233,"skipped":4265,"failed":0}

------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:53:43.981: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-4534
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 13 12:59:02.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-4534" for this suite.

• [SLOW TEST:318.183 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":234,"skipped":4265,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:02.164: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9635
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 12:59:13.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9635" for this suite.

• [SLOW TEST:11.190 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":235,"skipped":4286,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:13.355: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-1996
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 13 12:59:13.578: INFO: Waiting up to 5m0s for pod "security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb" in namespace "security-context-1996" to be "Succeeded or Failed"
Aug 13 12:59:13.585: INFO: Pod "security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb": Phase="Pending", Reason="", readiness=false. Elapsed: 6.286533ms
Aug 13 12:59:15.589: INFO: Pod "security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010368553s
Aug 13 12:59:17.593: INFO: Pod "security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015015339s
STEP: Saw pod success
Aug 13 12:59:17.593: INFO: Pod "security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb" satisfied condition "Succeeded or Failed"
Aug 13 12:59:17.597: INFO: Trying to get logs from node ip-172-31-79-226 pod security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb container test-container: <nil>
STEP: delete the pod
Aug 13 12:59:17.623: INFO: Waiting for pod security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb to disappear
Aug 13 12:59:17.626: INFO: Pod security-context-48afbf89-8ac0-4f92-ba0f-970a08fc40cb no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 13 12:59:17.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-1996" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":236,"skipped":4355,"failed":0}
SSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:17.635: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-8878
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Aug 13 12:59:17.831: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:59:19.838: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.3.251 on the node which pod1 resides and expect scheduled
Aug 13 12:59:19.846: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:59:21.855: INFO: The status of Pod pod2 is Running (Ready = false)
Aug 13 12:59:23.852: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.3.251 but use UDP protocol on the node which pod2 resides
Aug 13 12:59:23.862: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:59:25.867: INFO: The status of Pod pod3 is Running (Ready = true)
Aug 13 12:59:25.875: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:59:27.884: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Aug 13 12:59:27.886: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.3.251 http://127.0.0.1:54323/hostname] Namespace:hostport-8878 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:59:27.886: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:59:27.886: INFO: ExecWithOptions: Clientset creation
Aug 13 12:59:27.887: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8878/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.3.251+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.251, port: 54323
Aug 13 12:59:27.989: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.3.251:54323/hostname] Namespace:hostport-8878 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:59:27.989: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:59:27.989: INFO: ExecWithOptions: Clientset creation
Aug 13 12:59:27.989: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8878/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.3.251%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.3.251, port: 54323 UDP
Aug 13 12:59:28.048: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 172.31.3.251 54323] Namespace:hostport-8878 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 12:59:28.048: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 12:59:28.049: INFO: ExecWithOptions: Clientset creation
Aug 13 12:59:28.049: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-8878/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+172.31.3.251+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Aug 13 12:59:33.128: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-8878" for this suite.

• [SLOW TEST:15.505 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":237,"skipped":4361,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:33.142: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-6646
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Aug 13 12:59:33.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-6646" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":238,"skipped":4468,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:33.329: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2388
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug 13 12:59:33.459: INFO: namespace kubectl-2388
Aug 13 12:59:33.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2388 create -f -'
Aug 13 12:59:33.696: INFO: stderr: ""
Aug 13 12:59:33.696: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 13 12:59:34.703: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 12:59:34.703: INFO: Found 0 / 1
Aug 13 12:59:35.701: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 12:59:35.702: INFO: Found 1 / 1
Aug 13 12:59:35.702: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 13 12:59:35.704: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 13 12:59:35.704: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 13 12:59:35.704: INFO: wait on agnhost-primary startup in kubectl-2388 
Aug 13 12:59:35.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2388 logs agnhost-primary-tt79z agnhost-primary'
Aug 13 12:59:35.771: INFO: stderr: ""
Aug 13 12:59:35.771: INFO: stdout: "Paused\n"
STEP: exposing RC
Aug 13 12:59:35.771: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2388 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Aug 13 12:59:35.838: INFO: stderr: ""
Aug 13 12:59:35.838: INFO: stdout: "service/rm2 exposed\n"
Aug 13 12:59:35.849: INFO: Service rm2 in namespace kubectl-2388 found.
STEP: exposing service
Aug 13 12:59:37.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2388 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Aug 13 12:59:37.933: INFO: stderr: ""
Aug 13 12:59:37.933: INFO: stdout: "service/rm3 exposed\n"
Aug 13 12:59:37.949: INFO: Service rm3 in namespace kubectl-2388 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 12:59:39.957: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2388" for this suite.

• [SLOW TEST:6.640 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":239,"skipped":4540,"failed":0}
SS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:39.969: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9544
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 13 12:59:40.133: INFO: The status of Pod annotationupdate4a1f6dfe-e922-4fa9-97a5-f2577c814704 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:59:42.141: INFO: The status of Pod annotationupdate4a1f6dfe-e922-4fa9-97a5-f2577c814704 is Running (Ready = true)
Aug 13 12:59:42.665: INFO: Successfully updated pod "annotationupdate4a1f6dfe-e922-4fa9-97a5-f2577c814704"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 12:59:46.688: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9544" for this suite.

• [SLOW TEST:6.730 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":240,"skipped":4542,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:46.699: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-1777
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-8827
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-8693
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 13 12:59:53.107: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-1777" for this suite.
STEP: Destroying namespace "nsdeletetest-8827" for this suite.
Aug 13 12:59:53.118: INFO: Namespace nsdeletetest-8827 was already deleted
STEP: Destroying namespace "nsdeletetest-8693" for this suite.

• [SLOW TEST:6.426 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":241,"skipped":4546,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:53.126: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-5141
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug 13 12:59:53.303: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-5141" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":242,"skipped":4560,"failed":0}
SSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:53.312: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-6976
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Aug 13 12:59:53.453: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Aug 13 12:59:55.458: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Aug 13 12:59:56.480: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 13 12:59:57.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-6976" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":243,"skipped":4564,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 12:59:57.511: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5115
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 12:59:58.253: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:00:01.276: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Aug 13 13:00:03.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=webhook-5115 attach --namespace=webhook-5115 to-be-attached-pod -i -c=container1'
Aug 13 13:00:03.385: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:00:03.392: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5115" for this suite.
STEP: Destroying namespace "webhook-5115-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.950 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":244,"skipped":4584,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:00:03.461: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Aug 13 13:00:05.616: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 13 13:00:11.744: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4874" for this suite.

• [SLOW TEST:8.297 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":245,"skipped":4592,"failed":0}
SSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:00:11.758: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1655
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-70a28bcd-a917-4691-ab1e-957c794af811
STEP: Creating a pod to test consume secrets
Aug 13 13:00:11.905: INFO: Waiting up to 5m0s for pod "pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf" in namespace "secrets-1655" to be "Succeeded or Failed"
Aug 13 13:00:11.910: INFO: Pod "pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf": Phase="Pending", Reason="", readiness=false. Elapsed: 4.614105ms
Aug 13 13:00:13.917: INFO: Pod "pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011996094s
Aug 13 13:00:15.923: INFO: Pod "pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017590866s
STEP: Saw pod success
Aug 13 13:00:15.923: INFO: Pod "pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf" satisfied condition "Succeeded or Failed"
Aug 13 13:00:15.925: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 13:00:15.941: INFO: Waiting for pod pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf to disappear
Aug 13 13:00:15.944: INFO: Pod pod-secrets-870272ec-7086-4789-af7c-497b939ae5bf no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 13:00:15.944: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1655" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":246,"skipped":4596,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:00:15.954: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7281
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-7281
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7281 to expose endpoints map[]
Aug 13 13:00:16.107: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Aug 13 13:00:17.119: INFO: successfully validated that service endpoint-test2 in namespace services-7281 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-7281
Aug 13 13:00:17.133: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:00:19.136: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7281 to expose endpoints map[pod1:[80]]
Aug 13 13:00:19.153: INFO: successfully validated that service endpoint-test2 in namespace services-7281 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Aug 13 13:00:19.153: INFO: Creating new exec pod
Aug 13 13:00:22.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7281 exec execpodth724 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 13 13:00:22.369: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 13 13:00:22.369: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:00:22.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7281 exec execpodth724 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.75 80'
Aug 13 13:00:22.503: INFO: stderr: "+ nc -v -t -w 2 10.152.183.75 80\nConnection to 10.152.183.75 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Aug 13 13:00:22.503: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-7281
Aug 13 13:00:22.517: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:00:24.522: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7281 to expose endpoints map[pod1:[80] pod2:[80]]
Aug 13 13:00:24.539: INFO: successfully validated that service endpoint-test2 in namespace services-7281 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Aug 13 13:00:25.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7281 exec execpodth724 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 13 13:00:25.683: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 13 13:00:25.683: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:00:25.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7281 exec execpodth724 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.75 80'
Aug 13 13:00:25.791: INFO: stderr: "+ nc -v -t -w 2 10.152.183.75 80\nConnection to 10.152.183.75 80 port [tcp/http] succeeded!\n+ echo hostName\n"
Aug 13 13:00:25.791: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-7281
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7281 to expose endpoints map[pod2:[80]]
Aug 13 13:00:25.829: INFO: successfully validated that service endpoint-test2 in namespace services-7281 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Aug 13 13:00:26.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7281 exec execpodth724 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 13 13:00:26.964: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 13 13:00:26.964: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:00:26.964: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-7281 exec execpodth724 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.75 80'
Aug 13 13:00:27.102: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.75 80\nConnection to 10.152.183.75 80 port [tcp/http] succeeded!\n"
Aug 13 13:00:27.102: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-7281
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-7281 to expose endpoints map[]
Aug 13 13:00:28.144: INFO: successfully validated that service endpoint-test2 in namespace services-7281 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 13:00:28.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7281" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:12.232 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":247,"skipped":4622,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:00:28.187: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1537
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1537.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1537.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1537.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1537.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 13:00:30.355: INFO: DNS probes using dns-1537/dns-test-e8e7fc87-2e60-4f93-b5ef-dc9c2cfc1f01 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 13:00:30.382: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1537" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":248,"skipped":4642,"failed":0}
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:00:30.393: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-339
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-339
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-339
Aug 13 13:00:30.587: INFO: Found 0 stateful pods, waiting for 1
Aug 13 13:00:40.596: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Aug 13 13:00:40.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-339 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 13:00:40.749: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 13:00:40.749: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 13:00:40.749: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 13:00:40.752: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 13 13:00:50.761: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 13:00:50.761: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 13:00:50.775: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Aug 13 13:00:50.775: INFO: ss-0  ip-172-31-79-226  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:40 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:30 +0000 UTC  }]
Aug 13 13:00:50.775: INFO: 
Aug 13 13:00:50.775: INFO: StatefulSet ss has not reached scale 3, at 1
Aug 13 13:00:51.779: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995507919s
Aug 13 13:00:52.786: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991674305s
Aug 13 13:00:53.792: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.985491532s
Aug 13 13:00:54.801: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979968792s
Aug 13 13:00:55.807: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.969801228s
Aug 13 13:00:56.812: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.964460573s
Aug 13 13:00:57.816: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.959035182s
Aug 13 13:00:58.822: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.956056122s
Aug 13 13:00:59.827: INFO: Verifying statefulset ss doesn't scale past 3 for another 949.280063ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-339
Aug 13 13:01:00.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-339 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 13:01:00.986: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 13 13:01:00.986: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 13:01:00.986: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 13 13:01:00.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-339 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 13:01:01.132: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 13 13:01:01.132: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 13:01:01.132: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 13 13:01:01.132: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-339 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 13:01:01.283: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 13 13:01:01.283: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 13:01:01.283: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 13 13:01:01.288: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Aug 13 13:01:11.298: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:01:11.298: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:01:11.298: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Aug 13 13:01:11.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-339 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 13:01:11.438: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 13:01:11.438: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 13:01:11.438: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 13:01:11.438: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-339 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 13:01:11.578: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 13:01:11.578: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 13:01:11.578: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 13:01:11.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-339 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 13:01:11.717: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 13:01:11.717: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 13:01:11.717: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 13:01:11.717: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 13:01:11.721: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug 13 13:01:21.728: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 13:01:21.728: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 13:01:21.728: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 13 13:01:21.741: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Aug 13 13:01:21.741: INFO: ss-0  ip-172-31-79-226  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:01:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:01:11 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:30 +0000 UTC  }]
Aug 13 13:01:21.741: INFO: ss-1  ip-172-31-3-251   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:50 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:01:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:01:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:50 +0000 UTC  }]
Aug 13 13:01:21.741: INFO: ss-2  ip-172-31-22-206  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:50 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:01:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:01:12 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:00:50 +0000 UTC  }]
Aug 13 13:01:21.741: INFO: 
Aug 13 13:01:21.741: INFO: StatefulSet ss has not reached scale 0, at 3
Aug 13 13:01:22.746: INFO: Verifying statefulset ss doesn't scale past 0 for another 8.994711766s
Aug 13 13:01:23.751: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.99066472s
Aug 13 13:01:24.757: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.985893673s
Aug 13 13:01:25.761: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.979641997s
Aug 13 13:01:26.767: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.974715015s
Aug 13 13:01:27.774: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.968877212s
Aug 13 13:01:28.779: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.962684018s
Aug 13 13:01:29.784: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.956775187s
Aug 13 13:01:30.790: INFO: Verifying statefulset ss doesn't scale past 0 for another 952.530373ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-339
Aug 13 13:01:31.795: INFO: Scaling statefulset ss to 0
Aug 13 13:01:31.806: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 13:01:31.808: INFO: Deleting all statefulset in ns statefulset-339
Aug 13 13:01:31.811: INFO: Scaling statefulset ss to 0
Aug 13 13:01:31.821: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 13:01:31.824: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 13:01:31.842: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-339" for this suite.

• [SLOW TEST:61.467 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":249,"skipped":4644,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:01:31.861: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-3826
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-csbm
STEP: Creating a pod to test atomic-volume-subpath
Aug 13 13:01:32.006: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-csbm" in namespace "subpath-3826" to be "Succeeded or Failed"
Aug 13 13:01:32.011: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Pending", Reason="", readiness=false. Elapsed: 5.591985ms
Aug 13 13:01:34.018: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 2.011896185s
Aug 13 13:01:36.023: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 4.017090672s
Aug 13 13:01:38.026: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 6.020130608s
Aug 13 13:01:40.034: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 8.028486791s
Aug 13 13:01:42.041: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 10.035220651s
Aug 13 13:01:44.046: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 12.040574791s
Aug 13 13:01:46.052: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 14.045710707s
Aug 13 13:01:48.056: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 16.049671321s
Aug 13 13:01:50.068: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 18.061628716s
Aug 13 13:01:52.072: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=true. Elapsed: 20.066037262s
Aug 13 13:01:54.081: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Running", Reason="", readiness=false. Elapsed: 22.074818634s
Aug 13 13:01:56.087: INFO: Pod "pod-subpath-test-configmap-csbm": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.081029712s
STEP: Saw pod success
Aug 13 13:01:56.087: INFO: Pod "pod-subpath-test-configmap-csbm" satisfied condition "Succeeded or Failed"
Aug 13 13:01:56.089: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-subpath-test-configmap-csbm container test-container-subpath-configmap-csbm: <nil>
STEP: delete the pod
Aug 13 13:01:56.112: INFO: Waiting for pod pod-subpath-test-configmap-csbm to disappear
Aug 13 13:01:56.116: INFO: Pod pod-subpath-test-configmap-csbm no longer exists
STEP: Deleting pod pod-subpath-test-configmap-csbm
Aug 13 13:01:56.116: INFO: Deleting pod "pod-subpath-test-configmap-csbm" in namespace "subpath-3826"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 13 13:01:56.118: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3826" for this suite.

• [SLOW TEST:24.267 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":250,"skipped":4675,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:01:56.129: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-7699
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug 13 13:01:56.295: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-7699" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":251,"skipped":4692,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:01:56.305: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-8106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 13 13:02:00.508: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-8106" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":252,"skipped":4712,"failed":0}
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:02:00.520: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-3625
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 13 13:02:00.655: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-3625" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":253,"skipped":4719,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:02:00.664: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-34674e95-b278-498a-b6c7-70ba2d73f9a3
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 13:02:02.833: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3348" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":254,"skipped":4762,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:02:02.841: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4809
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Aug 13 13:02:02.987: INFO: The status of Pod pod-hostip-90bbe46d-3efc-4ad7-86e7-f9f5f8473fe5 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:02:04.991: INFO: The status of Pod pod-hostip-90bbe46d-3efc-4ad7-86e7-f9f5f8473fe5 is Running (Ready = true)
Aug 13 13:02:04.998: INFO: Pod pod-hostip-90bbe46d-3efc-4ad7-86e7-f9f5f8473fe5 has hostIP: 172.31.3.251
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 13:02:04.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4809" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":255,"skipped":4768,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:02:05.007: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-1594
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-1594
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug 13 13:02:05.149: INFO: Found 0 stateful pods, waiting for 3
Aug 13 13:02:15.155: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:02:15.155: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:02:15.155: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 13 13:02:15.189: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Aug 13 13:02:25.224: INFO: Updating stateful set ss2
Aug 13 13:02:25.230: INFO: Waiting for Pod statefulset-1594/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Aug 13 13:02:35.275: INFO: Found 2 stateful pods, waiting for 3
Aug 13 13:02:45.280: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:02:45.280: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:02:45.280: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Aug 13 13:02:45.310: INFO: Updating stateful set ss2
Aug 13 13:02:45.315: INFO: Waiting for Pod statefulset-1594/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Aug 13 13:02:55.344: INFO: Updating stateful set ss2
Aug 13 13:02:55.353: INFO: Waiting for StatefulSet statefulset-1594/ss2 to complete update
Aug 13 13:02:55.353: INFO: Waiting for Pod statefulset-1594/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 13:03:05.361: INFO: Deleting all statefulset in ns statefulset-1594
Aug 13 13:03:05.363: INFO: Scaling statefulset ss2 to 0
Aug 13 13:03:15.387: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 13:03:15.391: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 13:03:15.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-1594" for this suite.

• [SLOW TEST:70.423 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":256,"skipped":4790,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:03:15.430: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-4722
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:03:15.557: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Aug 13 13:03:18.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 create -f -'
Aug 13 13:03:18.986: INFO: stderr: ""
Aug 13 13:03:18.986: INFO: stdout: "e2e-test-crd-publish-openapi-571-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 13 13:03:18.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 delete e2e-test-crd-publish-openapi-571-crds test-foo'
Aug 13 13:03:19.052: INFO: stderr: ""
Aug 13 13:03:19.052: INFO: stdout: "e2e-test-crd-publish-openapi-571-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Aug 13 13:03:19.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 apply -f -'
Aug 13 13:03:19.675: INFO: stderr: ""
Aug 13 13:03:19.675: INFO: stdout: "e2e-test-crd-publish-openapi-571-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 13 13:03:19.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 delete e2e-test-crd-publish-openapi-571-crds test-foo'
Aug 13 13:03:19.733: INFO: stderr: ""
Aug 13 13:03:19.733: INFO: stdout: "e2e-test-crd-publish-openapi-571-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Aug 13 13:03:19.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 create -f -'
Aug 13 13:03:19.878: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Aug 13 13:03:19.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 create -f -'
Aug 13 13:03:20.016: INFO: rc: 1
Aug 13 13:03:20.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 apply -f -'
Aug 13 13:03:20.244: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Aug 13 13:03:20.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 create -f -'
Aug 13 13:03:20.383: INFO: rc: 1
Aug 13 13:03:20.383: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 --namespace=crd-publish-openapi-4722 apply -f -'
Aug 13 13:03:20.529: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Aug 13 13:03:20.529: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 explain e2e-test-crd-publish-openapi-571-crds'
Aug 13 13:03:20.686: INFO: stderr: ""
Aug 13 13:03:20.686: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-571-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Aug 13 13:03:20.687: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 explain e2e-test-crd-publish-openapi-571-crds.metadata'
Aug 13 13:03:20.841: INFO: stderr: ""
Aug 13 13:03:20.841: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-571-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Aug 13 13:03:20.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 explain e2e-test-crd-publish-openapi-571-crds.spec'
Aug 13 13:03:20.988: INFO: stderr: ""
Aug 13 13:03:20.988: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-571-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Aug 13 13:03:20.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 explain e2e-test-crd-publish-openapi-571-crds.spec.bars'
Aug 13 13:03:21.139: INFO: stderr: ""
Aug 13 13:03:21.139: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-571-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Aug 13 13:03:21.139: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-4722 explain e2e-test-crd-publish-openapi-571-crds.spec.bars2'
Aug 13 13:03:21.283: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:03:23.471: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-4722" for this suite.

• [SLOW TEST:8.057 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":257,"skipped":4836,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:03:23.488: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-6485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Aug 13 13:03:23.626: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Aug 13 13:03:23.632: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 13 13:03:23.632: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Aug 13 13:03:23.643: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 13 13:03:23.643: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Aug 13 13:03:23.652: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Aug 13 13:03:23.652: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Aug 13 13:03:30.697: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Aug 13 13:03:30.708: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-6485" for this suite.

• [SLOW TEST:7.231 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":258,"skipped":4879,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:03:30.719: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3291
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Aug 13 13:03:30.862: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3291" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":259,"skipped":4892,"failed":0}
SSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:03:30.873: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6598
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Aug 13 13:03:31.016: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6598  4637186f-69a8-4e8d-97de-145197385b67 29912 0 2022-08-13 13:03:31 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-08-13 13:03:31 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mkrmw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mkrmw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:03:31.029: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:03:33.038: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Aug 13 13:03:33.038: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6598 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:03:33.038: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:03:33.038: INFO: ExecWithOptions: Clientset creation
Aug 13 13:03:33.038: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6598/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Aug 13 13:03:33.133: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6598 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:03:33.133: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:03:33.134: INFO: ExecWithOptions: Clientset creation
Aug 13 13:03:33.134: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6598/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 13 13:03:33.230: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 13:03:33.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6598" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":260,"skipped":4898,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:03:33.257: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-1297
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-dll5
STEP: Creating a pod to test atomic-volume-subpath
Aug 13 13:03:33.408: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-dll5" in namespace "subpath-1297" to be "Succeeded or Failed"
Aug 13 13:03:33.411: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.162178ms
Aug 13 13:03:35.420: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 2.012256237s
Aug 13 13:03:37.430: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 4.021750337s
Aug 13 13:03:39.437: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 6.028565465s
Aug 13 13:03:41.445: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 8.03695705s
Aug 13 13:03:43.453: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 10.044715256s
Aug 13 13:03:45.461: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 12.05315417s
Aug 13 13:03:47.471: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 14.062971067s
Aug 13 13:03:49.476: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 16.068496382s
Aug 13 13:03:51.486: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 18.077968712s
Aug 13 13:03:53.493: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=true. Elapsed: 20.084939933s
Aug 13 13:03:55.501: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Running", Reason="", readiness=false. Elapsed: 22.092634099s
Aug 13 13:03:57.509: INFO: Pod "pod-subpath-test-configmap-dll5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.101148836s
STEP: Saw pod success
Aug 13 13:03:57.509: INFO: Pod "pod-subpath-test-configmap-dll5" satisfied condition "Succeeded or Failed"
Aug 13 13:03:57.512: INFO: Trying to get logs from node ip-172-31-3-251 pod pod-subpath-test-configmap-dll5 container test-container-subpath-configmap-dll5: <nil>
STEP: delete the pod
Aug 13 13:03:57.543: INFO: Waiting for pod pod-subpath-test-configmap-dll5 to disappear
Aug 13 13:03:57.545: INFO: Pod pod-subpath-test-configmap-dll5 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-dll5
Aug 13 13:03:57.545: INFO: Deleting pod "pod-subpath-test-configmap-dll5" in namespace "subpath-1297"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 13 13:03:57.548: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-1297" for this suite.

• [SLOW TEST:24.302 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":261,"skipped":4919,"failed":0}
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:03:57.559: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2070
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 13:03:58.229: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:04:01.253: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:04:13.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2070" for this suite.
STEP: Destroying namespace "webhook-2070-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.926 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":262,"skipped":4919,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:04:13.486: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 13 13:04:13.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-8674 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Aug 13 13:04:13.709: INFO: stderr: ""
Aug 13 13:04:13.709: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Aug 13 13:04:13.717: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-8674 delete pods e2e-test-httpd-pod'
Aug 13 13:04:15.670: INFO: stderr: ""
Aug 13 13:04:15.670: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 13:04:15.670: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8674" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":263,"skipped":4952,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:04:15.685: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2571
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Aug 13 13:04:15.817: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Aug 13 13:04:15.817: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 create -f -'
Aug 13 13:04:16.255: INFO: stderr: ""
Aug 13 13:04:16.255: INFO: stdout: "service/agnhost-replica created\n"
Aug 13 13:04:16.256: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Aug 13 13:04:16.256: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 create -f -'
Aug 13 13:04:16.762: INFO: stderr: ""
Aug 13 13:04:16.762: INFO: stdout: "service/agnhost-primary created\n"
Aug 13 13:04:16.762: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Aug 13 13:04:16.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 create -f -'
Aug 13 13:04:16.912: INFO: stderr: ""
Aug 13 13:04:16.912: INFO: stdout: "service/frontend created\n"
Aug 13 13:04:16.912: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Aug 13 13:04:16.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 create -f -'
Aug 13 13:04:17.077: INFO: stderr: ""
Aug 13 13:04:17.077: INFO: stdout: "deployment.apps/frontend created\n"
Aug 13 13:04:17.077: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 13 13:04:17.077: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 create -f -'
Aug 13 13:04:17.315: INFO: stderr: ""
Aug 13 13:04:17.315: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Aug 13 13:04:17.315: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 13 13:04:17.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 create -f -'
Aug 13 13:04:17.516: INFO: stderr: ""
Aug 13 13:04:17.516: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Aug 13 13:04:17.516: INFO: Waiting for all frontend pods to be Running.
Aug 13 13:04:22.569: INFO: Waiting for frontend to serve content.
Aug 13 13:04:22.579: INFO: Trying to add a new entry to the guestbook.
Aug 13 13:04:22.590: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Aug 13 13:04:22.602: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 delete --grace-period=0 --force -f -'
Aug 13 13:04:22.699: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:04:22.699: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Aug 13 13:04:22.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 delete --grace-period=0 --force -f -'
Aug 13 13:04:22.795: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:04:22.795: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 13 13:04:22.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 delete --grace-period=0 --force -f -'
Aug 13 13:04:22.862: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:04:22.862: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 13 13:04:22.863: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 delete --grace-period=0 --force -f -'
Aug 13 13:04:22.917: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:04:22.917: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 13 13:04:22.917: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 delete --grace-period=0 --force -f -'
Aug 13 13:04:22.975: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:04:22.975: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 13 13:04:22.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2571 delete --grace-period=0 --force -f -'
Aug 13 13:04:23.076: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:04:23.076: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 13:04:23.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2571" for this suite.

• [SLOW TEST:7.411 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":264,"skipped":4964,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:04:23.096: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5175
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-2f19f28b-e14a-4656-b314-b9de86db71f2 in namespace container-probe-5175
Aug 13 13:04:25.270: INFO: Started pod liveness-2f19f28b-e14a-4656-b314-b9de86db71f2 in namespace container-probe-5175
STEP: checking the pod's current state and verifying that restartCount is present
Aug 13 13:04:25.274: INFO: Initial restart count of pod liveness-2f19f28b-e14a-4656-b314-b9de86db71f2 is 0
Aug 13 13:04:45.363: INFO: Restart count of pod container-probe-5175/liveness-2f19f28b-e14a-4656-b314-b9de86db71f2 is now 1 (20.088424915s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 13:04:45.374: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5175" for this suite.

• [SLOW TEST:22.287 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":265,"skipped":4993,"failed":0}
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:04:45.383: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7027
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7027
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug 13 13:04:45.537: INFO: Found 0 stateful pods, waiting for 3
Aug 13 13:04:55.555: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:04:55.555: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:04:55.555: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:04:55.564: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-7027 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 13:04:55.705: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 13:04:55.705: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 13:04:55.705: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 13 13:05:05.753: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Aug 13 13:05:15.782: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-7027 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 13:05:15.899: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 13 13:05:15.899: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 13:05:15.899: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Aug 13 13:05:25.934: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-7027 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 13 13:05:26.074: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 13 13:05:26.074: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 13 13:05:26.074: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 13 13:05:36.123: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Aug 13 13:05:46.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=statefulset-7027 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 13 13:05:46.294: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 13 13:05:46.294: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 13 13:05:46.294: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 13:05:56.330: INFO: Deleting all statefulset in ns statefulset-7027
Aug 13 13:05:56.332: INFO: Scaling statefulset ss2 to 0
Aug 13 13:06:06.362: INFO: Waiting for statefulset status.replicas updated to 0
Aug 13 13:06:06.364: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 13:06:06.380: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7027" for this suite.

• [SLOW TEST:81.007 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":266,"skipped":4999,"failed":0}
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:06:06.390: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-6967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Aug 13 13:06:06.525: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 13 13:07:06.542: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:07:06.545: INFO: Starting informer...
STEP: Starting pod...
Aug 13 13:07:06.765: INFO: Pod is running on ip-172-31-79-226. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Aug 13 13:07:06.779: INFO: Pod wasn't evicted. Proceeding
Aug 13 13:07:06.779: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Aug 13 13:08:21.796: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Aug 13 13:08:21.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-6967" for this suite.

• [SLOW TEST:135.424 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":267,"skipped":4999,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:21.815: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-90
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 13:08:21.955: INFO: Waiting up to 5m0s for pod "downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6" in namespace "projected-90" to be "Succeeded or Failed"
Aug 13 13:08:21.962: INFO: Pod "downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6": Phase="Pending", Reason="", readiness=false. Elapsed: 6.628677ms
Aug 13 13:08:23.970: INFO: Pod "downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014923842s
Aug 13 13:08:25.978: INFO: Pod "downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022208219s
STEP: Saw pod success
Aug 13 13:08:25.978: INFO: Pod "downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6" satisfied condition "Succeeded or Failed"
Aug 13 13:08:25.982: INFO: Trying to get logs from node ip-172-31-3-251 pod downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6 container client-container: <nil>
STEP: delete the pod
Aug 13 13:08:26.005: INFO: Waiting for pod downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6 to disappear
Aug 13 13:08:26.008: INFO: Pod downwardapi-volume-2d5db265-23ca-445c-9ffa-cb40bff83ed6 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 13:08:26.008: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-90" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":268,"skipped":5014,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:26.020: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2335
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-a596d8b0-5fc2-4ade-80f4-6cf53b0c33a9
STEP: Creating configMap with name cm-test-opt-upd-0f8eb140-38bd-4f47-945a-aee35f0a4c77
STEP: Creating the pod
Aug 13 13:08:26.183: INFO: The status of Pod pod-projected-configmaps-20376711-15c0-4854-879f-e5f98686ac28 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:08:28.191: INFO: The status of Pod pod-projected-configmaps-20376711-15c0-4854-879f-e5f98686ac28 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:08:30.191: INFO: The status of Pod pod-projected-configmaps-20376711-15c0-4854-879f-e5f98686ac28 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-a596d8b0-5fc2-4ade-80f4-6cf53b0c33a9
STEP: Updating configmap cm-test-opt-upd-0f8eb140-38bd-4f47-945a-aee35f0a4c77
STEP: Creating configMap with name cm-test-opt-create-1b949bf7-7c54-47a0-b5c9-920e4540744e
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 13:08:34.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2335" for this suite.

• [SLOW TEST:8.261 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":269,"skipped":5016,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:34.282: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9552
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:08:34.421: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 13 13:08:39.437: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Aug 13 13:08:39.446: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Aug 13 13:08:39.533: INFO: observed ReplicaSet test-rs in namespace replicaset-9552 with ReadyReplicas 1, AvailableReplicas 1
Aug 13 13:08:39.559: INFO: observed ReplicaSet test-rs in namespace replicaset-9552 with ReadyReplicas 1, AvailableReplicas 1
Aug 13 13:08:39.582: INFO: observed ReplicaSet test-rs in namespace replicaset-9552 with ReadyReplicas 1, AvailableReplicas 1
Aug 13 13:08:39.598: INFO: observed ReplicaSet test-rs in namespace replicaset-9552 with ReadyReplicas 1, AvailableReplicas 1
Aug 13 13:08:41.127: INFO: observed ReplicaSet test-rs in namespace replicaset-9552 with ReadyReplicas 2, AvailableReplicas 2
Aug 13 13:08:41.212: INFO: observed Replicaset test-rs in namespace replicaset-9552 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 13 13:08:41.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9552" for this suite.

• [SLOW TEST:6.945 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":270,"skipped":5038,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:41.227: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-6286
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Aug 13 13:08:41.365: INFO: Waiting up to 5m0s for pod "client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46" in namespace "containers-6286" to be "Succeeded or Failed"
Aug 13 13:08:41.369: INFO: Pod "client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46": Phase="Pending", Reason="", readiness=false. Elapsed: 4.07986ms
Aug 13 13:08:43.377: INFO: Pod "client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012073601s
Aug 13 13:08:45.387: INFO: Pod "client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021919125s
STEP: Saw pod success
Aug 13 13:08:45.387: INFO: Pod "client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46" satisfied condition "Succeeded or Failed"
Aug 13 13:08:45.389: INFO: Trying to get logs from node ip-172-31-79-226 pod client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 13:08:45.421: INFO: Waiting for pod client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46 to disappear
Aug 13 13:08:45.424: INFO: Pod client-containers-809c3ac7-6171-4b5a-8055-f34d4a4fbe46 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 13 13:08:45.424: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-6286" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":271,"skipped":5066,"failed":0}
SSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:45.435: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2929
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 13 13:08:45.595: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2929" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":272,"skipped":5070,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:45.605: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-7927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Aug 13 13:08:45.752: INFO: Waiting up to 5m0s for pod "var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6" in namespace "var-expansion-7927" to be "Succeeded or Failed"
Aug 13 13:08:45.757: INFO: Pod "var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.724887ms
Aug 13 13:08:47.766: INFO: Pod "var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014094435s
Aug 13 13:08:49.774: INFO: Pod "var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022154164s
STEP: Saw pod success
Aug 13 13:08:49.774: INFO: Pod "var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6" satisfied condition "Succeeded or Failed"
Aug 13 13:08:49.778: INFO: Trying to get logs from node ip-172-31-79-226 pod var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6 container dapi-container: <nil>
STEP: delete the pod
Aug 13 13:08:49.795: INFO: Waiting for pod var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6 to disappear
Aug 13 13:08:49.798: INFO: Pod var-expansion-990961cb-652d-4a8e-86b6-eb650c420cd6 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 13:08:49.798: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-7927" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":273,"skipped":5100,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:49.808: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-4929
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Aug 13 13:08:49.956: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:08:51.965: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 13 13:08:52.989: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-4929" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":274,"skipped":5107,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:08:52.999: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-1700
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug 13 13:08:53.136: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:09:08.359: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1700" for this suite.

• [SLOW TEST:15.374 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":275,"skipped":5128,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:08.375: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4397
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 13 13:09:08.515: INFO: The status of Pod annotationupdate3042083a-6ab5-4315-88ca-d84731d4808e is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:09:10.522: INFO: The status of Pod annotationupdate3042083a-6ab5-4315-88ca-d84731d4808e is Running (Ready = true)
Aug 13 13:09:11.048: INFO: Successfully updated pod "annotationupdate3042083a-6ab5-4315-88ca-d84731d4808e"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 13:09:15.076: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4397" for this suite.

• [SLOW TEST:6.711 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":276,"skipped":5159,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:15.087: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-4087
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 13 13:09:19.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-4087" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":277,"skipped":5176,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:19.243: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8240
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 13:09:19.639: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:09:22.661: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:09:22.664: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:09:25.778: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8240" for this suite.
STEP: Destroying namespace "webhook-8240-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.612 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":278,"skipped":5182,"failed":0}
SSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:25.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-9791
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Aug 13 13:09:26.043: INFO: created test-pod-1
Aug 13 13:09:26.050: INFO: created test-pod-2
Aug 13 13:09:26.058: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Aug 13 13:09:26.058: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-9791' to be running and ready
Aug 13 13:09:26.069: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 13 13:09:26.069: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 13 13:09:26.069: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 13 13:09:26.069: INFO: 0 / 3 pods in namespace 'pods-9791' are running and ready (0 seconds elapsed)
Aug 13 13:09:26.069: INFO: expected 0 pod replicas in namespace 'pods-9791', 0 are Running and Ready.
Aug 13 13:09:26.069: INFO: POD         NODE              PHASE    GRACE  CONDITIONS
Aug 13 13:09:26.069: INFO: test-pod-1  ip-172-31-79-226  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:09:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:09:26 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:09:26 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:09:26 +0000 UTC  }]
Aug 13 13:09:26.069: INFO: test-pod-2  ip-172-31-79-226  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-13 13:09:26 +0000 UTC  }]
Aug 13 13:09:26.069: INFO: test-pod-3                    Pending         []
Aug 13 13:09:26.069: INFO: 
Aug 13 13:09:28.081: INFO: 3 / 3 pods in namespace 'pods-9791' are running and ready (2 seconds elapsed)
Aug 13 13:09:28.081: INFO: expected 0 pod replicas in namespace 'pods-9791', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Aug 13 13:09:28.105: INFO: Pod quantity 3 is different from expected quantity 0
Aug 13 13:09:29.109: INFO: Pod quantity 3 is different from expected quantity 0
Aug 13 13:09:30.110: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 13 13:09:31.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-9791" for this suite.

• [SLOW TEST:5.262 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":279,"skipped":5186,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:31.119: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-5563
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:09:31.247: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 13 13:09:34.460: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-5563 --namespace=crd-publish-openapi-5563 create -f -'
Aug 13 13:09:35.101: INFO: stderr: ""
Aug 13 13:09:35.101: INFO: stdout: "e2e-test-crd-publish-openapi-1307-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 13 13:09:35.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-5563 --namespace=crd-publish-openapi-5563 delete e2e-test-crd-publish-openapi-1307-crds test-cr'
Aug 13 13:09:35.184: INFO: stderr: ""
Aug 13 13:09:35.184: INFO: stdout: "e2e-test-crd-publish-openapi-1307-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Aug 13 13:09:35.184: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-5563 --namespace=crd-publish-openapi-5563 apply -f -'
Aug 13 13:09:35.709: INFO: stderr: ""
Aug 13 13:09:35.709: INFO: stdout: "e2e-test-crd-publish-openapi-1307-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 13 13:09:35.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-5563 --namespace=crd-publish-openapi-5563 delete e2e-test-crd-publish-openapi-1307-crds test-cr'
Aug 13 13:09:35.765: INFO: stderr: ""
Aug 13 13:09:35.765: INFO: stdout: "e2e-test-crd-publish-openapi-1307-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 13 13:09:35.765: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=crd-publish-openapi-5563 explain e2e-test-crd-publish-openapi-1307-crds'
Aug 13 13:09:35.911: INFO: stderr: ""
Aug 13 13:09:35.911: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1307-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:09:38.084: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-5563" for this suite.

• [SLOW TEST:6.983 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":280,"skipped":5240,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:38.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8281
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-1495df4c-939c-420d-bc37-d1f52b589b1f
STEP: Creating a pod to test consume configMaps
Aug 13 13:09:38.248: INFO: Waiting up to 5m0s for pod "pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76" in namespace "configmap-8281" to be "Succeeded or Failed"
Aug 13 13:09:38.256: INFO: Pod "pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76": Phase="Pending", Reason="", readiness=false. Elapsed: 7.672945ms
Aug 13 13:09:40.264: INFO: Pod "pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015590707s
Aug 13 13:09:42.270: INFO: Pod "pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021673871s
STEP: Saw pod success
Aug 13 13:09:42.270: INFO: Pod "pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76" satisfied condition "Succeeded or Failed"
Aug 13 13:09:42.273: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 13:09:42.290: INFO: Waiting for pod pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76 to disappear
Aug 13 13:09:42.294: INFO: Pod pod-configmaps-6c7733de-a845-434d-9fc4-038ae2781c76 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 13:09:42.294: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8281" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":281,"skipped":5251,"failed":0}

------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:42.303: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-1853
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 13 13:09:42.466: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 13:09:42.466: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 13:09:42.469: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 13:09:42.469: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 13:09:43.475: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 13:09:43.475: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 13:09:43.479: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 13 13:09:43.479: INFO: Node ip-172-31-22-206 is running 0 daemon pod, expected 1
Aug 13 13:09:44.477: INFO: DaemonSet pods can't tolerate node ip-172-31-70-75 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 13:09:44.477: INFO: DaemonSet pods can't tolerate node ip-172-31-93-111 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 13 13:09:44.480: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 13 13:09:44.480: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
Aug 13 13:09:44.487: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Aug 13 13:09:44.497: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Aug 13 13:09:44.499: INFO: Observed &DaemonSet event: ADDED
Aug 13 13:09:44.499: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.499: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.499: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.499: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.499: INFO: Found daemon set daemon-set in namespace daemonsets-1853 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 13 13:09:44.499: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Aug 13 13:09:44.508: INFO: Observed &DaemonSet event: ADDED
Aug 13 13:09:44.509: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.509: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.509: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.509: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.509: INFO: Observed daemon set daemon-set in namespace daemonsets-1853 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 13 13:09:44.509: INFO: Observed &DaemonSet event: MODIFIED
Aug 13 13:09:44.509: INFO: Found daemon set daemon-set in namespace daemonsets-1853 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Aug 13 13:09:44.509: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1853, will wait for the garbage collector to delete the pods
Aug 13 13:09:44.577: INFO: Deleting DaemonSet.extensions daemon-set took: 9.567394ms
Aug 13 13:09:44.678: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.891611ms
Aug 13 13:09:47.387: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 13 13:09:47.387: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 13 13:09:47.391: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32377"},"items":null}

Aug 13 13:09:47.393: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32377"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 13 13:09:47.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-1853" for this suite.

• [SLOW TEST:5.115 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":282,"skipped":5251,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:47.419: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-8980
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 13 13:09:47.583: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 13 13:09:47.589: INFO: starting watch
STEP: patching
STEP: updating
Aug 13 13:09:47.607: INFO: waiting for watch events with expected annotations
Aug 13 13:09:47.608: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Aug 13 13:09:47.662: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-8980" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":283,"skipped":5283,"failed":0}
S
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:47.681: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-7180
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 13 13:09:47.832: INFO: Waiting up to 5m0s for pod "security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc" in namespace "security-context-7180" to be "Succeeded or Failed"
Aug 13 13:09:47.838: INFO: Pod "security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc": Phase="Pending", Reason="", readiness=false. Elapsed: 6.170137ms
Aug 13 13:09:49.847: INFO: Pod "security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015558919s
Aug 13 13:09:51.854: INFO: Pod "security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022084986s
STEP: Saw pod success
Aug 13 13:09:51.854: INFO: Pod "security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc" satisfied condition "Succeeded or Failed"
Aug 13 13:09:51.858: INFO: Trying to get logs from node ip-172-31-79-226 pod security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc container test-container: <nil>
STEP: delete the pod
Aug 13 13:09:51.877: INFO: Waiting for pod security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc to disappear
Aug 13 13:09:51.880: INFO: Pod security-context-f19765e4-2e2e-431d-be3e-ca6e524099dc no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 13 13:09:51.880: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-7180" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":284,"skipped":5284,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:51.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-9059
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:09:52.032: INFO: Waiting up to 5m0s for pod "busybox-user-65534-aabf56c4-6e75-41a4-8f12-83fe9a409236" in namespace "security-context-test-9059" to be "Succeeded or Failed"
Aug 13 13:09:52.034: INFO: Pod "busybox-user-65534-aabf56c4-6e75-41a4-8f12-83fe9a409236": Phase="Pending", Reason="", readiness=false. Elapsed: 2.89398ms
Aug 13 13:09:54.043: INFO: Pod "busybox-user-65534-aabf56c4-6e75-41a4-8f12-83fe9a409236": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011751067s
Aug 13 13:09:56.052: INFO: Pod "busybox-user-65534-aabf56c4-6e75-41a4-8f12-83fe9a409236": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02016897s
Aug 13 13:09:56.052: INFO: Pod "busybox-user-65534-aabf56c4-6e75-41a4-8f12-83fe9a409236" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 13 13:09:56.052: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-9059" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":285,"skipped":5301,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:56.063: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-41
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:09:56.241: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:09:56.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-41" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":286,"skipped":5322,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:09:56.871: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-6344
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:09:57.024: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-bdf9ba2f-cdb6-41d8-8077-a28812e0338e" in namespace "security-context-test-6344" to be "Succeeded or Failed"
Aug 13 13:09:57.028: INFO: Pod "busybox-privileged-false-bdf9ba2f-cdb6-41d8-8077-a28812e0338e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.30202ms
Aug 13 13:09:59.038: INFO: Pod "busybox-privileged-false-bdf9ba2f-cdb6-41d8-8077-a28812e0338e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014018209s
Aug 13 13:10:01.044: INFO: Pod "busybox-privileged-false-bdf9ba2f-cdb6-41d8-8077-a28812e0338e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019728061s
Aug 13 13:10:01.044: INFO: Pod "busybox-privileged-false-bdf9ba2f-cdb6-41d8-8077-a28812e0338e" satisfied condition "Succeeded or Failed"
Aug 13 13:10:01.050: INFO: Got logs for pod "busybox-privileged-false-bdf9ba2f-cdb6-41d8-8077-a28812e0338e": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 13 13:10:01.050: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6344" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5331,"failed":0}
S
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:10:01.062: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7263
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 13:11:01.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7263" for this suite.

• [SLOW TEST:60.177 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":288,"skipped":5332,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:11:01.240: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-287
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:11:01.372: INFO: Creating deployment "webserver-deployment"
Aug 13 13:11:01.377: INFO: Waiting for observed generation 1
Aug 13 13:11:03.391: INFO: Waiting for all required pods to come up
Aug 13 13:11:03.395: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Aug 13 13:11:05.408: INFO: Waiting for deployment "webserver-deployment" to complete
Aug 13 13:11:05.413: INFO: Updating deployment "webserver-deployment" with a non-existent image
Aug 13 13:11:05.424: INFO: Updating deployment webserver-deployment
Aug 13 13:11:05.424: INFO: Waiting for observed generation 2
Aug 13 13:11:07.436: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Aug 13 13:11:07.439: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Aug 13 13:11:07.443: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 13 13:11:07.452: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Aug 13 13:11:07.452: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Aug 13 13:11:07.455: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 13 13:11:07.462: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Aug 13 13:11:07.462: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Aug 13 13:11:07.471: INFO: Updating deployment webserver-deployment
Aug 13 13:11:07.471: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Aug 13 13:11:07.477: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Aug 13 13:11:07.480: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 13:11:09.496: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-287  c6f45e5c-d5a4-4b2f-9924-4999f905ec9b 33126 3 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003e51438 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:33,UpdatedReplicas:13,AvailableReplicas:8,UnavailableReplicas:25,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-13 13:11:07 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-08-13 13:11:07 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Aug 13 13:11:09.500: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-287  75c342c3-7d1e-464e-89b1-a10822679d63 33113 3 2022-08-13 13:11:05 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment c6f45e5c-d5a4-4b2f-9924-4999f905ec9b 0xc004576297 0xc004576298}] []  [{kube-controller-manager Update apps/v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6f45e5c-d5a4-4b2f-9924-4999f905ec9b\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004576358 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:13,FullyLabeledReplicas:13,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 13 13:11:09.500: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Aug 13 13:11:09.501: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-287  f7516738-7584-40c5-835c-ff494e4e8979 33123 3 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment c6f45e5c-d5a4-4b2f-9924-4999f905ec9b 0xc0045761a7 0xc0045761a8}] []  [{kube-controller-manager Update apps/v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c6f45e5c-d5a4-4b2f-9924-4999f905ec9b\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004576238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:20,FullyLabeledReplicas:20,ObservedGeneration:3,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Aug 13 13:11:09.506: INFO: Pod "webserver-deployment-55df494869-25v42" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-25v42 webserver-deployment-55df494869- deployment-287  62812db3-3509-4b20-8255-8533d276014b 32901 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc003e51f17 0xc003e51f18}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.132.38\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g2sb8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g2sb8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:192.168.132.38,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://cd6742de5bf2f234cf79971a2e85187c2eb82ee7cbfe03a8b11198adac082477,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.132.38,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.507: INFO: Pod "webserver-deployment-55df494869-2fgx7" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2fgx7 webserver-deployment-55df494869- deployment-287  c006fa48-0736-4ded-b802-03818a502a3f 32894 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004716157 0xc004716158}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.123\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bpxh7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bpxh7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.123,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://835c831cf0f8b4d0d2ece227a887aa764aa44670b8134d6b3aacafbcfaee7133,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.123,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.507: INFO: Pod "webserver-deployment-55df494869-5rm52" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5rm52 webserver-deployment-55df494869- deployment-287  794e7b25-f24e-4bcb-b2c8-043b6295c311 33112 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004716347 0xc004716348}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t4gbd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t4gbd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.507: INFO: Pod "webserver-deployment-55df494869-8x9w9" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-8x9w9 webserver-deployment-55df494869- deployment-287  91b8d7c3-5786-4ad0-9822-99139240b8ba 33103 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc0047164b0 0xc0047164b1}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9ttf7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9ttf7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.508: INFO: Pod "webserver-deployment-55df494869-b98j6" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-b98j6 webserver-deployment-55df494869- deployment-287  1c18c896-b72e-4427-80d3-1ef29d0a44a5 33158 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004716610 0xc004716611}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:08 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x8l7r,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x8l7r,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.508: INFO: Pod "webserver-deployment-55df494869-bwvsl" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-bwvsl webserver-deployment-55df494869- deployment-287  14a04ba1-0bfb-46da-9725-98976caa0bdb 33059 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc0047167d7 0xc0047167d8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-89ndk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-89ndk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.508: INFO: Pod "webserver-deployment-55df494869-g5f24" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-g5f24 webserver-deployment-55df494869- deployment-287  f87c8f4f-4dbc-4fc6-adc4-9c4af0f7b43b 32919 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc0047169b7 0xc0047169b8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.36\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-kqjtq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-kqjtq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.36,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://08a5b8fefcd021ec7788d45df4a66e56fc9160462e26bd7ae572623052bb40f2,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.36,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.508: INFO: Pod "webserver-deployment-55df494869-hbjr2" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-hbjr2 webserver-deployment-55df494869- deployment-287  798b0dbf-ae00-4b75-974e-2c2c7e5f4100 33066 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004716ba7 0xc004716ba8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8gpk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8gpk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.509: INFO: Pod "webserver-deployment-55df494869-l5x2j" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-l5x2j webserver-deployment-55df494869- deployment-287  ce62448e-8ca7-48d4-9d3c-b2615489d6f8 33076 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004716d77 0xc004716d78}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-95cx9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-95cx9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.509: INFO: Pod "webserver-deployment-55df494869-lnntc" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-lnntc webserver-deployment-55df494869- deployment-287  873a0d7e-40b8-4010-911f-1da822105e8a 33108 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004716f57 0xc004716f58}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bdmjm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bdmjm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.509: INFO: Pod "webserver-deployment-55df494869-mczdh" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-mczdh webserver-deployment-55df494869- deployment-287  7f5a6edd-3ac8-4e2c-84e3-0a21a151280e 33142 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004717127 0xc004717128}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7h2nt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7h2nt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.510: INFO: Pod "webserver-deployment-55df494869-mj4bm" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-mj4bm webserver-deployment-55df494869- deployment-287  5e0ca3a9-0e68-4ab8-a656-408c3b6d3f21 32904 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004717307 0xc004717308}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.132.52\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s99d6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s99d6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:192.168.132.52,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://1e2c20098f7cbbb97c15a252e81f5387395e20484ce67c1193fa679b0543eac5,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.132.52,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.510: INFO: Pod "webserver-deployment-55df494869-ml65k" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-ml65k webserver-deployment-55df494869- deployment-287  2444ff1a-2426-4321-a19b-9013dda29973 32907 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc0047174f7 0xc0047174f8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.132.34\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pvdr8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pvdr8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:192.168.132.34,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bd53812532cc1382db0edc6197b7c714be445f2c069cad6f31f4fa35330e8cae,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.132.34,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.510: INFO: Pod "webserver-deployment-55df494869-nmvr6" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-nmvr6 webserver-deployment-55df494869- deployment-287  f4cb6e09-f2ca-4b75-8c13-b4b9b8ab6e70 32898 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc0047176e7 0xc0047176e8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.99\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-c889d,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-c889d,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.99,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bbb751df561249a4a108d1787f7dd0adb2394efad9b93a972cd08ad27af9595b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.99,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.510: INFO: Pod "webserver-deployment-55df494869-nt262" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-nt262 webserver-deployment-55df494869- deployment-287  12f3380e-0965-4cdf-a048-7bba64a9ac37 33116 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc0047178d7 0xc0047178d8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m5849,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m5849,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.510: INFO: Pod "webserver-deployment-55df494869-qnfp5" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-qnfp5 webserver-deployment-55df494869- deployment-287  5d899b91-0e59-426f-94b7-75c3fc4527ae 33079 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004717aa7 0xc004717aa8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2mz54,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2mz54,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.511: INFO: Pod "webserver-deployment-55df494869-sln22" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-sln22 webserver-deployment-55df494869- deployment-287  dc88fec1-59ec-4d83-afc6-751c2799ef43 32891 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004717c30 0xc004717c31}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.122\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vg4fg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vg4fg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.122,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bc221997d97b523dcea5275bc10e5d046768d7e2a77420eefb19c76f35888fbe,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.122,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.511: INFO: Pod "webserver-deployment-55df494869-sx5ss" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-sx5ss webserver-deployment-55df494869- deployment-287  332f5ae3-f7a7-4c63-bcf7-afca29461504 33216 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004717e27 0xc004717e28}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:09 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b5qsk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b5qsk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.511: INFO: Pod "webserver-deployment-55df494869-td8hx" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-td8hx webserver-deployment-55df494869- deployment-287  ed2fb7b6-9e03-475c-b40b-eae18865a4b0 33095 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc004717ff7 0xc004717ff8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7s6mq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7s6mq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.512: INFO: Pod "webserver-deployment-55df494869-wnj98" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-wnj98 webserver-deployment-55df494869- deployment-287  c569a550-477b-4784-a785-4fa0b92b3673 32910 0 2022-08-13 13:11:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 f7516738-7584-40c5-835c-ff494e4e8979 0xc005fe21c7 0xc005fe21c8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f7516738-7584-40c5-835c-ff494e4e8979\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.43\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zhp9j,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zhp9j,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.43,StartTime:2022-08-13 13:11:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:11:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://490e08b6c5036f7c50c6fb8496f66dc72e6b92f9166f6c95919e59e8bd60d652,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.43,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.513: INFO: Pod "webserver-deployment-57ccb67bb8-2jmgk" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-2jmgk webserver-deployment-57ccb67bb8- deployment-287  8e709758-629e-4588-b6d9-3b7121ff3b4b 33088 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe23c7 0xc005fe23c8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-599jl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-599jl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.513: INFO: Pod "webserver-deployment-57ccb67bb8-59sd6" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-59sd6 webserver-deployment-57ccb67bb8- deployment-287  8ad37eb8-b591-40cd-ba64-d172516094a2 33102 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe25b7 0xc005fe25b8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-k4284,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-k4284,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.513: INFO: Pod "webserver-deployment-57ccb67bb8-6m7qz" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-6m7qz webserver-deployment-57ccb67bb8- deployment-287  5323eb5e-b25a-43fe-a369-34f57aed5236 33118 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe27a7 0xc005fe27a8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mpngm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mpngm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.514: INFO: Pod "webserver-deployment-57ccb67bb8-8jpsz" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-8jpsz webserver-deployment-57ccb67bb8- deployment-287  486e9ebe-3de4-45e4-ac16-290303d577cc 33114 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe2997 0xc005fe2998}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8vxph,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8vxph,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.514: INFO: Pod "webserver-deployment-57ccb67bb8-b7t5v" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-b7t5v webserver-deployment-57ccb67bb8- deployment-287  1154f7bf-68db-4153-b3eb-e2c4d4a3f0b7 33040 0 2022-08-13 13:11:05 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe2b10 0xc005fe2b11}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-brnj5,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-brnj5,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.102,StartTime:2022-08-13 13:11:05 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.102,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.514: INFO: Pod "webserver-deployment-57ccb67bb8-fdw6b" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-fdw6b webserver-deployment-57ccb67bb8- deployment-287  f195f510-3762-43d8-b8fb-82b616182a5e 33023 0 2022-08-13 13:11:05 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe2d27 0xc005fe2d28}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.132.33\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9dpvz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9dpvz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:192.168.132.33,StartTime:2022-08-13 13:11:05 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.132.33,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.514: INFO: Pod "webserver-deployment-57ccb67bb8-lns7b" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-lns7b webserver-deployment-57ccb67bb8- deployment-287  655cd9f4-5625-4150-a135-a6864851c393 33144 0 2022-08-13 13:11:05 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe2f47 0xc005fe2f48}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d9dpk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d9dpk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.37,StartTime:2022-08-13 13:11:05 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.37,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.515: INFO: Pod "webserver-deployment-57ccb67bb8-mbsph" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-mbsph webserver-deployment-57ccb67bb8- deployment-287  ca554a15-3c26-40f7-8ba5-417d17bf1bc5 33078 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe3167 0xc005fe3168}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7dqdz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7dqdz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.516: INFO: Pod "webserver-deployment-57ccb67bb8-ms997" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-ms997 webserver-deployment-57ccb67bb8- deployment-287  b5c7f2b9-2a32-48ba-9ab4-be77fbdb1794 33100 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe3357 0xc005fe3358}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lpmpb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lpmpb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.516: INFO: Pod "webserver-deployment-57ccb67bb8-mw2v7" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-mw2v7 webserver-deployment-57ccb67bb8- deployment-287  02d09f55-598b-4da2-83e3-47d50f6f4827 33085 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe3547 0xc005fe3548}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pddc4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pddc4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.517: INFO: Pod "webserver-deployment-57ccb67bb8-npm27" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-npm27 webserver-deployment-57ccb67bb8- deployment-287  f90fda05-6727-4b7e-8f6b-1af3a61c2427 33125 0 2022-08-13 13:11:07 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe36c0 0xc005fe36c1}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rzz6l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rzz6l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-22-206,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:07 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.22.206,PodIP:,StartTime:2022-08-13 13:11:07 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.517: INFO: Pod "webserver-deployment-57ccb67bb8-s57qn" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-s57qn webserver-deployment-57ccb67bb8- deployment-287  412952ab-31b8-460f-81ba-67b712f3e0f1 33014 0 2022-08-13 13:11:05 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe38a7 0xc005fe38a8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:06 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.104\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pzwgm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pzwgm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.104,StartTime:2022-08-13 13:11:05 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.104,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 13 13:11:09.517: INFO: Pod "webserver-deployment-57ccb67bb8-tzczh" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-tzczh webserver-deployment-57ccb67bb8- deployment-287  df96fbc6-f232-4948-8366-19c66cfe0071 33119 0 2022-08-13 13:11:05 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 75c342c3-7d1e-464e-89b1-a10822679d63 0xc005fe3ac7 0xc005fe3ac8}] []  [{kube-controller-manager Update v1 2022-08-13 13:11:05 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"75c342c3-7d1e-464e-89b1-a10822679d63\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:11:07 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.42\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-76cwh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-76cwh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:11:05 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.42,StartTime:2022-08-13 13:11:05 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.42,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 13:11:09.517: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-287" for this suite.

• [SLOW TEST:8.288 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":289,"skipped":5339,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:11:09.528: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2394
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-2394
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-2394
STEP: creating replication controller externalsvc in namespace services-2394
I0813 13:11:09.696901      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-2394, replica count: 2
I0813 13:11:12.747534      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0813 13:11:15.748073      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Aug 13 13:11:15.794: INFO: Creating new exec pod
Aug 13 13:11:23.824: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-2394 exec execpod7jzfp -- /bin/sh -x -c nslookup nodeport-service.services-2394.svc.cluster.local'
Aug 13 13:11:23.994: INFO: stderr: "+ nslookup nodeport-service.services-2394.svc.cluster.local\n"
Aug 13 13:11:23.994: INFO: stdout: "Server:\t\t10.152.183.87\nAddress:\t10.152.183.87#53\n\nnodeport-service.services-2394.svc.cluster.local\tcanonical name = externalsvc.services-2394.svc.cluster.local.\nName:\texternalsvc.services-2394.svc.cluster.local\nAddress: 10.152.183.158\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-2394, will wait for the garbage collector to delete the pods
Aug 13 13:11:24.058: INFO: Deleting ReplicationController externalsvc took: 7.297448ms
Aug 13 13:11:24.158: INFO: Terminating ReplicationController externalsvc pods took: 100.822686ms
Aug 13 13:11:26.580: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 13:11:26.590: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2394" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:17.073 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":290,"skipped":5342,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:11:26.601: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6913
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-0f68bad8-1bf1-4a1d-bbc1-134b952dfdb8
STEP: Creating a pod to test consume secrets
Aug 13 13:11:26.743: INFO: Waiting up to 5m0s for pod "pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3" in namespace "secrets-6913" to be "Succeeded or Failed"
Aug 13 13:11:26.746: INFO: Pod "pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.968715ms
Aug 13 13:11:28.753: INFO: Pod "pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010322592s
Aug 13 13:11:30.761: INFO: Pod "pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018632791s
STEP: Saw pod success
Aug 13 13:11:30.761: INFO: Pod "pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3" satisfied condition "Succeeded or Failed"
Aug 13 13:11:30.764: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3 container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 13:11:30.783: INFO: Waiting for pod pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3 to disappear
Aug 13 13:11:30.786: INFO: Pod pod-secrets-ef124b44-9407-4ead-91cc-8ebd49a127e3 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 13 13:11:30.786: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6913" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":291,"skipped":5379,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:11:30.797: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-8912
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Aug 13 13:11:30.945: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33815 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 13:11:30.945: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33815 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Aug 13 13:11:30.953: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33816 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 13:11:30.954: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33816 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Aug 13 13:11:30.961: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33817 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 13:11:30.961: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33817 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Aug 13 13:11:30.969: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33818 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 13:11:30.969: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8912  4b60dbe6-2912-4d40-b9c5-87625750d6a0 33818 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Aug 13 13:11:30.974: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8912  da636b3d-1e02-4f4f-9555-04c4c1c3e8b6 33819 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 13:11:30.974: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8912  da636b3d-1e02-4f4f-9555-04c4c1c3e8b6 33819 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Aug 13 13:11:41.001: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8912  da636b3d-1e02-4f4f-9555-04c4c1c3e8b6 33878 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 13 13:11:41.001: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8912  da636b3d-1e02-4f4f-9555-04c4c1c3e8b6 33878 0 2022-08-13 13:11:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-13 13:11:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 13 13:11:51.002: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-8912" for this suite.

• [SLOW TEST:20.237 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":292,"skipped":5393,"failed":0}
S
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:11:51.034: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7836
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-7836, will wait for the garbage collector to delete the pods
Aug 13 13:11:53.242: INFO: Deleting Job.batch foo took: 7.744764ms
Aug 13 13:11:53.342: INFO: Terminating Job.batch foo pods took: 100.133662ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 13 13:12:25.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7836" for this suite.

• [SLOW TEST:34.829 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":293,"skipped":5394,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:12:25.864: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1737
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 13 13:12:26.022: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1737" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":294,"skipped":5431,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:12:26.034: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-591
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-1b2e8485-149c-491c-87fe-e68ae89d5c2b
STEP: Creating a pod to test consume configMaps
Aug 13 13:12:26.178: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca" in namespace "projected-591" to be "Succeeded or Failed"
Aug 13 13:12:26.183: INFO: Pod "pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca": Phase="Pending", Reason="", readiness=false. Elapsed: 5.084504ms
Aug 13 13:12:28.191: INFO: Pod "pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013792836s
Aug 13 13:12:30.200: INFO: Pod "pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022099257s
STEP: Saw pod success
Aug 13 13:12:30.200: INFO: Pod "pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca" satisfied condition "Succeeded or Failed"
Aug 13 13:12:30.203: INFO: Trying to get logs from node ip-172-31-3-251 pod pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca container projected-configmap-volume-test: <nil>
STEP: delete the pod
Aug 13 13:12:30.232: INFO: Waiting for pod pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca to disappear
Aug 13 13:12:30.234: INFO: Pod pod-projected-configmaps-2f1a2c08-4c17-4034-96bd-7a0115cea7ca no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 13 13:12:30.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-591" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":295,"skipped":5441,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:12:30.245: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 13:12:30.780: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:12:33.802: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Aug 13 13:12:33.824: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:12:33.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7101" for this suite.
STEP: Destroying namespace "webhook-7101-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":296,"skipped":5446,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:12:33.895: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2647
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 13:12:34.413: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:12:37.438: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:12:37.483: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2647" for this suite.
STEP: Destroying namespace "webhook-2647-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":297,"skipped":5505,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:12:37.545: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-9840
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-kv4nz in namespace proxy-9840
I0813 13:12:37.710597      18 runners.go:193] Created replication controller with name: proxy-service-kv4nz, namespace: proxy-9840, replica count: 1
I0813 13:12:38.760898      18 runners.go:193] proxy-service-kv4nz Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0813 13:12:39.760984      18 runners.go:193] proxy-service-kv4nz Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
I0813 13:12:40.761293      18 runners.go:193] proxy-service-kv4nz Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 13:12:40.771: INFO: setup took 3.0770224s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Aug 13 13:12:40.777: INFO: (0) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 5.540299ms)
Aug 13 13:12:40.779: INFO: (0) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 7.333907ms)
Aug 13 13:12:40.780: INFO: (0) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.422753ms)
Aug 13 13:12:40.781: INFO: (0) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 9.774002ms)
Aug 13 13:12:40.782: INFO: (0) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 10.205789ms)
Aug 13 13:12:40.782: INFO: (0) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 10.719429ms)
Aug 13 13:12:40.782: INFO: (0) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.812984ms)
Aug 13 13:12:40.783: INFO: (0) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 11.353347ms)
Aug 13 13:12:40.783: INFO: (0) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 10.97617ms)
Aug 13 13:12:40.784: INFO: (0) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 13.00404ms)
Aug 13 13:12:40.788: INFO: (0) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 16.118003ms)
Aug 13 13:12:40.788: INFO: (0) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 16.154829ms)
Aug 13 13:12:40.788: INFO: (0) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 16.245277ms)
Aug 13 13:12:40.789: INFO: (0) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 16.977428ms)
Aug 13 13:12:40.789: INFO: (0) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 17.558595ms)
Aug 13 13:12:40.789: INFO: (0) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 17.218912ms)
Aug 13 13:12:40.793: INFO: (1) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 4.23609ms)
Aug 13 13:12:40.794: INFO: (1) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 5.278537ms)
Aug 13 13:12:40.795: INFO: (1) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 5.557444ms)
Aug 13 13:12:40.796: INFO: (1) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 6.309951ms)
Aug 13 13:12:40.797: INFO: (1) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 7.755128ms)
Aug 13 13:12:40.798: INFO: (1) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 8.297488ms)
Aug 13 13:12:40.799: INFO: (1) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 10.08859ms)
Aug 13 13:12:40.799: INFO: (1) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.169527ms)
Aug 13 13:12:40.799: INFO: (1) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 9.814248ms)
Aug 13 13:12:40.799: INFO: (1) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 9.925271ms)
Aug 13 13:12:40.800: INFO: (1) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.662509ms)
Aug 13 13:12:40.800: INFO: (1) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 10.75602ms)
Aug 13 13:12:40.800: INFO: (1) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 11.147694ms)
Aug 13 13:12:40.801: INFO: (1) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 11.526612ms)
Aug 13 13:12:40.801: INFO: (1) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 11.527384ms)
Aug 13 13:12:40.801: INFO: (1) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 11.656136ms)
Aug 13 13:12:40.805: INFO: (2) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 4.319189ms)
Aug 13 13:12:40.807: INFO: (2) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 5.941995ms)
Aug 13 13:12:40.807: INFO: (2) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.359375ms)
Aug 13 13:12:40.809: INFO: (2) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 7.920534ms)
Aug 13 13:12:40.809: INFO: (2) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 7.913237ms)
Aug 13 13:12:40.809: INFO: (2) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 8.169721ms)
Aug 13 13:12:40.811: INFO: (2) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 9.958382ms)
Aug 13 13:12:40.811: INFO: (2) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 10.071885ms)
Aug 13 13:12:40.811: INFO: (2) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.430456ms)
Aug 13 13:12:40.811: INFO: (2) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 10.370625ms)
Aug 13 13:12:40.812: INFO: (2) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 10.309383ms)
Aug 13 13:12:40.812: INFO: (2) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 10.260351ms)
Aug 13 13:12:40.812: INFO: (2) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.412243ms)
Aug 13 13:12:40.812: INFO: (2) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 10.985809ms)
Aug 13 13:12:40.812: INFO: (2) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 10.8927ms)
Aug 13 13:12:40.812: INFO: (2) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.978074ms)
Aug 13 13:12:40.817: INFO: (3) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 4.653176ms)
Aug 13 13:12:40.820: INFO: (3) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.776618ms)
Aug 13 13:12:40.821: INFO: (3) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 8.070548ms)
Aug 13 13:12:40.821: INFO: (3) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.927848ms)
Aug 13 13:12:40.821: INFO: (3) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 8.117538ms)
Aug 13 13:12:40.821: INFO: (3) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.038725ms)
Aug 13 13:12:40.821: INFO: (3) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.268297ms)
Aug 13 13:12:40.822: INFO: (3) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.130308ms)
Aug 13 13:12:40.822: INFO: (3) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 9.027004ms)
Aug 13 13:12:40.822: INFO: (3) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 9.357197ms)
Aug 13 13:12:40.822: INFO: (3) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.903801ms)
Aug 13 13:12:40.822: INFO: (3) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 9.780904ms)
Aug 13 13:12:40.823: INFO: (3) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 9.991381ms)
Aug 13 13:12:40.823: INFO: (3) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 10.1287ms)
Aug 13 13:12:40.824: INFO: (3) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 10.962789ms)
Aug 13 13:12:40.824: INFO: (3) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 11.570576ms)
Aug 13 13:12:40.828: INFO: (4) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 3.494862ms)
Aug 13 13:12:40.829: INFO: (4) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 4.926249ms)
Aug 13 13:12:40.830: INFO: (4) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 5.182147ms)
Aug 13 13:12:40.830: INFO: (4) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 5.699408ms)
Aug 13 13:12:40.831: INFO: (4) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 6.36245ms)
Aug 13 13:12:40.831: INFO: (4) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.435529ms)
Aug 13 13:12:40.832: INFO: (4) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 7.280473ms)
Aug 13 13:12:40.832: INFO: (4) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.254599ms)
Aug 13 13:12:40.832: INFO: (4) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 7.885562ms)
Aug 13 13:12:40.833: INFO: (4) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 8.336094ms)
Aug 13 13:12:40.833: INFO: (4) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 8.801844ms)
Aug 13 13:12:40.834: INFO: (4) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 9.143154ms)
Aug 13 13:12:40.835: INFO: (4) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.846246ms)
Aug 13 13:12:40.835: INFO: (4) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.124424ms)
Aug 13 13:12:40.835: INFO: (4) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.659892ms)
Aug 13 13:12:40.836: INFO: (4) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 10.948715ms)
Aug 13 13:12:40.840: INFO: (5) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 3.994829ms)
Aug 13 13:12:40.843: INFO: (5) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.338087ms)
Aug 13 13:12:40.843: INFO: (5) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 6.96658ms)
Aug 13 13:12:40.843: INFO: (5) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.611216ms)
Aug 13 13:12:40.843: INFO: (5) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 6.906718ms)
Aug 13 13:12:40.843: INFO: (5) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 6.873189ms)
Aug 13 13:12:40.843: INFO: (5) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 7.276883ms)
Aug 13 13:12:40.844: INFO: (5) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 7.933648ms)
Aug 13 13:12:40.845: INFO: (5) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 9.160708ms)
Aug 13 13:12:40.845: INFO: (5) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 8.917349ms)
Aug 13 13:12:40.845: INFO: (5) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.845504ms)
Aug 13 13:12:40.845: INFO: (5) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.246197ms)
Aug 13 13:12:40.846: INFO: (5) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.577507ms)
Aug 13 13:12:40.846: INFO: (5) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 10.081672ms)
Aug 13 13:12:40.846: INFO: (5) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 10.270996ms)
Aug 13 13:12:40.847: INFO: (5) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.81851ms)
Aug 13 13:12:40.852: INFO: (6) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 4.460216ms)
Aug 13 13:12:40.852: INFO: (6) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 4.60339ms)
Aug 13 13:12:40.852: INFO: (6) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 4.939743ms)
Aug 13 13:12:40.853: INFO: (6) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 5.902774ms)
Aug 13 13:12:40.854: INFO: (6) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 6.752512ms)
Aug 13 13:12:40.854: INFO: (6) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 7.240139ms)
Aug 13 13:12:40.855: INFO: (6) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 7.268363ms)
Aug 13 13:12:40.856: INFO: (6) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 8.516827ms)
Aug 13 13:12:40.856: INFO: (6) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 8.517461ms)
Aug 13 13:12:40.856: INFO: (6) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.919756ms)
Aug 13 13:12:40.857: INFO: (6) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 9.328866ms)
Aug 13 13:12:40.857: INFO: (6) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 9.363584ms)
Aug 13 13:12:40.857: INFO: (6) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.698364ms)
Aug 13 13:12:40.857: INFO: (6) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 9.722789ms)
Aug 13 13:12:40.857: INFO: (6) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.571984ms)
Aug 13 13:12:40.858: INFO: (6) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.351152ms)
Aug 13 13:12:40.863: INFO: (7) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 5.674071ms)
Aug 13 13:12:40.863: INFO: (7) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 5.680694ms)
Aug 13 13:12:40.864: INFO: (7) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 6.058818ms)
Aug 13 13:12:40.864: INFO: (7) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 6.331039ms)
Aug 13 13:12:40.864: INFO: (7) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 6.141039ms)
Aug 13 13:12:40.865: INFO: (7) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 6.598634ms)
Aug 13 13:12:40.865: INFO: (7) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 7.291235ms)
Aug 13 13:12:40.865: INFO: (7) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.409459ms)
Aug 13 13:12:40.866: INFO: (7) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 8.002427ms)
Aug 13 13:12:40.866: INFO: (7) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 8.123458ms)
Aug 13 13:12:40.866: INFO: (7) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 8.448078ms)
Aug 13 13:12:40.867: INFO: (7) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 9.068249ms)
Aug 13 13:12:40.867: INFO: (7) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.929997ms)
Aug 13 13:12:40.867: INFO: (7) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.159219ms)
Aug 13 13:12:40.868: INFO: (7) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 9.902356ms)
Aug 13 13:12:40.869: INFO: (7) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 10.446121ms)
Aug 13 13:12:40.874: INFO: (8) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 4.900366ms)
Aug 13 13:12:40.874: INFO: (8) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 5.060885ms)
Aug 13 13:12:40.874: INFO: (8) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 4.914629ms)
Aug 13 13:12:40.875: INFO: (8) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 6.022416ms)
Aug 13 13:12:40.875: INFO: (8) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 5.86249ms)
Aug 13 13:12:40.875: INFO: (8) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 5.889873ms)
Aug 13 13:12:40.876: INFO: (8) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 7.083052ms)
Aug 13 13:12:40.876: INFO: (8) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 7.214877ms)
Aug 13 13:12:40.877: INFO: (8) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.678193ms)
Aug 13 13:12:40.878: INFO: (8) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 8.665857ms)
Aug 13 13:12:40.878: INFO: (8) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.266905ms)
Aug 13 13:12:40.878: INFO: (8) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 8.605531ms)
Aug 13 13:12:40.879: INFO: (8) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 9.371147ms)
Aug 13 13:12:40.879: INFO: (8) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.508063ms)
Aug 13 13:12:40.879: INFO: (8) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 9.606984ms)
Aug 13 13:12:40.879: INFO: (8) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.181506ms)
Aug 13 13:12:40.883: INFO: (9) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 3.896331ms)
Aug 13 13:12:40.885: INFO: (9) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 5.142578ms)
Aug 13 13:12:40.885: INFO: (9) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 5.019396ms)
Aug 13 13:12:40.886: INFO: (9) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 6.405078ms)
Aug 13 13:12:40.886: INFO: (9) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.811587ms)
Aug 13 13:12:40.887: INFO: (9) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 7.493593ms)
Aug 13 13:12:40.887: INFO: (9) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 8.006575ms)
Aug 13 13:12:40.887: INFO: (9) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.770531ms)
Aug 13 13:12:40.888: INFO: (9) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 8.30097ms)
Aug 13 13:12:40.888: INFO: (9) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.702632ms)
Aug 13 13:12:40.889: INFO: (9) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 9.034548ms)
Aug 13 13:12:40.889: INFO: (9) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 9.455842ms)
Aug 13 13:12:40.889: INFO: (9) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 9.341253ms)
Aug 13 13:12:40.889: INFO: (9) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 9.595795ms)
Aug 13 13:12:40.890: INFO: (9) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 10.078861ms)
Aug 13 13:12:40.891: INFO: (9) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 11.578653ms)
Aug 13 13:12:40.895: INFO: (10) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 4.187289ms)
Aug 13 13:12:40.895: INFO: (10) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 4.2088ms)
Aug 13 13:12:40.896: INFO: (10) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 5.177204ms)
Aug 13 13:12:40.897: INFO: (10) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 5.826726ms)
Aug 13 13:12:40.897: INFO: (10) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 5.739263ms)
Aug 13 13:12:40.898: INFO: (10) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 6.313123ms)
Aug 13 13:12:40.898: INFO: (10) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 6.871178ms)
Aug 13 13:12:40.899: INFO: (10) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 7.495602ms)
Aug 13 13:12:40.900: INFO: (10) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 8.162078ms)
Aug 13 13:12:40.900: INFO: (10) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 8.937907ms)
Aug 13 13:12:40.900: INFO: (10) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 9.013976ms)
Aug 13 13:12:40.901: INFO: (10) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 9.490936ms)
Aug 13 13:12:40.901: INFO: (10) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 9.852721ms)
Aug 13 13:12:40.901: INFO: (10) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 9.64659ms)
Aug 13 13:12:40.901: INFO: (10) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 9.678503ms)
Aug 13 13:12:40.902: INFO: (10) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.901956ms)
Aug 13 13:12:40.906: INFO: (11) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 4.234782ms)
Aug 13 13:12:40.908: INFO: (11) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 6.097098ms)
Aug 13 13:12:40.909: INFO: (11) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 6.565176ms)
Aug 13 13:12:40.909: INFO: (11) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 6.98816ms)
Aug 13 13:12:40.909: INFO: (11) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 7.703109ms)
Aug 13 13:12:40.909: INFO: (11) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 7.571109ms)
Aug 13 13:12:40.911: INFO: (11) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 8.697883ms)
Aug 13 13:12:40.911: INFO: (11) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 8.866857ms)
Aug 13 13:12:40.912: INFO: (11) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 10.055086ms)
Aug 13 13:12:40.912: INFO: (11) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.875517ms)
Aug 13 13:12:40.912: INFO: (11) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.403ms)
Aug 13 13:12:40.912: INFO: (11) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.034817ms)
Aug 13 13:12:40.912: INFO: (11) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 10.270927ms)
Aug 13 13:12:40.913: INFO: (11) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 10.655274ms)
Aug 13 13:12:40.913: INFO: (11) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.632652ms)
Aug 13 13:12:40.913: INFO: (11) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 11.160841ms)
Aug 13 13:12:40.918: INFO: (12) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 4.624291ms)
Aug 13 13:12:40.918: INFO: (12) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 4.190228ms)
Aug 13 13:12:40.918: INFO: (12) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 4.939481ms)
Aug 13 13:12:40.919: INFO: (12) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 5.461412ms)
Aug 13 13:12:40.919: INFO: (12) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 5.965157ms)
Aug 13 13:12:40.920: INFO: (12) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 6.675171ms)
Aug 13 13:12:40.921: INFO: (12) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 7.158578ms)
Aug 13 13:12:40.921: INFO: (12) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 7.731054ms)
Aug 13 13:12:40.922: INFO: (12) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 8.430775ms)
Aug 13 13:12:40.922: INFO: (12) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 9.048072ms)
Aug 13 13:12:40.923: INFO: (12) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 9.356017ms)
Aug 13 13:12:40.923: INFO: (12) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.73337ms)
Aug 13 13:12:40.923: INFO: (12) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 9.855581ms)
Aug 13 13:12:40.924: INFO: (12) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 10.579333ms)
Aug 13 13:12:40.924: INFO: (12) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 11.274501ms)
Aug 13 13:12:40.924: INFO: (12) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 11.192997ms)
Aug 13 13:12:40.929: INFO: (13) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 4.888235ms)
Aug 13 13:12:40.930: INFO: (13) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 5.459525ms)
Aug 13 13:12:40.931: INFO: (13) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.406366ms)
Aug 13 13:12:40.931: INFO: (13) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 6.598511ms)
Aug 13 13:12:40.932: INFO: (13) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 7.15801ms)
Aug 13 13:12:40.932: INFO: (13) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.14437ms)
Aug 13 13:12:40.933: INFO: (13) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 8.337325ms)
Aug 13 13:12:40.933: INFO: (13) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 8.431091ms)
Aug 13 13:12:40.933: INFO: (13) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 8.244032ms)
Aug 13 13:12:40.934: INFO: (13) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 9.268912ms)
Aug 13 13:12:40.935: INFO: (13) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 9.622954ms)
Aug 13 13:12:40.935: INFO: (13) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 9.946152ms)
Aug 13 13:12:40.935: INFO: (13) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 9.818843ms)
Aug 13 13:12:40.935: INFO: (13) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.627035ms)
Aug 13 13:12:40.935: INFO: (13) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 10.444753ms)
Aug 13 13:12:40.936: INFO: (13) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.976181ms)
Aug 13 13:12:40.940: INFO: (14) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 4.344691ms)
Aug 13 13:12:40.942: INFO: (14) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 6.295945ms)
Aug 13 13:12:40.943: INFO: (14) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 7.141008ms)
Aug 13 13:12:40.944: INFO: (14) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 8.196254ms)
Aug 13 13:12:40.944: INFO: (14) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.289367ms)
Aug 13 13:12:40.944: INFO: (14) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 8.504833ms)
Aug 13 13:12:40.945: INFO: (14) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 8.412695ms)
Aug 13 13:12:40.946: INFO: (14) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.810233ms)
Aug 13 13:12:40.946: INFO: (14) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.208272ms)
Aug 13 13:12:40.946: INFO: (14) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.971703ms)
Aug 13 13:12:40.946: INFO: (14) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 10.629471ms)
Aug 13 13:12:40.947: INFO: (14) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 10.536464ms)
Aug 13 13:12:40.947: INFO: (14) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.582103ms)
Aug 13 13:12:40.947: INFO: (14) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 11.477959ms)
Aug 13 13:12:40.948: INFO: (14) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 11.946459ms)
Aug 13 13:12:40.948: INFO: (14) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 11.920937ms)
Aug 13 13:12:40.953: INFO: (15) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 4.876468ms)
Aug 13 13:12:40.954: INFO: (15) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 5.548747ms)
Aug 13 13:12:40.954: INFO: (15) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 5.509988ms)
Aug 13 13:12:40.956: INFO: (15) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 7.242569ms)
Aug 13 13:12:40.956: INFO: (15) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 7.710079ms)
Aug 13 13:12:40.956: INFO: (15) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 8.117935ms)
Aug 13 13:12:40.957: INFO: (15) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 8.065326ms)
Aug 13 13:12:40.957: INFO: (15) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.366554ms)
Aug 13 13:12:40.957: INFO: (15) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 8.22593ms)
Aug 13 13:12:40.958: INFO: (15) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 9.22987ms)
Aug 13 13:12:40.959: INFO: (15) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 10.408465ms)
Aug 13 13:12:40.959: INFO: (15) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.402405ms)
Aug 13 13:12:40.959: INFO: (15) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.212189ms)
Aug 13 13:12:40.959: INFO: (15) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 10.335094ms)
Aug 13 13:12:40.959: INFO: (15) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 10.404347ms)
Aug 13 13:12:40.959: INFO: (15) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 10.620767ms)
Aug 13 13:12:40.964: INFO: (16) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 5.103789ms)
Aug 13 13:12:40.965: INFO: (16) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 5.234018ms)
Aug 13 13:12:40.966: INFO: (16) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.259514ms)
Aug 13 13:12:40.967: INFO: (16) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 7.002825ms)
Aug 13 13:12:40.967: INFO: (16) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 7.903857ms)
Aug 13 13:12:40.968: INFO: (16) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 8.265676ms)
Aug 13 13:12:40.968: INFO: (16) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.4474ms)
Aug 13 13:12:40.968: INFO: (16) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 8.851049ms)
Aug 13 13:12:40.969: INFO: (16) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 9.186251ms)
Aug 13 13:12:40.969: INFO: (16) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.041435ms)
Aug 13 13:12:40.970: INFO: (16) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 10.269219ms)
Aug 13 13:12:40.970: INFO: (16) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 10.151554ms)
Aug 13 13:12:40.971: INFO: (16) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.827458ms)
Aug 13 13:12:40.971: INFO: (16) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 10.977781ms)
Aug 13 13:12:40.971: INFO: (16) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 11.108978ms)
Aug 13 13:12:40.971: INFO: (16) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 11.554712ms)
Aug 13 13:12:40.977: INFO: (17) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 5.188288ms)
Aug 13 13:12:40.978: INFO: (17) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.333142ms)
Aug 13 13:12:40.978: INFO: (17) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 6.67845ms)
Aug 13 13:12:40.979: INFO: (17) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 7.0033ms)
Aug 13 13:12:40.979: INFO: (17) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 7.741859ms)
Aug 13 13:12:40.980: INFO: (17) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 8.258711ms)
Aug 13 13:12:40.980: INFO: (17) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 8.569742ms)
Aug 13 13:12:40.980: INFO: (17) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.195288ms)
Aug 13 13:12:40.981: INFO: (17) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.574368ms)
Aug 13 13:12:40.981: INFO: (17) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 8.845232ms)
Aug 13 13:12:40.982: INFO: (17) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 9.300741ms)
Aug 13 13:12:40.982: INFO: (17) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 10.063993ms)
Aug 13 13:12:40.982: INFO: (17) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 10.434943ms)
Aug 13 13:12:40.982: INFO: (17) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 9.986965ms)
Aug 13 13:12:40.982: INFO: (17) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 10.288737ms)
Aug 13 13:12:40.983: INFO: (17) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 10.612705ms)
Aug 13 13:12:40.988: INFO: (18) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 4.882304ms)
Aug 13 13:12:40.988: INFO: (18) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 5.546974ms)
Aug 13 13:12:40.988: INFO: (18) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 5.49139ms)
Aug 13 13:12:40.989: INFO: (18) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 6.009763ms)
Aug 13 13:12:40.990: INFO: (18) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 6.444447ms)
Aug 13 13:12:40.990: INFO: (18) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 7.004223ms)
Aug 13 13:12:40.990: INFO: (18) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 7.572168ms)
Aug 13 13:12:40.991: INFO: (18) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 8.199579ms)
Aug 13 13:12:40.992: INFO: (18) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 8.579314ms)
Aug 13 13:12:40.992: INFO: (18) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.71612ms)
Aug 13 13:12:40.992: INFO: (18) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 8.907309ms)
Aug 13 13:12:40.992: INFO: (18) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 9.30137ms)
Aug 13 13:12:40.993: INFO: (18) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 10.226517ms)
Aug 13 13:12:40.993: INFO: (18) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.50645ms)
Aug 13 13:12:40.993: INFO: (18) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.571824ms)
Aug 13 13:12:40.994: INFO: (18) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 10.602498ms)
Aug 13 13:12:40.998: INFO: (19) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 3.934911ms)
Aug 13 13:12:40.998: INFO: (19) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:443/proxy/tlsrewritem... (200; 4.395016ms)
Aug 13 13:12:41.000: INFO: (19) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:460/proxy/: tls baz (200; 5.832142ms)
Aug 13 13:12:41.000: INFO: (19) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:160/proxy/: foo (200; 6.267095ms)
Aug 13 13:12:41.001: INFO: (19) /api/v1/namespaces/proxy-9840/pods/https:proxy-service-kv4nz-mxp9w:462/proxy/: tls qux (200; 6.778563ms)
Aug 13 13:12:41.002: INFO: (19) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">... (200; 7.788791ms)
Aug 13 13:12:41.002: INFO: (19) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname2/proxy/: tls qux (200; 7.54626ms)
Aug 13 13:12:41.003: INFO: (19) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:1080/proxy/rewriteme">test<... (200; 8.861607ms)
Aug 13 13:12:41.003: INFO: (19) /api/v1/namespaces/proxy-9840/pods/http:proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 8.566684ms)
Aug 13 13:12:41.003: INFO: (19) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname2/proxy/: bar (200; 9.25092ms)
Aug 13 13:12:41.003: INFO: (19) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/: <a href="/api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w/proxy/rewriteme">test</a> (200; 9.142872ms)
Aug 13 13:12:41.004: INFO: (19) /api/v1/namespaces/proxy-9840/pods/proxy-service-kv4nz-mxp9w:162/proxy/: bar (200; 9.760295ms)
Aug 13 13:12:41.004: INFO: (19) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname1/proxy/: foo (200; 10.124576ms)
Aug 13 13:12:41.004: INFO: (19) /api/v1/namespaces/proxy-9840/services/https:proxy-service-kv4nz:tlsportname1/proxy/: tls baz (200; 10.367045ms)
Aug 13 13:12:41.005: INFO: (19) /api/v1/namespaces/proxy-9840/services/proxy-service-kv4nz:portname1/proxy/: foo (200; 10.343184ms)
Aug 13 13:12:41.005: INFO: (19) /api/v1/namespaces/proxy-9840/services/http:proxy-service-kv4nz:portname2/proxy/: bar (200; 10.476639ms)
STEP: deleting ReplicationController proxy-service-kv4nz in namespace proxy-9840, will wait for the garbage collector to delete the pods
Aug 13 13:12:41.067: INFO: Deleting ReplicationController proxy-service-kv4nz took: 8.215164ms
Aug 13 13:12:41.168: INFO: Terminating ReplicationController proxy-service-kv4nz pods took: 100.911382ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 13 13:12:43.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-9840" for this suite.

• [SLOW TEST:6.439 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":298,"skipped":5529,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:12:43.984: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4425
STEP: creating service affinity-nodeport-transition in namespace services-4425
STEP: creating replication controller affinity-nodeport-transition in namespace services-4425
I0813 13:12:44.142728      18 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-4425, replica count: 3
I0813 13:12:47.193441      18 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 13 13:12:47.211: INFO: Creating new exec pod
Aug 13 13:12:50.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4425 exec execpod-affinityq7jkv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Aug 13 13:12:50.378: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Aug 13 13:12:50.378: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:12:50.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4425 exec execpod-affinityq7jkv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.252 80'
Aug 13 13:12:50.508: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.252 80\nConnection to 10.152.183.252 80 port [tcp/http] succeeded!\n"
Aug 13 13:12:50.508: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:12:50.508: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4425 exec execpod-affinityq7jkv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.22.206 32017'
Aug 13 13:12:50.610: INFO: stderr: "+ nc -v -t -w 2 172.31.22.206 32017\n+ echo hostName\nConnection to 172.31.22.206 32017 port [tcp/*] succeeded!\n"
Aug 13 13:12:50.610: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:12:50.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4425 exec execpod-affinityq7jkv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.3.251 32017'
Aug 13 13:12:50.725: INFO: stderr: "+ nc -v -t -w 2 172.31.3.251 32017\n+ echo hostName\nConnection to 172.31.3.251 32017 port [tcp/*] succeeded!\n"
Aug 13 13:12:50.725: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:12:50.737: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4425 exec execpod-affinityq7jkv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.206:32017/ ; done'
Aug 13 13:12:50.936: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n"
Aug 13 13:12:50.936: INFO: stdout: "\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-lrqbl"
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:50.936: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:50.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4425 exec execpod-affinityq7jkv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.206:32017/ ; done'
Aug 13 13:12:51.129: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n"
Aug 13 13:12:51.129: INFO: stdout: "\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-lrqbl\naffinity-nodeport-transition-fvwkv\naffinity-nodeport-transition-lrqbl"
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-fvwkv
Aug 13 13:12:51.129: INFO: Received response from host: affinity-nodeport-transition-lrqbl
Aug 13 13:13:21.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4425 exec execpod-affinityq7jkv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.22.206:32017/ ; done'
Aug 13 13:13:21.334: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.22.206:32017/\n"
Aug 13 13:13:21.334: INFO: stdout: "\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn\naffinity-nodeport-transition-22mxn"
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.334: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Received response from host: affinity-nodeport-transition-22mxn
Aug 13 13:13:21.335: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-4425, will wait for the garbage collector to delete the pods
Aug 13 13:13:21.427: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.870739ms
Aug 13 13:13:21.528: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.828069ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 13:13:23.857: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4425" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:39.887 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":299,"skipped":5532,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:13:23.871: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1861
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1861
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 13 13:13:24.004: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 13 13:13:24.045: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:13:26.053: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:13:28.057: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:13:30.053: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:13:32.052: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:13:34.054: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:13:36.052: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 13 13:13:36.059: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 13 13:13:36.065: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 13 13:13:38.090: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 13 13:13:38.090: INFO: Breadth first check of 192.168.132.59 on host 172.31.22.206...
Aug 13 13:13:38.094: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.176.2:9080/dial?request=hostname&protocol=udp&host=192.168.132.59&port=8081&tries=1'] Namespace:pod-network-test-1861 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:13:38.094: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:13:38.094: INFO: ExecWithOptions: Clientset creation
Aug 13 13:13:38.094: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1861/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.176.2%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.132.59%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 13 13:13:38.186: INFO: Waiting for responses: map[]
Aug 13 13:13:38.186: INFO: reached 192.168.132.59 after 0/1 tries
Aug 13 13:13:38.186: INFO: Breadth first check of 192.168.74.127 on host 172.31.3.251...
Aug 13 13:13:38.190: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.176.2:9080/dial?request=hostname&protocol=udp&host=192.168.74.127&port=8081&tries=1'] Namespace:pod-network-test-1861 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:13:38.190: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:13:38.190: INFO: ExecWithOptions: Clientset creation
Aug 13 13:13:38.190: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1861/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.176.2%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.74.127%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 13 13:13:38.250: INFO: Waiting for responses: map[]
Aug 13 13:13:38.250: INFO: reached 192.168.74.127 after 0/1 tries
Aug 13 13:13:38.250: INFO: Breadth first check of 192.168.176.7 on host 172.31.79.226...
Aug 13 13:13:38.255: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.176.2:9080/dial?request=hostname&protocol=udp&host=192.168.176.7&port=8081&tries=1'] Namespace:pod-network-test-1861 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:13:38.255: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:13:38.255: INFO: ExecWithOptions: Clientset creation
Aug 13 13:13:38.255: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1861/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.176.2%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.176.7%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 13 13:13:38.308: INFO: Waiting for responses: map[]
Aug 13 13:13:38.309: INFO: reached 192.168.176.7 after 0/1 tries
Aug 13 13:13:38.309: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 13 13:13:38.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1861" for this suite.

• [SLOW TEST:14.450 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":300,"skipped":5541,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:13:38.322: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-645
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 13 13:13:38.456: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 13 13:13:43.946: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-645" for this suite.

• [SLOW TEST:5.641 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":301,"skipped":5557,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:13:43.964: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-1094
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Aug 13 13:13:44.097: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Aug 13 13:13:53.455: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:13:55.635: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:14:05.595: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1094" for this suite.

• [SLOW TEST:21.649 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":302,"skipped":5570,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:05.613: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1018
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 13:14:05.768: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197" in namespace "projected-1018" to be "Succeeded or Failed"
Aug 13 13:14:05.771: INFO: Pod "downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197": Phase="Pending", Reason="", readiness=false. Elapsed: 2.939066ms
Aug 13 13:14:07.781: INFO: Pod "downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012819484s
Aug 13 13:14:09.788: INFO: Pod "downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020471811s
STEP: Saw pod success
Aug 13 13:14:09.788: INFO: Pod "downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197" satisfied condition "Succeeded or Failed"
Aug 13 13:14:09.792: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197 container client-container: <nil>
STEP: delete the pod
Aug 13 13:14:09.822: INFO: Waiting for pod downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197 to disappear
Aug 13 13:14:09.825: INFO: Pod downwardapi-volume-4401dd92-a6bb-4efe-aeb6-e543dc477197 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 13:14:09.825: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1018" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":303,"skipped":5579,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:09.834: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4327
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 13:14:10.314: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:14:13.337: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:14:23.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4327" for this suite.
STEP: Destroying namespace "webhook-4327-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:13.710 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":304,"skipped":5581,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:23.544: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6724
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-6724/secret-test-9e4c9fb0-4589-4de3-acf7-b068fc7cae57
STEP: Creating a pod to test consume secrets
Aug 13 13:14:23.706: INFO: Waiting up to 5m0s for pod "pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47" in namespace "secrets-6724" to be "Succeeded or Failed"
Aug 13 13:14:23.712: INFO: Pod "pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47": Phase="Pending", Reason="", readiness=false. Elapsed: 5.464546ms
Aug 13 13:14:25.724: INFO: Pod "pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017557153s
Aug 13 13:14:27.734: INFO: Pod "pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027308874s
STEP: Saw pod success
Aug 13 13:14:27.734: INFO: Pod "pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47" satisfied condition "Succeeded or Failed"
Aug 13 13:14:27.737: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47 container env-test: <nil>
STEP: delete the pod
Aug 13 13:14:27.761: INFO: Waiting for pod pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47 to disappear
Aug 13 13:14:27.764: INFO: Pod pod-configmaps-da2f1de9-b889-46ee-ad42-9dfdb447cd47 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 13 13:14:27.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6724" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":305,"skipped":5607,"failed":0}
SSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:27.776: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-384
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug 13 13:14:27.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 create -f -'
Aug 13 13:14:28.979: INFO: stderr: ""
Aug 13 13:14:28.979: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 13 13:14:28.979: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 13:14:29.049: INFO: stderr: ""
Aug 13 13:14:29.049: INFO: stdout: "update-demo-nautilus-72x7j update-demo-nautilus-d4lfz "
Aug 13 13:14:29.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-72x7j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 13:14:29.104: INFO: stderr: ""
Aug 13 13:14:29.104: INFO: stdout: ""
Aug 13 13:14:29.104: INFO: update-demo-nautilus-72x7j is created but not running
Aug 13 13:14:34.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 13:14:34.164: INFO: stderr: ""
Aug 13 13:14:34.164: INFO: stdout: "update-demo-nautilus-72x7j update-demo-nautilus-d4lfz "
Aug 13 13:14:34.164: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-72x7j -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 13:14:34.216: INFO: stderr: ""
Aug 13 13:14:34.216: INFO: stdout: "true"
Aug 13 13:14:34.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-72x7j -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 13 13:14:34.266: INFO: stderr: ""
Aug 13 13:14:34.266: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 13 13:14:34.266: INFO: validating pod update-demo-nautilus-72x7j
Aug 13 13:14:34.271: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 13 13:14:34.271: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 13 13:14:34.272: INFO: update-demo-nautilus-72x7j is verified up and running
Aug 13 13:14:34.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-d4lfz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 13:14:34.326: INFO: stderr: ""
Aug 13 13:14:34.326: INFO: stdout: "true"
Aug 13 13:14:34.326: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-d4lfz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 13 13:14:34.378: INFO: stderr: ""
Aug 13 13:14:34.378: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 13 13:14:34.378: INFO: validating pod update-demo-nautilus-d4lfz
Aug 13 13:14:34.382: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 13 13:14:34.382: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 13 13:14:34.382: INFO: update-demo-nautilus-d4lfz is verified up and running
STEP: scaling down the replication controller
Aug 13 13:14:34.384: INFO: scanned /root for discovery docs: <nil>
Aug 13 13:14:34.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Aug 13 13:14:35.464: INFO: stderr: ""
Aug 13 13:14:35.464: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 13 13:14:35.464: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 13:14:35.523: INFO: stderr: ""
Aug 13 13:14:35.523: INFO: stdout: "update-demo-nautilus-d4lfz "
Aug 13 13:14:35.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-d4lfz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 13:14:35.577: INFO: stderr: ""
Aug 13 13:14:35.577: INFO: stdout: "true"
Aug 13 13:14:35.577: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-d4lfz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 13 13:14:35.630: INFO: stderr: ""
Aug 13 13:14:35.630: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 13 13:14:35.630: INFO: validating pod update-demo-nautilus-d4lfz
Aug 13 13:14:35.635: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 13 13:14:35.635: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 13 13:14:35.635: INFO: update-demo-nautilus-d4lfz is verified up and running
STEP: scaling up the replication controller
Aug 13 13:14:35.636: INFO: scanned /root for discovery docs: <nil>
Aug 13 13:14:35.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Aug 13 13:14:36.707: INFO: stderr: ""
Aug 13 13:14:36.707: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 13 13:14:36.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 13:14:36.762: INFO: stderr: ""
Aug 13 13:14:36.762: INFO: stdout: "update-demo-nautilus-6pqql update-demo-nautilus-d4lfz "
Aug 13 13:14:36.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-6pqql -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 13:14:36.814: INFO: stderr: ""
Aug 13 13:14:36.814: INFO: stdout: ""
Aug 13 13:14:36.814: INFO: update-demo-nautilus-6pqql is created but not running
Aug 13 13:14:41.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 13 13:14:41.873: INFO: stderr: ""
Aug 13 13:14:41.873: INFO: stdout: "update-demo-nautilus-6pqql update-demo-nautilus-d4lfz "
Aug 13 13:14:41.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-6pqql -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 13:14:41.933: INFO: stderr: ""
Aug 13 13:14:41.933: INFO: stdout: "true"
Aug 13 13:14:41.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-6pqql -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 13 13:14:41.985: INFO: stderr: ""
Aug 13 13:14:41.985: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 13 13:14:41.985: INFO: validating pod update-demo-nautilus-6pqql
Aug 13 13:14:41.993: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 13 13:14:41.993: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 13 13:14:41.993: INFO: update-demo-nautilus-6pqql is verified up and running
Aug 13 13:14:41.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-d4lfz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 13 13:14:42.044: INFO: stderr: ""
Aug 13 13:14:42.044: INFO: stdout: "true"
Aug 13 13:14:42.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods update-demo-nautilus-d4lfz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 13 13:14:42.096: INFO: stderr: ""
Aug 13 13:14:42.096: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 13 13:14:42.096: INFO: validating pod update-demo-nautilus-d4lfz
Aug 13 13:14:42.100: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 13 13:14:42.100: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 13 13:14:42.100: INFO: update-demo-nautilus-d4lfz is verified up and running
STEP: using delete to clean up resources
Aug 13 13:14:42.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 delete --grace-period=0 --force -f -'
Aug 13 13:14:42.158: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:14:42.158: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 13 13:14:42.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get rc,svc -l name=update-demo --no-headers'
Aug 13 13:14:42.233: INFO: stderr: "No resources found in kubectl-384 namespace.\n"
Aug 13 13:14:42.233: INFO: stdout: ""
Aug 13 13:14:42.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-384 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 13 13:14:42.300: INFO: stderr: ""
Aug 13 13:14:42.300: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 13:14:42.300: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-384" for this suite.

• [SLOW TEST:14.534 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":306,"skipped":5612,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:42.310: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-9671
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 13 13:14:46.486: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-9671" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":307,"skipped":5672,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:46.500: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-7320
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7320 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7320;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7320 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7320;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7320.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7320.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7320.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7320.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7320.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7320.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7320.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7320.svc;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7320 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7320;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7320 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7320;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7320.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7320.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7320.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7320.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7320.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7320.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7320.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7320.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7320.svc;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 13:14:48.683: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.686: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.690: INFO: Unable to read wheezy_udp@dns-test-service.dns-7320 from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.695: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7320 from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.698: INFO: Unable to read wheezy_udp@dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.702: INFO: Unable to read wheezy_tcp@dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.706: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.708: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.727: INFO: Unable to read jessie_udp@dns-test-service from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.730: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.733: INFO: Unable to read jessie_udp@dns-test-service.dns-7320 from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.737: INFO: Unable to read jessie_tcp@dns-test-service.dns-7320 from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.740: INFO: Unable to read jessie_udp@dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.744: INFO: Unable to read jessie_tcp@dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.748: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.751: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:48.764: INFO: Lookups using dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7320 wheezy_tcp@dns-test-service.dns-7320 wheezy_udp@dns-test-service.dns-7320.svc wheezy_tcp@dns-test-service.dns-7320.svc wheezy_udp@_http._tcp.dns-test-service.dns-7320.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7320.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7320 jessie_tcp@dns-test-service.dns-7320 jessie_udp@dns-test-service.dns-7320.svc jessie_tcp@dns-test-service.dns-7320.svc jessie_udp@_http._tcp.dns-test-service.dns-7320.svc jessie_tcp@_http._tcp.dns-test-service.dns-7320.svc]

Aug 13 13:14:53.794: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:53.796: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7320.svc from pod dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10: the server could not find the requested resource (get pods dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10)
Aug 13 13:14:53.854: INFO: Lookups using dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-7320.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7320.svc]

Aug 13 13:14:58.876: INFO: DNS probes using dns-7320/dns-test-2d8c4e66-9303-4004-89fa-ce300a016c10 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 13:14:58.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-7320" for this suite.

• [SLOW TEST:12.472 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":308,"skipped":5746,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:58.973: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8963
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Aug 13 13:14:59.108: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-8963 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 13:14:59.151: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8963" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":309,"skipped":5760,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:14:59.171: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5597
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 13:14:59.674: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:15:02.701: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:15:02.907: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5597" for this suite.
STEP: Destroying namespace "webhook-5597-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":310,"skipped":5815,"failed":0}
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:15:02.966: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-1444
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 13 13:15:06.139: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 13 13:15:06.153: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-1444" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":311,"skipped":5819,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:15:06.162: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5118
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 13:15:22.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5118" for this suite.

• [SLOW TEST:16.221 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":312,"skipped":5838,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:15:22.384: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-8848
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:15:22.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:15:28.747: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-8848" for this suite.

• [SLOW TEST:6.373 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":313,"skipped":5860,"failed":0}
SS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:15:28.758: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7011
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 13:15:28.897: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5" in namespace "projected-7011" to be "Succeeded or Failed"
Aug 13 13:15:28.899: INFO: Pod "downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.610502ms
Aug 13 13:15:30.908: INFO: Pod "downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011335655s
Aug 13 13:15:32.913: INFO: Pod "downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016360541s
STEP: Saw pod success
Aug 13 13:15:32.913: INFO: Pod "downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5" satisfied condition "Succeeded or Failed"
Aug 13 13:15:32.917: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5 container client-container: <nil>
STEP: delete the pod
Aug 13 13:15:32.935: INFO: Waiting for pod downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5 to disappear
Aug 13 13:15:32.938: INFO: Pod downwardapi-volume-c1855037-d84d-410a-ae17-67b8419748a5 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 13 13:15:32.938: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7011" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":314,"skipped":5862,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:15:32.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-661
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-661
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:15:33.101: INFO: Found 0 stateful pods, waiting for 1
Aug 13 13:15:43.107: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Aug 13 13:15:43.130: INFO: Found 1 stateful pods, waiting for 2
Aug 13 13:15:53.135: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 13 13:15:53.135: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 13 13:15:53.157: INFO: Deleting all statefulset in ns statefulset-661
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 13 13:15:53.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-661" for this suite.

• [SLOW TEST:20.225 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":315,"skipped":5890,"failed":0}
SSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:15:53.176: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-8433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 13 13:15:53.328: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 13 13:15:53.332: INFO: starting watch
STEP: patching
STEP: updating
Aug 13 13:15:53.349: INFO: waiting for watch events with expected annotations
Aug 13 13:15:53.349: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 13 13:15:53.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-8433" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":316,"skipped":5895,"failed":0}
SSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:15:53.408: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9774
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
W0813 13:16:33.608279      18 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 13 13:16:33.608: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Aug 13 13:16:33.608: INFO: Deleting pod "simpletest.rc-27j6r" in namespace "gc-9774"
Aug 13 13:16:33.619: INFO: Deleting pod "simpletest.rc-2htn5" in namespace "gc-9774"
Aug 13 13:16:33.630: INFO: Deleting pod "simpletest.rc-2jrck" in namespace "gc-9774"
Aug 13 13:16:33.642: INFO: Deleting pod "simpletest.rc-2szsn" in namespace "gc-9774"
Aug 13 13:16:33.654: INFO: Deleting pod "simpletest.rc-2ttjc" in namespace "gc-9774"
Aug 13 13:16:33.664: INFO: Deleting pod "simpletest.rc-44xrr" in namespace "gc-9774"
Aug 13 13:16:33.677: INFO: Deleting pod "simpletest.rc-4cgvr" in namespace "gc-9774"
Aug 13 13:16:33.689: INFO: Deleting pod "simpletest.rc-4h7mc" in namespace "gc-9774"
Aug 13 13:16:33.699: INFO: Deleting pod "simpletest.rc-4mdkk" in namespace "gc-9774"
Aug 13 13:16:33.710: INFO: Deleting pod "simpletest.rc-4w6jq" in namespace "gc-9774"
Aug 13 13:16:33.721: INFO: Deleting pod "simpletest.rc-57fbm" in namespace "gc-9774"
Aug 13 13:16:33.731: INFO: Deleting pod "simpletest.rc-59z7r" in namespace "gc-9774"
Aug 13 13:16:33.741: INFO: Deleting pod "simpletest.rc-6b5dc" in namespace "gc-9774"
Aug 13 13:16:33.750: INFO: Deleting pod "simpletest.rc-6qkqt" in namespace "gc-9774"
Aug 13 13:16:33.761: INFO: Deleting pod "simpletest.rc-7qjkh" in namespace "gc-9774"
Aug 13 13:16:33.774: INFO: Deleting pod "simpletest.rc-8jdvm" in namespace "gc-9774"
Aug 13 13:16:33.784: INFO: Deleting pod "simpletest.rc-8pbvn" in namespace "gc-9774"
Aug 13 13:16:33.794: INFO: Deleting pod "simpletest.rc-8shhs" in namespace "gc-9774"
Aug 13 13:16:33.805: INFO: Deleting pod "simpletest.rc-8tvrm" in namespace "gc-9774"
Aug 13 13:16:33.820: INFO: Deleting pod "simpletest.rc-8vqvj" in namespace "gc-9774"
Aug 13 13:16:33.836: INFO: Deleting pod "simpletest.rc-8w57r" in namespace "gc-9774"
Aug 13 13:16:33.848: INFO: Deleting pod "simpletest.rc-8x7f7" in namespace "gc-9774"
Aug 13 13:16:33.857: INFO: Deleting pod "simpletest.rc-8xpxc" in namespace "gc-9774"
Aug 13 13:16:33.868: INFO: Deleting pod "simpletest.rc-92mt5" in namespace "gc-9774"
Aug 13 13:16:33.879: INFO: Deleting pod "simpletest.rc-96lsm" in namespace "gc-9774"
Aug 13 13:16:33.888: INFO: Deleting pod "simpletest.rc-97gx7" in namespace "gc-9774"
Aug 13 13:16:33.901: INFO: Deleting pod "simpletest.rc-9q9d4" in namespace "gc-9774"
Aug 13 13:16:33.916: INFO: Deleting pod "simpletest.rc-b7cs2" in namespace "gc-9774"
Aug 13 13:16:33.937: INFO: Deleting pod "simpletest.rc-bn9fp" in namespace "gc-9774"
Aug 13 13:16:33.951: INFO: Deleting pod "simpletest.rc-bx6zn" in namespace "gc-9774"
Aug 13 13:16:33.962: INFO: Deleting pod "simpletest.rc-c568s" in namespace "gc-9774"
Aug 13 13:16:33.977: INFO: Deleting pod "simpletest.rc-c6hjt" in namespace "gc-9774"
Aug 13 13:16:33.994: INFO: Deleting pod "simpletest.rc-c9g22" in namespace "gc-9774"
Aug 13 13:16:34.003: INFO: Deleting pod "simpletest.rc-cnkml" in namespace "gc-9774"
Aug 13 13:16:34.014: INFO: Deleting pod "simpletest.rc-ddb4q" in namespace "gc-9774"
Aug 13 13:16:34.028: INFO: Deleting pod "simpletest.rc-dqnlv" in namespace "gc-9774"
Aug 13 13:16:34.042: INFO: Deleting pod "simpletest.rc-f4wlm" in namespace "gc-9774"
Aug 13 13:16:34.053: INFO: Deleting pod "simpletest.rc-fkjgk" in namespace "gc-9774"
Aug 13 13:16:34.064: INFO: Deleting pod "simpletest.rc-frfzb" in namespace "gc-9774"
Aug 13 13:16:34.074: INFO: Deleting pod "simpletest.rc-g4wtr" in namespace "gc-9774"
Aug 13 13:16:34.084: INFO: Deleting pod "simpletest.rc-gbkb5" in namespace "gc-9774"
Aug 13 13:16:34.158: INFO: Deleting pod "simpletest.rc-gqw4w" in namespace "gc-9774"
Aug 13 13:16:34.169: INFO: Deleting pod "simpletest.rc-hkqbj" in namespace "gc-9774"
Aug 13 13:16:34.179: INFO: Deleting pod "simpletest.rc-hlnhb" in namespace "gc-9774"
Aug 13 13:16:34.190: INFO: Deleting pod "simpletest.rc-hxhxx" in namespace "gc-9774"
Aug 13 13:16:34.200: INFO: Deleting pod "simpletest.rc-j9cpt" in namespace "gc-9774"
Aug 13 13:16:34.214: INFO: Deleting pod "simpletest.rc-jh9s8" in namespace "gc-9774"
Aug 13 13:16:34.225: INFO: Deleting pod "simpletest.rc-jhc54" in namespace "gc-9774"
Aug 13 13:16:34.238: INFO: Deleting pod "simpletest.rc-jk58d" in namespace "gc-9774"
Aug 13 13:16:34.249: INFO: Deleting pod "simpletest.rc-jlrt6" in namespace "gc-9774"
Aug 13 13:16:34.258: INFO: Deleting pod "simpletest.rc-js5x4" in namespace "gc-9774"
Aug 13 13:16:34.268: INFO: Deleting pod "simpletest.rc-jvgfh" in namespace "gc-9774"
Aug 13 13:16:34.279: INFO: Deleting pod "simpletest.rc-jwcst" in namespace "gc-9774"
Aug 13 13:16:34.288: INFO: Deleting pod "simpletest.rc-jzrdp" in namespace "gc-9774"
Aug 13 13:16:34.298: INFO: Deleting pod "simpletest.rc-jztgg" in namespace "gc-9774"
Aug 13 13:16:34.309: INFO: Deleting pod "simpletest.rc-kqcrm" in namespace "gc-9774"
Aug 13 13:16:34.321: INFO: Deleting pod "simpletest.rc-l7bvt" in namespace "gc-9774"
Aug 13 13:16:34.332: INFO: Deleting pod "simpletest.rc-l962z" in namespace "gc-9774"
Aug 13 13:16:34.347: INFO: Deleting pod "simpletest.rc-lxqfp" in namespace "gc-9774"
Aug 13 13:16:34.364: INFO: Deleting pod "simpletest.rc-ncczz" in namespace "gc-9774"
Aug 13 13:16:34.449: INFO: Deleting pod "simpletest.rc-nd9w6" in namespace "gc-9774"
Aug 13 13:16:34.460: INFO: Deleting pod "simpletest.rc-nnrzg" in namespace "gc-9774"
Aug 13 13:16:34.469: INFO: Deleting pod "simpletest.rc-nqpwz" in namespace "gc-9774"
Aug 13 13:16:34.480: INFO: Deleting pod "simpletest.rc-p7ckj" in namespace "gc-9774"
Aug 13 13:16:34.492: INFO: Deleting pod "simpletest.rc-pc2bv" in namespace "gc-9774"
Aug 13 13:16:34.502: INFO: Deleting pod "simpletest.rc-px8lq" in namespace "gc-9774"
Aug 13 13:16:34.511: INFO: Deleting pod "simpletest.rc-pzn8c" in namespace "gc-9774"
Aug 13 13:16:34.554: INFO: Deleting pod "simpletest.rc-qnfn2" in namespace "gc-9774"
Aug 13 13:16:34.605: INFO: Deleting pod "simpletest.rc-qvxj6" in namespace "gc-9774"
Aug 13 13:16:34.655: INFO: Deleting pod "simpletest.rc-rf7lb" in namespace "gc-9774"
Aug 13 13:16:34.704: INFO: Deleting pod "simpletest.rc-rs5rb" in namespace "gc-9774"
Aug 13 13:16:34.753: INFO: Deleting pod "simpletest.rc-rz665" in namespace "gc-9774"
Aug 13 13:16:34.804: INFO: Deleting pod "simpletest.rc-s5z42" in namespace "gc-9774"
Aug 13 13:16:34.854: INFO: Deleting pod "simpletest.rc-sdx6s" in namespace "gc-9774"
Aug 13 13:16:34.903: INFO: Deleting pod "simpletest.rc-sjhsf" in namespace "gc-9774"
Aug 13 13:16:34.955: INFO: Deleting pod "simpletest.rc-sktzv" in namespace "gc-9774"
Aug 13 13:16:35.004: INFO: Deleting pod "simpletest.rc-slhmm" in namespace "gc-9774"
Aug 13 13:16:35.054: INFO: Deleting pod "simpletest.rc-sms8l" in namespace "gc-9774"
Aug 13 13:16:35.104: INFO: Deleting pod "simpletest.rc-t4cv2" in namespace "gc-9774"
Aug 13 13:16:35.154: INFO: Deleting pod "simpletest.rc-tx5ls" in namespace "gc-9774"
Aug 13 13:16:35.207: INFO: Deleting pod "simpletest.rc-tx5rx" in namespace "gc-9774"
Aug 13 13:16:35.253: INFO: Deleting pod "simpletest.rc-vbfhr" in namespace "gc-9774"
Aug 13 13:16:35.307: INFO: Deleting pod "simpletest.rc-vdnbq" in namespace "gc-9774"
Aug 13 13:16:35.354: INFO: Deleting pod "simpletest.rc-vgm66" in namespace "gc-9774"
Aug 13 13:16:35.417: INFO: Deleting pod "simpletest.rc-vgzzk" in namespace "gc-9774"
Aug 13 13:16:35.453: INFO: Deleting pod "simpletest.rc-vsc5s" in namespace "gc-9774"
Aug 13 13:16:35.504: INFO: Deleting pod "simpletest.rc-vzhmg" in namespace "gc-9774"
Aug 13 13:16:35.557: INFO: Deleting pod "simpletest.rc-wjp2r" in namespace "gc-9774"
Aug 13 13:16:35.606: INFO: Deleting pod "simpletest.rc-wjtkn" in namespace "gc-9774"
Aug 13 13:16:35.653: INFO: Deleting pod "simpletest.rc-wxc6j" in namespace "gc-9774"
Aug 13 13:16:35.705: INFO: Deleting pod "simpletest.rc-x4bqv" in namespace "gc-9774"
Aug 13 13:16:35.754: INFO: Deleting pod "simpletest.rc-x89w5" in namespace "gc-9774"
Aug 13 13:16:35.804: INFO: Deleting pod "simpletest.rc-xb92b" in namespace "gc-9774"
Aug 13 13:16:35.854: INFO: Deleting pod "simpletest.rc-xh5cf" in namespace "gc-9774"
Aug 13 13:16:35.904: INFO: Deleting pod "simpletest.rc-xs9pg" in namespace "gc-9774"
Aug 13 13:16:35.953: INFO: Deleting pod "simpletest.rc-xznkv" in namespace "gc-9774"
Aug 13 13:16:36.004: INFO: Deleting pod "simpletest.rc-zglmn" in namespace "gc-9774"
Aug 13 13:16:36.061: INFO: Deleting pod "simpletest.rc-zhbkx" in namespace "gc-9774"
Aug 13 13:16:36.104: INFO: Deleting pod "simpletest.rc-zqzt8" in namespace "gc-9774"
Aug 13 13:16:36.154: INFO: Deleting pod "simpletest.rc-zw8jc" in namespace "gc-9774"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 13 13:16:36.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9774" for this suite.

• [SLOW TEST:42.893 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":317,"skipped":5898,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:16:36.301: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 13 13:16:43.456: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5159" for this suite.

• [SLOW TEST:7.164 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":318,"skipped":5907,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:16:43.466: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2790
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 13 13:16:43.606: INFO: Waiting up to 5m0s for pod "pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e" in namespace "emptydir-2790" to be "Succeeded or Failed"
Aug 13 13:16:43.609: INFO: Pod "pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.145524ms
Aug 13 13:16:45.615: INFO: Pod "pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009622893s
Aug 13 13:16:47.623: INFO: Pod "pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016976261s
STEP: Saw pod success
Aug 13 13:16:47.623: INFO: Pod "pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e" satisfied condition "Succeeded or Failed"
Aug 13 13:16:47.626: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e container test-container: <nil>
STEP: delete the pod
Aug 13 13:16:47.646: INFO: Waiting for pod pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e to disappear
Aug 13 13:16:47.649: INFO: Pod pod-4a90837d-6ff5-4728-a18a-9d3bd9af979e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 13:16:47.649: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2790" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":319,"skipped":5952,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:16:47.660: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9501
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 13 13:16:47.804: INFO: Waiting up to 5m0s for pod "pod-657f54b7-78f5-43af-b4be-1f513d20451d" in namespace "emptydir-9501" to be "Succeeded or Failed"
Aug 13 13:16:47.808: INFO: Pod "pod-657f54b7-78f5-43af-b4be-1f513d20451d": Phase="Pending", Reason="", readiness=false. Elapsed: 4.250921ms
Aug 13 13:16:49.817: INFO: Pod "pod-657f54b7-78f5-43af-b4be-1f513d20451d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012701323s
Aug 13 13:16:51.825: INFO: Pod "pod-657f54b7-78f5-43af-b4be-1f513d20451d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021421115s
STEP: Saw pod success
Aug 13 13:16:51.825: INFO: Pod "pod-657f54b7-78f5-43af-b4be-1f513d20451d" satisfied condition "Succeeded or Failed"
Aug 13 13:16:51.829: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-657f54b7-78f5-43af-b4be-1f513d20451d container test-container: <nil>
STEP: delete the pod
Aug 13 13:16:51.845: INFO: Waiting for pod pod-657f54b7-78f5-43af-b4be-1f513d20451d to disappear
Aug 13 13:16:51.848: INFO: Pod pod-657f54b7-78f5-43af-b4be-1f513d20451d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 13:16:51.848: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9501" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":320,"skipped":5969,"failed":0}
SSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:16:51.859: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-6366
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Aug 13 13:16:51.994: INFO: Waiting up to 5m0s for pod "var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75" in namespace "var-expansion-6366" to be "Succeeded or Failed"
Aug 13 13:16:51.996: INFO: Pod "var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75": Phase="Pending", Reason="", readiness=false. Elapsed: 2.442819ms
Aug 13 13:16:54.003: INFO: Pod "var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009139342s
Aug 13 13:16:56.010: INFO: Pod "var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016726907s
STEP: Saw pod success
Aug 13 13:16:56.010: INFO: Pod "var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75" satisfied condition "Succeeded or Failed"
Aug 13 13:16:56.014: INFO: Trying to get logs from node ip-172-31-79-226 pod var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75 container dapi-container: <nil>
STEP: delete the pod
Aug 13 13:16:56.031: INFO: Waiting for pod var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75 to disappear
Aug 13 13:16:56.035: INFO: Pod var-expansion-5c8985fb-37b5-4bf6-b9bc-27bfb577af75 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 13:16:56.035: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-6366" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":321,"skipped":5972,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:16:56.048: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1595
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Aug 13 13:16:58.198: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-1595 PodName:pod-sharedvolume-c30a6bfb-3b91-4aa2-9719-8fa46fe0176f ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:16:58.198: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:16:58.199: INFO: ExecWithOptions: Clientset creation
Aug 13 13:16:58.199: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-1595/pods/pod-sharedvolume-c30a6bfb-3b91-4aa2-9719-8fa46fe0176f/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Aug 13 13:16:58.291: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 13 13:16:58.291: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1595" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":322,"skipped":6066,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:16:58.304: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-1872
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 13 13:16:58.437: INFO: PodSpec: initContainers in spec.initContainers
Aug 13 13:17:47.329: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-14502b9f-02d0-4825-bd01-70dfe3aba7a0", GenerateName:"", Namespace:"init-container-1872", SelfLink:"", UID:"380eb901-14a6-4754-bb21-bc46b8908bf1", ResourceVersion:"38558", Generation:0, CreationTimestamp:time.Date(2022, time.August, 13, 13, 16, 58, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"437273604"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 13, 13, 16, 58, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a102d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 13, 13, 17, 3, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a10300), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-4btjn", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc002df8340), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4btjn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4btjn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-4btjn", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002d6cd08), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-3-251", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000c70620), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002d6cd90)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002d6cdb0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002d6cdb8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002d6cdbc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc003b8c0f0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 13, 13, 16, 58, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 13, 13, 16, 58, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 13, 13, 16, 58, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 13, 13, 16, 58, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.3.251", PodIP:"192.168.74.101", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.74.101"}}, StartTime:time.Date(2022, time.August, 13, 13, 16, 58, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc003a10348), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000c70770)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://1d699e5ba621a10bd1a138c2f059b260ae6d9232c272cdb076d790df06708b5a", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc002df83e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc002df83c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc002d6ce3f)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 13 13:17:47.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-1872" for this suite.

• [SLOW TEST:49.045 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":323,"skipped":6076,"failed":0}
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:17:47.349: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8128
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 13:17:47.496: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9" in namespace "downward-api-8128" to be "Succeeded or Failed"
Aug 13 13:17:47.498: INFO: Pod "downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.588845ms
Aug 13 13:17:49.509: INFO: Pod "downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013387079s
Aug 13 13:17:51.518: INFO: Pod "downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022706685s
STEP: Saw pod success
Aug 13 13:17:51.519: INFO: Pod "downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9" satisfied condition "Succeeded or Failed"
Aug 13 13:17:51.522: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9 container client-container: <nil>
STEP: delete the pod
Aug 13 13:17:51.543: INFO: Waiting for pod downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9 to disappear
Aug 13 13:17:51.546: INFO: Pod downwardapi-volume-c87bd165-a72f-481b-92ac-1162e357f5c9 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 13:17:51.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8128" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":324,"skipped":6076,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:17:51.556: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6951
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-a4144262-9d74-4341-8b9b-e955defdac6c
STEP: Creating a pod to test consume secrets
Aug 13 13:17:51.704: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0" in namespace "projected-6951" to be "Succeeded or Failed"
Aug 13 13:17:51.710: INFO: Pod "pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.214107ms
Aug 13 13:17:53.714: INFO: Pod "pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010280922s
Aug 13 13:17:55.723: INFO: Pod "pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019610458s
STEP: Saw pod success
Aug 13 13:17:55.724: INFO: Pod "pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0" satisfied condition "Succeeded or Failed"
Aug 13 13:17:55.726: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 13 13:17:55.745: INFO: Waiting for pod pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0 to disappear
Aug 13 13:17:55.748: INFO: Pod pod-projected-secrets-2175b95a-3b1d-46c9-8efd-606fccc41cf0 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 13 13:17:55.748: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6951" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":325,"skipped":6096,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:17:55.759: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-8687
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 13 13:17:55.890: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 13 13:17:55.898: INFO: Waiting for terminating namespaces to be deleted...
Aug 13 13:17:55.901: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-22-206 before test
Aug 13 13:17:55.905: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sgrjp from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 13 13:17:55.905: INFO: nginx-ingress-controller-kubernetes-worker-bvm57 from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 13:17:55.905: INFO: calico-kube-controllers-5f6d88cdb-fjtjt from kube-system started at 2022-08-13 11:48:50 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 13 13:17:55.905: INFO: coredns-86c98bfcdb-ctwtg from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container coredns ready: true, restart count 0
Aug 13 13:17:55.905: INFO: kube-state-metrics-5cdbfd47b4-pwbt8 from kube-system started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 13 13:17:55.905: INFO: metrics-server-v0.5.2-6bfd958b56-82nrj from kube-system started at 2022-08-13 11:48:50 +0000 UTC (2 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container metrics-server ready: true, restart count 0
Aug 13 13:17:55.905: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 13 13:17:55.905: INFO: dashboard-metrics-scraper-8669b59d4f-fmmvg from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 13 13:17:55.905: INFO: kubernetes-dashboard-585fc6bc87-pvfzw from kubernetes-dashboard started at 2022-08-13 11:48:53 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 13 13:17:55.905: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-n5n8f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 13:17:55.905: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 13:17:55.905: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 13:17:55.905: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-3-251 before test
Aug 13 13:17:55.910: INFO: nginx-ingress-controller-kubernetes-worker-52j7t from ingress-nginx-kubernetes-worker started at 2022-08-13 11:48:55 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.910: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 13:17:55.910: INFO: sonobuoy-e2e-job-d7ed694d834d4e6f from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 13:17:55.910: INFO: 	Container e2e ready: true, restart count 0
Aug 13 13:17:55.910: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 13:17:55.910: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-kcvmg from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 13:17:55.910: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 13:17:55.910: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 13 13:17:55.910: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-79-226 before test
Aug 13 13:17:55.916: INFO: nginx-ingress-controller-kubernetes-worker-d2fz8 from ingress-nginx-kubernetes-worker started at 2022-08-13 13:07:18 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.916: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 13 13:17:55.916: INFO: sonobuoy from sonobuoy started at 2022-08-13 11:53:59 +0000 UTC (1 container statuses recorded)
Aug 13 13:17:55.916: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 13 13:17:55.916: INFO: sonobuoy-systemd-logs-daemon-set-16b82a983830493d-bdtv7 from sonobuoy started at 2022-08-13 11:54:02 +0000 UTC (2 container statuses recorded)
Aug 13 13:17:55.916: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 13 13:17:55.916: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node ip-172-31-22-206
STEP: verifying the node has the label node ip-172-31-3-251
STEP: verifying the node has the label node ip-172-31-79-226
Aug 13 13:17:55.962: INFO: Pod default-http-backend-kubernetes-worker-6c59687bf6-sgrjp requesting resource cpu=10m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod nginx-ingress-controller-kubernetes-worker-52j7t requesting resource cpu=0m on Node ip-172-31-3-251
Aug 13 13:17:55.962: INFO: Pod nginx-ingress-controller-kubernetes-worker-bvm57 requesting resource cpu=0m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod nginx-ingress-controller-kubernetes-worker-d2fz8 requesting resource cpu=0m on Node ip-172-31-79-226
Aug 13 13:17:55.962: INFO: Pod calico-kube-controllers-5f6d88cdb-fjtjt requesting resource cpu=0m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod coredns-86c98bfcdb-ctwtg requesting resource cpu=100m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod kube-state-metrics-5cdbfd47b4-pwbt8 requesting resource cpu=0m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod metrics-server-v0.5.2-6bfd958b56-82nrj requesting resource cpu=5m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod dashboard-metrics-scraper-8669b59d4f-fmmvg requesting resource cpu=0m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod kubernetes-dashboard-585fc6bc87-pvfzw requesting resource cpu=0m on Node ip-172-31-22-206
Aug 13 13:17:55.962: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-79-226
Aug 13 13:17:55.962: INFO: Pod sonobuoy-e2e-job-d7ed694d834d4e6f requesting resource cpu=0m on Node ip-172-31-3-251
Aug 13 13:17:55.962: INFO: Pod sonobuoy-systemd-logs-daemon-set-16b82a983830493d-bdtv7 requesting resource cpu=0m on Node ip-172-31-79-226
Aug 13 13:17:55.963: INFO: Pod sonobuoy-systemd-logs-daemon-set-16b82a983830493d-kcvmg requesting resource cpu=0m on Node ip-172-31-3-251
Aug 13 13:17:55.963: INFO: Pod sonobuoy-systemd-logs-daemon-set-16b82a983830493d-n5n8f requesting resource cpu=0m on Node ip-172-31-22-206
STEP: Starting Pods to consume most of the cluster CPU.
Aug 13 13:17:55.963: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-3-251
Aug 13 13:17:55.972: INFO: Creating a pod which consumes cpu=1400m on Node ip-172-31-79-226
Aug 13 13:17:55.978: INFO: Creating a pod which consumes cpu=1319m on Node ip-172-31-22-206
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dd36e287-5dea-4229-ba48-4e9a3ec7c762.170ae9facb736944], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8687/filler-pod-dd36e287-5dea-4229-ba48-4e9a3ec7c762 to ip-172-31-22-206]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dd36e287-5dea-4229-ba48-4e9a3ec7c762.170ae9faf403ea8c], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dd36e287-5dea-4229-ba48-4e9a3ec7c762.170ae9faf7f8fceb], Reason = [Created], Message = [Created container filler-pod-dd36e287-5dea-4229-ba48-4e9a3ec7c762]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-dd36e287-5dea-4229-ba48-4e9a3ec7c762.170ae9fafbde2104], Reason = [Started], Message = [Started container filler-pod-dd36e287-5dea-4229-ba48-4e9a3ec7c762]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e96c4c50-445f-4d76-9b92-f4336f89d2d4.170ae9faca84b433], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8687/filler-pod-e96c4c50-445f-4d76-9b92-f4336f89d2d4 to ip-172-31-79-226]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e96c4c50-445f-4d76-9b92-f4336f89d2d4.170ae9faf00a0dd5], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e96c4c50-445f-4d76-9b92-f4336f89d2d4.170ae9faf316dd04], Reason = [Created], Message = [Created container filler-pod-e96c4c50-445f-4d76-9b92-f4336f89d2d4]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-e96c4c50-445f-4d76-9b92-f4336f89d2d4.170ae9faf66094fa], Reason = [Started], Message = [Started container filler-pod-e96c4c50-445f-4d76-9b92-f4336f89d2d4]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-effba4a5-c80f-40b4-9511-ccdead8eac2c.170ae9fac9b16312], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8687/filler-pod-effba4a5-c80f-40b4-9511-ccdead8eac2c to ip-172-31-3-251]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-effba4a5-c80f-40b4-9511-ccdead8eac2c.170ae9faf00a75aa], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-effba4a5-c80f-40b4-9511-ccdead8eac2c.170ae9faf4c01ef6], Reason = [Created], Message = [Created container filler-pod-effba4a5-c80f-40b4-9511-ccdead8eac2c]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-effba4a5-c80f-40b4-9511-ccdead8eac2c.170ae9faf8325cdd], Reason = [Started], Message = [Started container filler-pod-effba4a5-c80f-40b4-9511-ccdead8eac2c]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.170ae9fb4420892b], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.]
STEP: removing the label node off the node ip-172-31-3-251
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-79-226
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-22-206
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 13 13:17:59.090: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-8687" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":326,"skipped":6193,"failed":0}
SSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:17:59.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9196
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-2bd6240f-7b38-447a-bedd-ddbc09bc2739 in namespace container-probe-9196
Aug 13 13:18:01.252: INFO: Started pod test-webserver-2bd6240f-7b38-447a-bedd-ddbc09bc2739 in namespace container-probe-9196
STEP: checking the pod's current state and verifying that restartCount is present
Aug 13 13:18:01.256: INFO: Initial restart count of pod test-webserver-2bd6240f-7b38-447a-bedd-ddbc09bc2739 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 13:22:02.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9196" for this suite.

• [SLOW TEST:243.217 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":327,"skipped":6198,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:02.319: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4029
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 13:22:02.462: INFO: Waiting up to 5m0s for pod "downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1" in namespace "downward-api-4029" to be "Succeeded or Failed"
Aug 13 13:22:02.467: INFO: Pod "downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.430493ms
Aug 13 13:22:04.476: INFO: Pod "downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014052375s
Aug 13 13:22:06.484: INFO: Pod "downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022044237s
STEP: Saw pod success
Aug 13 13:22:06.484: INFO: Pod "downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1" satisfied condition "Succeeded or Failed"
Aug 13 13:22:06.490: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1 container client-container: <nil>
STEP: delete the pod
Aug 13 13:22:06.515: INFO: Waiting for pod downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1 to disappear
Aug 13 13:22:06.518: INFO: Pod downwardapi-volume-39ac89c5-c3e7-4853-858f-33c7d4e9cfe1 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 13:22:06.518: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4029" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":328,"skipped":6214,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:06.530: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4920
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 13:22:06.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4920" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":329,"skipped":6224,"failed":0}
S
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:06.710: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-4339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Aug 13 13:22:06.843: INFO: created test-event-1
Aug 13 13:22:06.848: INFO: created test-event-2
Aug 13 13:22:06.852: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Aug 13 13:22:06.855: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Aug 13 13:22:06.879: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug 13 13:22:06.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-4339" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":330,"skipped":6225,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:06.891: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 13:22:07.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5130" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":331,"skipped":6238,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:07.058: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-3466
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-xp7f
STEP: Creating a pod to test atomic-volume-subpath
Aug 13 13:22:07.209: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-xp7f" in namespace "subpath-3466" to be "Succeeded or Failed"
Aug 13 13:22:07.213: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.648773ms
Aug 13 13:22:09.223: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 2.013387304s
Aug 13 13:22:11.231: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 4.022028391s
Aug 13 13:22:13.241: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 6.031172325s
Aug 13 13:22:15.246: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 8.036784137s
Aug 13 13:22:17.254: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 10.044297441s
Aug 13 13:22:19.262: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 12.052411372s
Aug 13 13:22:21.270: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 14.060558901s
Aug 13 13:22:23.278: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 16.068751871s
Aug 13 13:22:25.283: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 18.073530353s
Aug 13 13:22:27.291: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=true. Elapsed: 20.082066863s
Aug 13 13:22:29.298: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Running", Reason="", readiness=false. Elapsed: 22.088804665s
Aug 13 13:22:31.307: INFO: Pod "pod-subpath-test-projected-xp7f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.098115729s
STEP: Saw pod success
Aug 13 13:22:31.308: INFO: Pod "pod-subpath-test-projected-xp7f" satisfied condition "Succeeded or Failed"
Aug 13 13:22:31.310: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-subpath-test-projected-xp7f container test-container-subpath-projected-xp7f: <nil>
STEP: delete the pod
Aug 13 13:22:31.327: INFO: Waiting for pod pod-subpath-test-projected-xp7f to disappear
Aug 13 13:22:31.331: INFO: Pod pod-subpath-test-projected-xp7f no longer exists
STEP: Deleting pod pod-subpath-test-projected-xp7f
Aug 13 13:22:31.331: INFO: Deleting pod "pod-subpath-test-projected-xp7f" in namespace "subpath-3466"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 13 13:22:31.333: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3466" for this suite.

• [SLOW TEST:24.284 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":332,"skipped":6249,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:31.343: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6586
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 176.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.176_udp@PTR;check="$$(dig +tcp +noall +answer +search 176.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.176_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6586.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6586.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6586.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6586.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 176.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.176_udp@PTR;check="$$(dig +tcp +noall +answer +search 176.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.176_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 13 13:22:33.532: INFO: Unable to read wheezy_udp@dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.535: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.539: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.543: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.560: INFO: Unable to read jessie_udp@dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.565: INFO: Unable to read jessie_tcp@dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.568: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.571: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local from pod dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404: the server could not find the requested resource (get pods dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404)
Aug 13 13:22:33.586: INFO: Lookups using dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404 failed for: [wheezy_udp@dns-test-service.dns-6586.svc.cluster.local wheezy_tcp@dns-test-service.dns-6586.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local jessie_udp@dns-test-service.dns-6586.svc.cluster.local jessie_tcp@dns-test-service.dns-6586.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-6586.svc.cluster.local]

Aug 13 13:22:38.646: INFO: DNS probes using dns-6586/dns-test-38f9e0c4-556a-473d-98c6-b2b08ebf0404 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 13 13:22:38.714: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6586" for this suite.

• [SLOW TEST:7.384 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":333,"skipped":6260,"failed":0}
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:38.727: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 13 13:22:38.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2565 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 13 13:22:38.921: INFO: stderr: ""
Aug 13 13:22:38.921: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Aug 13 13:22:38.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2565 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Aug 13 13:22:39.074: INFO: stderr: ""
Aug 13 13:22:39.074: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 13 13:22:39.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-2565 delete pods e2e-test-httpd-pod'
Aug 13 13:22:40.962: INFO: stderr: ""
Aug 13 13:22:40.962: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 13:22:40.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2565" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":334,"skipped":6267,"failed":0}
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:22:40.974: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3016
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 13 13:22:41.119: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 13 13:23:41.141: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:23:41.145: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-9999
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:23:41.309: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Aug 13 13:23:41.314: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Aug 13 13:23:41.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-9999" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 13 13:23:41.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3016" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.425 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":335,"skipped":6269,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:23:41.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3126
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Aug 13 13:23:43.560: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-3126 PodName:var-expansion-c132709f-7b9b-4e73-a668-5b2a398f4342 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:23:43.560: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:23:43.561: INFO: ExecWithOptions: Clientset creation
Aug 13 13:23:43.561: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-3126/pods/var-expansion-c132709f-7b9b-4e73-a668-5b2a398f4342/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Aug 13 13:23:43.660: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-3126 PodName:var-expansion-c132709f-7b9b-4e73-a668-5b2a398f4342 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:23:43.660: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:23:43.660: INFO: ExecWithOptions: Clientset creation
Aug 13 13:23:43.661: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-3126/pods/var-expansion-c132709f-7b9b-4e73-a668-5b2a398f4342/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Aug 13 13:23:44.228: INFO: Successfully updated pod "var-expansion-c132709f-7b9b-4e73-a668-5b2a398f4342"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Aug 13 13:23:44.232: INFO: Deleting pod "var-expansion-c132709f-7b9b-4e73-a668-5b2a398f4342" in namespace "var-expansion-3126"
Aug 13 13:23:44.239: INFO: Wait up to 5m0s for pod "var-expansion-c132709f-7b9b-4e73-a668-5b2a398f4342" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 13 13:24:18.250: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3126" for this suite.

• [SLOW TEST:36.866 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":336,"skipped":6289,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:18.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9001
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-9001
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9001 to expose endpoints map[]
Aug 13 13:24:18.418: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Aug 13 13:24:19.427: INFO: successfully validated that service multi-endpoint-test in namespace services-9001 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-9001
Aug 13 13:24:19.441: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:24:21.447: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9001 to expose endpoints map[pod1:[100]]
Aug 13 13:24:21.461: INFO: successfully validated that service multi-endpoint-test in namespace services-9001 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-9001
Aug 13 13:24:21.471: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:24:23.478: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9001 to expose endpoints map[pod1:[100] pod2:[101]]
Aug 13 13:24:23.494: INFO: successfully validated that service multi-endpoint-test in namespace services-9001 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Aug 13 13:24:23.494: INFO: Creating new exec pod
Aug 13 13:24:26.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9001 exec execpod86zj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Aug 13 13:24:26.642: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Aug 13 13:24:26.642: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:24:26.642: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9001 exec execpod86zj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.204 80'
Aug 13 13:24:26.772: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.204 80\nConnection to 10.152.183.204 80 port [tcp/http] succeeded!\n"
Aug 13 13:24:26.772: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:24:26.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9001 exec execpod86zj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Aug 13 13:24:26.879: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Aug 13 13:24:26.879: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 13 13:24:26.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-9001 exec execpod86zj7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.204 81'
Aug 13 13:24:26.996: INFO: stderr: "+ + echonc -v hostName\n -t -w 2 10.152.183.204 81\nConnection to 10.152.183.204 81 port [tcp/*] succeeded!\n"
Aug 13 13:24:26.996: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-9001
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9001 to expose endpoints map[pod2:[101]]
Aug 13 13:24:27.025: INFO: successfully validated that service multi-endpoint-test in namespace services-9001 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-9001
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9001 to expose endpoints map[]
Aug 13 13:24:28.053: INFO: successfully validated that service multi-endpoint-test in namespace services-9001 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 13:24:28.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9001" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.822 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":337,"skipped":6299,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:28.087: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4622
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Aug 13 13:24:28.230: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-4622 cluster-info'
Aug 13 13:24:28.281: INFO: stderr: ""
Aug 13 13:24:28.281: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 13:24:28.281: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4622" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":338,"skipped":6333,"failed":0}
SS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:28.294: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2083
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 13 13:24:28.433: INFO: Waiting up to 5m0s for pod "downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd" in namespace "downward-api-2083" to be "Succeeded or Failed"
Aug 13 13:24:28.450: INFO: Pod "downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd": Phase="Pending", Reason="", readiness=false. Elapsed: 16.3982ms
Aug 13 13:24:30.458: INFO: Pod "downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024921074s
Aug 13 13:24:32.466: INFO: Pod "downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03290509s
STEP: Saw pod success
Aug 13 13:24:32.466: INFO: Pod "downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd" satisfied condition "Succeeded or Failed"
Aug 13 13:24:32.469: INFO: Trying to get logs from node ip-172-31-79-226 pod downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd container client-container: <nil>
STEP: delete the pod
Aug 13 13:24:32.493: INFO: Waiting for pod downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd to disappear
Aug 13 13:24:32.496: INFO: Pod downwardapi-volume-aad9d56c-b9c8-4cac-934a-b6e1a7307abd no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 13 13:24:32.496: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2083" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":339,"skipped":6335,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:32.505: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6179
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-897f56c7-8d99-448d-991c-73353a9186bf
STEP: Creating a pod to test consume configMaps
Aug 13 13:24:32.649: INFO: Waiting up to 5m0s for pod "pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930" in namespace "configmap-6179" to be "Succeeded or Failed"
Aug 13 13:24:32.655: INFO: Pod "pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930": Phase="Pending", Reason="", readiness=false. Elapsed: 5.628262ms
Aug 13 13:24:34.665: INFO: Pod "pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015673944s
Aug 13 13:24:36.673: INFO: Pod "pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023839546s
STEP: Saw pod success
Aug 13 13:24:36.673: INFO: Pod "pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930" satisfied condition "Succeeded or Failed"
Aug 13 13:24:36.676: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930 container agnhost-container: <nil>
STEP: delete the pod
Aug 13 13:24:36.695: INFO: Waiting for pod pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930 to disappear
Aug 13 13:24:36.700: INFO: Pod pod-configmaps-5191171c-1c28-405b-9804-5e743eb3e930 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 13 13:24:36.700: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6179" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":340,"skipped":6346,"failed":0}

------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:36.710: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6155
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Aug 13 13:24:38.882: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6155 pod-service-account-eec30ad7-b07e-47fd-9ded-c81f9c96cab4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Aug 13 13:24:39.012: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6155 pod-service-account-eec30ad7-b07e-47fd-9ded-c81f9c96cab4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Aug 13 13:24:39.155: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6155 pod-service-account-eec30ad7-b07e-47fd-9ded-c81f9c96cab4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Aug 13 13:24:39.276: INFO: Got root ca configmap in namespace "svcaccounts-6155"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 13 13:24:39.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6155" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":341,"skipped":6346,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:39.298: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-1720
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Aug 13 13:24:39.450: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:39.450: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:39.460: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:39.460: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:39.476: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:39.476: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:39.510: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:39.510: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 13 13:24:40.958: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 13 13:24:40.958: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 13 13:24:41.135: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Aug 13 13:24:41.152: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 0
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:41.161: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:41.162: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.162: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.162: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.162: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.162: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.162: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.181: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.181: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:41.196: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:41.196: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:41.204: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:41.204: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:42.149: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:42.149: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:42.182: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
STEP: listing Deployments
Aug 13 13:24:42.191: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Aug 13 13:24:42.206: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Aug 13 13:24:42.213: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:42.218: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:42.245: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:42.261: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:42.271: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:43.156: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:43.194: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:43.200: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 13 13:24:44.019: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 1
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 2
Aug 13 13:24:44.067: INFO: observed Deployment test-deployment in namespace deployment-1720 with ReadyReplicas 3
STEP: deleting the Deployment
Aug 13 13:24:44.077: INFO: observed event type MODIFIED
Aug 13 13:24:44.077: INFO: observed event type MODIFIED
Aug 13 13:24:44.077: INFO: observed event type MODIFIED
Aug 13 13:24:44.078: INFO: observed event type MODIFIED
Aug 13 13:24:44.078: INFO: observed event type MODIFIED
Aug 13 13:24:44.078: INFO: observed event type MODIFIED
Aug 13 13:24:44.078: INFO: observed event type MODIFIED
Aug 13 13:24:44.078: INFO: observed event type MODIFIED
Aug 13 13:24:44.078: INFO: observed event type MODIFIED
Aug 13 13:24:44.078: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 13 13:24:44.081: INFO: Log out all the ReplicaSets if there is no deployment created
Aug 13 13:24:44.086: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-1720  5eb3e24d-ba71-4eb0-aa3d-799c474b7ad6 40155 3 2022-08-13 13:24:39 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment de900d8e-59ec-4983-880f-38dfd12c4d2e 0xc003802397 0xc003802398}] []  [{kube-controller-manager Update apps/v1 2022-08-13 13:24:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"de900d8e-59ec-4983-880f-38dfd12c4d2e\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 13:24:42 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003802420 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug 13 13:24:44.090: INFO: pod: "test-deployment-6b48c869b6-mrsx5":
&Pod{ObjectMeta:{test-deployment-6b48c869b6-mrsx5 test-deployment-6b48c869b6- deployment-1720  cb9602a0-7857-422a-9053-3e9374ccf26e 40112 0 2022-08-13 13:24:39 +0000 UTC 2022-08-13 13:24:42 +0000 UTC 0xc001241848 map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-6b48c869b6 5eb3e24d-ba71-4eb0-aa3d-799c474b7ad6 0xc001241877 0xc001241878}] []  [{kube-controller-manager Update v1 2022-08-13 13:24:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5eb3e24d-ba71-4eb0-aa3d-799c474b7ad6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:24:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.12\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9ph84,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9ph84,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.12,StartTime:2022-08-13 13:24:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:24:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://aaaa5f7136ad59977b07cd788832dc2141052c8d88582b3d525df04d74014b3f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.12,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 13 13:24:44.090: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-1720  020b98ef-9542-4195-9e83-a90cc078e2c4 40236 2 2022-08-13 13:24:42 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment de900d8e-59ec-4983-880f-38dfd12c4d2e 0xc003802487 0xc003802488}] []  [{kube-controller-manager Update apps/v1 2022-08-13 13:24:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"de900d8e-59ec-4983-880f-38dfd12c4d2e\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 13:24:43 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003802510 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Aug 13 13:24:44.094: INFO: pod: "test-deployment-74c6dd549b-hzljg":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-hzljg test-deployment-74c6dd549b- deployment-1720  04f716b7-eaba-4207-a527-191d0b7c327a 40235 0 2022-08-13 13:24:43 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 020b98ef-9542-4195-9e83-a90cc078e2c4 0xc00386e4a7 0xc00386e4a8}] []  [{kube-controller-manager Update v1 2022-08-13 13:24:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"020b98ef-9542-4195-9e83-a90cc078e2c4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:24:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.110\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fmppv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fmppv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.110,StartTime:2022-08-13 13:24:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:24:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://eef3d710bc5e4f98214b1388ba5b2cc78216a7bd16b4f5afee19e18e4df18f41,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.110,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 13 13:24:44.094: INFO: pod: "test-deployment-74c6dd549b-v5zkd":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-v5zkd test-deployment-74c6dd549b- deployment-1720  5f6b942b-de06-4c92-94da-a66ee5c9af92 40199 0 2022-08-13 13:24:42 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 020b98ef-9542-4195-9e83-a90cc078e2c4 0xc00386e697 0xc00386e698}] []  [{kube-controller-manager Update v1 2022-08-13 13:24:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"020b98ef-9542-4195-9e83-a90cc078e2c4\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:24:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hxmdj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hxmdj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.16,StartTime:2022-08-13 13:24:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:24:42 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://cb480e89bc5a17b88c40f754f1d2baf3410ded5351ebff5d02969496de13e510,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.16,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 13 13:24:44.094: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-1720  fe141443-7a45-40c1-a799-d87a189a0af6 40243 4 2022-08-13 13:24:41 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment de900d8e-59ec-4983-880f-38dfd12c4d2e 0xc003802577 0xc003802578}] []  [{kube-controller-manager Update apps/v1 2022-08-13 13:24:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"de900d8e-59ec-4983-880f-38dfd12c4d2e\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-13 13:24:44 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003802600 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug 13 13:24:44.097: INFO: pod: "test-deployment-84b949bdfc-lb6nn":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-lb6nn test-deployment-84b949bdfc- deployment-1720  e392d024-6fc5-47a8-b39b-40d5da0fc9c3 40240 0 2022-08-13 13:24:41 +0000 UTC 2022-08-13 13:24:45 +0000 UTC 0xc00386f9f8 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc fe141443-7a45-40c1-a799-d87a189a0af6 0xc00386fa27 0xc00386fa28}] []  [{kube-controller-manager Update v1 2022-08-13 13:24:41 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fe141443-7a45-40c1-a799-d87a189a0af6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:24:42 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.176.17\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v479d,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v479d,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-79-226,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:41 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.79.226,PodIP:192.168.176.17,StartTime:2022-08-13 13:24:41 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:24:41 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://4d4c4674c60ec54c1014a2978e23f011a3c92b9ab909979cf2d4d55f81318add,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.176.17,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 13 13:24:44.097: INFO: pod: "test-deployment-84b949bdfc-rcm76":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-rcm76 test-deployment-84b949bdfc- deployment-1720  aae25ed1-608e-469a-97cf-2ca0989dafff 40234 0 2022-08-13 13:24:42 +0000 UTC 2022-08-13 13:24:44 +0000 UTC 0xc00386fbf0 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc fe141443-7a45-40c1-a799-d87a189a0af6 0xc00386fc27 0xc00386fc28}] []  [{kube-controller-manager Update v1 2022-08-13 13:24:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"fe141443-7a45-40c1-a799-d87a189a0af6\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-13 13:24:43 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.74.111\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7k2dg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7k2dg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-3-251,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-13 13:24:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.3.251,PodIP:192.168.74.111,StartTime:2022-08-13 13:24:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-13 13:24:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://19bfe926ad28679deef0ea7b87df232d479141deb4f4394ec1e1d4de8a6b9cf3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.74.111,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 13 13:24:44.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-1720" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":342,"skipped":6362,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:44.108: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2951
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:24:44.273: INFO: created pod pod-service-account-defaultsa
Aug 13 13:24:44.273: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Aug 13 13:24:44.279: INFO: created pod pod-service-account-mountsa
Aug 13 13:24:44.279: INFO: pod pod-service-account-mountsa service account token volume mount: true
Aug 13 13:24:44.288: INFO: created pod pod-service-account-nomountsa
Aug 13 13:24:44.288: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Aug 13 13:24:44.297: INFO: created pod pod-service-account-defaultsa-mountspec
Aug 13 13:24:44.297: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Aug 13 13:24:44.307: INFO: created pod pod-service-account-mountsa-mountspec
Aug 13 13:24:44.307: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Aug 13 13:24:44.315: INFO: created pod pod-service-account-nomountsa-mountspec
Aug 13 13:24:44.315: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Aug 13 13:24:44.322: INFO: created pod pod-service-account-defaultsa-nomountspec
Aug 13 13:24:44.322: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Aug 13 13:24:44.330: INFO: created pod pod-service-account-mountsa-nomountspec
Aug 13 13:24:44.330: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Aug 13 13:24:44.337: INFO: created pod pod-service-account-nomountsa-nomountspec
Aug 13 13:24:44.337: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 13 13:24:44.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2951" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":343,"skipped":6374,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:44.352: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2004
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 13 13:24:44.510: INFO: Waiting up to 5m0s for pod "downward-api-2ec17e89-12ad-42b6-880f-f6b412729594" in namespace "downward-api-2004" to be "Succeeded or Failed"
Aug 13 13:24:44.514: INFO: Pod "downward-api-2ec17e89-12ad-42b6-880f-f6b412729594": Phase="Pending", Reason="", readiness=false. Elapsed: 3.744445ms
Aug 13 13:24:46.521: INFO: Pod "downward-api-2ec17e89-12ad-42b6-880f-f6b412729594": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011303664s
Aug 13 13:24:48.533: INFO: Pod "downward-api-2ec17e89-12ad-42b6-880f-f6b412729594": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022790608s
STEP: Saw pod success
Aug 13 13:24:48.533: INFO: Pod "downward-api-2ec17e89-12ad-42b6-880f-f6b412729594" satisfied condition "Succeeded or Failed"
Aug 13 13:24:48.537: INFO: Trying to get logs from node ip-172-31-22-206 pod downward-api-2ec17e89-12ad-42b6-880f-f6b412729594 container dapi-container: <nil>
STEP: delete the pod
Aug 13 13:24:48.571: INFO: Waiting for pod downward-api-2ec17e89-12ad-42b6-880f-f6b412729594 to disappear
Aug 13 13:24:48.575: INFO: Pod downward-api-2ec17e89-12ad-42b6-880f-f6b412729594 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 13 13:24:48.575: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2004" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":344,"skipped":6386,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:48.588: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-8317
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Aug 13 13:24:48.725: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Aug 13 13:24:48.731: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-8317" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":345,"skipped":6419,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:24:48.748: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-b95f4a50-f0e5-4116-b6ab-e159ef554e0e in namespace container-probe-9106
Aug 13 13:24:52.913: INFO: Started pod busybox-b95f4a50-f0e5-4116-b6ab-e159ef554e0e in namespace container-probe-9106
STEP: checking the pod's current state and verifying that restartCount is present
Aug 13 13:24:52.916: INFO: Initial restart count of pod busybox-b95f4a50-f0e5-4116-b6ab-e159ef554e0e is 0
Aug 13 13:25:41.106: INFO: Restart count of pod container-probe-9106/busybox-b95f4a50-f0e5-4116-b6ab-e159ef554e0e is now 1 (48.190733556s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 13 13:25:41.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9106" for this suite.

• [SLOW TEST:52.382 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":346,"skipped":6431,"failed":0}
SSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:25:41.130: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-9767
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Aug 13 13:25:41.284: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Aug 13 13:25:43.300: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Aug 13 13:25:45.320: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Aug 13 13:25:47.327: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-9767" for this suite.

• [SLOW TEST:6.209 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":347,"skipped":6435,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:25:47.340: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5923
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-2b0be0c5-b7bd-466f-94d6-b740c6fd2f1e
STEP: Creating a pod to test consume secrets
Aug 13 13:25:47.487: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4" in namespace "projected-5923" to be "Succeeded or Failed"
Aug 13 13:25:47.491: INFO: Pod "pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4": Phase="Pending", Reason="", readiness=false. Elapsed: 4.092736ms
Aug 13 13:25:49.499: INFO: Pod "pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01247651s
Aug 13 13:25:51.507: INFO: Pod "pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02057639s
STEP: Saw pod success
Aug 13 13:25:51.507: INFO: Pod "pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4" satisfied condition "Succeeded or Failed"
Aug 13 13:25:51.511: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 13 13:25:51.533: INFO: Waiting for pod pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4 to disappear
Aug 13 13:25:51.537: INFO: Pod pod-projected-secrets-dcfab5f1-11cb-4a22-83a4-bfb877fa0be4 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 13 13:25:51.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5923" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6467,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:25:51.548: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2726
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-51cd5dce-8642-431e-ba13-1b1465b83ea9
STEP: Creating a pod to test consume secrets
Aug 13 13:25:51.691: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0" in namespace "projected-2726" to be "Succeeded or Failed"
Aug 13 13:25:51.694: INFO: Pod "pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.169842ms
Aug 13 13:25:53.703: INFO: Pod "pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012281929s
Aug 13 13:25:55.711: INFO: Pod "pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020402452s
STEP: Saw pod success
Aug 13 13:25:55.711: INFO: Pod "pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0" satisfied condition "Succeeded or Failed"
Aug 13 13:25:55.715: INFO: Trying to get logs from node ip-172-31-79-226 pod pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0 container secret-volume-test: <nil>
STEP: delete the pod
Aug 13 13:25:55.731: INFO: Waiting for pod pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0 to disappear
Aug 13 13:25:55.734: INFO: Pod pod-projected-secrets-bfa90b49-bf7e-4023-b4d9-3153722209b0 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 13 13:25:55.734: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2726" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":349,"skipped":6477,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:25:55.744: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-9367-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 13 13:25:55.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9367" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":350,"skipped":6506,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:25:55.908: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-5389
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Aug 13 13:25:56.055: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Aug 13 13:25:56.082: INFO: waiting for watch events with expected annotations in namespace
Aug 13 13:25:56.082: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Aug 13 13:25:56.110: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-5389" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":351,"skipped":6527,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:25:56.120: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4855
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4855
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-4855
STEP: creating replication controller externalsvc in namespace services-4855
I0813 13:25:56.281676      18 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4855, replica count: 2
I0813 13:25:59.332161      18 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Aug 13 13:25:59.355: INFO: Creating new exec pod
Aug 13 13:26:01.389: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=services-4855 exec execpodrknnq -- /bin/sh -x -c nslookup clusterip-service.services-4855.svc.cluster.local'
Aug 13 13:26:01.549: INFO: stderr: "+ nslookup clusterip-service.services-4855.svc.cluster.local\n"
Aug 13 13:26:01.549: INFO: stdout: "Server:\t\t10.152.183.87\nAddress:\t10.152.183.87#53\n\nclusterip-service.services-4855.svc.cluster.local\tcanonical name = externalsvc.services-4855.svc.cluster.local.\nName:\texternalsvc.services-4855.svc.cluster.local\nAddress: 10.152.183.179\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4855, will wait for the garbage collector to delete the pods
Aug 13 13:26:01.612: INFO: Deleting ReplicationController externalsvc took: 8.118826ms
Aug 13 13:26:01.713: INFO: Terminating ReplicationController externalsvc pods took: 100.904984ms
Aug 13 13:26:03.434: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 13 13:26:03.445: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4855" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.336 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":352,"skipped":6554,"failed":0}
SSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:26:03.456: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-4294
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Aug 13 13:26:03.594: INFO: Endpoints addresses: [172.31.70.75 172.31.93.111] , ports: [6443]
Aug 13 13:26:03.594: INFO: EndpointSlices addresses: [172.31.70.75 172.31.93.111] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 13 13:26:03.594: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-4294" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":353,"skipped":6561,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:26:03.604: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3212
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 13 13:26:04.148: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 13 13:26:07.177: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 13 13:26:07.264: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3212" for this suite.
STEP: Destroying namespace "webhook-3212-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":354,"skipped":6587,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:26:07.321: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9962
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Aug 13 13:26:07.457: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 create -f -'
Aug 13 13:26:08.071: INFO: stderr: ""
Aug 13 13:26:08.071: INFO: stdout: "pod/pause created\n"
Aug 13 13:26:08.071: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Aug 13 13:26:08.071: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-9962" to be "running and ready"
Aug 13 13:26:08.076: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 4.834226ms
Aug 13 13:26:10.085: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.013145968s
Aug 13 13:26:10.085: INFO: Pod "pause" satisfied condition "running and ready"
Aug 13 13:26:10.085: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Aug 13 13:26:10.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 label pods pause testing-label=testing-label-value'
Aug 13 13:26:10.145: INFO: stderr: ""
Aug 13 13:26:10.145: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Aug 13 13:26:10.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 get pod pause -L testing-label'
Aug 13 13:26:10.197: INFO: stderr: ""
Aug 13 13:26:10.197: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Aug 13 13:26:10.197: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 label pods pause testing-label-'
Aug 13 13:26:10.259: INFO: stderr: ""
Aug 13 13:26:10.259: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Aug 13 13:26:10.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 get pod pause -L testing-label'
Aug 13 13:26:10.310: INFO: stderr: ""
Aug 13 13:26:10.310: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Aug 13 13:26:10.310: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 delete --grace-period=0 --force -f -'
Aug 13 13:26:10.368: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 13 13:26:10.368: INFO: stdout: "pod \"pause\" force deleted\n"
Aug 13 13:26:10.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 get rc,svc -l name=pause --no-headers'
Aug 13 13:26:10.425: INFO: stderr: "No resources found in kubectl-9962 namespace.\n"
Aug 13 13:26:10.425: INFO: stdout: ""
Aug 13 13:26:10.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4267382231 --namespace=kubectl-9962 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 13 13:26:10.475: INFO: stderr: ""
Aug 13 13:26:10.475: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 13 13:26:10.475: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9962" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":355,"skipped":6609,"failed":0}

------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 13 13:26:10.486: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-9707
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-9707
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 13 13:26:10.617: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 13 13:26:10.655: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 13 13:26:12.663: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:14.665: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:16.661: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:18.666: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:20.663: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:22.664: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:24.665: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:26.662: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:28.665: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:30.664: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 13 13:26:32.665: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 13 13:26:32.671: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 13 13:26:32.677: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 13 13:26:34.718: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 13 13:26:34.718: INFO: Going to poll 192.168.132.46 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 13 13:26:34.720: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.132.46 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9707 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:26:34.720: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:26:34.721: INFO: ExecWithOptions: Clientset creation
Aug 13 13:26:34.721: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9707/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.132.46+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 13 13:26:35.792: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 13 13:26:35.792: INFO: Going to poll 192.168.74.125 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 13 13:26:35.797: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.74.125 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9707 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:26:35.798: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:26:35.798: INFO: ExecWithOptions: Clientset creation
Aug 13 13:26:35.798: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9707/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.74.125+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 13 13:26:36.868: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 13 13:26:36.868: INFO: Going to poll 192.168.176.33 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 13 13:26:36.873: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.176.33 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9707 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 13 13:26:36.873: INFO: >>> kubeConfig: /tmp/kubeconfig-4267382231
Aug 13 13:26:36.874: INFO: ExecWithOptions: Clientset creation
Aug 13 13:26:36.874: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9707/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.176.33+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 13 13:26:37.962: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 13 13:26:37.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-9707" for this suite.

• [SLOW TEST:27.492 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":356,"skipped":6609,"failed":0}
SSSSSSAug 13 13:26:37.979: INFO: Running AfterSuite actions on all nodes
Aug 13 13:26:37.979: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Aug 13 13:26:37.979: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Aug 13 13:26:37.979: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Aug 13 13:26:37.979: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Aug 13 13:26:37.979: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Aug 13 13:26:37.979: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Aug 13 13:26:37.979: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Aug 13 13:26:37.979: INFO: Running AfterSuite actions on node 1
Aug 13 13:26:37.979: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6615,"failed":0}

Ran 356 of 6971 Specs in 5530.614 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6615 Skipped
PASS

Ginkgo ran 1 suite in 1h32m13.213122972s
Test Suite Passed
