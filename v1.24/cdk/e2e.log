I0827 11:58:00.262416      22 e2e.go:129] Starting e2e run "cba14607-0e8d-46b3-a35e-bac550511989" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1661601480 - Will randomize all specs
Will run 356 of 6971 specs

Aug 27 11:58:02.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 11:58:02.819: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Aug 27 11:58:02.847: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Aug 27 11:58:02.872: INFO: 4 / 4 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Aug 27 11:58:02.872: INFO: expected 4 pod replicas in namespace 'kube-system', 4 are Running and Ready.
Aug 27 11:58:02.872: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Aug 27 11:58:02.877: INFO: e2e test version: v1.24.4
Aug 27 11:58:02.879: INFO: kube-apiserver version: v1.24.4
Aug 27 11:58:02.879: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 11:58:02.885: INFO: Cluster IP family: ipv4
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:58:02.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
W0827 11:58:02.933043      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 27 11:58:02.933: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
Aug 27 11:58:02.947: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0827 11:58:02.953319      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0827 11:58:02.960011      22 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Aug 27 11:58:02.969: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4752
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 11:58:03.580: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Aug 27 11:58:05.598: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 11:58:07.604: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 11:58:09.605: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 11:58:12.624: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 11:58:12.928: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4752" for this suite.
STEP: Destroying namespace "webhook-4752-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:10.170 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":1,"skipped":19,"failed":0}
SSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:58:13.055: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6280
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc
Aug 27 11:58:13.216: INFO: Pod name my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc: Found 0 pods out of 1
Aug 27 11:58:18.227: INFO: Pod name my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc: Found 1 pods out of 1
Aug 27 11:58:18.227: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc" are running
Aug 27 11:58:18.230: INFO: Pod "my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc-rczcs" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 11:58:13 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 11:58:14 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 11:58:14 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 11:58:13 +0000 UTC Reason: Message:}])
Aug 27 11:58:18.230: INFO: Trying to dial the pod
Aug 27 11:58:23.266: INFO: Controller my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc: Got expected result from replica 1 [my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc-rczcs]: "my-hostname-basic-12c30239-ea8f-42de-9951-7eeefebc89dc-rczcs", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 27 11:58:23.266: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6280" for this suite.

• [SLOW TEST:10.230 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":2,"skipped":22,"failed":0}
SSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:58:23.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-4061
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Aug 27 11:58:23.465: INFO: created test-event-1
Aug 27 11:58:23.473: INFO: created test-event-2
Aug 27 11:58:23.479: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Aug 27 11:58:23.486: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Aug 27 11:58:23.524: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug 27 11:58:23.529: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-4061" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":3,"skipped":30,"failed":0}
SS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:58:23.547: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-9651
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Aug 27 11:58:23.701: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-9651" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":4,"skipped":32,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:58:23.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-9687
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-9687
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 27 11:58:23.872: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 27 11:58:23.927: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 11:58:25.936: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 11:58:27.936: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 11:58:29.942: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 11:58:31.938: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 11:58:33.936: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 11:58:35.936: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 27 11:58:35.959: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 27 11:58:37.967: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 27 11:58:39.972: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 27 11:58:41.969: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 27 11:58:43.968: INFO: The status of Pod netserver-1 is Running (Ready = false)
Aug 27 11:58:45.971: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 27 11:58:45.981: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 27 11:58:48.016: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 27 11:58:48.016: INFO: Breadth first check of 192.168.233.131 on host 172.31.31.152...
Aug 27 11:58:48.021: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.233.132:9080/dial?request=hostname&protocol=udp&host=192.168.233.131&port=8081&tries=1'] Namespace:pod-network-test-9687 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 11:58:48.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 11:58:48.021: INFO: ExecWithOptions: Clientset creation
Aug 27 11:58:48.021: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9687/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.233.132%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.233.131%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 27 11:58:48.119: INFO: Waiting for responses: map[]
Aug 27 11:58:48.119: INFO: reached 192.168.233.131 after 0/1 tries
Aug 27 11:58:48.119: INFO: Breadth first check of 192.168.163.67 on host 172.31.5.213...
Aug 27 11:58:48.125: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.233.132:9080/dial?request=hostname&protocol=udp&host=192.168.163.67&port=8081&tries=1'] Namespace:pod-network-test-9687 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 11:58:48.125: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 11:58:48.125: INFO: ExecWithOptions: Clientset creation
Aug 27 11:58:48.125: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9687/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.233.132%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.163.67%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 27 11:58:48.219: INFO: Waiting for responses: map[]
Aug 27 11:58:48.219: INFO: reached 192.168.163.67 after 0/1 tries
Aug 27 11:58:48.219: INFO: Breadth first check of 192.168.50.71 on host 172.31.65.143...
Aug 27 11:58:48.226: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.233.132:9080/dial?request=hostname&protocol=udp&host=192.168.50.71&port=8081&tries=1'] Namespace:pod-network-test-9687 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 11:58:48.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 11:58:48.227: INFO: ExecWithOptions: Clientset creation
Aug 27 11:58:48.227: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9687/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.233.132%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.50.71%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 27 11:58:48.305: INFO: Waiting for responses: map[]
Aug 27 11:58:48.305: INFO: reached 192.168.50.71 after 0/1 tries
Aug 27 11:58:48.305: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 27 11:58:48.305: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-9687" for this suite.

• [SLOW TEST:24.608 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":5,"skipped":46,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:58:48.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5274
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 11:58:49.437: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Aug 27 11:58:51.461: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 49, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 11, 58, 49, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 11, 58, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 11:58:54.488: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 11:58:54.621: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5274" for this suite.
STEP: Destroying namespace "webhook-5274-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.377 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":6,"skipped":68,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:58:54.705: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6429
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 11:59:12.936: INFO: DNS probes using dns-6429/dns-test-34193ac0-de8e-4d03-9317-c0e79601573a succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 11:59:12.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6429" for this suite.

• [SLOW TEST:18.268 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":7,"skipped":162,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:59:12.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3588
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-0e886498-aed6-45d2-82cc-d963e8c77d88
STEP: Creating a pod to test consume secrets
Aug 27 11:59:13.144: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf" in namespace "projected-3588" to be "Succeeded or Failed"
Aug 27 11:59:13.152: INFO: Pod "pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf": Phase="Pending", Reason="", readiness=false. Elapsed: 7.967237ms
Aug 27 11:59:15.159: INFO: Pod "pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01520432s
Aug 27 11:59:17.172: INFO: Pod "pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028180474s
STEP: Saw pod success
Aug 27 11:59:17.172: INFO: Pod "pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf" satisfied condition "Succeeded or Failed"
Aug 27 11:59:17.177: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 27 11:59:17.237: INFO: Waiting for pod pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf to disappear
Aug 27 11:59:17.242: INFO: Pod pod-projected-secrets-c8366130-3840-4040-a28a-61d3ba49c0cf no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 27 11:59:17.242: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3588" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":8,"skipped":182,"failed":0}
SSSSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:59:17.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2021
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-2021
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2021 to expose endpoints map[]
Aug 27 11:59:17.441: INFO: successfully validated that service multi-endpoint-test in namespace services-2021 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-2021
Aug 27 11:59:17.466: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 11:59:19.477: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2021 to expose endpoints map[pod1:[100]]
Aug 27 11:59:19.500: INFO: successfully validated that service multi-endpoint-test in namespace services-2021 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-2021
Aug 27 11:59:19.521: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 11:59:21.528: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2021 to expose endpoints map[pod1:[100] pod2:[101]]
Aug 27 11:59:21.560: INFO: successfully validated that service multi-endpoint-test in namespace services-2021 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Aug 27 11:59:21.561: INFO: Creating new exec pod
Aug 27 11:59:24.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-2021 exec execpodkgmnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Aug 27 11:59:24.976: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Aug 27 11:59:24.976: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 11:59:24.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-2021 exec execpodkgmnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.70 80'
Aug 27 11:59:25.166: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.70 80\nConnection to 10.152.183.70 80 port [tcp/http] succeeded!\n"
Aug 27 11:59:25.166: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 11:59:25.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-2021 exec execpodkgmnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Aug 27 11:59:25.353: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Aug 27 11:59:25.353: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 11:59:25.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-2021 exec execpodkgmnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.70 81'
Aug 27 11:59:25.518: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.70 81\nConnection to 10.152.183.70 81 port [tcp/*] succeeded!\n"
Aug 27 11:59:25.518: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-2021
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2021 to expose endpoints map[pod2:[101]]
Aug 27 11:59:26.563: INFO: successfully validated that service multi-endpoint-test in namespace services-2021 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-2021
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2021 to expose endpoints map[]
Aug 27 11:59:26.619: INFO: successfully validated that service multi-endpoint-test in namespace services-2021 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 11:59:26.683: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2021" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.444 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":9,"skipped":190,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:59:26.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9287
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-d51c8434-f9c2-4fac-b7b3-6e995c59f35d
STEP: Creating configMap with name cm-test-opt-upd-27298973-ae45-4703-a75b-656d35a1f7ba
STEP: Creating the pod
Aug 27 11:59:26.931: INFO: The status of Pod pod-configmaps-db09853c-b682-4876-896d-6e4121f5022e is Pending, waiting for it to be Running (with Ready = true)
Aug 27 11:59:28.939: INFO: The status of Pod pod-configmaps-db09853c-b682-4876-896d-6e4121f5022e is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-d51c8434-f9c2-4fac-b7b3-6e995c59f35d
STEP: Updating configmap cm-test-opt-upd-27298973-ae45-4703-a75b-656d35a1f7ba
STEP: Creating configMap with name cm-test-opt-create-e0853581-b195-4a59-b5de-f405d833d9dc
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 11:59:31.038: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9287" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":10,"skipped":202,"failed":0}
S
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:59:31.069: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-5013
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Aug 27 11:59:37.294: INFO: 81 pods remaining
Aug 27 11:59:37.295: INFO: 81 pods has nil DeletionTimestamp
Aug 27 11:59:37.295: INFO: 
Aug 27 11:59:38.303: INFO: 70 pods remaining
Aug 27 11:59:38.304: INFO: 69 pods has nil DeletionTimestamp
Aug 27 11:59:38.304: INFO: 
Aug 27 11:59:39.291: INFO: 60 pods remaining
Aug 27 11:59:39.292: INFO: 60 pods has nil DeletionTimestamp
Aug 27 11:59:39.292: INFO: 
Aug 27 11:59:40.291: INFO: 41 pods remaining
Aug 27 11:59:40.291: INFO: 40 pods has nil DeletionTimestamp
Aug 27 11:59:40.291: INFO: 
Aug 27 11:59:41.287: INFO: 30 pods remaining
Aug 27 11:59:41.288: INFO: 30 pods has nil DeletionTimestamp
Aug 27 11:59:41.288: INFO: 
Aug 27 11:59:42.289: INFO: 20 pods remaining
Aug 27 11:59:42.289: INFO: 20 pods has nil DeletionTimestamp
Aug 27 11:59:42.289: INFO: 
STEP: Gathering metrics
Aug 27 11:59:43.288: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0827 11:59:43.288380      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 27 11:59:43.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-5013" for this suite.

• [SLOW TEST:12.233 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":11,"skipped":203,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 11:59:43.303: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6438
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 in namespace container-probe-6438
Aug 27 11:59:51.492: INFO: Started pod liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 in namespace container-probe-6438
STEP: checking the pod's current state and verifying that restartCount is present
Aug 27 11:59:51.498: INFO: Initial restart count of pod liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 is 0
Aug 27 12:00:05.582: INFO: Restart count of pod container-probe-6438/liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 is now 1 (14.083555775s elapsed)
Aug 27 12:00:25.696: INFO: Restart count of pod container-probe-6438/liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 is now 2 (34.197149557s elapsed)
Aug 27 12:00:45.807: INFO: Restart count of pod container-probe-6438/liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 is now 3 (54.30880322s elapsed)
Aug 27 12:01:05.939: INFO: Restart count of pod container-probe-6438/liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 is now 4 (1m14.440700218s elapsed)
Aug 27 12:02:08.316: INFO: Restart count of pod container-probe-6438/liveness-c196cd50-a7ae-4d6f-9c8f-9ff2d28afaa4 is now 5 (2m16.817572716s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 12:02:08.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6438" for this suite.

• [SLOW TEST:145.058 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":12,"skipped":217,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:02:08.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8886
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-8886
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-8886
I0827 12:02:08.581451      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8886, replica count: 2
I0827 12:02:11.632808      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 12:02:11.632: INFO: Creating new exec pod
Aug 27 12:02:14.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 27 12:02:14.829: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 27 12:02:14.829: INFO: stdout: "externalname-service-v5s8z"
Aug 27 12:02:14.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.124 80'
Aug 27 12:02:15.025: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 10.152.183.124 80\nConnection to 10.152.183.124 80 port [tcp/http] succeeded!\n"
Aug 27 12:02:15.025: INFO: stdout: ""
Aug 27 12:02:16.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.124 80'
Aug 27 12:02:16.192: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.124 80\nConnection to 10.152.183.124 80 port [tcp/http] succeeded!\n"
Aug 27 12:02:16.192: INFO: stdout: "externalname-service-8jl8s"
Aug 27 12:02:16.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.213 31892'
Aug 27 12:02:16.365: INFO: stderr: "+ + nc -vecho -t -w hostName 2\n 172.31.5.213 31892\nConnection to 172.31.5.213 31892 port [tcp/*] succeeded!\n"
Aug 27 12:02:16.365: INFO: stdout: ""
Aug 27 12:02:17.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.213 31892'
Aug 27 12:02:17.554: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.213 31892\nConnection to 172.31.5.213 31892 port [tcp/*] succeeded!\n"
Aug 27 12:02:17.554: INFO: stdout: ""
Aug 27 12:02:18.366: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.213 31892'
Aug 27 12:02:18.533: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.213 31892\nConnection to 172.31.5.213 31892 port [tcp/*] succeeded!\n"
Aug 27 12:02:18.533: INFO: stdout: "externalname-service-v5s8z"
Aug 27 12:02:18.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.143 31892'
Aug 27 12:02:18.704: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.143 31892\nConnection to 172.31.65.143 31892 port [tcp/*] succeeded!\n"
Aug 27 12:02:18.704: INFO: stdout: ""
Aug 27 12:02:19.704: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8886 exec execpodz4spp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.143 31892'
Aug 27 12:02:19.873: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.143 31892\nConnection to 172.31.65.143 31892 port [tcp/*] succeeded!\n"
Aug 27 12:02:19.873: INFO: stdout: "externalname-service-8jl8s"
Aug 27 12:02:19.873: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:02:19.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8886" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:11.583 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":13,"skipped":245,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:02:19.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-1954
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug 27 12:02:20.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:02:38.800: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1954" for this suite.

• [SLOW TEST:18.887 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":14,"skipped":257,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:02:38.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7486
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:02:39.004: INFO: Creating deployment "test-recreate-deployment"
Aug 27 12:02:39.013: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Aug 27 12:02:39.030: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Aug 27 12:02:41.049: INFO: Waiting deployment "test-recreate-deployment" to complete
Aug 27 12:02:41.057: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Aug 27 12:02:41.076: INFO: Updating deployment test-recreate-deployment
Aug 27 12:02:41.076: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 12:02:41.244: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-7486  2294fcfe-9624-41b4-9021-8727eacc9628 5047 2 2022-08-27 12:02:39 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-27 12:02:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:02:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0049796d8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-08-27 12:02:41 +0000 UTC,LastTransitionTime:2022-08-27 12:02:41 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-08-27 12:02:41 +0000 UTC,LastTransitionTime:2022-08-27 12:02:39 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Aug 27 12:02:41.249: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-7486  2ba85e99-048d-4baf-98c5-ac130f1a53e2 5045 1 2022-08-27 12:02:41 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 2294fcfe-9624-41b4-9021-8727eacc9628 0xc004979b70 0xc004979b71}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:02:41 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2294fcfe-9624-41b4-9021-8727eacc9628\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:02:41 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004979c08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:02:41.249: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Aug 27 12:02:41.250: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-7486  d8dfa900-22d5-45ad-b89a-9a6fd5ab0d37 5033 2 2022-08-27 12:02:39 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 2294fcfe-9624-41b4-9021-8727eacc9628 0xc004979a3f 0xc004979a70}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:02:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2294fcfe-9624-41b4-9021-8727eacc9628\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:02:41 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004979b18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:02:41.256: INFO: Pod "test-recreate-deployment-cd8586fc7-g96wb" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-g96wb test-recreate-deployment-cd8586fc7- deployment-7486  93524cb9-4141-4df9-8219-190fe48fb630 5044 0 2022-08-27 12:02:41 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 2ba85e99-048d-4baf-98c5-ac130f1a53e2 0xc004372070 0xc004372071}] []  [{kube-controller-manager Update v1 2022-08-27 12:02:41 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2ba85e99-048d-4baf-98c5-ac130f1a53e2\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:02:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m4mrl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m4mrl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:02:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:02:41 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:02:41 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:02:41 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:,StartTime:2022-08-27 12:02:41 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 12:02:41.256: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7486" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":15,"skipped":317,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:02:41.275: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7291
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-488a6c1f-fe09-4cdd-ab71-994db73d942c
STEP: Creating a pod to test consume configMaps
Aug 27 12:02:41.456: INFO: Waiting up to 5m0s for pod "pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350" in namespace "configmap-7291" to be "Succeeded or Failed"
Aug 27 12:02:41.462: INFO: Pod "pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350": Phase="Pending", Reason="", readiness=false. Elapsed: 5.261723ms
Aug 27 12:02:43.472: INFO: Pod "pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015679712s
Aug 27 12:02:45.483: INFO: Pod "pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026264407s
STEP: Saw pod success
Aug 27 12:02:45.483: INFO: Pod "pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350" satisfied condition "Succeeded or Failed"
Aug 27 12:02:45.489: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:02:45.534: INFO: Waiting for pod pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350 to disappear
Aug 27 12:02:45.541: INFO: Pod pod-configmaps-5b404c57-021f-40d3-8347-a8079b981350 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:02:45.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7291" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":16,"skipped":319,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:02:45.558: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5242
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5242
STEP: creating service affinity-clusterip in namespace services-5242
STEP: creating replication controller affinity-clusterip in namespace services-5242
I0827 12:02:45.748615      22 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-5242, replica count: 3
I0827 12:02:48.799393      22 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 12:02:48.822: INFO: Creating new exec pod
Aug 27 12:02:51.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-5242 exec execpod-affinity842cb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Aug 27 12:02:52.044: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Aug 27 12:02:52.044: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:02:52.044: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-5242 exec execpod-affinity842cb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.6 80'
Aug 27 12:02:52.217: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.6 80\nConnection to 10.152.183.6 80 port [tcp/http] succeeded!\n"
Aug 27 12:02:52.217: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:02:52.217: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-5242 exec execpod-affinity842cb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.6:80/ ; done'
Aug 27 12:02:52.474: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.6:80/\n"
Aug 27 12:02:52.474: INFO: stdout: "\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv\naffinity-clusterip-4t4pv"
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Received response from host: affinity-clusterip-4t4pv
Aug 27 12:02:52.474: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-5242, will wait for the garbage collector to delete the pods
Aug 27 12:02:52.557: INFO: Deleting ReplicationController affinity-clusterip took: 11.18522ms
Aug 27 12:02:52.658: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.228761ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:02:54.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5242" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.364 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":17,"skipped":336,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:02:54.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8044
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 27 12:02:55.154: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:55.154: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:55.159: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:02:55.159: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:02:56.169: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:56.170: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:56.176: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:02:56.176: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:02:57.168: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:57.169: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:57.175: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:02:57.175: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:02:58.171: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:58.171: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:58.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:02:58.178: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:02:59.171: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:59.171: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:02:59.178: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:02:59.178: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:03:00.170: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:00.170: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:00.177: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:03:00.177: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:03:01.169: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:01.169: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:01.176: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 27 12:03:01.176: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:03:02.173: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:02.173: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:02.181: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 27 12:03:02.181: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:03:03.168: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:03.168: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:03.175: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:03:03.175: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 12:03:04.172: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:04.172: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:04.180: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:03:04.180: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 12:03:05.175: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:05.175: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:03:05.185: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 12:03:05.185: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Aug 27 12:03:05.256: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5362"},"items":null}

Aug 27 12:03:05.275: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5364"},"items":[{"metadata":{"name":"daemon-set-4bdzt","generateName":"daemon-set-","namespace":"daemonsets-8044","uid":"9d2b04bd-6e2d-4a97-8875-3531b281f725","resourceVersion":"5344","creationTimestamp":"2022-08-27T12:02:55Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e29a6c04-0b78-4b13-a971-d36367833f75","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-27T12:02:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e29a6c04-0b78-4b13-a971-d36367833f75\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-27T12:03:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.50.101\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bx5t4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bx5t4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-65-143","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-65-143"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:02:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:03:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:03:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:02:55Z"}],"hostIP":"172.31.65.143","podIP":"192.168.50.101","podIPs":[{"ip":"192.168.50.101"}],"startTime":"2022-08-27T12:02:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-27T12:03:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://b6ee115d7cc188c1083e11e88ddd59c638391aea98b17cfbff185b9492bcfb40","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-kqfkl","generateName":"daemon-set-","namespace":"daemonsets-8044","uid":"102d07c8-def2-4f7c-b5c4-364cf9d01721","resourceVersion":"5363","creationTimestamp":"2022-08-27T12:02:55Z","deletionTimestamp":"2022-08-27T12:03:35Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e29a6c04-0b78-4b13-a971-d36367833f75","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-27T12:02:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e29a6c04-0b78-4b13-a971-d36367833f75\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-27T12:03:04Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.103\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ffdtl","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ffdtl","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-5-213","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-5-213"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:02:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:03:04Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:03:04Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:02:55Z"}],"hostIP":"172.31.5.213","podIP":"192.168.163.103","podIPs":[{"ip":"192.168.163.103"}],"startTime":"2022-08-27T12:02:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-27T12:03:04Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://bb640718057fb3f8cf0d49ea60d59e1717fd895d4831f98285fb02daed3e42fd","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nlfss","generateName":"daemon-set-","namespace":"daemonsets-8044","uid":"ac410f9c-3cbf-48b6-81f8-d74bf5a544d9","resourceVersion":"5364","creationTimestamp":"2022-08-27T12:02:55Z","deletionTimestamp":"2022-08-27T12:03:35Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"e29a6c04-0b78-4b13-a971-d36367833f75","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-08-27T12:02:55Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"e29a6c04-0b78-4b13-a971-d36367833f75\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-08-27T12:03:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.174\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5w28w","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5w28w","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-31-152","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-31-152"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:02:55Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:03:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:03:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-08-27T12:02:55Z"}],"hostIP":"172.31.31.152","podIP":"192.168.233.174","podIPs":[{"ip":"192.168.233.174"}],"startTime":"2022-08-27T12:02:55Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-08-27T12:03:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://937b285dbb740e5c5b9a6d667437001d55529f65e53bb46d25a7eeb15cb3f399","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:03:05.310: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8044" for this suite.

• [SLOW TEST:10.413 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":18,"skipped":355,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:03:05.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-253
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:03:05.517: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7" in namespace "projected-253" to be "Succeeded or Failed"
Aug 27 12:03:05.525: INFO: Pod "downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7": Phase="Pending", Reason="", readiness=false. Elapsed: 7.576956ms
Aug 27 12:03:07.533: INFO: Pod "downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01584619s
Aug 27 12:03:09.547: INFO: Pod "downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029340617s
STEP: Saw pod success
Aug 27 12:03:09.547: INFO: Pod "downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7" satisfied condition "Succeeded or Failed"
Aug 27 12:03:09.553: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7 container client-container: <nil>
STEP: delete the pod
Aug 27 12:03:09.586: INFO: Waiting for pod downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7 to disappear
Aug 27 12:03:09.592: INFO: Pod downwardapi-volume-ef2f9c7f-77a2-4a36-a221-dc0abae33cd7 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 12:03:09.592: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-253" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":19,"skipped":360,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:03:09.610: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-433
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-433
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug 27 12:03:09.795: INFO: Found 0 stateful pods, waiting for 3
Aug 27 12:03:19.820: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 12:03:19.820: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 12:03:19.820: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 27 12:03:19.872: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Aug 27 12:03:29.947: INFO: Updating stateful set ss2
Aug 27 12:03:29.963: INFO: Waiting for Pod statefulset-433/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Aug 27 12:03:40.052: INFO: Found 1 stateful pods, waiting for 3
Aug 27 12:03:50.082: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 12:03:50.082: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 12:03:50.082: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Aug 27 12:03:50.140: INFO: Updating stateful set ss2
Aug 27 12:03:50.156: INFO: Waiting for Pod statefulset-433/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Aug 27 12:04:00.199: INFO: Updating stateful set ss2
Aug 27 12:04:00.212: INFO: Waiting for StatefulSet statefulset-433/ss2 to complete update
Aug 27 12:04:00.212: INFO: Waiting for Pod statefulset-433/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 12:04:10.235: INFO: Deleting all statefulset in ns statefulset-433
Aug 27 12:04:10.240: INFO: Scaling statefulset ss2 to 0
Aug 27 12:04:20.288: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 12:04:20.293: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 12:04:20.324: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-433" for this suite.

• [SLOW TEST:70.733 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":20,"skipped":373,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:20.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-7109
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Aug 27 12:04:20.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-7109" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":21,"skipped":405,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:20.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-119
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-cea9ef71-6ecb-47c0-b81e-3200fdbcc248
STEP: Creating a pod to test consume configMaps
Aug 27 12:04:20.761: INFO: Waiting up to 5m0s for pod "pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272" in namespace "configmap-119" to be "Succeeded or Failed"
Aug 27 12:04:20.767: INFO: Pod "pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272": Phase="Pending", Reason="", readiness=false. Elapsed: 5.67224ms
Aug 27 12:04:22.774: INFO: Pod "pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013020889s
Aug 27 12:04:24.792: INFO: Pod "pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031348568s
STEP: Saw pod success
Aug 27 12:04:24.792: INFO: Pod "pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272" satisfied condition "Succeeded or Failed"
Aug 27 12:04:24.798: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:04:24.840: INFO: Waiting for pod pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272 to disappear
Aug 27 12:04:24.846: INFO: Pod pod-configmaps-5004ca8d-1100-4617-a771-c58c6f43f272 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:04:24.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-119" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":22,"skipped":422,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:24.863: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-4637
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 27 12:04:29.145: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 27 12:04:29.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-4637" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":23,"skipped":434,"failed":0}

------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:29.186: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2455
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:04:29.354: INFO: Got root ca configmap in namespace "svcaccounts-2455"
Aug 27 12:04:29.363: INFO: Deleted root ca configmap in namespace "svcaccounts-2455"
STEP: waiting for a new root ca configmap created
Aug 27 12:04:29.871: INFO: Recreated root ca configmap in namespace "svcaccounts-2455"
Aug 27 12:04:29.879: INFO: Updated root ca configmap in namespace "svcaccounts-2455"
STEP: waiting for the root ca configmap reconciled
Aug 27 12:04:30.388: INFO: Reconciled root ca configmap in namespace "svcaccounts-2455"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 27 12:04:30.388: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2455" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":24,"skipped":434,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:30.409: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8072
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-6bfc74c2-d2c0-418c-a111-3f3078b01d78
STEP: Creating a pod to test consume configMaps
Aug 27 12:04:30.592: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140" in namespace "projected-8072" to be "Succeeded or Failed"
Aug 27 12:04:30.601: INFO: Pod "pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140": Phase="Pending", Reason="", readiness=false. Elapsed: 9.263642ms
Aug 27 12:04:32.618: INFO: Pod "pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025426604s
Aug 27 12:04:34.630: INFO: Pod "pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.038077665s
STEP: Saw pod success
Aug 27 12:04:34.630: INFO: Pod "pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140" satisfied condition "Succeeded or Failed"
Aug 27 12:04:34.636: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:04:34.678: INFO: Waiting for pod pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140 to disappear
Aug 27 12:04:34.682: INFO: Pod pod-projected-configmaps-5a2fc9d7-ad73-40f0-9ed9-9fcb34d74140 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 12:04:34.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8072" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":25,"skipped":443,"failed":0}

------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:34.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:04:35.247: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:04:38.288: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:04:38.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2504-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:04:41.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6693" for this suite.
STEP: Destroying namespace "webhook-6693-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.877 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":26,"skipped":443,"failed":0}
S
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:41.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6614
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 27 12:04:41.763: INFO: Waiting up to 5m0s for pod "downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c" in namespace "downward-api-6614" to be "Succeeded or Failed"
Aug 27 12:04:41.769: INFO: Pod "downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c": Phase="Pending", Reason="", readiness=false. Elapsed: 6.309905ms
Aug 27 12:04:43.781: INFO: Pod "downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018598123s
Aug 27 12:04:45.791: INFO: Pod "downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027989484s
STEP: Saw pod success
Aug 27 12:04:45.791: INFO: Pod "downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c" satisfied condition "Succeeded or Failed"
Aug 27 12:04:45.798: INFO: Trying to get logs from node ip-172-31-31-152 pod downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c container dapi-container: <nil>
STEP: delete the pod
Aug 27 12:04:45.836: INFO: Waiting for pod downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c to disappear
Aug 27 12:04:45.843: INFO: Pod downward-api-ff305c90-bba3-456a-b834-ff6f77a7282c no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 27 12:04:45.843: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6614" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":27,"skipped":444,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:45.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-498
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-498
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-498
STEP: creating replication controller externalsvc in namespace services-498
I0827 12:04:46.092465      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-498, replica count: 2
I0827 12:04:49.143244      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Aug 27 12:04:49.183: INFO: Creating new exec pod
Aug 27 12:04:51.212: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-498 exec execpodfxcvc -- /bin/sh -x -c nslookup clusterip-service.services-498.svc.cluster.local'
Aug 27 12:04:51.418: INFO: stderr: "+ nslookup clusterip-service.services-498.svc.cluster.local\n"
Aug 27 12:04:51.418: INFO: stdout: "Server:\t\t10.152.183.113\nAddress:\t10.152.183.113#53\n\nclusterip-service.services-498.svc.cluster.local\tcanonical name = externalsvc.services-498.svc.cluster.local.\nName:\texternalsvc.services-498.svc.cluster.local\nAddress: 10.152.183.235\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-498, will wait for the garbage collector to delete the pods
Aug 27 12:04:51.488: INFO: Deleting ReplicationController externalsvc took: 11.514062ms
Aug 27 12:04:51.589: INFO: Terminating ReplicationController externalsvc pods took: 101.110337ms
Aug 27 12:04:53.820: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:04:53.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-498" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.000 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":28,"skipped":457,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:53.865: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-7777
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Aug 27 12:04:54.041: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:04:56.050: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Aug 27 12:04:57.093: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 27 12:04:58.138: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-7777" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":29,"skipped":484,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:04:58.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-6292
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-4444
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-6641
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:05:14.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-6292" for this suite.
STEP: Destroying namespace "nsdeletetest-4444" for this suite.
Aug 27 12:05:14.712: INFO: Namespace nsdeletetest-4444 was already deleted
STEP: Destroying namespace "nsdeletetest-6641" for this suite.

• [SLOW TEST:16.565 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":30,"skipped":493,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:05:14.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-8389
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:05:14.874: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:05:15.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-8389" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":31,"skipped":501,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:05:15.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1624
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:05:16.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 27 12:05:16.109: INFO: The status of Pod pod-exec-websocket-7adb3554-f9f8-45b8-a9bf-c8a7eb2c163d is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:05:18.121: INFO: The status of Pod pod-exec-websocket-7adb3554-f9f8-45b8-a9bf-c8a7eb2c163d is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 12:05:18.217: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1624" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":32,"skipped":512,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:05:18.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-3589
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-3589
Aug 27 12:05:18.418: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:05:20.435: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 27 12:05:20.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 27 12:05:20.598: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 27 12:05:20.598: INFO: stdout: "iptables"
Aug 27 12:05:20.598: INFO: proxyMode: iptables
Aug 27 12:05:20.617: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 27 12:05:20.622: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-3589
STEP: creating replication controller affinity-nodeport-timeout in namespace services-3589
I0827 12:05:20.659757      22 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-3589, replica count: 3
I0827 12:05:23.711548      22 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 12:05:23.733: INFO: Creating new exec pod
Aug 27 12:05:26.770: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec execpod-affinitypqvzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Aug 27 12:05:26.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Aug 27 12:05:26.961: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:05:26.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec execpod-affinitypqvzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.217 80'
Aug 27 12:05:27.124: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.217 80\nConnection to 10.152.183.217 80 port [tcp/http] succeeded!\n"
Aug 27 12:05:27.124: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:05:27.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec execpod-affinitypqvzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.143 32324'
Aug 27 12:05:27.284: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.143 32324\nConnection to 172.31.65.143 32324 port [tcp/*] succeeded!\n"
Aug 27 12:05:27.284: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:05:27.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec execpod-affinitypqvzg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.213 32324'
Aug 27 12:05:27.450: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.213 32324\nConnection to 172.31.5.213 32324 port [tcp/*] succeeded!\n"
Aug 27 12:05:27.450: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:05:27.450: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec execpod-affinitypqvzg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.152:32324/ ; done'
Aug 27 12:05:27.676: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n"
Aug 27 12:05:27.676: INFO: stdout: "\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd\naffinity-nodeport-timeout-cjwkd"
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.676: INFO: Received response from host: affinity-nodeport-timeout-cjwkd
Aug 27 12:05:27.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec execpod-affinitypqvzg -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.31.152:32324/'
Aug 27 12:05:27.828: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n"
Aug 27 12:05:27.828: INFO: stdout: "affinity-nodeport-timeout-cjwkd"
Aug 27 12:05:47.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-3589 exec execpod-affinitypqvzg -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.31.152:32324/'
Aug 27 12:05:48.012: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.31.152:32324/\n"
Aug 27 12:05:48.012: INFO: stdout: "affinity-nodeport-timeout-tmwnf"
Aug 27 12:05:48.012: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-3589, will wait for the garbage collector to delete the pods
Aug 27 12:05:48.100: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 11.766227ms
Aug 27 12:05:48.201: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 101.097532ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:05:50.345: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-3589" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:32.126 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":33,"skipped":573,"failed":0}
SSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:05:50.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-5231
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:05:50.574: INFO: The status of Pod pod-secrets-d7499478-4aa0-47a9-a7c4-d056bf9fd3ff is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:05:52.601: INFO: The status of Pod pod-secrets-d7499478-4aa0-47a9-a7c4-d056bf9fd3ff is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug 27 12:05:52.658: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-5231" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":34,"skipped":580,"failed":0}
SSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:05:52.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5832
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:05:52.891: INFO: Create a RollingUpdate DaemonSet
Aug 27 12:05:52.903: INFO: Check that daemon pods launch on every node of the cluster
Aug 27 12:05:52.913: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:52.914: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:52.920: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:05:52.920: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:05:53.929: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:53.929: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:53.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:05:53.936: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:05:54.934: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:54.934: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:54.942: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 12:05:54.942: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Aug 27 12:05:54.942: INFO: Update the DaemonSet to trigger a rollout
Aug 27 12:05:54.961: INFO: Updating DaemonSet daemon-set
Aug 27 12:05:58.001: INFO: Roll back the DaemonSet before rollout is complete
Aug 27 12:05:58.016: INFO: Updating DaemonSet daemon-set
Aug 27 12:05:58.016: INFO: Make sure DaemonSet rollback is complete
Aug 27 12:05:58.028: INFO: Wrong image for pod: daemon-set-hp8zs. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Aug 27 12:05:58.028: INFO: Pod daemon-set-hp8zs is not available
Aug 27 12:05:58.035: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:58.035: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:59.063: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:05:59.063: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:06:00.048: INFO: Pod daemon-set-6b695 is not available
Aug 27 12:06:00.055: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:06:00.055: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5832, will wait for the garbage collector to delete the pods
Aug 27 12:06:00.152: INFO: Deleting DaemonSet.extensions daemon-set took: 20.198318ms
Aug 27 12:06:00.252: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.21461ms
Aug 27 12:06:01.261: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:06:01.261: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 27 12:06:01.269: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7045"},"items":null}

Aug 27 12:06:01.274: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7045"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:06:01.315: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5832" for this suite.

• [SLOW TEST:8.661 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":35,"skipped":584,"failed":0}
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:06:01.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-4830
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 27 12:06:01.538: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-4830" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":36,"skipped":585,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:06:01.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5939
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:06:01.726: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619" in namespace "projected-5939" to be "Succeeded or Failed"
Aug 27 12:06:01.735: INFO: Pod "downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619": Phase="Pending", Reason="", readiness=false. Elapsed: 8.907161ms
Aug 27 12:06:03.743: INFO: Pod "downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016664922s
Aug 27 12:06:05.751: INFO: Pod "downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024980379s
STEP: Saw pod success
Aug 27 12:06:05.751: INFO: Pod "downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619" satisfied condition "Succeeded or Failed"
Aug 27 12:06:05.757: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619 container client-container: <nil>
STEP: delete the pod
Aug 27 12:06:05.785: INFO: Waiting for pod downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619 to disappear
Aug 27 12:06:05.791: INFO: Pod downwardapi-volume-9a52bf94-7659-4814-9b61-898bedff3619 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 12:06:05.791: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5939" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":37,"skipped":615,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:06:05.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-878
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-878
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:06:06.011: INFO: Found 0 stateful pods, waiting for 1
Aug 27 12:06:16.022: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Aug 27 12:06:16.068: INFO: Found 1 stateful pods, waiting for 2
Aug 27 12:06:26.078: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 12:06:26.078: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 12:06:26.129: INFO: Deleting all statefulset in ns statefulset-878
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 12:06:26.155: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-878" for this suite.

• [SLOW TEST:20.368 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":38,"skipped":654,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:06:26.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8875
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Aug 27 12:06:28.416: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 27 12:06:32.661: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8875" for this suite.

• [SLOW TEST:6.504 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":39,"skipped":697,"failed":0}
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:06:32.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-2493
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 27 12:06:32.871: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 27 12:07:32.913: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug 27 12:07:32.966: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 27 12:07:32.983: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 27 12:07:33.011: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 27 12:07:33.027: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 27 12:07:33.051: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 27 12:07:33.066: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:07:49.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-2493" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:76.695 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":40,"skipped":702,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:07:49.378: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1127
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-4641f3ea-61ba-4f98-a1d8-0c0595dd8212
STEP: Creating secret with name secret-projected-all-test-volume-5401c956-a51d-46ed-8dce-55aaf548ba08
STEP: Creating a pod to test Check all projections for projected volume plugin
Aug 27 12:07:49.607: INFO: Waiting up to 5m0s for pod "projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3" in namespace "projected-1127" to be "Succeeded or Failed"
Aug 27 12:07:49.630: INFO: Pod "projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3": Phase="Pending", Reason="", readiness=false. Elapsed: 22.437995ms
Aug 27 12:07:51.642: INFO: Pod "projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.034646549s
Aug 27 12:07:53.650: INFO: Pod "projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.043112064s
STEP: Saw pod success
Aug 27 12:07:53.650: INFO: Pod "projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3" satisfied condition "Succeeded or Failed"
Aug 27 12:07:53.657: INFO: Trying to get logs from node ip-172-31-31-152 pod projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3 container projected-all-volume-test: <nil>
STEP: delete the pod
Aug 27 12:07:53.704: INFO: Waiting for pod projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3 to disappear
Aug 27 12:07:53.710: INFO: Pod projected-volume-2ad248d4-ae8a-4685-854f-324ed3ac0ab3 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Aug 27 12:07:53.710: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1127" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":41,"skipped":722,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:07:53.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8078
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Aug 27 12:07:53.953: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 27 12:07:56.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8078" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":42,"skipped":741,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:07:56.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-2992
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Aug 27 12:07:56.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Aug 27 12:07:56.802: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
Aug 27 12:07:58.879: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:08:00.889: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:08:02.899: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:08:04.897: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:08:06.895: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:08:08.888: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 7, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:08:16.323: INFO: Waited 5.424701595s for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Aug 27 12:08:16.454: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Aug 27 12:08:16.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-2992" for this suite.

• [SLOW TEST:20.862 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":43,"skipped":765,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:08:16.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-885
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 27 12:10:01.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-885" for this suite.

• [SLOW TEST:104.257 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":44,"skipped":773,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:01.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-650
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Aug 27 12:10:01.350: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-650  8bc311ed-201c-4dd2-a4ba-49ef6265d921 8324 0 2022-08-27 12:10:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-27 12:10:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:10:01.351: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-650  8bc311ed-201c-4dd2-a4ba-49ef6265d921 8325 0 2022-08-27 12:10:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-27 12:10:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Aug 27 12:10:01.379: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-650  8bc311ed-201c-4dd2-a4ba-49ef6265d921 8326 0 2022-08-27 12:10:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-27 12:10:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:10:01.379: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-650  8bc311ed-201c-4dd2-a4ba-49ef6265d921 8327 0 2022-08-27 12:10:01 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-08-27 12:10:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 27 12:10:01.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-650" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":45,"skipped":777,"failed":0}
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:01.394: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Aug 27 12:10:01.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:10:04.950: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:10:17.657: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3642" for this suite.

• [SLOW TEST:16.296 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":46,"skipped":779,"failed":0}
SS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:17.690: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7137
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7137
STEP: creating service affinity-nodeport in namespace services-7137
STEP: creating replication controller affinity-nodeport in namespace services-7137
I0827 12:10:17.898374      22 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-7137, replica count: 3
I0827 12:10:20.949959      22 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 12:10:20.974: INFO: Creating new exec pod
Aug 27 12:10:24.016: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7137 exec execpod-affinitytf9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Aug 27 12:10:24.182: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Aug 27 12:10:24.182: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:10:24.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7137 exec execpod-affinitytf9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.223 80'
Aug 27 12:10:24.363: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.223 80\nConnection to 10.152.183.223 80 port [tcp/http] succeeded!\n"
Aug 27 12:10:24.363: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:10:24.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7137 exec execpod-affinitytf9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.152 30330'
Aug 27 12:10:24.518: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.152 30330\nConnection to 172.31.31.152 30330 port [tcp/*] succeeded!\n"
Aug 27 12:10:24.518: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:10:24.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7137 exec execpod-affinitytf9fw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.65.143 30330'
Aug 27 12:10:24.678: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.65.143 30330\nConnection to 172.31.65.143 30330 port [tcp/*] succeeded!\n"
Aug 27 12:10:24.678: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:10:24.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7137 exec execpod-affinitytf9fw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.152:30330/ ; done'
Aug 27 12:10:24.929: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30330/\n"
Aug 27 12:10:24.929: INFO: stdout: "\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5\naffinity-nodeport-vzfm5"
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Received response from host: affinity-nodeport-vzfm5
Aug 27 12:10:24.929: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-7137, will wait for the garbage collector to delete the pods
Aug 27 12:10:25.017: INFO: Deleting ReplicationController affinity-nodeport took: 9.643551ms
Aug 27 12:10:25.117: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.287248ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:10:27.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7137" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.886 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":47,"skipped":781,"failed":0}
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:27.577: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3179
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:10:28.218: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:10:31.259: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:10:31.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5261-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:10:34.603: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3179" for this suite.
STEP: Destroying namespace "webhook-3179-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.128 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":48,"skipped":781,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:34.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6075
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 27 12:10:34.919: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6075" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":49,"skipped":810,"failed":0}
S
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:34.944: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-335
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 27 12:10:47.124: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-335" for this suite.

• [SLOW TEST:12.202 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":50,"skipped":811,"failed":0}
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:47.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-9178
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:10:47.331: INFO: created pod pod-service-account-defaultsa
Aug 27 12:10:47.331: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Aug 27 12:10:47.358: INFO: created pod pod-service-account-mountsa
Aug 27 12:10:47.358: INFO: pod pod-service-account-mountsa service account token volume mount: true
Aug 27 12:10:47.380: INFO: created pod pod-service-account-nomountsa
Aug 27 12:10:47.380: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Aug 27 12:10:47.393: INFO: created pod pod-service-account-defaultsa-mountspec
Aug 27 12:10:47.393: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Aug 27 12:10:47.404: INFO: created pod pod-service-account-mountsa-mountspec
Aug 27 12:10:47.404: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Aug 27 12:10:47.422: INFO: created pod pod-service-account-nomountsa-mountspec
Aug 27 12:10:47.422: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Aug 27 12:10:47.436: INFO: created pod pod-service-account-defaultsa-nomountspec
Aug 27 12:10:47.436: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Aug 27 12:10:47.458: INFO: created pod pod-service-account-mountsa-nomountspec
Aug 27 12:10:47.458: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Aug 27 12:10:47.480: INFO: created pod pod-service-account-nomountsa-nomountspec
Aug 27 12:10:47.480: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 27 12:10:47.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-9178" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":51,"skipped":821,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:47.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-2670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Aug 27 12:10:47.695: INFO: Pod name sample-pod: Found 0 pods out of 3
Aug 27 12:10:52.709: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Aug 27 12:10:52.714: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 27 12:10:52.750: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-2670" for this suite.

• [SLOW TEST:5.265 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":52,"skipped":835,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:10:52.780: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4258
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-4258
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-4258
STEP: creating replication controller externalsvc in namespace services-4258
I0827 12:10:53.018840      22 runners.go:193] Created replication controller with name: externalsvc, namespace: services-4258, replica count: 2
I0827 12:10:56.069970      22 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Aug 27 12:10:56.115: INFO: Creating new exec pod
Aug 27 12:10:58.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-4258 exec execpodhvbsk -- /bin/sh -x -c nslookup nodeport-service.services-4258.svc.cluster.local'
Aug 27 12:10:58.331: INFO: stderr: "+ nslookup nodeport-service.services-4258.svc.cluster.local\n"
Aug 27 12:10:58.331: INFO: stdout: "Server:\t\t10.152.183.113\nAddress:\t10.152.183.113#53\n\nnodeport-service.services-4258.svc.cluster.local\tcanonical name = externalsvc.services-4258.svc.cluster.local.\nName:\texternalsvc.services-4258.svc.cluster.local\nAddress: 10.152.183.175\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-4258, will wait for the garbage collector to delete the pods
Aug 27 12:10:58.407: INFO: Deleting ReplicationController externalsvc took: 17.608859ms
Aug 27 12:10:58.507: INFO: Terminating ReplicationController externalsvc pods took: 100.428312ms
Aug 27 12:11:00.970: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:11:01.003: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4258" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.268 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":53,"skipped":871,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:11:01.048: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2076
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:11:01.226: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc" in namespace "projected-2076" to be "Succeeded or Failed"
Aug 27 12:11:01.249: INFO: Pod "downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc": Phase="Pending", Reason="", readiness=false. Elapsed: 23.096687ms
Aug 27 12:11:03.259: INFO: Pod "downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.033236535s
Aug 27 12:11:05.265: INFO: Pod "downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.039339331s
STEP: Saw pod success
Aug 27 12:11:05.266: INFO: Pod "downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc" satisfied condition "Succeeded or Failed"
Aug 27 12:11:05.272: INFO: Trying to get logs from node ip-172-31-5-213 pod downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc container client-container: <nil>
STEP: delete the pod
Aug 27 12:11:05.395: INFO: Waiting for pod downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc to disappear
Aug 27 12:11:05.401: INFO: Pod downwardapi-volume-ca902355-bc36-4658-9669-caf07982dbbc no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 12:11:05.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2076" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":54,"skipped":885,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:11:05.420: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8857
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8857.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8857.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8857.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8857.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_udp@PTR;check="$$(dig +tcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8857.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8857.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8857.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8857.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8857.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_udp@PTR;check="$$(dig +tcp +noall +answer +search 221.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.221_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 12:11:21.684: INFO: Unable to read wheezy_udp@dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.703: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.712: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.719: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.755: INFO: Unable to read jessie_udp@dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.765: INFO: Unable to read jessie_tcp@dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.770: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.776: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local from pod dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4: the server could not find the requested resource (get pods dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4)
Aug 27 12:11:21.801: INFO: Lookups using dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4 failed for: [wheezy_udp@dns-test-service.dns-8857.svc.cluster.local wheezy_tcp@dns-test-service.dns-8857.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local jessie_udp@dns-test-service.dns-8857.svc.cluster.local jessie_tcp@dns-test-service.dns-8857.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-8857.svc.cluster.local]

Aug 27 12:11:26.940: INFO: DNS probes using dns-8857/dns-test-3dc5b6b1-5492-4865-b0e1-6349ba473ff4 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 12:11:27.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8857" for this suite.

• [SLOW TEST:21.677 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":55,"skipped":889,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:11:27.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-3794
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:11:27.294: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-7e40ce07-4e5f-43f1-ab17-285706015348" in namespace "security-context-test-3794" to be "Succeeded or Failed"
Aug 27 12:11:27.300: INFO: Pod "busybox-readonly-false-7e40ce07-4e5f-43f1-ab17-285706015348": Phase="Pending", Reason="", readiness=false. Elapsed: 6.029345ms
Aug 27 12:11:29.314: INFO: Pod "busybox-readonly-false-7e40ce07-4e5f-43f1-ab17-285706015348": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019279314s
Aug 27 12:11:31.323: INFO: Pod "busybox-readonly-false-7e40ce07-4e5f-43f1-ab17-285706015348": Phase="Pending", Reason="", readiness=false. Elapsed: 4.028429955s
Aug 27 12:11:33.332: INFO: Pod "busybox-readonly-false-7e40ce07-4e5f-43f1-ab17-285706015348": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.037919158s
Aug 27 12:11:33.332: INFO: Pod "busybox-readonly-false-7e40ce07-4e5f-43f1-ab17-285706015348" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 27 12:11:33.332: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-3794" for this suite.

• [SLOW TEST:6.251 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  When creating a pod with readOnlyRootFilesystem
  test/e2e/common/node/security_context.go:173
    should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":56,"skipped":902,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:11:33.350: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9091
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 27 12:13:01.544: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9091" for this suite.

• [SLOW TEST:88.214 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":57,"skipped":926,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:13:01.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-4824
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:13:01.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:13:02.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-4824" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":58,"skipped":967,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:13:02.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-8737
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Aug 27 12:13:04.562: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 27 12:13:06.594: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-8737" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":59,"skipped":1019,"failed":0}
SSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:13:06.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6164
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 27 12:13:06.791: INFO: Waiting up to 5m0s for pod "pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb" in namespace "emptydir-6164" to be "Succeeded or Failed"
Aug 27 12:13:06.811: INFO: Pod "pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb": Phase="Pending", Reason="", readiness=false. Elapsed: 19.182838ms
Aug 27 12:13:08.821: INFO: Pod "pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.029898904s
Aug 27 12:13:10.833: INFO: Pod "pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.041349689s
STEP: Saw pod success
Aug 27 12:13:10.833: INFO: Pod "pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb" satisfied condition "Succeeded or Failed"
Aug 27 12:13:10.840: INFO: Trying to get logs from node ip-172-31-5-213 pod pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb container test-container: <nil>
STEP: delete the pod
Aug 27 12:13:10.882: INFO: Waiting for pod pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb to disappear
Aug 27 12:13:10.888: INFO: Pod pod-afeed4a8-77b5-4844-9a50-1a7dea5458bb no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:13:10.888: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6164" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":60,"skipped":1022,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:13:10.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2748
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2748.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-2748.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-2748.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-2748.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 12:13:13.161: INFO: DNS probes using dns-2748/dns-test-9606bc59-80ca-46ce-bd50-d41629a87b46 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 12:13:13.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2748" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":61,"skipped":1052,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:13:13.228: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9590
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Aug 27 12:13:13.375: INFO: Creating e2e-svc-a-l8pfp
Aug 27 12:13:13.395: INFO: Creating e2e-svc-b-drkkh
Aug 27 12:13:13.413: INFO: Creating e2e-svc-c-8pt8n
STEP: deleting service collection
Aug 27 12:13:13.504: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:13:13.504: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9590" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":62,"skipped":1085,"failed":0}

------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:13:13.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5176
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-9974b295-a5c4-4d16-b3ac-f64b8d6a125f in namespace container-probe-5176
Aug 27 12:13:15.708: INFO: Started pod liveness-9974b295-a5c4-4d16-b3ac-f64b8d6a125f in namespace container-probe-5176
STEP: checking the pod's current state and verifying that restartCount is present
Aug 27 12:13:15.716: INFO: Initial restart count of pod liveness-9974b295-a5c4-4d16-b3ac-f64b8d6a125f is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 12:17:17.049: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5176" for this suite.

• [SLOW TEST:243.546 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":63,"skipped":1085,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:17:17.069: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2497
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Aug 27 12:17:17.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:17:20.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:17:34.823: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2497" for this suite.

• [SLOW TEST:17.780 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":64,"skipped":1092,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:17:34.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5003
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 12:17:46.106: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5003" for this suite.

• [SLOW TEST:11.283 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":65,"skipped":1097,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:17:46.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2705
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 27 12:17:46.337: INFO: The status of Pod pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:17:48.349: INFO: The status of Pod pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 27 12:17:48.879: INFO: Successfully updated pod "pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699"
Aug 27 12:17:48.879: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699" in namespace "pods-2705" to be "terminated due to deadline exceeded"
Aug 27 12:17:48.883: INFO: Pod "pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699": Phase="Running", Reason="", readiness=true. Elapsed: 4.223151ms
Aug 27 12:17:50.903: INFO: Pod "pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699": Phase="Running", Reason="", readiness=true. Elapsed: 2.024614314s
Aug 27 12:17:52.912: INFO: Pod "pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.033224442s
Aug 27 12:17:52.912: INFO: Pod "pod-update-activedeadlineseconds-34036ea4-353b-4ea6-ae6f-cd6293fbe699" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 12:17:52.912: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2705" for this suite.

• [SLOW TEST:6.795 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":66,"skipped":1116,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:17:52.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9057
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 12:18:09.202: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9057" for this suite.

• [SLOW TEST:16.294 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":67,"skipped":1134,"failed":0}
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:18:09.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-4938
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 27 12:18:09.414: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 27 12:19:09.461: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Aug 27 12:19:09.504: INFO: Created pod: pod0-0-sched-preemption-low-priority
Aug 27 12:19:09.518: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Aug 27 12:19:09.554: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Aug 27 12:19:09.569: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Aug 27 12:19:09.604: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Aug 27 12:19:09.622: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:19:17.764: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-4938" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:68.642 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":68,"skipped":1142,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:19:17.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-1504
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 12:19:29.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-1504" for this suite.

• [SLOW TEST:11.264 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":69,"skipped":1144,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:19:29.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9249
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:19:29.306: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc" in namespace "downward-api-9249" to be "Succeeded or Failed"
Aug 27 12:19:29.313: INFO: Pod "downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc": Phase="Pending", Reason="", readiness=false. Elapsed: 6.613225ms
Aug 27 12:19:31.324: INFO: Pod "downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017222116s
Aug 27 12:19:33.331: INFO: Pod "downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024822772s
STEP: Saw pod success
Aug 27 12:19:33.331: INFO: Pod "downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc" satisfied condition "Succeeded or Failed"
Aug 27 12:19:33.341: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc container client-container: <nil>
STEP: delete the pod
Aug 27 12:19:33.387: INFO: Waiting for pod downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc to disappear
Aug 27 12:19:33.397: INFO: Pod downwardapi-volume-a20663f2-1de2-4649-a695-abbed31d55cc no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:19:33.397: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9249" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":70,"skipped":1161,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:19:33.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-7016
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-9588
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-593
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:19:39.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-7016" for this suite.
STEP: Destroying namespace "nsdeletetest-9588" for this suite.
Aug 27 12:19:39.931: INFO: Namespace nsdeletetest-9588 was already deleted
STEP: Destroying namespace "nsdeletetest-593" for this suite.

• [SLOW TEST:6.524 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":71,"skipped":1203,"failed":0}
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:19:39.942: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5210
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Aug 27 12:19:40.078: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5210 create -f -'
Aug 27 12:19:40.922: INFO: stderr: ""
Aug 27 12:19:40.922: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Aug 27 12:19:40.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5210 diff -f -'
Aug 27 12:19:41.276: INFO: rc: 1
Aug 27 12:19:41.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5210 delete -f -'
Aug 27 12:19:41.379: INFO: stderr: ""
Aug 27 12:19:41.379: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:19:41.379: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5210" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":72,"skipped":1203,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:19:41.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-8389
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-e6b3cb29-6113-4c9f-a090-2df57486f4ac in namespace container-probe-8389
Aug 27 12:19:43.599: INFO: Started pod test-webserver-e6b3cb29-6113-4c9f-a090-2df57486f4ac in namespace container-probe-8389
STEP: checking the pod's current state and verifying that restartCount is present
Aug 27 12:19:43.604: INFO: Initial restart count of pod test-webserver-e6b3cb29-6113-4c9f-a090-2df57486f4ac is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 12:23:45.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-8389" for this suite.

• [SLOW TEST:243.637 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":73,"skipped":1255,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:23:45.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2119
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:23:45.240: INFO: The status of Pod server-envvars-8f6a5f1c-6aee-44f0-9f6d-d1de3037ab95 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:23:47.251: INFO: The status of Pod server-envvars-8f6a5f1c-6aee-44f0-9f6d-d1de3037ab95 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:23:49.249: INFO: The status of Pod server-envvars-8f6a5f1c-6aee-44f0-9f6d-d1de3037ab95 is Running (Ready = true)
Aug 27 12:23:49.285: INFO: Waiting up to 5m0s for pod "client-envvars-eac9a595-9588-4def-85be-508a7cc90290" in namespace "pods-2119" to be "Succeeded or Failed"
Aug 27 12:23:49.291: INFO: Pod "client-envvars-eac9a595-9588-4def-85be-508a7cc90290": Phase="Pending", Reason="", readiness=false. Elapsed: 5.510355ms
Aug 27 12:23:51.302: INFO: Pod "client-envvars-eac9a595-9588-4def-85be-508a7cc90290": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016699986s
Aug 27 12:23:53.311: INFO: Pod "client-envvars-eac9a595-9588-4def-85be-508a7cc90290": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026197884s
STEP: Saw pod success
Aug 27 12:23:53.312: INFO: Pod "client-envvars-eac9a595-9588-4def-85be-508a7cc90290" satisfied condition "Succeeded or Failed"
Aug 27 12:23:53.316: INFO: Trying to get logs from node ip-172-31-31-152 pod client-envvars-eac9a595-9588-4def-85be-508a7cc90290 container env3cont: <nil>
STEP: delete the pod
Aug 27 12:23:53.364: INFO: Waiting for pod client-envvars-eac9a595-9588-4def-85be-508a7cc90290 to disappear
Aug 27 12:23:53.367: INFO: Pod client-envvars-eac9a595-9588-4def-85be-508a7cc90290 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 12:23:53.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2119" for this suite.

• [SLOW TEST:8.349 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":74,"skipped":1265,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:23:53.389: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-2
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Aug 27 12:23:53.565: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2  a8556d4b-a0d4-4bb6-8b69-565e89133c48 11694 0 2022-08-27 12:23:53 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-08-27 12:23:53 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-v8zqk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-v8zqk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:23:53.572: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:23:55.592: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Aug 27 12:23:55.592: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:23:55.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:23:55.592: INFO: ExecWithOptions: Clientset creation
Aug 27 12:23:55.592: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Aug 27 12:23:55.709: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:23:55.709: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:23:55.710: INFO: ExecWithOptions: Clientset creation
Aug 27 12:23:55.710: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-2/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 27 12:23:55.799: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 12:23:55.824: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-2" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":75,"skipped":1269,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:23:55.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-3826
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 27 12:24:00.158: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-3826" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":76,"skipped":1343,"failed":0}
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:24:00.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-1775
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 27 12:24:00.338: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 27 12:24:03.338: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-1775" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":77,"skipped":1346,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:24:03.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8016
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-8016
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 27 12:24:03.514: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 27 12:24:03.595: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:24:05.612: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:07.624: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:09.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:11.604: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:13.606: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:15.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:17.607: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:19.605: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:21.602: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:23.608: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:24:25.603: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 27 12:24:25.614: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 27 12:24:25.629: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 27 12:24:27.717: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 27 12:24:27.718: INFO: Going to poll 192.168.233.170 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 27 12:24:27.722: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.233.170 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8016 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:24:27.722: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:24:27.723: INFO: ExecWithOptions: Clientset creation
Aug 27 12:24:27.723: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8016/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.233.170+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 27 12:24:28.808: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 27 12:24:28.808: INFO: Going to poll 192.168.163.67 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 27 12:24:28.824: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.163.67 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8016 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:24:28.824: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:24:28.824: INFO: ExecWithOptions: Clientset creation
Aug 27 12:24:28.825: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8016/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.163.67+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 27 12:24:29.915: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 27 12:24:29.915: INFO: Going to poll 192.168.50.117 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Aug 27 12:24:29.925: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.50.117 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8016 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:24:29.925: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:24:29.926: INFO: ExecWithOptions: Clientset creation
Aug 27 12:24:29.926: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8016/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.50.117+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 27 12:24:31.022: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 27 12:24:31.022: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8016" for this suite.

• [SLOW TEST:27.705 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":78,"skipped":1452,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:24:31.060: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2702
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-8588dc93-12c3-4777-b756-ee8cd1877efd
STEP: Creating a pod to test consume configMaps
Aug 27 12:24:31.341: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff" in namespace "projected-2702" to be "Succeeded or Failed"
Aug 27 12:24:31.348: INFO: Pod "pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff": Phase="Pending", Reason="", readiness=false. Elapsed: 6.635183ms
Aug 27 12:24:33.354: INFO: Pod "pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013355996s
Aug 27 12:24:35.374: INFO: Pod "pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.033286208s
STEP: Saw pod success
Aug 27 12:24:35.374: INFO: Pod "pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff" satisfied condition "Succeeded or Failed"
Aug 27 12:24:35.385: INFO: Trying to get logs from node ip-172-31-5-213 pod pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:24:35.452: INFO: Waiting for pod pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff to disappear
Aug 27 12:24:35.455: INFO: Pod pod-projected-configmaps-1f2baf51-49b1-49f5-b659-0e155166deff no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 12:24:35.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2702" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":79,"skipped":1461,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:24:35.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 27 12:24:35.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4367 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 27 12:24:35.733: INFO: stderr: ""
Aug 27 12:24:35.733: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Aug 27 12:24:35.733: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4367 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Aug 27 12:24:36.707: INFO: stderr: ""
Aug 27 12:24:36.707: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 27 12:24:36.712: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4367 delete pods e2e-test-httpd-pod'
Aug 27 12:24:39.489: INFO: stderr: ""
Aug 27 12:24:39.489: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:24:39.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4367" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":80,"skipped":1474,"failed":0}
S
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:24:39.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8296
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-aa1f91f7-28ce-45d9-8d5f-13034933aa67
STEP: Creating secret with name s-test-opt-upd-5cf5ab56-850e-4a87-8f00-f83a77b18e95
STEP: Creating the pod
Aug 27 12:24:39.746: INFO: The status of Pod pod-secrets-fb42558d-b2d9-4a60-a4a5-4263b8a379f7 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:24:41.758: INFO: The status of Pod pod-secrets-fb42558d-b2d9-4a60-a4a5-4263b8a379f7 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:24:43.756: INFO: The status of Pod pod-secrets-fb42558d-b2d9-4a60-a4a5-4263b8a379f7 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-aa1f91f7-28ce-45d9-8d5f-13034933aa67
STEP: Updating secret s-test-opt-upd-5cf5ab56-850e-4a87-8f00-f83a77b18e95
STEP: Creating secret with name s-test-opt-create-2ff64e7c-47f2-4255-b51d-0d4b47d9d3fd
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 12:26:14.515: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8296" for this suite.

• [SLOW TEST:95.023 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":81,"skipped":1475,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:26:14.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1634
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1634
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 27 12:26:14.701: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 27 12:26:14.771: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:26:16.782: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:26:18.779: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:26:20.784: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:26:22.780: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:26:24.782: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:26:26.782: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 27 12:26:26.792: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 27 12:26:26.802: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 27 12:26:28.865: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 27 12:26:28.865: INFO: Going to poll 192.168.233.174 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 27 12:26:28.870: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.233.174:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1634 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:26:28.870: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:26:28.870: INFO: ExecWithOptions: Clientset creation
Aug 27 12:26:28.870: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1634/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.233.174%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 27 12:26:28.969: INFO: Found all 1 expected endpoints: [netserver-0]
Aug 27 12:26:28.969: INFO: Going to poll 192.168.163.84 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 27 12:26:28.974: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.163.84:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1634 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:26:28.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:26:28.975: INFO: ExecWithOptions: Clientset creation
Aug 27 12:26:28.975: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1634/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.163.84%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 27 12:26:29.061: INFO: Found all 1 expected endpoints: [netserver-1]
Aug 27 12:26:29.061: INFO: Going to poll 192.168.50.118 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Aug 27 12:26:29.072: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.50.118:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1634 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:26:29.072: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:26:29.073: INFO: ExecWithOptions: Clientset creation
Aug 27 12:26:29.073: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1634/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.50.118%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Aug 27 12:26:29.158: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 27 12:26:29.158: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1634" for this suite.

• [SLOW TEST:14.634 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1487,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:26:29.174: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5282
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 27 12:26:29.332: INFO: Waiting up to 5m0s for pod "pod-86c94033-9ea8-4e67-8e07-3b174beccda3" in namespace "emptydir-5282" to be "Succeeded or Failed"
Aug 27 12:26:29.339: INFO: Pod "pod-86c94033-9ea8-4e67-8e07-3b174beccda3": Phase="Pending", Reason="", readiness=false. Elapsed: 6.041236ms
Aug 27 12:26:31.351: INFO: Pod "pod-86c94033-9ea8-4e67-8e07-3b174beccda3": Phase="Running", Reason="", readiness=true. Elapsed: 2.018111919s
Aug 27 12:26:33.360: INFO: Pod "pod-86c94033-9ea8-4e67-8e07-3b174beccda3": Phase="Running", Reason="", readiness=false. Elapsed: 4.027235162s
Aug 27 12:26:35.368: INFO: Pod "pod-86c94033-9ea8-4e67-8e07-3b174beccda3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035704928s
STEP: Saw pod success
Aug 27 12:26:35.368: INFO: Pod "pod-86c94033-9ea8-4e67-8e07-3b174beccda3" satisfied condition "Succeeded or Failed"
Aug 27 12:26:35.374: INFO: Trying to get logs from node ip-172-31-5-213 pod pod-86c94033-9ea8-4e67-8e07-3b174beccda3 container test-container: <nil>
STEP: delete the pod
Aug 27 12:26:35.421: INFO: Waiting for pod pod-86c94033-9ea8-4e67-8e07-3b174beccda3 to disappear
Aug 27 12:26:35.429: INFO: Pod pod-86c94033-9ea8-4e67-8e07-3b174beccda3 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:26:35.429: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5282" for this suite.

• [SLOW TEST:6.273 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":83,"skipped":1501,"failed":0}
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:26:35.447: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5037
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 27 12:26:35.630: INFO: Waiting up to 5m0s for pod "pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e" in namespace "emptydir-5037" to be "Succeeded or Failed"
Aug 27 12:26:35.640: INFO: Pod "pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e": Phase="Pending", Reason="", readiness=false. Elapsed: 9.462413ms
Aug 27 12:26:37.650: INFO: Pod "pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.0198809s
Aug 27 12:26:39.662: INFO: Pod "pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031523428s
STEP: Saw pod success
Aug 27 12:26:39.662: INFO: Pod "pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e" satisfied condition "Succeeded or Failed"
Aug 27 12:26:39.667: INFO: Trying to get logs from node ip-172-31-5-213 pod pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e container test-container: <nil>
STEP: delete the pod
Aug 27 12:26:39.702: INFO: Waiting for pod pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e to disappear
Aug 27 12:26:39.706: INFO: Pod pod-18b7fe54-a79e-47c6-a052-a0e7140efd9e no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:26:39.706: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5037" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":84,"skipped":1501,"failed":0}
SSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:26:39.725: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1937
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 27 12:26:39.930: INFO: The status of Pod labelsupdatec32f43ed-fc77-45de-9a56-525b2d2233e8 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:26:41.943: INFO: The status of Pod labelsupdatec32f43ed-fc77-45de-9a56-525b2d2233e8 is Running (Ready = true)
Aug 27 12:26:42.485: INFO: Successfully updated pod "labelsupdatec32f43ed-fc77-45de-9a56-525b2d2233e8"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:26:44.520: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1937" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1505,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:26:44.546: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-5929
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 27 12:26:44.720: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 27 12:26:48.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-5929" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":86,"skipped":1603,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:26:48.770: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-3013
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:26:48.952: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 27 12:26:52.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-3013 --namespace=crd-publish-openapi-3013 create -f -'
Aug 27 12:26:53.054: INFO: stderr: ""
Aug 27 12:26:53.056: INFO: stdout: "e2e-test-crd-publish-openapi-9389-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 27 12:26:53.056: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-3013 --namespace=crd-publish-openapi-3013 delete e2e-test-crd-publish-openapi-9389-crds test-cr'
Aug 27 12:26:53.150: INFO: stderr: ""
Aug 27 12:26:53.150: INFO: stdout: "e2e-test-crd-publish-openapi-9389-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Aug 27 12:26:53.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-3013 --namespace=crd-publish-openapi-3013 apply -f -'
Aug 27 12:26:54.085: INFO: stderr: ""
Aug 27 12:26:54.085: INFO: stdout: "e2e-test-crd-publish-openapi-9389-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Aug 27 12:26:54.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-3013 --namespace=crd-publish-openapi-3013 delete e2e-test-crd-publish-openapi-9389-crds test-cr'
Aug 27 12:26:54.168: INFO: stderr: ""
Aug 27 12:26:54.168: INFO: stdout: "e2e-test-crd-publish-openapi-9389-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 27 12:26:54.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-3013 explain e2e-test-crd-publish-openapi-9389-crds'
Aug 27 12:26:54.333: INFO: stderr: ""
Aug 27 12:26:54.333: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9389-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:26:58.704: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-3013" for this suite.

• [SLOW TEST:9.967 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":87,"skipped":1609,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:26:58.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-466
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Aug 27 12:27:01.007: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-466 PodName:pod-sharedvolume-62d888ea-85d8-40e2-a651-e51e0a542d90 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:27:01.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:27:01.008: INFO: ExecWithOptions: Clientset creation
Aug 27 12:27:01.008: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-466/pods/pod-sharedvolume-62d888ea-85d8-40e2-a651-e51e0a542d90/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Aug 27 12:27:01.108: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:27:01.108: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-466" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":88,"skipped":1668,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:01.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-6159/configmap-test-afc56e63-e437-4b08-98e9-4c19b25478d2
STEP: Creating a pod to test consume configMaps
Aug 27 12:27:01.303: INFO: Waiting up to 5m0s for pod "pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7" in namespace "configmap-6159" to be "Succeeded or Failed"
Aug 27 12:27:01.308: INFO: Pod "pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.484446ms
Aug 27 12:27:03.320: INFO: Pod "pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016536268s
Aug 27 12:27:05.330: INFO: Pod "pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026430028s
STEP: Saw pod success
Aug 27 12:27:05.330: INFO: Pod "pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7" satisfied condition "Succeeded or Failed"
Aug 27 12:27:05.335: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7 container env-test: <nil>
STEP: delete the pod
Aug 27 12:27:05.362: INFO: Waiting for pod pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7 to disappear
Aug 27 12:27:05.368: INFO: Pod pod-configmaps-c11b3860-c06a-40c9-8c31-866d51d6c5e7 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:27:05.368: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6159" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":89,"skipped":1688,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:05.399: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 27 12:27:05.563: INFO: The status of Pod annotationupdate6b40bec1-71f7-4096-b3cd-83371dbd5473 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:27:07.601: INFO: The status of Pod annotationupdate6b40bec1-71f7-4096-b3cd-83371dbd5473 is Running (Ready = true)
Aug 27 12:27:08.159: INFO: Successfully updated pod "annotationupdate6b40bec1-71f7-4096-b3cd-83371dbd5473"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:27:12.193: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6025" for this suite.

• [SLOW TEST:6.831 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":90,"skipped":1722,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:12.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7200
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:27:12.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Aug 27 12:27:15.331: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 create -f -'
Aug 27 12:27:16.701: INFO: stderr: ""
Aug 27 12:27:16.701: INFO: stdout: "e2e-test-crd-publish-openapi-9696-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 27 12:27:16.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 delete e2e-test-crd-publish-openapi-9696-crds test-foo'
Aug 27 12:27:16.837: INFO: stderr: ""
Aug 27 12:27:16.837: INFO: stdout: "e2e-test-crd-publish-openapi-9696-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Aug 27 12:27:16.837: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 apply -f -'
Aug 27 12:27:17.570: INFO: stderr: ""
Aug 27 12:27:17.571: INFO: stdout: "e2e-test-crd-publish-openapi-9696-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Aug 27 12:27:17.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 delete e2e-test-crd-publish-openapi-9696-crds test-foo'
Aug 27 12:27:17.659: INFO: stderr: ""
Aug 27 12:27:17.660: INFO: stdout: "e2e-test-crd-publish-openapi-9696-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Aug 27 12:27:17.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 create -f -'
Aug 27 12:27:17.838: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Aug 27 12:27:17.838: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 create -f -'
Aug 27 12:27:17.996: INFO: rc: 1
Aug 27 12:27:17.996: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 apply -f -'
Aug 27 12:27:18.155: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Aug 27 12:27:18.155: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 create -f -'
Aug 27 12:27:18.318: INFO: rc: 1
Aug 27 12:27:18.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 --namespace=crd-publish-openapi-7200 apply -f -'
Aug 27 12:27:18.479: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Aug 27 12:27:18.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 explain e2e-test-crd-publish-openapi-9696-crds'
Aug 27 12:27:18.647: INFO: stderr: ""
Aug 27 12:27:18.647: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9696-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Aug 27 12:27:18.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 explain e2e-test-crd-publish-openapi-9696-crds.metadata'
Aug 27 12:27:18.807: INFO: stderr: ""
Aug 27 12:27:18.807: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9696-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Aug 27 12:27:18.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 explain e2e-test-crd-publish-openapi-9696-crds.spec'
Aug 27 12:27:18.969: INFO: stderr: ""
Aug 27 12:27:18.969: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9696-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Aug 27 12:27:18.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 explain e2e-test-crd-publish-openapi-9696-crds.spec.bars'
Aug 27 12:27:19.128: INFO: stderr: ""
Aug 27 12:27:19.129: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-9696-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Aug 27 12:27:19.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-7200 explain e2e-test-crd-publish-openapi-9696-crds.spec.bars2'
Aug 27 12:27:19.288: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:27:22.344: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7200" for this suite.

• [SLOW TEST:10.145 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":91,"skipped":1730,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:22.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4967
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-22239f1a-f79a-436b-bd1d-8e4d8463a67b
STEP: Creating a pod to test consume configMaps
Aug 27 12:27:22.562: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c" in namespace "projected-4967" to be "Succeeded or Failed"
Aug 27 12:27:22.570: INFO: Pod "pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c": Phase="Pending", Reason="", readiness=false. Elapsed: 7.81392ms
Aug 27 12:27:24.582: INFO: Pod "pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019767112s
Aug 27 12:27:26.590: INFO: Pod "pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028098588s
STEP: Saw pod success
Aug 27 12:27:26.590: INFO: Pod "pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c" satisfied condition "Succeeded or Failed"
Aug 27 12:27:26.596: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:27:26.634: INFO: Waiting for pod pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c to disappear
Aug 27 12:27:26.641: INFO: Pod pod-projected-configmaps-a8d13c04-18f4-4de2-a816-4bfbe1f2af9c no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 12:27:26.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4967" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":92,"skipped":1740,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:26.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2219
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-6e916bcb-536f-4f8e-8b45-3096c9d39d42
STEP: Creating a pod to test consume configMaps
Aug 27 12:27:26.841: INFO: Waiting up to 5m0s for pod "pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940" in namespace "configmap-2219" to be "Succeeded or Failed"
Aug 27 12:27:26.848: INFO: Pod "pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940": Phase="Pending", Reason="", readiness=false. Elapsed: 7.233895ms
Aug 27 12:27:28.861: INFO: Pod "pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019737724s
Aug 27 12:27:30.877: INFO: Pod "pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03607547s
STEP: Saw pod success
Aug 27 12:27:30.877: INFO: Pod "pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940" satisfied condition "Succeeded or Failed"
Aug 27 12:27:30.885: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940 container configmap-volume-test: <nil>
STEP: delete the pod
Aug 27 12:27:30.918: INFO: Waiting for pod pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940 to disappear
Aug 27 12:27:30.925: INFO: Pod pod-configmaps-a80d10c1-ab42-4c82-9e81-7e7119254940 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:27:30.925: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2219" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":93,"skipped":1742,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:30.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1981
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 27 12:27:31.144: INFO: Waiting up to 5m0s for pod "pod-8dac6b7a-5a58-4de6-84da-7196504904a8" in namespace "emptydir-1981" to be "Succeeded or Failed"
Aug 27 12:27:31.153: INFO: Pod "pod-8dac6b7a-5a58-4de6-84da-7196504904a8": Phase="Pending", Reason="", readiness=false. Elapsed: 8.676302ms
Aug 27 12:27:33.164: INFO: Pod "pod-8dac6b7a-5a58-4de6-84da-7196504904a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019877181s
Aug 27 12:27:35.175: INFO: Pod "pod-8dac6b7a-5a58-4de6-84da-7196504904a8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030083004s
STEP: Saw pod success
Aug 27 12:27:35.175: INFO: Pod "pod-8dac6b7a-5a58-4de6-84da-7196504904a8" satisfied condition "Succeeded or Failed"
Aug 27 12:27:35.191: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-8dac6b7a-5a58-4de6-84da-7196504904a8 container test-container: <nil>
STEP: delete the pod
Aug 27 12:27:35.234: INFO: Waiting for pod pod-8dac6b7a-5a58-4de6-84da-7196504904a8 to disappear
Aug 27 12:27:35.240: INFO: Pod pod-8dac6b7a-5a58-4de6-84da-7196504904a8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:27:35.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1981" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":94,"skipped":1748,"failed":0}
S
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:35.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7221
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:27:35.425: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829" in namespace "downward-api-7221" to be "Succeeded or Failed"
Aug 27 12:27:35.433: INFO: Pod "downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829": Phase="Pending", Reason="", readiness=false. Elapsed: 8.101136ms
Aug 27 12:27:37.447: INFO: Pod "downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021553298s
Aug 27 12:27:39.459: INFO: Pod "downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034257359s
STEP: Saw pod success
Aug 27 12:27:39.459: INFO: Pod "downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829" satisfied condition "Succeeded or Failed"
Aug 27 12:27:39.467: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829 container client-container: <nil>
STEP: delete the pod
Aug 27 12:27:39.506: INFO: Waiting for pod downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829 to disappear
Aug 27 12:27:39.519: INFO: Pod downwardapi-volume-c284afa0-f69e-437e-b013-5b2962cf9829 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:27:39.519: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7221" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":95,"skipped":1749,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:39.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-9198/secret-test-cc3fa18e-3daf-405b-811b-b72dbc9e9504
STEP: Creating a pod to test consume secrets
Aug 27 12:27:39.731: INFO: Waiting up to 5m0s for pod "pod-configmaps-4206d913-f988-4d27-9985-61842917403b" in namespace "secrets-9198" to be "Succeeded or Failed"
Aug 27 12:27:39.738: INFO: Pod "pod-configmaps-4206d913-f988-4d27-9985-61842917403b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.827624ms
Aug 27 12:27:41.756: INFO: Pod "pod-configmaps-4206d913-f988-4d27-9985-61842917403b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024213771s
Aug 27 12:27:43.765: INFO: Pod "pod-configmaps-4206d913-f988-4d27-9985-61842917403b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.033379176s
Aug 27 12:27:45.778: INFO: Pod "pod-configmaps-4206d913-f988-4d27-9985-61842917403b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.046271315s
STEP: Saw pod success
Aug 27 12:27:45.778: INFO: Pod "pod-configmaps-4206d913-f988-4d27-9985-61842917403b" satisfied condition "Succeeded or Failed"
Aug 27 12:27:45.783: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-4206d913-f988-4d27-9985-61842917403b container env-test: <nil>
STEP: delete the pod
Aug 27 12:27:45.811: INFO: Waiting for pod pod-configmaps-4206d913-f988-4d27-9985-61842917403b to disappear
Aug 27 12:27:45.816: INFO: Pod pod-configmaps-4206d913-f988-4d27-9985-61842917403b no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 27 12:27:45.816: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9198" for this suite.

• [SLOW TEST:6.290 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":96,"skipped":1760,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:27:45.835: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9932
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9932
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-9932
Aug 27 12:27:46.019: INFO: Found 0 stateful pods, waiting for 1
Aug 27 12:27:56.037: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Aug 27 12:27:56.072: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Aug 27 12:27:56.085: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Aug 27 12:27:56.088: INFO: Observed &StatefulSet event: ADDED
Aug 27 12:27:56.088: INFO: Found Statefulset ss in namespace statefulset-9932 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 27 12:27:56.088: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Aug 27 12:27:56.088: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 27 12:27:56.099: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Aug 27 12:27:56.102: INFO: Observed &StatefulSet event: ADDED
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 12:27:56.102: INFO: Deleting all statefulset in ns statefulset-9932
Aug 27 12:27:56.109: INFO: Scaling statefulset ss to 0
Aug 27 12:28:06.148: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 12:28:06.155: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 12:28:06.189: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9932" for this suite.

• [SLOW TEST:20.374 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":97,"skipped":1785,"failed":0}
SSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:06.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-8180
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:28:06.351: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 27 12:28:06.377: INFO: The status of Pod pod-logs-websocket-a0d245ff-1e42-4a61-99ee-f5e574e59498 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:28:08.384: INFO: The status of Pod pod-logs-websocket-a0d245ff-1e42-4a61-99ee-f5e574e59498 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 12:28:08.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-8180" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":98,"skipped":1790,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:08.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7970
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 27 12:28:18.593: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7970" for this suite.

• [SLOW TEST:10.192 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":99,"skipped":1810,"failed":0}
SS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:18.617: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4050
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 27 12:28:18.846: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:18.846: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:18.853: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:28:18.853: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:28:19.862: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:19.863: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:19.872: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:28:19.873: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:28:20.862: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:20.862: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:20.870: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:28:20.870: INFO: Node ip-172-31-65-143 is running 0 daemon pod, expected 1
Aug 27 12:28:21.865: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:21.865: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:21.870: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 12:28:21.870: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Aug 27 12:28:21.904: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:21.905: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:21.912: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:28:21.912: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 12:28:22.919: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:22.919: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:22.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:28:22.926: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 12:28:23.922: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:23.922: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:23.928: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:28:23.929: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 12:28:24.920: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:24.920: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:28:24.926: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 12:28:24.926: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4050, will wait for the garbage collector to delete the pods
Aug 27 12:28:25.000: INFO: Deleting DaemonSet.extensions daemon-set took: 10.604619ms
Aug 27 12:28:25.101: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.039636ms
Aug 27 12:28:27.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:28:27.730: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 27 12:28:27.735: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13513"},"items":null}

Aug 27 12:28:27.739: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13513"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:28:27.765: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4050" for this suite.

• [SLOW TEST:9.167 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":100,"skipped":1812,"failed":0}
SS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:27.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8151
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-dab4a172-be24-4079-bd66-f87de68b50f4
STEP: Creating a pod to test consume secrets
Aug 27 12:28:27.951: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948" in namespace "projected-8151" to be "Succeeded or Failed"
Aug 27 12:28:27.959: INFO: Pod "pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948": Phase="Pending", Reason="", readiness=false. Elapsed: 6.972387ms
Aug 27 12:28:29.973: INFO: Pod "pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948": Phase="Pending", Reason="", readiness=false. Elapsed: 2.021328737s
Aug 27 12:28:31.981: INFO: Pod "pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948": Phase="Pending", Reason="", readiness=false. Elapsed: 4.029384017s
Aug 27 12:28:33.987: INFO: Pod "pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.035371833s
STEP: Saw pod success
Aug 27 12:28:33.987: INFO: Pod "pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948" satisfied condition "Succeeded or Failed"
Aug 27 12:28:33.993: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 27 12:28:34.023: INFO: Waiting for pod pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948 to disappear
Aug 27 12:28:34.029: INFO: Pod pod-projected-secrets-7fb6731d-cca8-4e5c-9e0c-29e42775d948 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 27 12:28:34.029: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8151" for this suite.

• [SLOW TEST:6.266 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":101,"skipped":1814,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:34.050: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1760
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Aug 27 12:28:34.220: INFO: Waiting up to 5m0s for pod "pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2" in namespace "emptydir-1760" to be "Succeeded or Failed"
Aug 27 12:28:34.226: INFO: Pod "pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2": Phase="Pending", Reason="", readiness=false. Elapsed: 5.695054ms
Aug 27 12:28:36.240: INFO: Pod "pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01955441s
Aug 27 12:28:38.257: INFO: Pod "pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.037165419s
STEP: Saw pod success
Aug 27 12:28:38.257: INFO: Pod "pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2" satisfied condition "Succeeded or Failed"
Aug 27 12:28:38.263: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2 container test-container: <nil>
STEP: delete the pod
Aug 27 12:28:38.294: INFO: Waiting for pod pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2 to disappear
Aug 27 12:28:38.298: INFO: Pod pod-ecfa7500-d423-4f2f-b7f8-2c37450ef2d2 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:28:38.298: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1760" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":102,"skipped":1838,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:38.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-923
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:28:39.317: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:28:42.358: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:28:42.490: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-923" for this suite.
STEP: Destroying namespace "webhook-923-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":103,"skipped":1849,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:42.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-8074
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:28:42.782: INFO: Creating deployment "webserver-deployment"
Aug 27 12:28:42.790: INFO: Waiting for observed generation 1
Aug 27 12:28:44.810: INFO: Waiting for all required pods to come up
Aug 27 12:28:44.816: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Aug 27 12:28:46.835: INFO: Waiting for deployment "webserver-deployment" to complete
Aug 27 12:28:46.846: INFO: Updating deployment "webserver-deployment" with a non-existent image
Aug 27 12:28:46.867: INFO: Updating deployment webserver-deployment
Aug 27 12:28:46.867: INFO: Waiting for observed generation 2
Aug 27 12:28:48.890: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Aug 27 12:28:48.896: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Aug 27 12:28:48.901: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 27 12:28:48.916: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Aug 27 12:28:48.916: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Aug 27 12:28:48.920: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Aug 27 12:28:48.931: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Aug 27 12:28:48.931: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Aug 27 12:28:48.946: INFO: Updating deployment webserver-deployment
Aug 27 12:28:48.946: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Aug 27 12:28:48.957: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Aug 27 12:28:48.962: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 12:28:48.976: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-8074  a390e0ff-6a5e-4ccd-9397-70d4728d11c0 13995 3 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d27ca8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-27 12:28:45 +0000 UTC,LastTransitionTime:2022-08-27 12:28:45 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-08-27 12:28:47 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Aug 27 12:28:48.983: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-8074  3d4b8392-bea5-4a0c-a112-7b2b71839054 13998 3 2022-08-27 12:28:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment a390e0ff-6a5e-4ccd-9397-70d4728d11c0 0xc003d802c7 0xc003d802c8}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:28:46 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a390e0ff-6a5e-4ccd-9397-70d4728d11c0\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:28:47 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d80388 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:28:48.983: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Aug 27 12:28:48.984: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-8074  1cd90561-a4ac-408d-8068-263a410c57cf 13996 3 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment a390e0ff-6a5e-4ccd-9397-70d4728d11c0 0xc003d801a7 0xc003d801a8}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a390e0ff-6a5e-4ccd-9397-70d4728d11c0\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:28:44 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003d80248 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:28:48.994: INFO: Pod "webserver-deployment-55df494869-5lpp9" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5lpp9 webserver-deployment-55df494869- deployment-8074  42dcf6f9-c784-4572-9c4a-dddff2042ff0 13858 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bfe7d7 0xc003bfe7d8}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.133\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-ngndd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-ngndd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:192.168.233.133,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://03ca4bf1db6eb612430208de8ac939a782f4e95b1aa4480e57709f85c0d58e8f,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.233.133,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.994: INFO: Pod "webserver-deployment-55df494869-5nfnw" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5nfnw webserver-deployment-55df494869- deployment-8074  bc279a97-9ac8-44b5-8163-2a8ded2eb94c 13844 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bfeaa7 0xc003bfeaa8}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.86\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hrqhg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hrqhg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:192.168.163.86,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://cb7bad595a795414c794650239a607eb5f1df8e13ff608293b51e9e9f5ca59c3,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.163.86,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.994: INFO: Pod "webserver-deployment-55df494869-5p885" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5p885 webserver-deployment-55df494869- deployment-8074  bc9f40b7-7922-43f5-af9c-51346f531655 14003 0 2022-08-27 12:28:49 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bfed67 0xc003bfed68}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:49 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-256xg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-256xg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.994: INFO: Pod "webserver-deployment-55df494869-5qkvv" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-5qkvv webserver-deployment-55df494869- deployment-8074  2f24e6a1-5f41-4a91-8838-9ddb3c521cfe 13815 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bfeef7 0xc003bfeef8}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.131\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-crv46,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-crv46,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:192.168.233.131,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://1d0a45800068f35279c53be2f59a0c48fa0195b4b48d1d38fd1f25a1d072a750,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.233.131,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.995: INFO: Pod "webserver-deployment-55df494869-6fphr" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6fphr webserver-deployment-55df494869- deployment-8074  d4634027-e599-4be0-83a9-9ce7025afa31 14004 0 2022-08-27 12:28:49 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bff147 0xc003bff148}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:49 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zk9gt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zk9gt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.995: INFO: Pod "webserver-deployment-55df494869-lnngc" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-lnngc webserver-deployment-55df494869- deployment-8074  25a8f57c-09c3-44d8-a981-cbf217ac6a4e 13841 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bff2c7 0xc003bff2c8}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.81\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t575g,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t575g,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:192.168.163.81,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://ba4ae68d3c2d4bf8410d914923a74fe72848e3886ded2f7d400facd551377e7e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.163.81,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.995: INFO: Pod "webserver-deployment-55df494869-m44jb" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-m44jb webserver-deployment-55df494869- deployment-8074  c7f087ae-f365-4128-8d9e-e73af37bc1ae 13850 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bff537 0xc003bff538}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.50.122\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9686q,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9686q,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-65-143,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.65.143,PodIP:192.168.50.122,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://16926cd8b8bc81509407d2d32dbaffe472bf9df06394dd2529558ab1c5ffd3fa,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.50.122,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.995: INFO: Pod "webserver-deployment-55df494869-pdr5p" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-pdr5p webserver-deployment-55df494869- deployment-8074  c18fd9de-3d71-40a7-8ade-cb202aae0540 13847 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bff727 0xc003bff728}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.79\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mq8bm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mq8bm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:192.168.163.79,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://1fe58a2524dc330ae13792c3d80b35c8a61df88aa9e7bd59373ac4a8ce042e8b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.163.79,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.996: INFO: Pod "webserver-deployment-55df494869-qjmzx" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-qjmzx webserver-deployment-55df494869- deployment-8074  e21dec74-2a0d-47ce-89fb-5b94f3f5f0f3 13856 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bff987 0xc003bff988}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.50.120\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-b57xx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-b57xx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-65-143,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.65.143,PodIP:192.168.50.120,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:43 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://dc8e2e3399cf6e04235384391b3692ccf32ecf7eca277aa462f390a823587c4a,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.50.120,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.996: INFO: Pod "webserver-deployment-55df494869-rbzd2" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-rbzd2 webserver-deployment-55df494869- deployment-8074  18794e47-02ee-402c-b160-0034a4366e93 13853 0 2022-08-27 12:28:42 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bffbb7 0xc003bffbb8}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:42 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.50.121\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-spc7l,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-spc7l,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-65-143,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:44 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:42 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.65.143,PodIP:192.168.50.121,StartTime:2022-08-27 12:28:42 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:28:44 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://48b2fe856401b94d49f2502bf8d6d99d181c113b28f140104afe9b5871f58d9d,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.50.121,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.996: INFO: Pod "webserver-deployment-55df494869-vwt2j" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-vwt2j webserver-deployment-55df494869- deployment-8074  3d522669-d446-4bd3-b16b-9b8b238a9503 14000 0 2022-08-27 12:28:48 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 1cd90561-a4ac-408d-8068-263a410c57cf 0xc003bffdb7 0xc003bffdb8}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:48 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"1cd90561-a4ac-408d-8068-263a410c57cf\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vlv75,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vlv75,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:49 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.996: INFO: Pod "webserver-deployment-57ccb67bb8-mlmwc" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-mlmwc webserver-deployment-57ccb67bb8- deployment-8074  cd03cbb5-cb43-498c-9e2e-0a0d30ae2dc2 13898 0 2022-08-27 12:28:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 3d4b8392-bea5-4a0c-a112-7b2b71839054 0xc003bfff90 0xc003bfff91}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d4b8392-bea5-4a0c-a112-7b2b71839054\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:46 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tkk5s,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tkk5s,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:,StartTime:2022-08-27 12:28:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.997: INFO: Pod "webserver-deployment-57ccb67bb8-n5kwp" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-n5kwp webserver-deployment-57ccb67bb8- deployment-8074  3e111e7a-9bf4-4a73-a87d-c39bab4d64d2 14001 0 2022-08-27 12:28:49 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 3d4b8392-bea5-4a0c-a112-7b2b71839054 0xc003da6187 0xc003da6188}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:49 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d4b8392-bea5-4a0c-a112-7b2b71839054\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-xjqc8,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-xjqc8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.997: INFO: Pod "webserver-deployment-57ccb67bb8-ntjbw" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-ntjbw webserver-deployment-57ccb67bb8- deployment-8074  1a69c581-6638-41b2-8537-41e87ac64347 13969 0 2022-08-27 12:28:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 3d4b8392-bea5-4a0c-a112-7b2b71839054 0xc003da62e7 0xc003da62e8}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d4b8392-bea5-4a0c-a112-7b2b71839054\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.50.123\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gq9gl,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gq9gl,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-65-143,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.65.143,PodIP:192.168.50.123,StartTime:2022-08-27 12:28:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.50.123,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.997: INFO: Pod "webserver-deployment-57ccb67bb8-r7585" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-r7585 webserver-deployment-57ccb67bb8- deployment-8074  a0b383b3-84df-453e-b310-c31eaa5d860b 13994 0 2022-08-27 12:28:46 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 3d4b8392-bea5-4a0c-a112-7b2b71839054 0xc003da6587 0xc003da6588}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:46 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d4b8392-bea5-4a0c-a112-7b2b71839054\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.85\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wq7rp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wq7rp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:46 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:192.168.163.85,StartTime:2022-08-27 12:28:46 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.163.85,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.997: INFO: Pod "webserver-deployment-57ccb67bb8-r7q52" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-r7q52 webserver-deployment-57ccb67bb8- deployment-8074  ea338313-7967-45e0-b688-6ae110bfb8b9 13927 0 2022-08-27 12:28:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 3d4b8392-bea5-4a0c-a112-7b2b71839054 0xc003da6847 0xc003da6848}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d4b8392-bea5-4a0c-a112-7b2b71839054\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:47 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dwqmn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dwqmn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:,StartTime:2022-08-27 12:28:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 12:28:48.998: INFO: Pod "webserver-deployment-57ccb67bb8-z8nh7" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-z8nh7 webserver-deployment-57ccb67bb8- deployment-8074  51cb3ba3-7fc0-4686-bad2-a9147ae7dd17 13990 0 2022-08-27 12:28:47 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 3d4b8392-bea5-4a0c-a112-7b2b71839054 0xc003da6b17 0xc003da6b18}] []  [{kube-controller-manager Update v1 2022-08-27 12:28:47 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"3d4b8392-bea5-4a0c-a112-7b2b71839054\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:28:48 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.83\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-8h2m9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-8h2m9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:28:47 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:192.168.163.83,StartTime:2022-08-27 12:28:47 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.163.83,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 12:28:48.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-8074" for this suite.

• [SLOW TEST:6.414 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":104,"skipped":1879,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:49.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7033
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:28:49.349: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7033" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":105,"skipped":1928,"failed":0}
SSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:28:49.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-1697
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:28:49.537: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: creating replication controller svc-latency-rc in namespace svc-latency-1697
I0827 12:28:49.552403      22 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1697, replica count: 1
I0827 12:28:50.604386      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0827 12:28:51.604960      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0827 12:28:52.605131      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0827 12:28:53.605831      22 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 12:28:53.727: INFO: Created: latency-svc-xtgcf
Aug 27 12:28:53.737: INFO: Got endpoints: latency-svc-xtgcf [31.235991ms]
Aug 27 12:28:53.764: INFO: Created: latency-svc-mhv8c
Aug 27 12:28:53.771: INFO: Got endpoints: latency-svc-mhv8c [32.523454ms]
Aug 27 12:28:53.890: INFO: Created: latency-svc-ghlzc
Aug 27 12:28:53.890: INFO: Created: latency-svc-64rbp
Aug 27 12:28:53.901: INFO: Created: latency-svc-n6tz8
Aug 27 12:28:53.901: INFO: Created: latency-svc-2swr5
Aug 27 12:28:53.901: INFO: Created: latency-svc-xctbw
Aug 27 12:28:53.901: INFO: Created: latency-svc-8g6wb
Aug 27 12:28:53.901: INFO: Created: latency-svc-pc67x
Aug 27 12:28:53.901: INFO: Created: latency-svc-bl2tc
Aug 27 12:28:53.901: INFO: Created: latency-svc-pxd2j
Aug 27 12:28:53.901: INFO: Created: latency-svc-zgfxr
Aug 27 12:28:53.901: INFO: Created: latency-svc-c2b6b
Aug 27 12:28:53.901: INFO: Created: latency-svc-n2zff
Aug 27 12:28:53.901: INFO: Created: latency-svc-spvn9
Aug 27 12:28:53.901: INFO: Created: latency-svc-z68ch
Aug 27 12:28:53.902: INFO: Created: latency-svc-rqq82
Aug 27 12:28:53.922: INFO: Got endpoints: latency-svc-64rbp [151.171717ms]
Aug 27 12:28:53.931: INFO: Got endpoints: latency-svc-c2b6b [191.865577ms]
Aug 27 12:28:53.931: INFO: Got endpoints: latency-svc-2swr5 [193.483068ms]
Aug 27 12:28:53.937: INFO: Got endpoints: latency-svc-spvn9 [198.721191ms]
Aug 27 12:28:53.937: INFO: Got endpoints: latency-svc-ghlzc [197.647183ms]
Aug 27 12:28:53.937: INFO: Got endpoints: latency-svc-n6tz8 [198.69363ms]
Aug 27 12:28:53.942: INFO: Got endpoints: latency-svc-pxd2j [204.673131ms]
Aug 27 12:28:53.947: INFO: Created: latency-svc-nsl5r
Aug 27 12:28:53.947: INFO: Got endpoints: latency-svc-xctbw [208.469207ms]
Aug 27 12:28:53.951: INFO: Got endpoints: latency-svc-bl2tc [213.693849ms]
Aug 27 12:28:53.954: INFO: Got endpoints: latency-svc-8g6wb [214.274974ms]
Aug 27 12:28:53.972: INFO: Got endpoints: latency-svc-zgfxr [231.979083ms]
Aug 27 12:28:53.972: INFO: Got endpoints: latency-svc-z68ch [232.181448ms]
Aug 27 12:28:53.981: INFO: Created: latency-svc-shgll
Aug 27 12:28:53.988: INFO: Got endpoints: latency-svc-n2zff [249.070546ms]
Aug 27 12:28:53.989: INFO: Got endpoints: latency-svc-pc67x [250.993414ms]
Aug 27 12:28:53.998: INFO: Got endpoints: latency-svc-rqq82 [260.025803ms]
Aug 27 12:28:54.006: INFO: Got endpoints: latency-svc-nsl5r [83.363931ms]
Aug 27 12:28:54.011: INFO: Got endpoints: latency-svc-shgll [74.195069ms]
Aug 27 12:28:54.146: INFO: Created: latency-svc-fdmq4
Aug 27 12:28:54.154: INFO: Created: latency-svc-l4kzh
Aug 27 12:28:54.155: INFO: Created: latency-svc-bfv6s
Aug 27 12:28:54.155: INFO: Created: latency-svc-9l78h
Aug 27 12:28:54.162: INFO: Created: latency-svc-xjg2t
Aug 27 12:28:54.162: INFO: Created: latency-svc-s24dc
Aug 27 12:28:54.162: INFO: Created: latency-svc-xvn68
Aug 27 12:28:54.162: INFO: Created: latency-svc-df4rh
Aug 27 12:28:54.163: INFO: Created: latency-svc-w5cq5
Aug 27 12:28:54.163: INFO: Created: latency-svc-9lx8x
Aug 27 12:28:54.178: INFO: Got endpoints: latency-svc-fdmq4 [205.554175ms]
Aug 27 12:28:54.201: INFO: Got endpoints: latency-svc-xjg2t [253.14668ms]
Aug 27 12:28:54.206: INFO: Got endpoints: latency-svc-bfv6s [262.624159ms]
Aug 27 12:28:54.206: INFO: Got endpoints: latency-svc-9l78h [274.348276ms]
Aug 27 12:28:54.210: INFO: Got endpoints: latency-svc-l4kzh [221.728254ms]
Aug 27 12:28:54.215: INFO: Created: latency-svc-wrp4t
Aug 27 12:28:54.215: INFO: Got endpoints: latency-svc-wrp4t [203.638566ms]
Aug 27 12:28:54.215: INFO: Created: latency-svc-grqkb
Aug 27 12:28:54.215: INFO: Got endpoints: latency-svc-grqkb [263.8341ms]
Aug 27 12:28:54.216: INFO: Created: latency-svc-xnq9r
Aug 27 12:28:54.227: INFO: Created: latency-svc-rhs9s
Aug 27 12:28:54.227: INFO: Created: latency-svc-g2tnw
Aug 27 12:28:54.227: INFO: Got endpoints: latency-svc-rhs9s [255.222722ms]
Aug 27 12:28:54.234: INFO: Got endpoints: latency-svc-xnq9r [296.474247ms]
Aug 27 12:28:54.234: INFO: Got endpoints: latency-svc-g2tnw [228.25154ms]
Aug 27 12:28:54.239: INFO: Got endpoints: latency-svc-s24dc [250.110742ms]
Aug 27 12:28:54.249: INFO: Got endpoints: latency-svc-9lx8x [294.860166ms]
Aug 27 12:28:54.249: INFO: Got endpoints: latency-svc-w5cq5 [317.13417ms]
Aug 27 12:28:54.251: INFO: Got endpoints: latency-svc-xvn68 [314.080582ms]
Aug 27 12:28:54.263: INFO: Got endpoints: latency-svc-df4rh [264.789234ms]
Aug 27 12:28:54.271: INFO: Created: latency-svc-rgvmn
Aug 27 12:28:54.277: INFO: Got endpoints: latency-svc-rgvmn [99.463008ms]
Aug 27 12:28:54.284: INFO: Created: latency-svc-kxjmz
Aug 27 12:28:54.291: INFO: Got endpoints: latency-svc-kxjmz [90.402749ms]
Aug 27 12:28:54.297: INFO: Created: latency-svc-6vrnr
Aug 27 12:28:54.311: INFO: Got endpoints: latency-svc-6vrnr [105.555772ms]
Aug 27 12:28:54.314: INFO: Created: latency-svc-2km6z
Aug 27 12:28:54.320: INFO: Got endpoints: latency-svc-2km6z [114.054647ms]
Aug 27 12:28:54.321: INFO: Created: latency-svc-p45wb
Aug 27 12:28:54.331: INFO: Got endpoints: latency-svc-p45wb [120.797888ms]
Aug 27 12:28:54.337: INFO: Created: latency-svc-pdnwl
Aug 27 12:28:54.344: INFO: Got endpoints: latency-svc-pdnwl [129.411086ms]
Aug 27 12:28:54.352: INFO: Created: latency-svc-tbrlx
Aug 27 12:28:54.359: INFO: Created: latency-svc-2bfbr
Aug 27 12:28:54.362: INFO: Got endpoints: latency-svc-tbrlx [146.789326ms]
Aug 27 12:28:54.376: INFO: Created: latency-svc-gdpdr
Aug 27 12:28:54.386: INFO: Created: latency-svc-v4wbn
Aug 27 12:28:54.402: INFO: Created: latency-svc-r8wzr
Aug 27 12:28:54.408: INFO: Got endpoints: latency-svc-2bfbr [181.32135ms]
Aug 27 12:28:54.417: INFO: Created: latency-svc-spkh5
Aug 27 12:28:54.433: INFO: Created: latency-svc-r7jlv
Aug 27 12:28:54.437: INFO: Created: latency-svc-8ltsj
Aug 27 12:28:54.447: INFO: Created: latency-svc-8qvqs
Aug 27 12:28:54.450: INFO: Got endpoints: latency-svc-gdpdr [215.756462ms]
Aug 27 12:28:54.461: INFO: Created: latency-svc-wxj6s
Aug 27 12:28:54.473: INFO: Created: latency-svc-7zpkm
Aug 27 12:28:54.488: INFO: Created: latency-svc-2j8jf
Aug 27 12:28:54.496: INFO: Created: latency-svc-lj524
Aug 27 12:28:54.499: INFO: Got endpoints: latency-svc-v4wbn [265.142192ms]
Aug 27 12:28:54.511: INFO: Created: latency-svc-n68zv
Aug 27 12:28:54.516: INFO: Created: latency-svc-m8hz6
Aug 27 12:28:54.530: INFO: Created: latency-svc-2bdr9
Aug 27 12:28:54.535: INFO: Created: latency-svc-pm2nm
Aug 27 12:28:54.543: INFO: Created: latency-svc-6rmk2
Aug 27 12:28:54.550: INFO: Got endpoints: latency-svc-r8wzr [310.386488ms]
Aug 27 12:28:54.558: INFO: Created: latency-svc-lvqk7
Aug 27 12:28:54.572: INFO: Created: latency-svc-lrk6v
Aug 27 12:28:54.598: INFO: Got endpoints: latency-svc-spkh5 [348.939784ms]
Aug 27 12:28:54.616: INFO: Created: latency-svc-xdbk7
Aug 27 12:28:54.653: INFO: Got endpoints: latency-svc-r7jlv [404.207543ms]
Aug 27 12:28:54.674: INFO: Created: latency-svc-rsmsq
Aug 27 12:28:54.698: INFO: Got endpoints: latency-svc-8ltsj [446.045142ms]
Aug 27 12:28:54.714: INFO: Created: latency-svc-m7ml2
Aug 27 12:28:54.753: INFO: Got endpoints: latency-svc-8qvqs [490.435857ms]
Aug 27 12:28:54.780: INFO: Created: latency-svc-p4v9t
Aug 27 12:28:54.799: INFO: Got endpoints: latency-svc-wxj6s [521.981155ms]
Aug 27 12:28:54.820: INFO: Created: latency-svc-kfv97
Aug 27 12:28:54.848: INFO: Got endpoints: latency-svc-7zpkm [557.101554ms]
Aug 27 12:28:54.875: INFO: Created: latency-svc-mstnz
Aug 27 12:28:54.902: INFO: Got endpoints: latency-svc-2j8jf [589.72722ms]
Aug 27 12:28:54.919: INFO: Created: latency-svc-245rs
Aug 27 12:28:54.948: INFO: Got endpoints: latency-svc-lj524 [628.469331ms]
Aug 27 12:28:54.993: INFO: Created: latency-svc-q5cwb
Aug 27 12:28:55.003: INFO: Got endpoints: latency-svc-n68zv [671.807288ms]
Aug 27 12:28:55.021: INFO: Created: latency-svc-5sxw9
Aug 27 12:28:55.050: INFO: Got endpoints: latency-svc-m8hz6 [704.870095ms]
Aug 27 12:28:55.073: INFO: Created: latency-svc-2lk64
Aug 27 12:28:55.096: INFO: Got endpoints: latency-svc-2bdr9 [734.152706ms]
Aug 27 12:28:55.117: INFO: Created: latency-svc-wlhdp
Aug 27 12:28:55.147: INFO: Got endpoints: latency-svc-pm2nm [738.774073ms]
Aug 27 12:28:55.166: INFO: Created: latency-svc-sts4q
Aug 27 12:28:55.197: INFO: Got endpoints: latency-svc-6rmk2 [746.614591ms]
Aug 27 12:28:55.212: INFO: Created: latency-svc-7zmrn
Aug 27 12:28:55.248: INFO: Got endpoints: latency-svc-lvqk7 [748.390706ms]
Aug 27 12:28:55.265: INFO: Created: latency-svc-8l6g9
Aug 27 12:28:55.297: INFO: Got endpoints: latency-svc-lrk6v [747.180546ms]
Aug 27 12:28:55.314: INFO: Created: latency-svc-jgbsb
Aug 27 12:28:55.347: INFO: Got endpoints: latency-svc-xdbk7 [749.285949ms]
Aug 27 12:28:55.364: INFO: Created: latency-svc-4srhn
Aug 27 12:28:55.396: INFO: Got endpoints: latency-svc-rsmsq [743.068641ms]
Aug 27 12:28:55.417: INFO: Created: latency-svc-8fgxj
Aug 27 12:28:55.447: INFO: Got endpoints: latency-svc-m7ml2 [749.34674ms]
Aug 27 12:28:55.466: INFO: Created: latency-svc-xtfx5
Aug 27 12:28:55.497: INFO: Got endpoints: latency-svc-p4v9t [743.360498ms]
Aug 27 12:28:55.511: INFO: Created: latency-svc-r7k8b
Aug 27 12:28:55.546: INFO: Got endpoints: latency-svc-kfv97 [746.617791ms]
Aug 27 12:28:55.566: INFO: Created: latency-svc-cmnvj
Aug 27 12:28:55.598: INFO: Got endpoints: latency-svc-mstnz [749.543614ms]
Aug 27 12:28:55.615: INFO: Created: latency-svc-q7br6
Aug 27 12:28:55.648: INFO: Got endpoints: latency-svc-245rs [746.862877ms]
Aug 27 12:28:55.667: INFO: Created: latency-svc-7wr5k
Aug 27 12:28:55.702: INFO: Got endpoints: latency-svc-q5cwb [753.278959ms]
Aug 27 12:28:55.752: INFO: Got endpoints: latency-svc-5sxw9 [749.184256ms]
Aug 27 12:28:55.757: INFO: Created: latency-svc-vg4v7
Aug 27 12:28:55.781: INFO: Created: latency-svc-xpxm5
Aug 27 12:28:55.796: INFO: Got endpoints: latency-svc-2lk64 [746.58513ms]
Aug 27 12:28:55.812: INFO: Created: latency-svc-zwjnr
Aug 27 12:28:55.847: INFO: Got endpoints: latency-svc-wlhdp [750.706654ms]
Aug 27 12:28:55.875: INFO: Created: latency-svc-mghdx
Aug 27 12:28:55.898: INFO: Got endpoints: latency-svc-sts4q [750.585471ms]
Aug 27 12:28:55.926: INFO: Created: latency-svc-l48hc
Aug 27 12:28:55.946: INFO: Got endpoints: latency-svc-7zmrn [748.764615ms]
Aug 27 12:28:55.963: INFO: Created: latency-svc-n44xf
Aug 27 12:28:55.997: INFO: Got endpoints: latency-svc-8l6g9 [749.233107ms]
Aug 27 12:28:56.018: INFO: Created: latency-svc-wbd6j
Aug 27 12:28:56.047: INFO: Got endpoints: latency-svc-jgbsb [750.258732ms]
Aug 27 12:28:56.068: INFO: Created: latency-svc-6pnsg
Aug 27 12:28:56.099: INFO: Got endpoints: latency-svc-4srhn [751.34424ms]
Aug 27 12:28:56.118: INFO: Created: latency-svc-hkjvn
Aug 27 12:28:56.149: INFO: Got endpoints: latency-svc-8fgxj [752.751415ms]
Aug 27 12:28:56.176: INFO: Created: latency-svc-dmjwq
Aug 27 12:28:56.204: INFO: Got endpoints: latency-svc-xtfx5 [756.682275ms]
Aug 27 12:28:56.228: INFO: Created: latency-svc-22np9
Aug 27 12:28:56.254: INFO: Got endpoints: latency-svc-r7k8b [757.461295ms]
Aug 27 12:28:56.274: INFO: Created: latency-svc-mfkxt
Aug 27 12:28:56.299: INFO: Got endpoints: latency-svc-cmnvj [753.261718ms]
Aug 27 12:28:56.319: INFO: Created: latency-svc-mjtw9
Aug 27 12:28:56.353: INFO: Got endpoints: latency-svc-q7br6 [754.442248ms]
Aug 27 12:28:56.372: INFO: Created: latency-svc-pcxnh
Aug 27 12:28:56.398: INFO: Got endpoints: latency-svc-7wr5k [749.182885ms]
Aug 27 12:28:56.419: INFO: Created: latency-svc-cmt8c
Aug 27 12:28:56.451: INFO: Got endpoints: latency-svc-vg4v7 [749.477051ms]
Aug 27 12:28:56.478: INFO: Created: latency-svc-lx75b
Aug 27 12:28:56.498: INFO: Got endpoints: latency-svc-xpxm5 [746.057875ms]
Aug 27 12:28:56.519: INFO: Created: latency-svc-jrjwb
Aug 27 12:28:56.547: INFO: Got endpoints: latency-svc-zwjnr [750.9946ms]
Aug 27 12:28:56.566: INFO: Created: latency-svc-8928k
Aug 27 12:28:56.599: INFO: Got endpoints: latency-svc-mghdx [752.158809ms]
Aug 27 12:28:56.619: INFO: Created: latency-svc-v7vwg
Aug 27 12:28:56.653: INFO: Got endpoints: latency-svc-l48hc [754.633392ms]
Aug 27 12:28:56.673: INFO: Created: latency-svc-qwfcn
Aug 27 12:28:56.698: INFO: Got endpoints: latency-svc-n44xf [752.350934ms]
Aug 27 12:28:56.714: INFO: Created: latency-svc-7vz9k
Aug 27 12:28:56.749: INFO: Got endpoints: latency-svc-wbd6j [752.411485ms]
Aug 27 12:28:56.765: INFO: Created: latency-svc-7c4jg
Aug 27 12:28:56.796: INFO: Got endpoints: latency-svc-6pnsg [748.697311ms]
Aug 27 12:28:56.821: INFO: Created: latency-svc-pwzdc
Aug 27 12:28:56.848: INFO: Got endpoints: latency-svc-hkjvn [749.728837ms]
Aug 27 12:28:56.879: INFO: Created: latency-svc-zhz5k
Aug 27 12:28:56.897: INFO: Got endpoints: latency-svc-dmjwq [747.969433ms]
Aug 27 12:28:56.914: INFO: Created: latency-svc-79qg2
Aug 27 12:28:56.948: INFO: Got endpoints: latency-svc-22np9 [744.149885ms]
Aug 27 12:28:56.965: INFO: Created: latency-svc-dtrrb
Aug 27 12:28:56.996: INFO: Got endpoints: latency-svc-mfkxt [741.927629ms]
Aug 27 12:28:57.015: INFO: Created: latency-svc-x6pfw
Aug 27 12:28:57.048: INFO: Got endpoints: latency-svc-mjtw9 [749.08131ms]
Aug 27 12:28:57.070: INFO: Created: latency-svc-pmcqt
Aug 27 12:28:57.102: INFO: Got endpoints: latency-svc-pcxnh [749.202013ms]
Aug 27 12:28:57.123: INFO: Created: latency-svc-c9bxf
Aug 27 12:28:57.146: INFO: Got endpoints: latency-svc-cmt8c [748.427463ms]
Aug 27 12:28:57.167: INFO: Created: latency-svc-78p9t
Aug 27 12:28:57.200: INFO: Got endpoints: latency-svc-lx75b [748.254619ms]
Aug 27 12:28:57.218: INFO: Created: latency-svc-nvdmn
Aug 27 12:28:57.246: INFO: Got endpoints: latency-svc-jrjwb [747.384377ms]
Aug 27 12:28:57.261: INFO: Created: latency-svc-7c7cg
Aug 27 12:28:57.297: INFO: Got endpoints: latency-svc-8928k [749.541641ms]
Aug 27 12:28:57.313: INFO: Created: latency-svc-bqdw5
Aug 27 12:28:57.350: INFO: Got endpoints: latency-svc-v7vwg [750.639349ms]
Aug 27 12:28:57.366: INFO: Created: latency-svc-ffgfx
Aug 27 12:28:57.397: INFO: Got endpoints: latency-svc-qwfcn [743.838427ms]
Aug 27 12:28:57.413: INFO: Created: latency-svc-n69g9
Aug 27 12:28:57.448: INFO: Got endpoints: latency-svc-7vz9k [749.832639ms]
Aug 27 12:28:57.463: INFO: Created: latency-svc-vg6bk
Aug 27 12:28:57.498: INFO: Got endpoints: latency-svc-7c4jg [748.075965ms]
Aug 27 12:28:57.516: INFO: Created: latency-svc-qv9vm
Aug 27 12:28:57.550: INFO: Got endpoints: latency-svc-pwzdc [753.514322ms]
Aug 27 12:28:57.563: INFO: Created: latency-svc-d9l4d
Aug 27 12:28:57.603: INFO: Got endpoints: latency-svc-zhz5k [754.259141ms]
Aug 27 12:28:57.617: INFO: Created: latency-svc-dd5sx
Aug 27 12:28:57.652: INFO: Got endpoints: latency-svc-79qg2 [754.903387ms]
Aug 27 12:28:57.672: INFO: Created: latency-svc-jvwd5
Aug 27 12:28:57.697: INFO: Got endpoints: latency-svc-dtrrb [749.216442ms]
Aug 27 12:28:57.714: INFO: Created: latency-svc-9mxtx
Aug 27 12:28:57.747: INFO: Got endpoints: latency-svc-x6pfw [750.219638ms]
Aug 27 12:28:57.767: INFO: Created: latency-svc-84fhx
Aug 27 12:28:57.798: INFO: Got endpoints: latency-svc-pmcqt [749.347425ms]
Aug 27 12:28:57.815: INFO: Created: latency-svc-58ckh
Aug 27 12:28:57.848: INFO: Got endpoints: latency-svc-c9bxf [746.180866ms]
Aug 27 12:28:57.873: INFO: Created: latency-svc-wrj9t
Aug 27 12:28:57.900: INFO: Got endpoints: latency-svc-78p9t [753.589614ms]
Aug 27 12:28:57.916: INFO: Created: latency-svc-rfwvc
Aug 27 12:28:57.953: INFO: Got endpoints: latency-svc-nvdmn [752.914856ms]
Aug 27 12:28:57.971: INFO: Created: latency-svc-8q57d
Aug 27 12:28:57.997: INFO: Got endpoints: latency-svc-7c7cg [750.512146ms]
Aug 27 12:28:58.016: INFO: Created: latency-svc-npr6l
Aug 27 12:28:58.048: INFO: Got endpoints: latency-svc-bqdw5 [750.795382ms]
Aug 27 12:28:58.065: INFO: Created: latency-svc-xpmf5
Aug 27 12:28:58.096: INFO: Got endpoints: latency-svc-ffgfx [746.010021ms]
Aug 27 12:28:58.122: INFO: Created: latency-svc-jrck9
Aug 27 12:28:58.150: INFO: Got endpoints: latency-svc-n69g9 [753.146651ms]
Aug 27 12:28:58.172: INFO: Created: latency-svc-ntp45
Aug 27 12:28:58.196: INFO: Got endpoints: latency-svc-vg6bk [748.213767ms]
Aug 27 12:28:58.213: INFO: Created: latency-svc-tjb42
Aug 27 12:28:58.248: INFO: Got endpoints: latency-svc-qv9vm [750.36148ms]
Aug 27 12:28:58.262: INFO: Created: latency-svc-rjb49
Aug 27 12:28:58.296: INFO: Got endpoints: latency-svc-d9l4d [746.613915ms]
Aug 27 12:28:58.321: INFO: Created: latency-svc-p9tjc
Aug 27 12:28:58.347: INFO: Got endpoints: latency-svc-dd5sx [743.861536ms]
Aug 27 12:28:58.364: INFO: Created: latency-svc-6jm9k
Aug 27 12:28:58.399: INFO: Got endpoints: latency-svc-jvwd5 [746.544984ms]
Aug 27 12:28:58.418: INFO: Created: latency-svc-lhp9d
Aug 27 12:28:58.449: INFO: Got endpoints: latency-svc-9mxtx [751.814227ms]
Aug 27 12:28:58.469: INFO: Created: latency-svc-cc5k6
Aug 27 12:28:58.498: INFO: Got endpoints: latency-svc-84fhx [751.078329ms]
Aug 27 12:28:58.519: INFO: Created: latency-svc-p4jlp
Aug 27 12:28:58.560: INFO: Got endpoints: latency-svc-58ckh [761.974884ms]
Aug 27 12:28:58.578: INFO: Created: latency-svc-4d9b8
Aug 27 12:28:58.597: INFO: Got endpoints: latency-svc-wrj9t [749.068147ms]
Aug 27 12:28:58.614: INFO: Created: latency-svc-44rbb
Aug 27 12:28:58.649: INFO: Got endpoints: latency-svc-rfwvc [749.321413ms]
Aug 27 12:28:58.670: INFO: Created: latency-svc-6n5kd
Aug 27 12:28:58.710: INFO: Got endpoints: latency-svc-8q57d [756.851274ms]
Aug 27 12:28:58.726: INFO: Created: latency-svc-lg5hm
Aug 27 12:28:58.747: INFO: Got endpoints: latency-svc-npr6l [750.486043ms]
Aug 27 12:28:58.767: INFO: Created: latency-svc-94w55
Aug 27 12:28:58.803: INFO: Got endpoints: latency-svc-xpmf5 [754.522265ms]
Aug 27 12:28:58.822: INFO: Created: latency-svc-p5cmb
Aug 27 12:28:58.851: INFO: Got endpoints: latency-svc-jrck9 [754.928956ms]
Aug 27 12:28:58.866: INFO: Created: latency-svc-vv49m
Aug 27 12:28:58.904: INFO: Got endpoints: latency-svc-ntp45 [754.377252ms]
Aug 27 12:28:58.922: INFO: Created: latency-svc-x6l72
Aug 27 12:28:58.947: INFO: Got endpoints: latency-svc-tjb42 [750.625336ms]
Aug 27 12:28:58.965: INFO: Created: latency-svc-6pr9n
Aug 27 12:28:58.996: INFO: Got endpoints: latency-svc-rjb49 [747.552569ms]
Aug 27 12:28:59.015: INFO: Created: latency-svc-gpdtg
Aug 27 12:28:59.048: INFO: Got endpoints: latency-svc-p9tjc [751.702053ms]
Aug 27 12:28:59.067: INFO: Created: latency-svc-9kmxz
Aug 27 12:28:59.097: INFO: Got endpoints: latency-svc-6jm9k [750.500303ms]
Aug 27 12:28:59.113: INFO: Created: latency-svc-f4prt
Aug 27 12:28:59.149: INFO: Got endpoints: latency-svc-lhp9d [750.456602ms]
Aug 27 12:28:59.169: INFO: Created: latency-svc-9sjb4
Aug 27 12:28:59.198: INFO: Got endpoints: latency-svc-cc5k6 [748.944823ms]
Aug 27 12:28:59.216: INFO: Created: latency-svc-hv9gs
Aug 27 12:28:59.247: INFO: Got endpoints: latency-svc-p4jlp [749.251431ms]
Aug 27 12:28:59.264: INFO: Created: latency-svc-xx7br
Aug 27 12:28:59.298: INFO: Got endpoints: latency-svc-4d9b8 [737.520844ms]
Aug 27 12:28:59.316: INFO: Created: latency-svc-ch74b
Aug 27 12:28:59.349: INFO: Got endpoints: latency-svc-44rbb [751.158119ms]
Aug 27 12:28:59.365: INFO: Created: latency-svc-vxmdl
Aug 27 12:28:59.398: INFO: Got endpoints: latency-svc-6n5kd [749.010105ms]
Aug 27 12:28:59.415: INFO: Created: latency-svc-2g4gv
Aug 27 12:28:59.450: INFO: Got endpoints: latency-svc-lg5hm [739.937815ms]
Aug 27 12:28:59.478: INFO: Created: latency-svc-c596m
Aug 27 12:28:59.497: INFO: Got endpoints: latency-svc-94w55 [750.367798ms]
Aug 27 12:28:59.513: INFO: Created: latency-svc-kzt5f
Aug 27 12:28:59.550: INFO: Got endpoints: latency-svc-p5cmb [747.013874ms]
Aug 27 12:28:59.566: INFO: Created: latency-svc-6slrl
Aug 27 12:28:59.601: INFO: Got endpoints: latency-svc-vv49m [749.25784ms]
Aug 27 12:28:59.618: INFO: Created: latency-svc-kcbnx
Aug 27 12:28:59.653: INFO: Got endpoints: latency-svc-x6l72 [748.898091ms]
Aug 27 12:28:59.670: INFO: Created: latency-svc-hp8zc
Aug 27 12:28:59.698: INFO: Got endpoints: latency-svc-6pr9n [750.544683ms]
Aug 27 12:28:59.716: INFO: Created: latency-svc-7n8xd
Aug 27 12:28:59.747: INFO: Got endpoints: latency-svc-gpdtg [750.660325ms]
Aug 27 12:28:59.765: INFO: Created: latency-svc-zmsv6
Aug 27 12:28:59.798: INFO: Got endpoints: latency-svc-9kmxz [750.169323ms]
Aug 27 12:28:59.814: INFO: Created: latency-svc-8fcv4
Aug 27 12:28:59.849: INFO: Got endpoints: latency-svc-f4prt [751.650471ms]
Aug 27 12:28:59.866: INFO: Created: latency-svc-c5cp4
Aug 27 12:28:59.899: INFO: Got endpoints: latency-svc-9sjb4 [749.138826ms]
Aug 27 12:28:59.917: INFO: Created: latency-svc-8twg4
Aug 27 12:28:59.950: INFO: Got endpoints: latency-svc-hv9gs [751.65494ms]
Aug 27 12:28:59.969: INFO: Created: latency-svc-79qlf
Aug 27 12:28:59.998: INFO: Got endpoints: latency-svc-xx7br [750.576153ms]
Aug 27 12:29:00.014: INFO: Created: latency-svc-nwd5m
Aug 27 12:29:00.049: INFO: Got endpoints: latency-svc-ch74b [750.519651ms]
Aug 27 12:29:00.066: INFO: Created: latency-svc-7fhlz
Aug 27 12:29:00.105: INFO: Got endpoints: latency-svc-vxmdl [756.04453ms]
Aug 27 12:29:00.122: INFO: Created: latency-svc-5vfxw
Aug 27 12:29:00.147: INFO: Got endpoints: latency-svc-2g4gv [748.812778ms]
Aug 27 12:29:00.172: INFO: Created: latency-svc-nncnl
Aug 27 12:29:00.200: INFO: Got endpoints: latency-svc-c596m [749.552667ms]
Aug 27 12:29:00.218: INFO: Created: latency-svc-lbqxt
Aug 27 12:29:00.248: INFO: Got endpoints: latency-svc-kzt5f [750.014558ms]
Aug 27 12:29:00.264: INFO: Created: latency-svc-4sldj
Aug 27 12:29:00.297: INFO: Got endpoints: latency-svc-6slrl [747.633098ms]
Aug 27 12:29:00.314: INFO: Created: latency-svc-mvg95
Aug 27 12:29:00.349: INFO: Got endpoints: latency-svc-kcbnx [748.421707ms]
Aug 27 12:29:00.365: INFO: Created: latency-svc-pz4fq
Aug 27 12:29:00.398: INFO: Got endpoints: latency-svc-hp8zc [744.740864ms]
Aug 27 12:29:00.414: INFO: Created: latency-svc-hkfcl
Aug 27 12:29:00.450: INFO: Got endpoints: latency-svc-7n8xd [752.612683ms]
Aug 27 12:29:00.472: INFO: Created: latency-svc-kfwbk
Aug 27 12:29:00.500: INFO: Got endpoints: latency-svc-zmsv6 [753.100796ms]
Aug 27 12:29:00.519: INFO: Created: latency-svc-4fb7v
Aug 27 12:29:00.550: INFO: Got endpoints: latency-svc-8fcv4 [751.863404ms]
Aug 27 12:29:00.601: INFO: Got endpoints: latency-svc-c5cp4 [752.121981ms]
Aug 27 12:29:00.635: INFO: Created: latency-svc-6tppm
Aug 27 12:29:00.649: INFO: Got endpoints: latency-svc-8twg4 [750.11439ms]
Aug 27 12:29:00.649: INFO: Created: latency-svc-vhvzv
Aug 27 12:29:00.670: INFO: Created: latency-svc-gfkvt
Aug 27 12:29:00.698: INFO: Got endpoints: latency-svc-79qlf [748.087308ms]
Aug 27 12:29:00.717: INFO: Created: latency-svc-ffzgh
Aug 27 12:29:00.746: INFO: Got endpoints: latency-svc-nwd5m [748.296394ms]
Aug 27 12:29:00.765: INFO: Created: latency-svc-28qpt
Aug 27 12:29:00.800: INFO: Got endpoints: latency-svc-7fhlz [750.880138ms]
Aug 27 12:29:00.817: INFO: Created: latency-svc-r55nq
Aug 27 12:29:00.850: INFO: Got endpoints: latency-svc-5vfxw [745.187205ms]
Aug 27 12:29:00.869: INFO: Created: latency-svc-2mhnz
Aug 27 12:29:00.902: INFO: Got endpoints: latency-svc-nncnl [754.579922ms]
Aug 27 12:29:00.926: INFO: Created: latency-svc-tcmgg
Aug 27 12:29:00.948: INFO: Got endpoints: latency-svc-lbqxt [748.734703ms]
Aug 27 12:29:00.973: INFO: Created: latency-svc-g89kn
Aug 27 12:29:00.999: INFO: Got endpoints: latency-svc-4sldj [751.124675ms]
Aug 27 12:29:01.014: INFO: Created: latency-svc-4vnz4
Aug 27 12:29:01.048: INFO: Got endpoints: latency-svc-mvg95 [749.974876ms]
Aug 27 12:29:01.065: INFO: Created: latency-svc-jj7mq
Aug 27 12:29:01.101: INFO: Got endpoints: latency-svc-pz4fq [751.424283ms]
Aug 27 12:29:01.123: INFO: Created: latency-svc-w5xng
Aug 27 12:29:01.149: INFO: Got endpoints: latency-svc-hkfcl [750.53947ms]
Aug 27 12:29:01.167: INFO: Created: latency-svc-xghb4
Aug 27 12:29:01.196: INFO: Got endpoints: latency-svc-kfwbk [746.124509ms]
Aug 27 12:29:01.213: INFO: Created: latency-svc-rjprv
Aug 27 12:29:01.247: INFO: Got endpoints: latency-svc-4fb7v [747.445382ms]
Aug 27 12:29:01.268: INFO: Created: latency-svc-7d9kl
Aug 27 12:29:01.299: INFO: Got endpoints: latency-svc-6tppm [748.603901ms]
Aug 27 12:29:01.315: INFO: Created: latency-svc-48fsz
Aug 27 12:29:01.347: INFO: Got endpoints: latency-svc-vhvzv [745.664286ms]
Aug 27 12:29:01.363: INFO: Created: latency-svc-jt745
Aug 27 12:29:01.397: INFO: Got endpoints: latency-svc-gfkvt [747.159304ms]
Aug 27 12:29:01.414: INFO: Created: latency-svc-xfsj5
Aug 27 12:29:01.446: INFO: Got endpoints: latency-svc-ffzgh [747.756129ms]
Aug 27 12:29:01.461: INFO: Created: latency-svc-gwwh7
Aug 27 12:29:01.501: INFO: Got endpoints: latency-svc-28qpt [754.327526ms]
Aug 27 12:29:01.526: INFO: Created: latency-svc-qpt72
Aug 27 12:29:01.550: INFO: Got endpoints: latency-svc-r55nq [750.676682ms]
Aug 27 12:29:01.576: INFO: Created: latency-svc-7ztqw
Aug 27 12:29:01.599: INFO: Got endpoints: latency-svc-2mhnz [748.389844ms]
Aug 27 12:29:01.638: INFO: Created: latency-svc-764fp
Aug 27 12:29:01.649: INFO: Got endpoints: latency-svc-tcmgg [747.271246ms]
Aug 27 12:29:01.703: INFO: Got endpoints: latency-svc-g89kn [754.764306ms]
Aug 27 12:29:01.747: INFO: Got endpoints: latency-svc-4vnz4 [747.500211ms]
Aug 27 12:29:01.801: INFO: Got endpoints: latency-svc-jj7mq [753.332869ms]
Aug 27 12:29:01.849: INFO: Got endpoints: latency-svc-w5xng [747.872751ms]
Aug 27 12:29:01.899: INFO: Got endpoints: latency-svc-xghb4 [749.912913ms]
Aug 27 12:29:01.948: INFO: Got endpoints: latency-svc-rjprv [751.075142ms]
Aug 27 12:29:01.997: INFO: Got endpoints: latency-svc-7d9kl [749.357498ms]
Aug 27 12:29:02.046: INFO: Got endpoints: latency-svc-48fsz [746.942698ms]
Aug 27 12:29:02.110: INFO: Got endpoints: latency-svc-jt745 [763.181638ms]
Aug 27 12:29:02.153: INFO: Got endpoints: latency-svc-xfsj5 [756.767306ms]
Aug 27 12:29:02.203: INFO: Got endpoints: latency-svc-gwwh7 [756.834157ms]
Aug 27 12:29:02.249: INFO: Got endpoints: latency-svc-qpt72 [748.148307ms]
Aug 27 12:29:02.297: INFO: Got endpoints: latency-svc-7ztqw [746.376242ms]
Aug 27 12:29:02.347: INFO: Got endpoints: latency-svc-764fp [748.240159ms]
Aug 27 12:29:02.347: INFO: Latencies: [32.523454ms 74.195069ms 83.363931ms 90.402749ms 99.463008ms 105.555772ms 114.054647ms 120.797888ms 129.411086ms 146.789326ms 151.171717ms 181.32135ms 191.865577ms 193.483068ms 197.647183ms 198.69363ms 198.721191ms 203.638566ms 204.673131ms 205.554175ms 208.469207ms 213.693849ms 214.274974ms 215.756462ms 221.728254ms 228.25154ms 231.979083ms 232.181448ms 249.070546ms 250.110742ms 250.993414ms 253.14668ms 255.222722ms 260.025803ms 262.624159ms 263.8341ms 264.789234ms 265.142192ms 274.348276ms 294.860166ms 296.474247ms 310.386488ms 314.080582ms 317.13417ms 348.939784ms 404.207543ms 446.045142ms 490.435857ms 521.981155ms 557.101554ms 589.72722ms 628.469331ms 671.807288ms 704.870095ms 734.152706ms 737.520844ms 738.774073ms 739.937815ms 741.927629ms 743.068641ms 743.360498ms 743.838427ms 743.861536ms 744.149885ms 744.740864ms 745.187205ms 745.664286ms 746.010021ms 746.057875ms 746.124509ms 746.180866ms 746.376242ms 746.544984ms 746.58513ms 746.613915ms 746.614591ms 746.617791ms 746.862877ms 746.942698ms 747.013874ms 747.159304ms 747.180546ms 747.271246ms 747.384377ms 747.445382ms 747.500211ms 747.552569ms 747.633098ms 747.756129ms 747.872751ms 747.969433ms 748.075965ms 748.087308ms 748.148307ms 748.213767ms 748.240159ms 748.254619ms 748.296394ms 748.389844ms 748.390706ms 748.421707ms 748.427463ms 748.603901ms 748.697311ms 748.734703ms 748.764615ms 748.812778ms 748.898091ms 748.944823ms 749.010105ms 749.068147ms 749.08131ms 749.138826ms 749.182885ms 749.184256ms 749.202013ms 749.216442ms 749.233107ms 749.251431ms 749.25784ms 749.285949ms 749.321413ms 749.34674ms 749.347425ms 749.357498ms 749.477051ms 749.541641ms 749.543614ms 749.552667ms 749.728837ms 749.832639ms 749.912913ms 749.974876ms 750.014558ms 750.11439ms 750.169323ms 750.219638ms 750.258732ms 750.36148ms 750.367798ms 750.456602ms 750.486043ms 750.500303ms 750.512146ms 750.519651ms 750.53947ms 750.544683ms 750.576153ms 750.585471ms 750.625336ms 750.639349ms 750.660325ms 750.676682ms 750.706654ms 750.795382ms 750.880138ms 750.9946ms 751.075142ms 751.078329ms 751.124675ms 751.158119ms 751.34424ms 751.424283ms 751.650471ms 751.65494ms 751.702053ms 751.814227ms 751.863404ms 752.121981ms 752.158809ms 752.350934ms 752.411485ms 752.612683ms 752.751415ms 752.914856ms 753.100796ms 753.146651ms 753.261718ms 753.278959ms 753.332869ms 753.514322ms 753.589614ms 754.259141ms 754.327526ms 754.377252ms 754.442248ms 754.522265ms 754.579922ms 754.633392ms 754.764306ms 754.903387ms 754.928956ms 756.04453ms 756.682275ms 756.767306ms 756.834157ms 756.851274ms 757.461295ms 761.974884ms 763.181638ms]
Aug 27 12:29:02.347: INFO: 50 %ile: 748.421707ms
Aug 27 12:29:02.347: INFO: 90 %ile: 753.514322ms
Aug 27 12:29:02.347: INFO: 99 %ile: 761.974884ms
Aug 27 12:29:02.347: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Aug 27 12:29:02.347: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-1697" for this suite.

• [SLOW TEST:13.006 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":106,"skipped":1932,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:29:02.374: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-460
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:29:02.539: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb" in namespace "downward-api-460" to be "Succeeded or Failed"
Aug 27 12:29:02.549: INFO: Pod "downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb": Phase="Pending", Reason="", readiness=false. Elapsed: 10.426274ms
Aug 27 12:29:04.558: INFO: Pod "downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018969869s
Aug 27 12:29:06.571: INFO: Pod "downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032382528s
STEP: Saw pod success
Aug 27 12:29:06.571: INFO: Pod "downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb" satisfied condition "Succeeded or Failed"
Aug 27 12:29:06.577: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb container client-container: <nil>
STEP: delete the pod
Aug 27 12:29:06.614: INFO: Waiting for pod downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb to disappear
Aug 27 12:29:06.620: INFO: Pod downwardapi-volume-c6af4174-6ee0-4837-8d91-44ceeaf96fbb no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:29:06.620: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-460" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":107,"skipped":1947,"failed":0}
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:29:06.648: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5104
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 12:29:23.022: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5104" for this suite.

• [SLOW TEST:16.392 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":108,"skipped":1952,"failed":0}
SSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:29:23.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-1208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Aug 27 12:29:23.246: INFO: created test-podtemplate-1
Aug 27 12:29:23.253: INFO: created test-podtemplate-2
Aug 27 12:29:23.262: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Aug 27 12:29:23.266: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Aug 27 12:29:23.311: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 27 12:29:23.318: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-1208" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":109,"skipped":1956,"failed":0}
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:29:23.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4098
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug 27 12:29:23.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 create -f -'
Aug 27 12:29:23.935: INFO: stderr: ""
Aug 27 12:29:23.935: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 27 12:29:23.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 12:29:24.050: INFO: stderr: ""
Aug 27 12:29:24.050: INFO: stdout: "update-demo-nautilus-mmdls update-demo-nautilus-szgw8 "
Aug 27 12:29:24.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-mmdls -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:24.139: INFO: stderr: ""
Aug 27 12:29:24.139: INFO: stdout: ""
Aug 27 12:29:24.139: INFO: update-demo-nautilus-mmdls is created but not running
Aug 27 12:29:29.143: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 12:29:29.235: INFO: stderr: ""
Aug 27 12:29:29.235: INFO: stdout: "update-demo-nautilus-mmdls update-demo-nautilus-szgw8 "
Aug 27 12:29:29.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-mmdls -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:29.308: INFO: stderr: ""
Aug 27 12:29:29.308: INFO: stdout: ""
Aug 27 12:29:29.309: INFO: update-demo-nautilus-mmdls is created but not running
Aug 27 12:29:34.312: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 12:29:34.417: INFO: stderr: ""
Aug 27 12:29:34.417: INFO: stdout: "update-demo-nautilus-mmdls update-demo-nautilus-szgw8 "
Aug 27 12:29:34.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-mmdls -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:34.506: INFO: stderr: ""
Aug 27 12:29:34.506: INFO: stdout: "true"
Aug 27 12:29:34.506: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-mmdls -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 12:29:34.587: INFO: stderr: ""
Aug 27 12:29:34.587: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 12:29:34.587: INFO: validating pod update-demo-nautilus-mmdls
Aug 27 12:29:34.621: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 12:29:34.622: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 12:29:34.622: INFO: update-demo-nautilus-mmdls is verified up and running
Aug 27 12:29:34.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:34.713: INFO: stderr: ""
Aug 27 12:29:34.713: INFO: stdout: "true"
Aug 27 12:29:34.713: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 12:29:34.803: INFO: stderr: ""
Aug 27 12:29:34.803: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 12:29:34.803: INFO: validating pod update-demo-nautilus-szgw8
Aug 27 12:29:34.810: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 12:29:34.810: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 12:29:34.810: INFO: update-demo-nautilus-szgw8 is verified up and running
STEP: scaling down the replication controller
Aug 27 12:29:34.813: INFO: scanned /root for discovery docs: <nil>
Aug 27 12:29:34.813: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Aug 27 12:29:35.952: INFO: stderr: ""
Aug 27 12:29:35.953: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 27 12:29:35.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 12:29:36.027: INFO: stderr: ""
Aug 27 12:29:36.027: INFO: stdout: "update-demo-nautilus-szgw8 "
Aug 27 12:29:36.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:36.106: INFO: stderr: ""
Aug 27 12:29:36.106: INFO: stdout: "true"
Aug 27 12:29:36.106: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 12:29:36.182: INFO: stderr: ""
Aug 27 12:29:36.182: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 12:29:36.182: INFO: validating pod update-demo-nautilus-szgw8
Aug 27 12:29:36.189: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 12:29:36.189: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 12:29:36.189: INFO: update-demo-nautilus-szgw8 is verified up and running
STEP: scaling up the replication controller
Aug 27 12:29:36.191: INFO: scanned /root for discovery docs: <nil>
Aug 27 12:29:36.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Aug 27 12:29:37.309: INFO: stderr: ""
Aug 27 12:29:37.309: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 27 12:29:37.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 12:29:37.394: INFO: stderr: ""
Aug 27 12:29:37.394: INFO: stdout: "update-demo-nautilus-szgw8 update-demo-nautilus-z2l74 "
Aug 27 12:29:37.394: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:37.471: INFO: stderr: ""
Aug 27 12:29:37.471: INFO: stdout: "true"
Aug 27 12:29:37.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 12:29:37.546: INFO: stderr: ""
Aug 27 12:29:37.546: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 12:29:37.546: INFO: validating pod update-demo-nautilus-szgw8
Aug 27 12:29:37.553: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 12:29:37.553: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 12:29:37.553: INFO: update-demo-nautilus-szgw8 is verified up and running
Aug 27 12:29:37.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-z2l74 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:37.626: INFO: stderr: ""
Aug 27 12:29:37.626: INFO: stdout: ""
Aug 27 12:29:37.626: INFO: update-demo-nautilus-z2l74 is created but not running
Aug 27 12:29:42.626: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 12:29:42.726: INFO: stderr: ""
Aug 27 12:29:42.726: INFO: stdout: "update-demo-nautilus-szgw8 update-demo-nautilus-z2l74 "
Aug 27 12:29:42.726: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:42.799: INFO: stderr: ""
Aug 27 12:29:42.799: INFO: stdout: "true"
Aug 27 12:29:42.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-szgw8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 12:29:42.883: INFO: stderr: ""
Aug 27 12:29:42.883: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 12:29:42.883: INFO: validating pod update-demo-nautilus-szgw8
Aug 27 12:29:42.891: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 12:29:42.891: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 12:29:42.891: INFO: update-demo-nautilus-szgw8 is verified up and running
Aug 27 12:29:42.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-z2l74 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 12:29:42.976: INFO: stderr: ""
Aug 27 12:29:42.976: INFO: stdout: "true"
Aug 27 12:29:42.976: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods update-demo-nautilus-z2l74 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 12:29:43.074: INFO: stderr: ""
Aug 27 12:29:43.074: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 12:29:43.074: INFO: validating pod update-demo-nautilus-z2l74
Aug 27 12:29:43.080: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 12:29:43.081: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 12:29:43.081: INFO: update-demo-nautilus-z2l74 is verified up and running
STEP: using delete to clean up resources
Aug 27 12:29:43.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 delete --grace-period=0 --force -f -'
Aug 27 12:29:43.162: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:29:43.162: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 27 12:29:43.162: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get rc,svc -l name=update-demo --no-headers'
Aug 27 12:29:43.270: INFO: stderr: "No resources found in kubectl-4098 namespace.\n"
Aug 27 12:29:43.270: INFO: stdout: ""
Aug 27 12:29:43.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4098 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 27 12:29:43.367: INFO: stderr: ""
Aug 27 12:29:43.367: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:29:43.367: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4098" for this suite.

• [SLOW TEST:20.051 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":110,"skipped":1965,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:29:43.391: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2088
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 27 12:29:43.590: INFO: Waiting up to 5m0s for pod "downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228" in namespace "downward-api-2088" to be "Succeeded or Failed"
Aug 27 12:29:43.598: INFO: Pod "downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228": Phase="Pending", Reason="", readiness=false. Elapsed: 7.395526ms
Aug 27 12:29:45.606: INFO: Pod "downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015752051s
Aug 27 12:29:47.617: INFO: Pod "downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026690172s
STEP: Saw pod success
Aug 27 12:29:47.617: INFO: Pod "downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228" satisfied condition "Succeeded or Failed"
Aug 27 12:29:47.623: INFO: Trying to get logs from node ip-172-31-31-152 pod downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228 container dapi-container: <nil>
STEP: delete the pod
Aug 27 12:29:47.659: INFO: Waiting for pod downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228 to disappear
Aug 27 12:29:47.663: INFO: Pod downward-api-02a51f88-2079-4a6f-af72-ec8d1dffe228 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 27 12:29:47.664: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2088" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":111,"skipped":1984,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:29:47.678: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-806
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Aug 27 12:29:47.850: INFO: Waiting up to 5m0s for pod "var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7" in namespace "var-expansion-806" to be "Succeeded or Failed"
Aug 27 12:29:47.857: INFO: Pod "var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7": Phase="Pending", Reason="", readiness=false. Elapsed: 7.284693ms
Aug 27 12:29:49.868: INFO: Pod "var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017325051s
Aug 27 12:29:51.878: INFO: Pod "var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02777768s
STEP: Saw pod success
Aug 27 12:29:51.878: INFO: Pod "var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7" satisfied condition "Succeeded or Failed"
Aug 27 12:29:51.892: INFO: Trying to get logs from node ip-172-31-31-152 pod var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7 container dapi-container: <nil>
STEP: delete the pod
Aug 27 12:29:51.919: INFO: Waiting for pod var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7 to disappear
Aug 27 12:29:51.924: INFO: Pod var-expansion-6e93d008-4f60-4d35-a83a-13ae676b22b7 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 12:29:51.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-806" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":112,"skipped":1998,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:29:51.948: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-9708
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:29:52.105: INFO: Creating ReplicaSet my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c
Aug 27 12:29:52.121: INFO: Pod name my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c: Found 0 pods out of 1
Aug 27 12:29:57.137: INFO: Pod name my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c: Found 1 pods out of 1
Aug 27 12:29:57.137: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c" is running
Aug 27 12:29:57.143: INFO: Pod "my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c-vk9ld" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 12:29:52 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 12:29:53 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 12:29:53 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-08-27 12:29:52 +0000 UTC Reason: Message:}])
Aug 27 12:29:57.143: INFO: Trying to dial the pod
Aug 27 12:30:02.170: INFO: Controller my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c: Got expected result from replica 1 [my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c-vk9ld]: "my-hostname-basic-4f200394-5d69-46ca-9fd1-975ee0e1801c-vk9ld", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 27 12:30:02.170: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-9708" for this suite.

• [SLOW TEST:10.243 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":113,"skipped":2028,"failed":0}
SS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:02.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-9046
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:30:02.368: INFO: Creating pod...
Aug 27 12:30:04.409: INFO: Creating service...
Aug 27 12:30:04.429: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/pods/agnhost/proxy/some/path/with/DELETE
Aug 27 12:30:04.437: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 27 12:30:04.437: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/pods/agnhost/proxy/some/path/with/GET
Aug 27 12:30:04.451: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 27 12:30:04.451: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/pods/agnhost/proxy/some/path/with/HEAD
Aug 27 12:30:04.477: INFO: http.Client request:HEAD | StatusCode:200
Aug 27 12:30:04.477: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/pods/agnhost/proxy/some/path/with/OPTIONS
Aug 27 12:30:04.484: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 27 12:30:04.484: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/pods/agnhost/proxy/some/path/with/PATCH
Aug 27 12:30:04.508: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 27 12:30:04.508: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/pods/agnhost/proxy/some/path/with/POST
Aug 27 12:30:04.527: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 27 12:30:04.527: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/pods/agnhost/proxy/some/path/with/PUT
Aug 27 12:30:04.538: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 27 12:30:04.539: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/services/test-service/proxy/some/path/with/DELETE
Aug 27 12:30:04.563: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 27 12:30:04.563: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/services/test-service/proxy/some/path/with/GET
Aug 27 12:30:04.587: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Aug 27 12:30:04.587: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/services/test-service/proxy/some/path/with/HEAD
Aug 27 12:30:04.600: INFO: http.Client request:HEAD | StatusCode:200
Aug 27 12:30:04.600: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/services/test-service/proxy/some/path/with/OPTIONS
Aug 27 12:30:04.618: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 27 12:30:04.618: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/services/test-service/proxy/some/path/with/PATCH
Aug 27 12:30:04.632: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 27 12:30:04.632: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/services/test-service/proxy/some/path/with/POST
Aug 27 12:30:04.651: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 27 12:30:04.651: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9046/services/test-service/proxy/some/path/with/PUT
Aug 27 12:30:04.666: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 27 12:30:04.666: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-9046" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":114,"skipped":2030,"failed":0}

------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:04.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-674
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Aug 27 12:30:04.881: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Aug 27 12:30:04.890: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 27 12:30:04.890: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Aug 27 12:30:04.906: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Aug 27 12:30:04.906: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Aug 27 12:30:04.932: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Aug 27 12:30:04.932: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Aug 27 12:30:12.028: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Aug 27 12:30:12.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-674" for this suite.

• [SLOW TEST:7.368 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":115,"skipped":2030,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:12.075: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-5066
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Aug 27 12:30:22.305: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0827 12:30:22.305242      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 27 12:30:22.305: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-5066" for this suite.

• [SLOW TEST:10.256 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":116,"skipped":2054,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:22.331: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9838
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:30:22.518: INFO: Waiting up to 5m0s for pod "downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b" in namespace "downward-api-9838" to be "Succeeded or Failed"
Aug 27 12:30:22.524: INFO: Pod "downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b": Phase="Pending", Reason="", readiness=false. Elapsed: 6.247657ms
Aug 27 12:30:24.537: INFO: Pod "downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018709883s
Aug 27 12:30:26.555: INFO: Pod "downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036385281s
STEP: Saw pod success
Aug 27 12:30:26.555: INFO: Pod "downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b" satisfied condition "Succeeded or Failed"
Aug 27 12:30:26.568: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b container client-container: <nil>
STEP: delete the pod
Aug 27 12:30:26.594: INFO: Waiting for pod downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b to disappear
Aug 27 12:30:26.599: INFO: Pod downwardapi-volume-18a2dee6-a86d-49a1-bfe0-2111fe29292b no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:30:26.599: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9838" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":117,"skipped":2061,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:26.621: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6821
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-9729
STEP: Creating secret with name secret-test-7fa813d0-a43e-45d4-9e36-1e581f66f167
STEP: Creating a pod to test consume secrets
Aug 27 12:30:26.952: INFO: Waiting up to 5m0s for pod "pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a" in namespace "secrets-6821" to be "Succeeded or Failed"
Aug 27 12:30:26.970: INFO: Pod "pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a": Phase="Pending", Reason="", readiness=false. Elapsed: 17.898619ms
Aug 27 12:30:28.983: INFO: Pod "pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030439748s
Aug 27 12:30:30.996: INFO: Pod "pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.043563964s
STEP: Saw pod success
Aug 27 12:30:30.996: INFO: Pod "pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a" satisfied condition "Succeeded or Failed"
Aug 27 12:30:31.001: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 12:30:31.040: INFO: Waiting for pod pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a to disappear
Aug 27 12:30:31.047: INFO: Pod pod-secrets-99780fab-81d0-4f57-8299-8ac95138e11a no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 12:30:31.047: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6821" for this suite.
STEP: Destroying namespace "secret-namespace-9729" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":118,"skipped":2108,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:31.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4440
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Aug 27 12:30:31.281: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4440" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":119,"skipped":2145,"failed":0}
SSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:31.305: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4187
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Aug 27 12:30:31.489: INFO: Waiting up to 5m0s for pod "var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3" in namespace "var-expansion-4187" to be "Succeeded or Failed"
Aug 27 12:30:31.497: INFO: Pod "var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3": Phase="Pending", Reason="", readiness=false. Elapsed: 7.788755ms
Aug 27 12:30:33.505: INFO: Pod "var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015827032s
Aug 27 12:30:35.513: INFO: Pod "var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023596904s
STEP: Saw pod success
Aug 27 12:30:35.513: INFO: Pod "var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3" satisfied condition "Succeeded or Failed"
Aug 27 12:30:35.518: INFO: Trying to get logs from node ip-172-31-31-152 pod var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3 container dapi-container: <nil>
STEP: delete the pod
Aug 27 12:30:35.549: INFO: Waiting for pod var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3 to disappear
Aug 27 12:30:35.558: INFO: Pod var-expansion-d558c60a-c469-4a8d-b3e4-4144903afad3 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 12:30:35.558: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4187" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":120,"skipped":2148,"failed":0}
SSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:35.577: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-1728
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Aug 27 12:30:35.753: INFO: Waiting up to 5m0s for pod "client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f" in namespace "containers-1728" to be "Succeeded or Failed"
Aug 27 12:30:35.762: INFO: Pod "client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f": Phase="Pending", Reason="", readiness=false. Elapsed: 8.599816ms
Aug 27 12:30:37.774: INFO: Pod "client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020813769s
Aug 27 12:30:39.789: INFO: Pod "client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036041911s
STEP: Saw pod success
Aug 27 12:30:39.790: INFO: Pod "client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f" satisfied condition "Succeeded or Failed"
Aug 27 12:30:39.795: INFO: Trying to get logs from node ip-172-31-31-152 pod client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:30:39.833: INFO: Waiting for pod client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f to disappear
Aug 27 12:30:39.839: INFO: Pod client-containers-721da08f-fc2f-498f-b5d4-c4980f72777f no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 27 12:30:39.840: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-1728" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":121,"skipped":2158,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:39.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9880
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:30:40.036: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9880" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":122,"skipped":2190,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:40.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9293
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:30:40.756: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:30:43.800: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Aug 27 12:30:43.837: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:30:43.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9293" for this suite.
STEP: Destroying namespace "webhook-9293-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":123,"skipped":2237,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:43.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:30:44.244: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9161" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":124,"skipped":2240,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:44.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-1450
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Aug 27 12:30:44.454: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 27 12:30:49.485: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Aug 27 12:30:49.490: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Aug 27 12:30:49.506: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Aug 27 12:30:49.509: INFO: Observed &ReplicaSet event: ADDED
Aug 27 12:30:49.509: INFO: Observed &ReplicaSet event: MODIFIED
Aug 27 12:30:49.509: INFO: Observed &ReplicaSet event: MODIFIED
Aug 27 12:30:49.509: INFO: Observed &ReplicaSet event: MODIFIED
Aug 27 12:30:49.529: INFO: Found replicaset test-rs in namespace replicaset-1450 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 27 12:30:49.530: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Aug 27 12:30:49.530: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 27 12:30:49.541: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Aug 27 12:30:49.545: INFO: Observed &ReplicaSet event: ADDED
Aug 27 12:30:49.545: INFO: Observed &ReplicaSet event: MODIFIED
Aug 27 12:30:49.545: INFO: Observed &ReplicaSet event: MODIFIED
Aug 27 12:30:49.545: INFO: Observed &ReplicaSet event: MODIFIED
Aug 27 12:30:49.545: INFO: Observed replicaset test-rs in namespace replicaset-1450 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 27 12:30:49.546: INFO: Observed &ReplicaSet event: MODIFIED
Aug 27 12:30:49.546: INFO: Found replicaset test-rs in namespace replicaset-1450 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Aug 27 12:30:49.546: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 27 12:30:49.546: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-1450" for this suite.

• [SLOW TEST:5.300 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":125,"skipped":2269,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:49.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7769
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 12:30:56.740: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7769" for this suite.

• [SLOW TEST:7.194 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":126,"skipped":2378,"failed":0}
SSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:56.760: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-9262
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-167a6719-6ba3-4212-b44c-660eb97b7489
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:30:58.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-9262" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":127,"skipped":2383,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:59.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-534
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-6d84676c-dd9d-4d3c-ac5d-cc018dee0ae3
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 27 12:30:59.162: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-534" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":128,"skipped":2397,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:59.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-298
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-b65ceaa5-4302-40cf-a8df-95a723eb650e
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:30:59.334: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-298" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":129,"skipped":2455,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:30:59.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7275
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Aug 27 12:30:59.513: INFO: Creating simple deployment test-deployment-lbfdt
Aug 27 12:30:59.538: INFO: deployment "test-deployment-lbfdt" doesn't have the required revision set
STEP: Getting /status
Aug 27 12:31:01.573: INFO: Deployment test-deployment-lbfdt has Conditions: [{Available True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:31:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbfdt-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Aug 27 12:31:01.599: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 31, 1, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 31, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 31, 1, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 30, 59, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-lbfdt-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Aug 27 12:31:01.601: INFO: Observed &Deployment event: ADDED
Aug 27 12:31:01.601: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbfdt-688c4d6789"}
Aug 27 12:31:01.601: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.601: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbfdt-688c4d6789"}
Aug 27 12:31:01.601: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 27 12:31:01.602: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.602: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 27 12:31:01.602: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lbfdt-688c4d6789" is progressing.}
Aug 27 12:31:01.602: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.602: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:31:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 27 12:31:01.602: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbfdt-688c4d6789" has successfully progressed.}
Aug 27 12:31:01.602: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.602: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:31:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 27 12:31:01.602: INFO: Observed Deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbfdt-688c4d6789" has successfully progressed.}
Aug 27 12:31:01.602: INFO: Found Deployment test-deployment-lbfdt in namespace deployment-7275 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 27 12:31:01.603: INFO: Deployment test-deployment-lbfdt has an updated status
STEP: patching the Statefulset Status
Aug 27 12:31:01.603: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Aug 27 12:31:01.613: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Aug 27 12:31:01.617: INFO: Observed &Deployment event: ADDED
Aug 27 12:31:01.617: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbfdt-688c4d6789"}
Aug 27 12:31:01.618: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.618: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-lbfdt-688c4d6789"}
Aug 27 12:31:01.618: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 27 12:31:01.618: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.618: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Aug 27 12:31:01.618: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:30:59 +0000 UTC 2022-08-27 12:30:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-lbfdt-688c4d6789" is progressing.}
Aug 27 12:31:01.618: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.618: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:31:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 27 12:31:01.618: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbfdt-688c4d6789" has successfully progressed.}
Aug 27 12:31:01.619: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.619: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:31:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Aug 27 12:31:01.619: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-08-27 12:31:01 +0000 UTC 2022-08-27 12:30:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-lbfdt-688c4d6789" has successfully progressed.}
Aug 27 12:31:01.619: INFO: Observed deployment test-deployment-lbfdt in namespace deployment-7275 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Aug 27 12:31:01.619: INFO: Observed &Deployment event: MODIFIED
Aug 27 12:31:01.619: INFO: Found deployment test-deployment-lbfdt in namespace deployment-7275 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Aug 27 12:31:01.619: INFO: Deployment test-deployment-lbfdt has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 12:31:01.627: INFO: Deployment "test-deployment-lbfdt":
&Deployment{ObjectMeta:{test-deployment-lbfdt  deployment-7275  ccceb0ec-b1bd-4aaf-a681-5e346a1eabdd 17232 1 2022-08-27 12:30:59 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-08-27 12:30:59 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2022-08-27 12:31:01 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2022-08-27 12:31:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004097488 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-lbfdt-688c4d6789",LastUpdateTime:2022-08-27 12:31:01 +0000 UTC,LastTransitionTime:2022-08-27 12:31:01 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 27 12:31:01.636: INFO: New ReplicaSet "test-deployment-lbfdt-688c4d6789" of Deployment "test-deployment-lbfdt":
&ReplicaSet{ObjectMeta:{test-deployment-lbfdt-688c4d6789  deployment-7275  74b33608-16d7-450a-8f25-6a846e7bd01c 17228 1 2022-08-27 12:30:59 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-lbfdt ccceb0ec-b1bd-4aaf-a681-5e346a1eabdd 0xc001f2e860 0xc001f2e861}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:30:59 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ccceb0ec-b1bd-4aaf-a681-5e346a1eabdd\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:31:01 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc001f2e908 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:31:01.644: INFO: Pod "test-deployment-lbfdt-688c4d6789-kw5wp" is available:
&Pod{ObjectMeta:{test-deployment-lbfdt-688c4d6789-kw5wp test-deployment-lbfdt-688c4d6789- deployment-7275  1cf76964-d64e-4536-9f1b-351cba8cd166 17227 0 2022-08-27 12:30:59 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-lbfdt-688c4d6789 74b33608-16d7-450a-8f25-6a846e7bd01c 0xc001f2eca7 0xc001f2eca8}] []  [{kube-controller-manager Update v1 2022-08-27 12:30:59 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"74b33608-16d7-450a-8f25-6a846e7bd01c\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:31:01 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.92\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-662vc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-662vc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:30:59 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:31:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:31:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:30:59 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:192.168.163.92,StartTime:2022-08-27 12:30:59 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:31:00 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://044facceeef76760889945cd60ee960134464c5a2a27a1cf51003314b162bdf1,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.163.92,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 12:31:01.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7275" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":130,"skipped":2462,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:31:01.668: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8920
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-0c968ded-9b11-4c57-9d92-3d090d1d38e1
STEP: Creating the pod
Aug 27 12:31:01.891: INFO: The status of Pod pod-configmaps-e327c18d-a210-4f7d-aa1b-ede625cd2bd4 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:31:03.900: INFO: The status of Pod pod-configmaps-e327c18d-a210-4f7d-aa1b-ede625cd2bd4 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-0c968ded-9b11-4c57-9d92-3d090d1d38e1
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:31:05.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8920" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":131,"skipped":2481,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:31:05.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9495
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-50ef0fb9-d89f-47b9-862b-a7814340cd9d
STEP: Creating the pod
Aug 27 12:31:06.185: INFO: The status of Pod pod-projected-configmaps-41ee499f-3fc3-4c43-9422-c115eb900d77 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:31:08.198: INFO: The status of Pod pod-projected-configmaps-41ee499f-3fc3-4c43-9422-c115eb900d77 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-50ef0fb9-d89f-47b9-862b-a7814340cd9d
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 12:31:10.246: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9495" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":132,"skipped":2505,"failed":0}
SSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:31:10.292: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4064
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-799a47bf-34dd-4475-9b72-60e855f59770
STEP: Creating a pod to test consume secrets
Aug 27 12:31:10.487: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0" in namespace "projected-4064" to be "Succeeded or Failed"
Aug 27 12:31:10.494: INFO: Pod "pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0": Phase="Pending", Reason="", readiness=false. Elapsed: 6.336579ms
Aug 27 12:31:12.503: INFO: Pod "pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0": Phase="Running", Reason="", readiness=false. Elapsed: 2.014976455s
Aug 27 12:31:14.516: INFO: Pod "pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02831702s
STEP: Saw pod success
Aug 27 12:31:14.516: INFO: Pod "pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0" satisfied condition "Succeeded or Failed"
Aug 27 12:31:14.526: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 27 12:31:14.560: INFO: Waiting for pod pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0 to disappear
Aug 27 12:31:14.564: INFO: Pod pod-projected-secrets-f034212d-1058-4d65-9ff1-fae1ede6eed0 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 27 12:31:14.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4064" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":133,"skipped":2509,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:31:14.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-9890
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Aug 27 12:31:14.787: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Aug 27 12:31:14.847: INFO: waiting for watch events with expected annotations in namespace
Aug 27 12:31:14.847: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Aug 27 12:31:14.920: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-9890" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":134,"skipped":2528,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:31:14.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Aug 27 12:31:17.169: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-233 PodName:var-expansion-a5c99aa7-43a9-4bd2-8633-c8562108c1ee ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:31:17.169: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:31:17.170: INFO: ExecWithOptions: Clientset creation
Aug 27 12:31:17.170: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-233/pods/var-expansion-a5c99aa7-43a9-4bd2-8633-c8562108c1ee/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Aug 27 12:31:17.268: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-233 PodName:var-expansion-a5c99aa7-43a9-4bd2-8633-c8562108c1ee ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:31:17.268: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:31:17.269: INFO: ExecWithOptions: Clientset creation
Aug 27 12:31:17.269: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-233/pods/var-expansion-a5c99aa7-43a9-4bd2-8633-c8562108c1ee/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Aug 27 12:31:17.887: INFO: Successfully updated pod "var-expansion-a5c99aa7-43a9-4bd2-8633-c8562108c1ee"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Aug 27 12:31:17.894: INFO: Deleting pod "var-expansion-a5c99aa7-43a9-4bd2-8633-c8562108c1ee" in namespace "var-expansion-233"
Aug 27 12:31:17.905: INFO: Wait up to 5m0s for pod "var-expansion-a5c99aa7-43a9-4bd2-8633-c8562108c1ee" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 12:31:51.929: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-233" for this suite.

• [SLOW TEST:37.003 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":135,"skipped":2546,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:31:51.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-984
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 12:32:52.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-984" for this suite.

• [SLOW TEST:60.203 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":136,"skipped":2637,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:32:52.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-8668
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:32:52.389: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"ef5fc8cd-18ec-4bb4-8679-2a23dd969e76", Controller:(*bool)(0xc0044b6d16), BlockOwnerDeletion:(*bool)(0xc0044b6d17)}}
Aug 27 12:32:52.414: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"083a94f7-4c7f-41c1-b962-60873727ac48", Controller:(*bool)(0xc0044b6f8e), BlockOwnerDeletion:(*bool)(0xc0044b6f8f)}}
Aug 27 12:32:52.428: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"72559f67-b2bb-4739-99d1-d7234d106dd5", Controller:(*bool)(0xc003ffeb96), BlockOwnerDeletion:(*bool)(0xc003ffeb97)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 27 12:32:57.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-8668" for this suite.

• [SLOW TEST:5.344 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":137,"skipped":2658,"failed":0}
SS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:32:57.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-9969
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 27 12:33:01.742: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-9969" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":138,"skipped":2660,"failed":0}
SSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:33:01.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-668
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Aug 27 12:33:01.962: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:33:03.972: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 27 12:33:05.000: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-668" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":139,"skipped":2665,"failed":0}
SS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:33:05.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-8655
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 27 12:33:05.219: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 27 12:33:05.225: INFO: starting watch
STEP: patching
STEP: updating
Aug 27 12:33:05.258: INFO: waiting for watch events with expected annotations
Aug 27 12:33:05.258: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 27 12:33:05.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-8655" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":140,"skipped":2667,"failed":0}
SSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:33:05.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8157
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8157 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8157;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8157 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8157;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8157.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8157.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8157.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8157.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8157.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8157.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8157.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8157.svc;check="$$(dig +notcp +noall +answer +search 22.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.22_udp@PTR;check="$$(dig +tcp +noall +answer +search 22.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.22_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8157 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8157;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8157 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8157;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8157.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8157.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8157.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8157.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8157.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8157.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8157.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8157.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8157.svc;check="$$(dig +notcp +noall +answer +search 22.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.22_udp@PTR;check="$$(dig +tcp +noall +answer +search 22.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.22_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 12:33:09.600: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.607: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.613: INFO: Unable to read wheezy_udp@dns-test-service.dns-8157 from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.621: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8157 from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.629: INFO: Unable to read wheezy_udp@dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.635: INFO: Unable to read wheezy_tcp@dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.641: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.651: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.716: INFO: Unable to read jessie_udp@dns-test-service from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.723: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.730: INFO: Unable to read jessie_udp@dns-test-service.dns-8157 from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.741: INFO: Unable to read jessie_tcp@dns-test-service.dns-8157 from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.748: INFO: Unable to read jessie_udp@dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.758: INFO: Unable to read jessie_tcp@dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.764: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.772: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8157.svc from pod dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3: the server could not find the requested resource (get pods dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3)
Aug 27 12:33:09.813: INFO: Lookups using dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8157 wheezy_tcp@dns-test-service.dns-8157 wheezy_udp@dns-test-service.dns-8157.svc wheezy_tcp@dns-test-service.dns-8157.svc wheezy_udp@_http._tcp.dns-test-service.dns-8157.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8157.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8157 jessie_tcp@dns-test-service.dns-8157 jessie_udp@dns-test-service.dns-8157.svc jessie_tcp@dns-test-service.dns-8157.svc jessie_udp@_http._tcp.dns-test-service.dns-8157.svc jessie_tcp@_http._tcp.dns-test-service.dns-8157.svc]

Aug 27 12:33:15.011: INFO: DNS probes using dns-8157/dns-test-876b2029-bf1f-4b24-af3e-5c472b07faa3 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 12:33:15.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8157" for this suite.

• [SLOW TEST:9.786 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":141,"skipped":2673,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:33:15.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-3102
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Aug 27 12:33:15.304: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 27 12:34:15.335: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:34:15.341: INFO: Starting informer...
STEP: Starting pod...
Aug 27 12:34:15.570: INFO: Pod is running on ip-172-31-31-152. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Aug 27 12:34:15.601: INFO: Pod wasn't evicted. Proceeding
Aug 27 12:34:15.601: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Aug 27 12:35:30.637: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:35:30.637: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-3102" for this suite.

• [SLOW TEST:135.527 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":142,"skipped":2690,"failed":0}
SSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:35:30.668: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2795
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 27 12:35:30.846: INFO: Waiting up to 5m0s for pod "downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd" in namespace "downward-api-2795" to be "Succeeded or Failed"
Aug 27 12:35:30.857: INFO: Pod "downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd": Phase="Pending", Reason="", readiness=false. Elapsed: 10.13381ms
Aug 27 12:35:32.864: INFO: Pod "downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017944246s
Aug 27 12:35:34.881: INFO: Pod "downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034210156s
STEP: Saw pod success
Aug 27 12:35:34.881: INFO: Pod "downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd" satisfied condition "Succeeded or Failed"
Aug 27 12:35:34.887: INFO: Trying to get logs from node ip-172-31-31-152 pod downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd container dapi-container: <nil>
STEP: delete the pod
Aug 27 12:35:34.947: INFO: Waiting for pod downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd to disappear
Aug 27 12:35:34.955: INFO: Pod downward-api-5e8abee7-eb10-467a-8521-bc799465b5fd no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 27 12:35:34.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2795" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":143,"skipped":2695,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:35:34.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8038
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 12:36:03.271: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8038" for this suite.

• [SLOW TEST:28.314 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":144,"skipped":2715,"failed":0}
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:36:03.290: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2773
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-e3f174d1-df79-4f5a-9560-6953a1441b26
STEP: Creating a pod to test consume secrets
Aug 27 12:36:03.507: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906" in namespace "projected-2773" to be "Succeeded or Failed"
Aug 27 12:36:03.516: INFO: Pod "pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906": Phase="Pending", Reason="", readiness=false. Elapsed: 8.192661ms
Aug 27 12:36:05.528: INFO: Pod "pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02073814s
Aug 27 12:36:07.538: INFO: Pod "pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030956698s
STEP: Saw pod success
Aug 27 12:36:07.539: INFO: Pod "pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906" satisfied condition "Succeeded or Failed"
Aug 27 12:36:07.544: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906 container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 27 12:36:07.580: INFO: Waiting for pod pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906 to disappear
Aug 27 12:36:07.591: INFO: Pod pod-projected-secrets-57ca7beb-902f-4833-aa46-547f9e068906 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 27 12:36:07.591: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2773" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":145,"skipped":2715,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:36:07.619: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-5238
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-zzjs
STEP: Creating a pod to test atomic-volume-subpath
Aug 27 12:36:07.824: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-zzjs" in namespace "subpath-5238" to be "Succeeded or Failed"
Aug 27 12:36:07.831: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Pending", Reason="", readiness=false. Elapsed: 7.215417ms
Aug 27 12:36:09.843: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 2.019304956s
Aug 27 12:36:11.856: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 4.031419481s
Aug 27 12:36:13.867: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 6.043135363s
Aug 27 12:36:15.891: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 8.067098481s
Aug 27 12:36:17.902: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 10.077529002s
Aug 27 12:36:19.915: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 12.091298359s
Aug 27 12:36:21.931: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 14.107172284s
Aug 27 12:36:23.941: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 16.117362379s
Aug 27 12:36:25.954: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 18.129491789s
Aug 27 12:36:27.963: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=true. Elapsed: 20.139096153s
Aug 27 12:36:29.981: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Running", Reason="", readiness=false. Elapsed: 22.156443399s
Aug 27 12:36:31.996: INFO: Pod "pod-subpath-test-configmap-zzjs": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.171772989s
STEP: Saw pod success
Aug 27 12:36:31.996: INFO: Pod "pod-subpath-test-configmap-zzjs" satisfied condition "Succeeded or Failed"
Aug 27 12:36:32.004: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-subpath-test-configmap-zzjs container test-container-subpath-configmap-zzjs: <nil>
STEP: delete the pod
Aug 27 12:36:32.053: INFO: Waiting for pod pod-subpath-test-configmap-zzjs to disappear
Aug 27 12:36:32.061: INFO: Pod pod-subpath-test-configmap-zzjs no longer exists
STEP: Deleting pod pod-subpath-test-configmap-zzjs
Aug 27 12:36:32.061: INFO: Deleting pod "pod-subpath-test-configmap-zzjs" in namespace "subpath-5238"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 27 12:36:32.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-5238" for this suite.

• [SLOW TEST:24.468 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":146,"skipped":2741,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:36:32.087: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-661
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:36:32.245: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Aug 27 12:36:32.263: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 27 12:36:37.278: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 27 12:36:37.278: INFO: Creating deployment "test-rolling-update-deployment"
Aug 27 12:36:37.288: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Aug 27 12:36:37.302: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Aug 27 12:36:39.313: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Aug 27 12:36:39.320: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 12:36:39.346: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-661  7816a50a-79b5-4d60-82fd-7ccfc076f14c 18644 1 2022-08-27 12:36:37 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-08-27 12:36:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:36:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0027f8ed8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-27 12:36:37 +0000 UTC,LastTransitionTime:2022-08-27 12:36:37 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-08-27 12:36:39 +0000 UTC,LastTransitionTime:2022-08-27 12:36:37 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 27 12:36:39.353: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-661  c74065f8-8460-44ba-b39b-1212a4e48e88 18634 1 2022-08-27 12:36:37 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 7816a50a-79b5-4d60-82fd-7ccfc076f14c 0xc00350d6e7 0xc00350d6e8}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:36:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7816a50a-79b5-4d60-82fd-7ccfc076f14c\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:36:39 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00350d798 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:36:39.353: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Aug 27 12:36:39.353: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-661  2a643871-6c8e-4548-a23c-201357afc65b 18643 2 2022-08-27 12:36:32 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 7816a50a-79b5-4d60-82fd-7ccfc076f14c 0xc00350d5b7 0xc00350d5b8}] []  [{e2e.test Update apps/v1 2022-08-27 12:36:32 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:36:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7816a50a-79b5-4d60-82fd-7ccfc076f14c\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:36:39 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00350d678 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:36:39.359: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-b7x8p" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-b7x8p test-rolling-update-deployment-67c8f74c6c- deployment-661  ab4f7ed7-5705-4edf-b4a3-db0fae686a57 18633 0 2022-08-27 12:36:37 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c c74065f8-8460-44ba-b39b-1212a4e48e88 0xc00350dbe7 0xc00350dbe8}] []  [{kube-controller-manager Update v1 2022-08-27 12:36:37 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c74065f8-8460-44ba-b39b-1212a4e48e88\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:36:39 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.159\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lfx75,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lfx75,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:36:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:36:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:36:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:36:37 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:192.168.233.159,StartTime:2022-08-27 12:36:37 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:36:38 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://bacf6c5accb8276838ca492bc80dd0639fa8bbf6e4e5169f896adb0cd1fc94f2,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.233.159,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 12:36:39.359: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-661" for this suite.

• [SLOW TEST:7.291 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":147,"skipped":2764,"failed":0}
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:36:39.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-4693
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:36:39.567: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Aug 27 12:36:39.584: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:39.584: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:39.590: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:36:39.590: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:36:40.598: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:40.599: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:40.604: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:36:40.604: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:36:41.600: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:41.600: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:41.606: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 12:36:41.606: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Aug 27 12:36:41.678: INFO: Wrong image for pod: daemon-set-5ffwb. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:41.678: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:41.678: INFO: Wrong image for pod: daemon-set-v2dt4. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:41.684: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:41.684: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:42.691: INFO: Wrong image for pod: daemon-set-5ffwb. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:42.691: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:42.701: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:42.701: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:43.691: INFO: Wrong image for pod: daemon-set-5ffwb. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:43.691: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:43.698: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:43.698: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:44.694: INFO: Wrong image for pod: daemon-set-5ffwb. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:44.694: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:44.694: INFO: Pod daemon-set-rc6zr is not available
Aug 27 12:36:44.699: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:44.699: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:45.693: INFO: Wrong image for pod: daemon-set-5ffwb. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:45.693: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:45.693: INFO: Pod daemon-set-rc6zr is not available
Aug 27 12:36:45.701: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:45.701: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:46.726: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:46.742: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:46.742: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:47.694: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:47.694: INFO: Pod daemon-set-h97pw is not available
Aug 27 12:36:47.699: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:47.699: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:48.692: INFO: Wrong image for pod: daemon-set-gb26s. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Aug 27 12:36:48.692: INFO: Pod daemon-set-h97pw is not available
Aug 27 12:36:48.698: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:48.699: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:49.709: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:49.709: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:50.693: INFO: Pod daemon-set-jcl9x is not available
Aug 27 12:36:50.716: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:50.716: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Aug 27 12:36:50.741: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:50.741: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:50.747: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:36:50.747: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:36:51.758: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:51.758: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:36:51.764: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 12:36:51.764: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4693, will wait for the garbage collector to delete the pods
Aug 27 12:36:51.857: INFO: Deleting DaemonSet.extensions daemon-set took: 9.740979ms
Aug 27 12:36:51.957: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.227649ms
Aug 27 12:36:54.166: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:36:54.166: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 27 12:36:54.176: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18857"},"items":null}

Aug 27 12:36:54.187: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18857"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:36:54.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-4693" for this suite.

• [SLOW TEST:14.851 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":148,"skipped":2769,"failed":0}
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:36:54.232: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7710
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7710
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-7710
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7710
Aug 27 12:36:54.407: INFO: Found 0 stateful pods, waiting for 1
Aug 27 12:37:04.419: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Aug 27 12:37:04.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-7710 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 12:37:04.652: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 12:37:04.652: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 12:37:04.652: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 12:37:04.659: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 27 12:37:14.679: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 12:37:14.679: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 12:37:14.712: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:37:14.712: INFO: ss-0  ip-172-31-31-152  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:36:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:36:54 +0000 UTC  }]
Aug 27 12:37:14.712: INFO: 
Aug 27 12:37:14.712: INFO: StatefulSet ss has not reached scale 3, at 1
Aug 27 12:37:15.723: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.986399543s
Aug 27 12:37:16.740: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.975188495s
Aug 27 12:37:17.765: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.959087038s
Aug 27 12:37:18.774: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.933505451s
Aug 27 12:37:19.784: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.923970756s
Aug 27 12:37:20.805: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.914060034s
Aug 27 12:37:21.814: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.893868829s
Aug 27 12:37:22.828: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.885109468s
Aug 27 12:37:23.843: INFO: Verifying statefulset ss doesn't scale past 3 for another 870.051933ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7710
Aug 27 12:37:24.856: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-7710 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 12:37:25.030: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 27 12:37:25.030: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 12:37:25.030: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 12:37:25.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-7710 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 12:37:25.229: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 27 12:37:25.229: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 12:37:25.229: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 12:37:25.229: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-7710 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 12:37:25.419: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Aug 27 12:37:25.419: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 12:37:25.419: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 12:37:25.427: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Aug 27 12:37:35.443: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 12:37:35.443: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 12:37:35.443: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Aug 27 12:37:35.453: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-7710 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 12:37:35.615: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 12:37:35.615: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 12:37:35.615: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 12:37:35.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-7710 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 12:37:35.790: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 12:37:35.790: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 12:37:35.790: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 12:37:35.791: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-7710 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 12:37:35.971: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 12:37:35.971: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 12:37:35.971: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 12:37:35.971: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 12:37:35.978: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Aug 27 12:37:46.003: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 12:37:46.003: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 12:37:46.003: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 12:37:46.027: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:37:46.027: INFO: ss-0  ip-172-31-31-152  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:36:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:36:54 +0000 UTC  }]
Aug 27 12:37:46.027: INFO: ss-1  ip-172-31-5-213   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:14 +0000 UTC  }]
Aug 27 12:37:46.027: INFO: ss-2  ip-172-31-65-143  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:14 +0000 UTC  }]
Aug 27 12:37:46.027: INFO: 
Aug 27 12:37:46.027: INFO: StatefulSet ss has not reached scale 0, at 3
Aug 27 12:37:47.038: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:37:47.038: INFO: ss-0  ip-172-31-31-152  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:36:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:35 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:36:54 +0000 UTC  }]
Aug 27 12:37:47.038: INFO: ss-2  ip-172-31-65-143  Running  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:14 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:37:14 +0000 UTC  }]
Aug 27 12:37:47.038: INFO: 
Aug 27 12:37:47.038: INFO: StatefulSet ss has not reached scale 0, at 2
Aug 27 12:37:48.045: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.983874586s
Aug 27 12:37:49.052: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.976486561s
Aug 27 12:37:50.063: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.970277207s
Aug 27 12:37:51.073: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.957990906s
Aug 27 12:37:52.082: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.949056246s
Aug 27 12:37:53.092: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.939642576s
Aug 27 12:37:54.098: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.929525619s
Aug 27 12:37:55.106: INFO: Verifying statefulset ss doesn't scale past 0 for another 923.805591ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7710
Aug 27 12:37:56.117: INFO: Scaling statefulset ss to 0
Aug 27 12:37:56.142: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 12:37:56.150: INFO: Deleting all statefulset in ns statefulset-7710
Aug 27 12:37:56.154: INFO: Scaling statefulset ss to 0
Aug 27 12:37:56.172: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 12:37:56.178: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 12:37:56.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7710" for this suite.

• [SLOW TEST:62.014 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":149,"skipped":2772,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:37:56.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-8804
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Aug 27 12:37:56.487: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-8804" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":150,"skipped":2787,"failed":0}
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:37:56.504: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2500
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 27 12:37:56.657: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-2500 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Aug 27 12:37:56.735: INFO: stderr: ""
Aug 27 12:37:56.735: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Aug 27 12:38:01.787: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-2500 get pod e2e-test-httpd-pod -o json'
Aug 27 12:38:01.865: INFO: stderr: ""
Aug 27 12:38:01.865: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-08-27T12:37:56Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2500\",\n        \"resourceVersion\": \"19226\",\n        \"uid\": \"1868a839-1e9e-4c2e-92e3-c83556eebf5f\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-9lj9l\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-31-152\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-9lj9l\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-27T12:37:56Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-27T12:37:58Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-27T12:37:58Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-08-27T12:37:56Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://32addfc07bdb5a09645b693aca18acbd2a949ebbee8bae46359c5b596c7a71bf\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-08-27T12:37:57Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.31.152\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.233.169\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.233.169\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-08-27T12:37:56Z\"\n    }\n}\n"
STEP: replace the image in the pod
Aug 27 12:38:01.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-2500 replace -f -'
Aug 27 12:38:02.760: INFO: stderr: ""
Aug 27 12:38:02.760: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Aug 27 12:38:02.772: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-2500 delete pods e2e-test-httpd-pod'
Aug 27 12:38:04.320: INFO: stderr: ""
Aug 27 12:38:04.320: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:38:04.320: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2500" for this suite.

• [SLOW TEST:7.856 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":151,"skipped":2793,"failed":0}
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:38:04.360: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-1542
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-pwh2
STEP: Creating a pod to test atomic-volume-subpath
Aug 27 12:38:04.614: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-pwh2" in namespace "subpath-1542" to be "Succeeded or Failed"
Aug 27 12:38:04.622: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Pending", Reason="", readiness=false. Elapsed: 8.012766ms
Aug 27 12:38:06.634: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 2.020029617s
Aug 27 12:38:08.647: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 4.03346412s
Aug 27 12:38:10.655: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 6.040699587s
Aug 27 12:38:12.690: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 8.075917955s
Aug 27 12:38:14.703: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 10.088905986s
Aug 27 12:38:16.717: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 12.102510628s
Aug 27 12:38:18.724: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 14.109588048s
Aug 27 12:38:20.733: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 16.119204086s
Aug 27 12:38:22.744: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 18.130158373s
Aug 27 12:38:24.765: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=true. Elapsed: 20.150807995s
Aug 27 12:38:26.777: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Running", Reason="", readiness=false. Elapsed: 22.163083278s
Aug 27 12:38:28.789: INFO: Pod "pod-subpath-test-secret-pwh2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.174724183s
STEP: Saw pod success
Aug 27 12:38:28.789: INFO: Pod "pod-subpath-test-secret-pwh2" satisfied condition "Succeeded or Failed"
Aug 27 12:38:28.794: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-subpath-test-secret-pwh2 container test-container-subpath-secret-pwh2: <nil>
STEP: delete the pod
Aug 27 12:38:28.850: INFO: Waiting for pod pod-subpath-test-secret-pwh2 to disappear
Aug 27 12:38:28.858: INFO: Pod pod-subpath-test-secret-pwh2 no longer exists
STEP: Deleting pod pod-subpath-test-secret-pwh2
Aug 27 12:38:28.858: INFO: Deleting pod "pod-subpath-test-secret-pwh2" in namespace "subpath-1542"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 27 12:38:28.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-1542" for this suite.

• [SLOW TEST:24.526 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":152,"skipped":2798,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:38:28.886: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5531
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-3c57c2ac-9024-42d1-beb2-0b7b15742861
STEP: Creating a pod to test consume configMaps
Aug 27 12:38:29.069: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610" in namespace "projected-5531" to be "Succeeded or Failed"
Aug 27 12:38:29.075: INFO: Pod "pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610": Phase="Pending", Reason="", readiness=false. Elapsed: 5.557466ms
Aug 27 12:38:31.088: INFO: Pod "pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018482378s
Aug 27 12:38:33.100: INFO: Pod "pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03032999s
STEP: Saw pod success
Aug 27 12:38:33.100: INFO: Pod "pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610" satisfied condition "Succeeded or Failed"
Aug 27 12:38:33.105: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:38:33.137: INFO: Waiting for pod pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610 to disappear
Aug 27 12:38:33.145: INFO: Pod pod-projected-configmaps-1186e4d4-174b-4971-ae65-db8acabf7610 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 12:38:33.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5531" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":153,"skipped":2818,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:38:33.167: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-5406
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Aug 27 12:38:33.377: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5406  784ee8f9-8030-4646-8480-331080aa1033 19421 0 2022-08-27 12:38:33 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-27 12:38:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:38:33.378: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5406  784ee8f9-8030-4646-8480-331080aa1033 19422 0 2022-08-27 12:38:33 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-08-27 12:38:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 27 12:38:33.378: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-5406" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":154,"skipped":2918,"failed":0}

------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:38:33.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3106
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 27 12:43:33.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3106" for this suite.

• [SLOW TEST:300.228 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":155,"skipped":2918,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:43:33.634: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8363
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Aug 27 12:43:33.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-8363 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Aug 27 12:43:33.920: INFO: stderr: ""
Aug 27 12:43:33.920: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Aug 27 12:43:33.925: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-8363 delete pods e2e-test-httpd-pod'
Aug 27 12:43:36.886: INFO: stderr: ""
Aug 27 12:43:36.886: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:43:36.886: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8363" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":156,"skipped":2920,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:43:36.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-6616
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Aug 27 12:43:37.110: INFO: Waiting up to 5m0s for pod "test-pod-fb63c511-7ab1-49e0-9465-c3576587226c" in namespace "svcaccounts-6616" to be "Succeeded or Failed"
Aug 27 12:43:37.118: INFO: Pod "test-pod-fb63c511-7ab1-49e0-9465-c3576587226c": Phase="Pending", Reason="", readiness=false. Elapsed: 7.186569ms
Aug 27 12:43:39.133: INFO: Pod "test-pod-fb63c511-7ab1-49e0-9465-c3576587226c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022592668s
Aug 27 12:43:41.140: INFO: Pod "test-pod-fb63c511-7ab1-49e0-9465-c3576587226c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029777102s
STEP: Saw pod success
Aug 27 12:43:41.140: INFO: Pod "test-pod-fb63c511-7ab1-49e0-9465-c3576587226c" satisfied condition "Succeeded or Failed"
Aug 27 12:43:41.145: INFO: Trying to get logs from node ip-172-31-31-152 pod test-pod-fb63c511-7ab1-49e0-9465-c3576587226c container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:43:41.200: INFO: Waiting for pod test-pod-fb63c511-7ab1-49e0-9465-c3576587226c to disappear
Aug 27 12:43:41.205: INFO: Pod test-pod-fb63c511-7ab1-49e0-9465-c3576587226c no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 27 12:43:41.205: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-6616" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":157,"skipped":2931,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:43:41.223: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-4092
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:43:41.397: INFO: Waiting up to 5m0s for pod "busybox-user-65534-44187a31-1b11-4dac-9e2e-711b4ee11bdc" in namespace "security-context-test-4092" to be "Succeeded or Failed"
Aug 27 12:43:41.402: INFO: Pod "busybox-user-65534-44187a31-1b11-4dac-9e2e-711b4ee11bdc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.542631ms
Aug 27 12:43:43.413: INFO: Pod "busybox-user-65534-44187a31-1b11-4dac-9e2e-711b4ee11bdc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015835994s
Aug 27 12:43:45.420: INFO: Pod "busybox-user-65534-44187a31-1b11-4dac-9e2e-711b4ee11bdc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022675939s
Aug 27 12:43:45.420: INFO: Pod "busybox-user-65534-44187a31-1b11-4dac-9e2e-711b4ee11bdc" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 27 12:43:45.420: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-4092" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":158,"skipped":2953,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:43:45.435: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6312
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:43:45.622: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e" in namespace "downward-api-6312" to be "Succeeded or Failed"
Aug 27 12:43:45.628: INFO: Pod "downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e": Phase="Pending", Reason="", readiness=false. Elapsed: 6.263433ms
Aug 27 12:43:47.642: INFO: Pod "downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019597361s
Aug 27 12:43:49.650: INFO: Pod "downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028109236s
STEP: Saw pod success
Aug 27 12:43:49.650: INFO: Pod "downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e" satisfied condition "Succeeded or Failed"
Aug 27 12:43:49.655: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e container client-container: <nil>
STEP: delete the pod
Aug 27 12:43:49.694: INFO: Waiting for pod downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e to disappear
Aug 27 12:43:49.702: INFO: Pod downwardapi-volume-4cdd7b88-a43a-4612-aa48-55081597e71e no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:43:49.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6312" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":159,"skipped":3019,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:43:49.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8285
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 27 12:43:49.925: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:49.925: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:49.936: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:43:49.936: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:43:50.949: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:50.949: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:50.956: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:43:50.956: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:43:51.947: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:51.947: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:51.954: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Aug 27 12:43:51.954: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 12:43:52.951: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:52.951: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 12:43:52.956: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 12:43:52.956: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
Aug 27 12:43:52.979: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Aug 27 12:43:53.008: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Aug 27 12:43:53.011: INFO: Observed &DaemonSet event: ADDED
Aug 27 12:43:53.011: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.011: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.011: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.012: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.012: INFO: Found daemon set daemon-set in namespace daemonsets-8285 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 27 12:43:53.012: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Aug 27 12:43:53.037: INFO: Observed &DaemonSet event: ADDED
Aug 27 12:43:53.037: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.037: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.038: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.038: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.038: INFO: Observed daemon set daemon-set in namespace daemonsets-8285 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 27 12:43:53.038: INFO: Observed &DaemonSet event: MODIFIED
Aug 27 12:43:53.038: INFO: Found daemon set daemon-set in namespace daemonsets-8285 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Aug 27 12:43:53.038: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8285, will wait for the garbage collector to delete the pods
Aug 27 12:43:53.121: INFO: Deleting DaemonSet.extensions daemon-set took: 16.34313ms
Aug 27 12:43:53.222: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.049526ms
Aug 27 12:43:55.941: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 12:43:55.941: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 27 12:43:55.947: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20284"},"items":null}

Aug 27 12:43:55.953: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20284"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:43:55.981: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8285" for this suite.

• [SLOW TEST:6.285 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":160,"skipped":3080,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:43:56.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-6662
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Aug 27 12:44:16.383: INFO: EndpointSlice for Service endpointslice-6662/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 27 12:44:26.408: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-6662" for this suite.

• [SLOW TEST:30.415 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":161,"skipped":3097,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:44:26.425: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-7817
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:44:26.585: INFO: Creating pod...
Aug 27 12:44:28.644: INFO: Creating service...
Aug 27 12:44:28.665: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/pods/agnhost/proxy?method=DELETE
Aug 27 12:44:28.679: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 27 12:44:28.679: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/pods/agnhost/proxy?method=OPTIONS
Aug 27 12:44:28.691: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 27 12:44:28.691: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/pods/agnhost/proxy?method=PATCH
Aug 27 12:44:28.704: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 27 12:44:28.704: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/pods/agnhost/proxy?method=POST
Aug 27 12:44:28.713: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 27 12:44:28.714: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/pods/agnhost/proxy?method=PUT
Aug 27 12:44:28.722: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 27 12:44:28.722: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/services/e2e-proxy-test-service/proxy?method=DELETE
Aug 27 12:44:28.737: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Aug 27 12:44:28.738: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/services/e2e-proxy-test-service/proxy?method=OPTIONS
Aug 27 12:44:28.752: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Aug 27 12:44:28.752: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/services/e2e-proxy-test-service/proxy?method=PATCH
Aug 27 12:44:28.762: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Aug 27 12:44:28.762: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/services/e2e-proxy-test-service/proxy?method=POST
Aug 27 12:44:28.775: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Aug 27 12:44:28.775: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/services/e2e-proxy-test-service/proxy?method=PUT
Aug 27 12:44:28.786: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Aug 27 12:44:28.787: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/pods/agnhost/proxy?method=GET
Aug 27 12:44:28.803: INFO: http.Client request:GET StatusCode:301
Aug 27 12:44:28.803: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/services/e2e-proxy-test-service/proxy?method=GET
Aug 27 12:44:28.816: INFO: http.Client request:GET StatusCode:301
Aug 27 12:44:28.816: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/pods/agnhost/proxy?method=HEAD
Aug 27 12:44:28.827: INFO: http.Client request:HEAD StatusCode:301
Aug 27 12:44:28.827: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7817/services/e2e-proxy-test-service/proxy?method=HEAD
Aug 27 12:44:28.839: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 27 12:44:28.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-7817" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":162,"skipped":3195,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:44:28.863: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 27 12:44:29.070: INFO: Waiting up to 5m0s for pod "pod-1961f382-5c17-4d47-8397-67ee034fe400" in namespace "emptydir-3670" to be "Succeeded or Failed"
Aug 27 12:44:29.080: INFO: Pod "pod-1961f382-5c17-4d47-8397-67ee034fe400": Phase="Pending", Reason="", readiness=false. Elapsed: 10.215603ms
Aug 27 12:44:31.095: INFO: Pod "pod-1961f382-5c17-4d47-8397-67ee034fe400": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02496794s
Aug 27 12:44:33.107: INFO: Pod "pod-1961f382-5c17-4d47-8397-67ee034fe400": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036814891s
STEP: Saw pod success
Aug 27 12:44:33.107: INFO: Pod "pod-1961f382-5c17-4d47-8397-67ee034fe400" satisfied condition "Succeeded or Failed"
Aug 27 12:44:33.113: INFO: Trying to get logs from node ip-172-31-5-213 pod pod-1961f382-5c17-4d47-8397-67ee034fe400 container test-container: <nil>
STEP: delete the pod
Aug 27 12:44:33.155: INFO: Waiting for pod pod-1961f382-5c17-4d47-8397-67ee034fe400 to disappear
Aug 27 12:44:33.159: INFO: Pod pod-1961f382-5c17-4d47-8397-67ee034fe400 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:44:33.159: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3670" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":163,"skipped":3196,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:44:33.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4095
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-af15ff13-a557-4460-b736-f1c6c3209d04
STEP: Creating a pod to test consume configMaps
Aug 27 12:44:33.338: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9" in namespace "projected-4095" to be "Succeeded or Failed"
Aug 27 12:44:33.344: INFO: Pod "pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9": Phase="Pending", Reason="", readiness=false. Elapsed: 5.586892ms
Aug 27 12:44:35.358: INFO: Pod "pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020215799s
Aug 27 12:44:37.372: INFO: Pod "pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.034283268s
STEP: Saw pod success
Aug 27 12:44:37.372: INFO: Pod "pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9" satisfied condition "Succeeded or Failed"
Aug 27 12:44:37.385: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:44:37.426: INFO: Waiting for pod pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9 to disappear
Aug 27 12:44:37.434: INFO: Pod pod-projected-configmaps-190b095e-9e36-442a-8b30-bb17d5b528d9 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 12:44:37.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4095" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":164,"skipped":3201,"failed":0}

------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:44:37.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8962
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-01a5bd81-19c9-4a37-83e0-af3ed106171a
STEP: Creating a pod to test consume configMaps
Aug 27 12:44:37.661: INFO: Waiting up to 5m0s for pod "pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1" in namespace "configmap-8962" to be "Succeeded or Failed"
Aug 27 12:44:37.669: INFO: Pod "pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1": Phase="Pending", Reason="", readiness=false. Elapsed: 7.369632ms
Aug 27 12:44:39.682: INFO: Pod "pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020433974s
Aug 27 12:44:41.694: INFO: Pod "pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032778459s
STEP: Saw pod success
Aug 27 12:44:41.694: INFO: Pod "pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1" satisfied condition "Succeeded or Failed"
Aug 27 12:44:41.700: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:44:41.742: INFO: Waiting for pod pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1 to disappear
Aug 27 12:44:41.749: INFO: Pod pod-configmaps-913ddc8e-2574-4ec9-b293-bdfdd103c7e1 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:44:41.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8962" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":165,"skipped":3201,"failed":0}
SS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:44:41.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-8576
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Aug 27 12:44:41.991: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Aug 27 12:44:44.019: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Aug 27 12:44:46.057: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Aug 27 12:44:48.074: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-8576" for this suite.

• [SLOW TEST:6.331 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":166,"skipped":3203,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:44:48.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-5935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Aug 27 12:44:48.272: INFO: Waiting up to 5m0s for pod "client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b" in namespace "containers-5935" to be "Succeeded or Failed"
Aug 27 12:44:48.280: INFO: Pod "client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b": Phase="Pending", Reason="", readiness=false. Elapsed: 8.144624ms
Aug 27 12:44:50.297: INFO: Pod "client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024826035s
Aug 27 12:44:52.320: INFO: Pod "client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.047823637s
STEP: Saw pod success
Aug 27 12:44:52.320: INFO: Pod "client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b" satisfied condition "Succeeded or Failed"
Aug 27 12:44:52.330: INFO: Trying to get logs from node ip-172-31-31-152 pod client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:44:52.363: INFO: Waiting for pod client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b to disappear
Aug 27 12:44:52.371: INFO: Pod client-containers-c303cc1b-b5c5-4691-becf-8c4e9922ec0b no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 27 12:44:52.372: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-5935" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":167,"skipped":3232,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:44:52.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7011
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7011
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-7011
STEP: Waiting until pod test-pod will start running in namespace statefulset-7011
STEP: Creating statefulset with conflicting port in namespace statefulset-7011
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7011
Aug 27 12:44:54.681: INFO: Observed stateful pod in namespace: statefulset-7011, name: ss-0, uid: 1745c9a2-d496-4ab5-b987-054860edc17b, status phase: Pending. Waiting for statefulset controller to delete.
Aug 27 12:44:54.705: INFO: Observed stateful pod in namespace: statefulset-7011, name: ss-0, uid: 1745c9a2-d496-4ab5-b987-054860edc17b, status phase: Failed. Waiting for statefulset controller to delete.
Aug 27 12:44:54.734: INFO: Observed stateful pod in namespace: statefulset-7011, name: ss-0, uid: 1745c9a2-d496-4ab5-b987-054860edc17b, status phase: Failed. Waiting for statefulset controller to delete.
Aug 27 12:44:54.743: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7011
STEP: Removing pod with conflicting port in namespace statefulset-7011
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7011 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 12:44:56.785: INFO: Deleting all statefulset in ns statefulset-7011
Aug 27 12:44:56.791: INFO: Scaling statefulset ss to 0
Aug 27 12:45:06.843: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 12:45:06.848: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 12:45:06.873: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7011" for this suite.

• [SLOW TEST:14.499 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":168,"skipped":3242,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:45:06.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2515
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:45:09.088: INFO: Deleting pod "var-expansion-51e3cf56-6ae6-43ba-a67c-c8b2ad1d80dc" in namespace "var-expansion-2515"
Aug 27 12:45:09.102: INFO: Wait up to 5m0s for pod "var-expansion-51e3cf56-6ae6-43ba-a67c-c8b2ad1d80dc" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 12:45:11.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2515" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":169,"skipped":3276,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:45:11.142: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-8343
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:45:13.367: INFO: Deleting pod "var-expansion-9422c859-5aed-4b83-bd8a-3a3b51e85567" in namespace "var-expansion-8343"
Aug 27 12:45:13.384: INFO: Wait up to 5m0s for pod "var-expansion-9422c859-5aed-4b83-bd8a-3a3b51e85567" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 12:45:15.401: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-8343" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":170,"skipped":3284,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:45:15.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2320
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:45:16.101: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
Aug 27 12:45:18.137: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.August, 27, 12, 45, 16, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 45, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 45, 16, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 45, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:45:21.170: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:45:21.262: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2320" for this suite.
STEP: Destroying namespace "webhook-2320-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.963 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":171,"skipped":3299,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:45:21.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7753
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-2eacec1b-f757-4435-8035-83abcff9e59f in namespace container-probe-7753
Aug 27 12:45:23.583: INFO: Started pod busybox-2eacec1b-f757-4435-8035-83abcff9e59f in namespace container-probe-7753
STEP: checking the pod's current state and verifying that restartCount is present
Aug 27 12:45:23.588: INFO: Initial restart count of pod busybox-2eacec1b-f757-4435-8035-83abcff9e59f is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 12:49:25.140: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7753" for this suite.

• [SLOW TEST:243.773 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":172,"skipped":3325,"failed":0}
SSSSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:49:25.159: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-2449
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 27 12:49:25.375: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 27 12:49:25.387: INFO: starting watch
STEP: patching
STEP: updating
Aug 27 12:49:25.437: INFO: waiting for watch events with expected annotations
Aug 27 12:49:25.437: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Aug 27 12:49:25.533: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-2449" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":173,"skipped":3332,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:49:25.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1284
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 27 12:49:25.728: INFO: Waiting up to 5m0s for pod "downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8" in namespace "downward-api-1284" to be "Succeeded or Failed"
Aug 27 12:49:25.735: INFO: Pod "downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.260267ms
Aug 27 12:49:27.744: INFO: Pod "downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015409523s
Aug 27 12:49:29.752: INFO: Pod "downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023834815s
STEP: Saw pod success
Aug 27 12:49:29.752: INFO: Pod "downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8" satisfied condition "Succeeded or Failed"
Aug 27 12:49:29.758: INFO: Trying to get logs from node ip-172-31-31-152 pod downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8 container dapi-container: <nil>
STEP: delete the pod
Aug 27 12:49:29.805: INFO: Waiting for pod downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8 to disappear
Aug 27 12:49:29.810: INFO: Pod downward-api-58643c3b-b8fd-44c7-a567-81920b8561a8 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 27 12:49:29.810: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1284" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":174,"skipped":3340,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:49:29.827: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9212
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:49:29.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 27 12:49:33.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-9212 --namespace=crd-publish-openapi-9212 create -f -'
Aug 27 12:49:34.429: INFO: stderr: ""
Aug 27 12:49:34.429: INFO: stdout: "e2e-test-crd-publish-openapi-8153-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 27 12:49:34.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-9212 --namespace=crd-publish-openapi-9212 delete e2e-test-crd-publish-openapi-8153-crds test-cr'
Aug 27 12:49:34.561: INFO: stderr: ""
Aug 27 12:49:34.561: INFO: stdout: "e2e-test-crd-publish-openapi-8153-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Aug 27 12:49:34.561: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-9212 --namespace=crd-publish-openapi-9212 apply -f -'
Aug 27 12:49:35.241: INFO: stderr: ""
Aug 27 12:49:35.241: INFO: stdout: "e2e-test-crd-publish-openapi-8153-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Aug 27 12:49:35.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-9212 --namespace=crd-publish-openapi-9212 delete e2e-test-crd-publish-openapi-8153-crds test-cr'
Aug 27 12:49:35.339: INFO: stderr: ""
Aug 27 12:49:35.339: INFO: stdout: "e2e-test-crd-publish-openapi-8153-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Aug 27 12:49:35.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-9212 explain e2e-test-crd-publish-openapi-8153-crds'
Aug 27 12:49:35.528: INFO: stderr: ""
Aug 27 12:49:35.528: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-8153-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:49:38.641: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9212" for this suite.

• [SLOW TEST:8.849 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":175,"skipped":3350,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:49:38.677: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5526
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Aug 27 12:49:38.888: INFO: The status of Pod pod-update-867bfc9c-567a-417d-b7d2-704f2a24c0d4 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:49:40.900: INFO: The status of Pod pod-update-867bfc9c-567a-417d-b7d2-704f2a24c0d4 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Aug 27 12:49:41.435: INFO: Successfully updated pod "pod-update-867bfc9c-567a-417d-b7d2-704f2a24c0d4"
STEP: verifying the updated pod is in kubernetes
Aug 27 12:49:41.448: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 12:49:41.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5526" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":176,"skipped":3372,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:49:41.472: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-5998
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:49:42.304: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:49:45.347: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Aug 27 12:49:47.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=webhook-5998 attach --namespace=webhook-5998 to-be-attached-pod -i -c=container1'
Aug 27 12:49:47.496: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:49:47.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-5998" for this suite.
STEP: Destroying namespace "webhook-5998-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.159 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":177,"skipped":3392,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:49:47.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7922
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Aug 27 12:49:47.822: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Aug 27 12:49:47.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 create -f -'
Aug 27 12:49:48.939: INFO: stderr: ""
Aug 27 12:49:48.939: INFO: stdout: "service/agnhost-replica created\n"
Aug 27 12:49:48.939: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Aug 27 12:49:48.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 create -f -'
Aug 27 12:49:49.130: INFO: stderr: ""
Aug 27 12:49:49.130: INFO: stdout: "service/agnhost-primary created\n"
Aug 27 12:49:49.130: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Aug 27 12:49:49.130: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 create -f -'
Aug 27 12:49:49.314: INFO: stderr: ""
Aug 27 12:49:49.314: INFO: stdout: "service/frontend created\n"
Aug 27 12:49:49.314: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Aug 27 12:49:49.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 create -f -'
Aug 27 12:49:50.049: INFO: stderr: ""
Aug 27 12:49:50.049: INFO: stdout: "deployment.apps/frontend created\n"
Aug 27 12:49:50.049: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 27 12:49:50.049: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 create -f -'
Aug 27 12:49:50.218: INFO: stderr: ""
Aug 27 12:49:50.218: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Aug 27 12:49:50.219: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Aug 27 12:49:50.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 create -f -'
Aug 27 12:49:50.390: INFO: stderr: ""
Aug 27 12:49:50.390: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Aug 27 12:49:50.390: INFO: Waiting for all frontend pods to be Running.
Aug 27 12:49:55.441: INFO: Waiting for frontend to serve content.
Aug 27 12:49:55.455: INFO: Trying to add a new entry to the guestbook.
Aug 27 12:49:55.473: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Aug 27 12:49:55.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 delete --grace-period=0 --force -f -'
Aug 27 12:49:55.610: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:49:55.610: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Aug 27 12:49:55.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 delete --grace-period=0 --force -f -'
Aug 27 12:49:55.757: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:49:55.757: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 27 12:49:55.757: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 delete --grace-period=0 --force -f -'
Aug 27 12:49:55.875: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:49:55.875: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 27 12:49:55.875: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 delete --grace-period=0 --force -f -'
Aug 27 12:49:55.969: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:49:55.969: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Aug 27 12:49:55.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 delete --grace-period=0 --force -f -'
Aug 27 12:49:56.070: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:49:56.070: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Aug 27 12:49:56.070: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-7922 delete --grace-period=0 --force -f -'
Aug 27 12:49:56.187: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:49:56.187: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:49:56.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7922" for this suite.

• [SLOW TEST:8.588 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":178,"skipped":3416,"failed":0}
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:49:56.220: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4757
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-b03b8dd8-4dc5-4510-adde-1514380c62cb
STEP: Creating a pod to test consume secrets
Aug 27 12:49:56.396: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d" in namespace "projected-4757" to be "Succeeded or Failed"
Aug 27 12:49:56.402: INFO: Pod "pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d": Phase="Pending", Reason="", readiness=false. Elapsed: 6.246933ms
Aug 27 12:49:58.417: INFO: Pod "pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020623529s
Aug 27 12:50:00.425: INFO: Pod "pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029375619s
STEP: Saw pod success
Aug 27 12:50:00.425: INFO: Pod "pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d" satisfied condition "Succeeded or Failed"
Aug 27 12:50:00.431: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d container projected-secret-volume-test: <nil>
STEP: delete the pod
Aug 27 12:50:00.464: INFO: Waiting for pod pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d to disappear
Aug 27 12:50:00.469: INFO: Pod pod-projected-secrets-67988107-d0f5-4cf5-a3ed-07d5036ea57d no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 27 12:50:00.470: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4757" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":179,"skipped":3416,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:50:00.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-9065
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-dbd37208-f185-45fb-9c39-cc3313d9c2e4 in namespace container-probe-9065
Aug 27 12:50:02.680: INFO: Started pod busybox-dbd37208-f185-45fb-9c39-cc3313d9c2e4 in namespace container-probe-9065
STEP: checking the pod's current state and verifying that restartCount is present
Aug 27 12:50:02.687: INFO: Initial restart count of pod busybox-dbd37208-f185-45fb-9c39-cc3313d9c2e4 is 0
Aug 27 12:50:52.995: INFO: Restart count of pod container-probe-9065/busybox-dbd37208-f185-45fb-9c39-cc3313d9c2e4 is now 1 (50.308593558s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 12:50:53.019: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-9065" for this suite.

• [SLOW TEST:52.551 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":180,"skipped":3425,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:50:53.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5584
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Aug 27 12:50:53.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 create -f -'
Aug 27 12:50:53.443: INFO: stderr: ""
Aug 27 12:50:53.443: INFO: stdout: "pod/pause created\n"
Aug 27 12:50:53.443: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Aug 27 12:50:53.443: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-5584" to be "running and ready"
Aug 27 12:50:53.455: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 11.914583ms
Aug 27 12:50:55.471: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.028159242s
Aug 27 12:50:55.471: INFO: Pod "pause" satisfied condition "running and ready"
Aug 27 12:50:55.471: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Aug 27 12:50:55.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 label pods pause testing-label=testing-label-value'
Aug 27 12:50:55.584: INFO: stderr: ""
Aug 27 12:50:55.584: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Aug 27 12:50:55.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 get pod pause -L testing-label'
Aug 27 12:50:55.669: INFO: stderr: ""
Aug 27 12:50:55.669: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Aug 27 12:50:55.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 label pods pause testing-label-'
Aug 27 12:50:55.769: INFO: stderr: ""
Aug 27 12:50:55.769: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Aug 27 12:50:55.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 get pod pause -L testing-label'
Aug 27 12:50:55.853: INFO: stderr: ""
Aug 27 12:50:55.853: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Aug 27 12:50:55.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 delete --grace-period=0 --force -f -'
Aug 27 12:50:55.953: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 12:50:55.954: INFO: stdout: "pod \"pause\" force deleted\n"
Aug 27 12:50:55.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 get rc,svc -l name=pause --no-headers'
Aug 27 12:50:56.051: INFO: stderr: "No resources found in kubectl-5584 namespace.\n"
Aug 27 12:50:56.051: INFO: stdout: ""
Aug 27 12:50:56.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5584 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 27 12:50:56.134: INFO: stderr: ""
Aug 27 12:50:56.134: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:50:56.134: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5584" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":181,"skipped":3449,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:50:56.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3617
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-1fe09bce-da5e-43c3-af93-4807062ff816
STEP: Creating secret with name s-test-opt-upd-f8b3cc64-bb1d-47ff-adc2-d38a889ae99e
STEP: Creating the pod
Aug 27 12:50:56.354: INFO: The status of Pod pod-projected-secrets-0e551d44-7432-441f-ba00-f047fc13ce68 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:50:58.366: INFO: The status of Pod pod-projected-secrets-0e551d44-7432-441f-ba00-f047fc13ce68 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-1fe09bce-da5e-43c3-af93-4807062ff816
STEP: Updating secret s-test-opt-upd-f8b3cc64-bb1d-47ff-adc2-d38a889ae99e
STEP: Creating secret with name s-test-opt-create-87b1821b-5f4b-4663-92b7-d4ad1300837c
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 27 12:51:00.480: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3617" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":182,"skipped":3466,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:51:00.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-4684
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 27 12:51:00.664: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 27 12:51:06.541: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-4684" for this suite.

• [SLOW TEST:6.064 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":183,"skipped":3498,"failed":0}
SSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:51:06.570: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-547
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Aug 27 12:51:17.628: INFO: 70 pods remaining
Aug 27 12:51:17.628: INFO: 70 pods has nil DeletionTimestamp
Aug 27 12:51:17.628: INFO: 
STEP: Gathering metrics
Aug 27 12:51:22.649: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Aug 27 12:51:22.649: INFO: Deleting pod "simpletest-rc-to-be-deleted-29twh" in namespace "gc-547"
W0827 12:51:22.648958      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 27 12:51:22.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-2hx75" in namespace "gc-547"
Aug 27 12:51:22.686: INFO: Deleting pod "simpletest-rc-to-be-deleted-4dffv" in namespace "gc-547"
Aug 27 12:51:22.705: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ntr4" in namespace "gc-547"
Aug 27 12:51:22.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-4qcdq" in namespace "gc-547"
Aug 27 12:51:22.773: INFO: Deleting pod "simpletest-rc-to-be-deleted-52jgj" in namespace "gc-547"
Aug 27 12:51:22.806: INFO: Deleting pod "simpletest-rc-to-be-deleted-58dpm" in namespace "gc-547"
Aug 27 12:51:22.822: INFO: Deleting pod "simpletest-rc-to-be-deleted-5f5fs" in namespace "gc-547"
Aug 27 12:51:22.847: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fhcw" in namespace "gc-547"
Aug 27 12:51:22.866: INFO: Deleting pod "simpletest-rc-to-be-deleted-5gsgv" in namespace "gc-547"
Aug 27 12:51:22.881: INFO: Deleting pod "simpletest-rc-to-be-deleted-5sm8l" in namespace "gc-547"
Aug 27 12:51:22.904: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vwkd" in namespace "gc-547"
Aug 27 12:51:22.923: INFO: Deleting pod "simpletest-rc-to-be-deleted-6g2m4" in namespace "gc-547"
Aug 27 12:51:22.953: INFO: Deleting pod "simpletest-rc-to-be-deleted-6mqw8" in namespace "gc-547"
Aug 27 12:51:22.981: INFO: Deleting pod "simpletest-rc-to-be-deleted-6s455" in namespace "gc-547"
Aug 27 12:51:23.001: INFO: Deleting pod "simpletest-rc-to-be-deleted-77ztw" in namespace "gc-547"
Aug 27 12:51:23.027: INFO: Deleting pod "simpletest-rc-to-be-deleted-79zhf" in namespace "gc-547"
Aug 27 12:51:23.068: INFO: Deleting pod "simpletest-rc-to-be-deleted-7b8ch" in namespace "gc-547"
Aug 27 12:51:23.091: INFO: Deleting pod "simpletest-rc-to-be-deleted-7nxxg" in namespace "gc-547"
Aug 27 12:51:23.117: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vjcn" in namespace "gc-547"
Aug 27 12:51:23.140: INFO: Deleting pod "simpletest-rc-to-be-deleted-8dscm" in namespace "gc-547"
Aug 27 12:51:23.157: INFO: Deleting pod "simpletest-rc-to-be-deleted-8nb5c" in namespace "gc-547"
Aug 27 12:51:23.179: INFO: Deleting pod "simpletest-rc-to-be-deleted-8t6x9" in namespace "gc-547"
Aug 27 12:51:23.203: INFO: Deleting pod "simpletest-rc-to-be-deleted-8vvtg" in namespace "gc-547"
Aug 27 12:51:23.223: INFO: Deleting pod "simpletest-rc-to-be-deleted-99jdc" in namespace "gc-547"
Aug 27 12:51:23.242: INFO: Deleting pod "simpletest-rc-to-be-deleted-9f9qk" in namespace "gc-547"
Aug 27 12:51:23.259: INFO: Deleting pod "simpletest-rc-to-be-deleted-9jzbj" in namespace "gc-547"
Aug 27 12:51:23.285: INFO: Deleting pod "simpletest-rc-to-be-deleted-9mp24" in namespace "gc-547"
Aug 27 12:51:23.318: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qwpl" in namespace "gc-547"
Aug 27 12:51:23.342: INFO: Deleting pod "simpletest-rc-to-be-deleted-9z77t" in namespace "gc-547"
Aug 27 12:51:23.362: INFO: Deleting pod "simpletest-rc-to-be-deleted-bxnl8" in namespace "gc-547"
Aug 27 12:51:23.391: INFO: Deleting pod "simpletest-rc-to-be-deleted-cj22z" in namespace "gc-547"
Aug 27 12:51:23.420: INFO: Deleting pod "simpletest-rc-to-be-deleted-cr284" in namespace "gc-547"
Aug 27 12:51:23.441: INFO: Deleting pod "simpletest-rc-to-be-deleted-czd54" in namespace "gc-547"
Aug 27 12:51:23.460: INFO: Deleting pod "simpletest-rc-to-be-deleted-d5srt" in namespace "gc-547"
Aug 27 12:51:23.483: INFO: Deleting pod "simpletest-rc-to-be-deleted-d6btm" in namespace "gc-547"
Aug 27 12:51:23.507: INFO: Deleting pod "simpletest-rc-to-be-deleted-dmgwd" in namespace "gc-547"
Aug 27 12:51:23.529: INFO: Deleting pod "simpletest-rc-to-be-deleted-fdkgj" in namespace "gc-547"
Aug 27 12:51:23.549: INFO: Deleting pod "simpletest-rc-to-be-deleted-ffbl6" in namespace "gc-547"
Aug 27 12:51:23.573: INFO: Deleting pod "simpletest-rc-to-be-deleted-fkxw2" in namespace "gc-547"
Aug 27 12:51:23.611: INFO: Deleting pod "simpletest-rc-to-be-deleted-fq4pq" in namespace "gc-547"
Aug 27 12:51:23.643: INFO: Deleting pod "simpletest-rc-to-be-deleted-g2d62" in namespace "gc-547"
Aug 27 12:51:23.664: INFO: Deleting pod "simpletest-rc-to-be-deleted-g69x4" in namespace "gc-547"
Aug 27 12:51:23.679: INFO: Deleting pod "simpletest-rc-to-be-deleted-g7bc2" in namespace "gc-547"
Aug 27 12:51:23.732: INFO: Deleting pod "simpletest-rc-to-be-deleted-grfbq" in namespace "gc-547"
Aug 27 12:51:23.766: INFO: Deleting pod "simpletest-rc-to-be-deleted-gs7j5" in namespace "gc-547"
Aug 27 12:51:23.790: INFO: Deleting pod "simpletest-rc-to-be-deleted-gzz64" in namespace "gc-547"
Aug 27 12:51:23.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-h8krf" in namespace "gc-547"
Aug 27 12:51:23.834: INFO: Deleting pod "simpletest-rc-to-be-deleted-h9wv7" in namespace "gc-547"
Aug 27 12:51:23.854: INFO: Deleting pod "simpletest-rc-to-be-deleted-hj8m9" in namespace "gc-547"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 27 12:51:23.872: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-547" for this suite.

• [SLOW TEST:17.325 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":184,"skipped":3501,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:51:23.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-1506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Aug 27 12:51:24.068: INFO: created test-pod-1
Aug 27 12:51:24.093: INFO: created test-pod-2
Aug 27 12:51:24.101: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Aug 27 12:51:24.101: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-1506' to be running and ready
Aug 27 12:51:24.124: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:24.124: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:24.124: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:24.124: INFO: 0 / 3 pods in namespace 'pods-1506' are running and ready (0 seconds elapsed)
Aug 27 12:51:24.124: INFO: expected 0 pod replicas in namespace 'pods-1506', 0 are Running and Ready.
Aug 27 12:51:24.124: INFO: POD         NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:51:24.124: INFO: test-pod-1  ip-172-31-31-152  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:24.124: INFO: test-pod-2  ip-172-31-31-152  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:24.124: INFO: test-pod-3  ip-172-31-31-152  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:24.124: INFO: 
Aug 27 12:51:26.162: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:26.162: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:26.162: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:26.162: INFO: 0 / 3 pods in namespace 'pods-1506' are running and ready (2 seconds elapsed)
Aug 27 12:51:26.162: INFO: expected 0 pod replicas in namespace 'pods-1506', 0 are Running and Ready.
Aug 27 12:51:26.162: INFO: POD         NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:51:26.162: INFO: test-pod-1  ip-172-31-31-152  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:26.162: INFO: test-pod-2  ip-172-31-31-152  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:26.162: INFO: test-pod-3  ip-172-31-31-152  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:26.162: INFO: 
Aug 27 12:51:28.145: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:28.145: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:28.145: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:28.145: INFO: 0 / 3 pods in namespace 'pods-1506' are running and ready (4 seconds elapsed)
Aug 27 12:51:28.145: INFO: expected 0 pod replicas in namespace 'pods-1506', 0 are Running and Ready.
Aug 27 12:51:28.145: INFO: POD         NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:51:28.145: INFO: test-pod-1  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:28.145: INFO: test-pod-2  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:28.145: INFO: test-pod-3  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:28.145: INFO: 
Aug 27 12:51:30.149: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:30.149: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:30.149: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:30.149: INFO: 0 / 3 pods in namespace 'pods-1506' are running and ready (6 seconds elapsed)
Aug 27 12:51:30.149: INFO: expected 0 pod replicas in namespace 'pods-1506', 0 are Running and Ready.
Aug 27 12:51:30.149: INFO: POD         NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:51:30.149: INFO: test-pod-1  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:30.149: INFO: test-pod-2  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:30.149: INFO: test-pod-3  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:30.149: INFO: 
Aug 27 12:51:32.157: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:32.157: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:32.157: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Aug 27 12:51:32.157: INFO: 0 / 3 pods in namespace 'pods-1506' are running and ready (8 seconds elapsed)
Aug 27 12:51:32.157: INFO: expected 0 pod replicas in namespace 'pods-1506', 0 are Running and Ready.
Aug 27 12:51:32.157: INFO: POD         NODE              PHASE    GRACE  CONDITIONS
Aug 27 12:51:32.157: INFO: test-pod-1  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:32.157: INFO: test-pod-2  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:32.157: INFO: test-pod-3  ip-172-31-31-152  Pending         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC ContainersNotReady containers with unready status: [token-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 12:51:24 +0000 UTC  }]
Aug 27 12:51:32.157: INFO: 
Aug 27 12:51:34.147: INFO: 3 / 3 pods in namespace 'pods-1506' are running and ready (10 seconds elapsed)
Aug 27 12:51:34.147: INFO: expected 0 pod replicas in namespace 'pods-1506', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Aug 27 12:51:34.199: INFO: Pod quantity 3 is different from expected quantity 0
Aug 27 12:51:35.206: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 12:51:36.208: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-1506" for this suite.

• [SLOW TEST:12.332 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":185,"skipped":3509,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:51:36.228: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3474
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 27 12:51:36.422: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 27 12:52:36.460: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:36.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-6986
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:52:36.664: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Aug 27 12:52:36.670: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Aug 27 12:52:36.706: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-6986" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:52:36.757: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3474" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.618 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":186,"skipped":3529,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:36.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7747
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:52:37.026: INFO: Waiting up to 5m0s for pod "downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069" in namespace "downward-api-7747" to be "Succeeded or Failed"
Aug 27 12:52:37.037: INFO: Pod "downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069": Phase="Pending", Reason="", readiness=false. Elapsed: 10.994663ms
Aug 27 12:52:39.045: INFO: Pod "downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019330803s
Aug 27 12:52:41.065: INFO: Pod "downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.038895083s
STEP: Saw pod success
Aug 27 12:52:41.065: INFO: Pod "downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069" satisfied condition "Succeeded or Failed"
Aug 27 12:52:41.070: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069 container client-container: <nil>
STEP: delete the pod
Aug 27 12:52:41.119: INFO: Waiting for pod downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069 to disappear
Aug 27 12:52:41.126: INFO: Pod downwardapi-volume-6d10e878-01c6-4559-853f-aa0504e3f069 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:52:41.126: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7747" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":187,"skipped":3545,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:41.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-9585
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 27 12:52:44.561: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-9585" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":188,"skipped":3564,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:44.581: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-1903
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 27 12:52:46.898: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-1903" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":189,"skipped":3572,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:46.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-9353
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 27 12:52:47.077: INFO: Waiting up to 5m0s for pod "security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f" in namespace "security-context-9353" to be "Succeeded or Failed"
Aug 27 12:52:47.082: INFO: Pod "security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f": Phase="Pending", Reason="", readiness=false. Elapsed: 4.950042ms
Aug 27 12:52:49.090: INFO: Pod "security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013146751s
Aug 27 12:52:51.102: INFO: Pod "security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.025268956s
STEP: Saw pod success
Aug 27 12:52:51.102: INFO: Pod "security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f" satisfied condition "Succeeded or Failed"
Aug 27 12:52:51.108: INFO: Trying to get logs from node ip-172-31-31-152 pod security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f container test-container: <nil>
STEP: delete the pod
Aug 27 12:52:51.137: INFO: Waiting for pod security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f to disappear
Aug 27 12:52:51.143: INFO: Pod security-context-de5844e0-ba03-4a50-881e-caab37c1ed5f no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 27 12:52:51.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-9353" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":190,"skipped":3606,"failed":0}
SSSSS
------------------------------
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:51.162: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-6299
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Aug 27 12:52:51.343: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Aug 27 12:52:51.390: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 27 12:52:51.444: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-6299" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":191,"skipped":3611,"failed":0}
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:51.461: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3179
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:52:51.623: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:52:58.017: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3179" for this suite.

• [SLOW TEST:6.574 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":192,"skipped":3614,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:58.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-6590
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 27 12:52:58.249: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-6590" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":193,"skipped":3626,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:58.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-3392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-460ccde0-d745-4edb-bc75-4df64e4030ed-842
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:52:58.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-3392" for this suite.
STEP: Destroying namespace "nspatchtest-460ccde0-d745-4edb-bc75-4df64e4030ed-842" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":194,"skipped":3652,"failed":0}

------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:52:58.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-4830
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:52:58.757: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Creating first CR 
Aug 27 12:53:01.353: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-27T12:53:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-27T12:53:01Z]] name:name1 resourceVersion:25158 uid:c38c3a50-2fca-4d50-a7c2-12985bf5ed29] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Aug 27 12:53:11.365: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-27T12:53:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-27T12:53:11Z]] name:name2 resourceVersion:25206 uid:51f6fd29-a894-4f66-8a47-92b03de757b1] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Aug 27 12:53:21.382: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-27T12:53:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-27T12:53:21Z]] name:name1 resourceVersion:25225 uid:c38c3a50-2fca-4d50-a7c2-12985bf5ed29] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Aug 27 12:53:31.395: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-27T12:53:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-27T12:53:31Z]] name:name2 resourceVersion:25260 uid:51f6fd29-a894-4f66-8a47-92b03de757b1] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Aug 27 12:53:41.414: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-27T12:53:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-27T12:53:21Z]] name:name1 resourceVersion:25280 uid:c38c3a50-2fca-4d50-a7c2-12985bf5ed29] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Aug 27 12:53:51.442: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-08-27T12:53:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-08-27T12:53:31Z]] name:name2 resourceVersion:25301 uid:51f6fd29-a894-4f66-8a47-92b03de757b1] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:54:01.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-4830" for this suite.

• [SLOW TEST:63.407 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":195,"skipped":3652,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:02.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Aug 27 12:54:04.226: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2874 pod-service-account-e3efa8ca-db39-4b51-afdb-598abd6679a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Aug 27 12:54:04.414: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2874 pod-service-account-e3efa8ca-db39-4b51-afdb-598abd6679a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Aug 27 12:54:04.583: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-2874 pod-service-account-e3efa8ca-db39-4b51-afdb-598abd6679a3 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Aug 27 12:54:04.754: INFO: Got root ca configmap in namespace "svcaccounts-2874"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 27 12:54:04.757: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2874" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":196,"skipped":3671,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:04.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-2444
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 27 12:54:04.955: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-2444" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":197,"skipped":3690,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:04.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-5505
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:54:05.143: INFO: Endpoints addresses: [172.31.10.46 172.31.36.1] , ports: [6443]
Aug 27 12:54:05.143: INFO: EndpointSlices addresses: [172.31.10.46 172.31.36.1] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 27 12:54:05.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-5505" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":198,"skipped":3704,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:05.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-2086
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Aug 27 12:54:07.859: INFO: Successfully updated pod "adopt-release-54pts"
STEP: Checking that the Job readopts the Pod
Aug 27 12:54:07.859: INFO: Waiting up to 15m0s for pod "adopt-release-54pts" in namespace "job-2086" to be "adopted"
Aug 27 12:54:07.864: INFO: Pod "adopt-release-54pts": Phase="Running", Reason="", readiness=true. Elapsed: 5.522407ms
Aug 27 12:54:09.875: INFO: Pod "adopt-release-54pts": Phase="Running", Reason="", readiness=true. Elapsed: 2.015959749s
Aug 27 12:54:09.875: INFO: Pod "adopt-release-54pts" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Aug 27 12:54:10.407: INFO: Successfully updated pod "adopt-release-54pts"
STEP: Checking that the Job releases the Pod
Aug 27 12:54:10.407: INFO: Waiting up to 15m0s for pod "adopt-release-54pts" in namespace "job-2086" to be "released"
Aug 27 12:54:10.418: INFO: Pod "adopt-release-54pts": Phase="Running", Reason="", readiness=true. Elapsed: 10.959ms
Aug 27 12:54:12.432: INFO: Pod "adopt-release-54pts": Phase="Running", Reason="", readiness=true. Elapsed: 2.024751941s
Aug 27 12:54:12.432: INFO: Pod "adopt-release-54pts" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 27 12:54:12.432: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-2086" for this suite.

• [SLOW TEST:7.295 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":199,"skipped":3733,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:12.454: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8245
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-8245
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8245 to expose endpoints map[]
Aug 27 12:54:12.639: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
Aug 27 12:54:13.667: INFO: successfully validated that service endpoint-test2 in namespace services-8245 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-8245
Aug 27 12:54:13.689: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:54:15.702: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8245 to expose endpoints map[pod1:[80]]
Aug 27 12:54:15.729: INFO: successfully validated that service endpoint-test2 in namespace services-8245 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Aug 27 12:54:15.730: INFO: Creating new exec pod
Aug 27 12:54:18.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8245 exec execpodjtl6n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 27 12:54:18.957: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:18.957: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:54:18.957: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8245 exec execpodjtl6n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.153 80'
Aug 27 12:54:19.122: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.152.183.153 80\nConnection to 10.152.183.153 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:19.122: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-8245
Aug 27 12:54:19.144: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:54:21.162: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8245 to expose endpoints map[pod1:[80] pod2:[80]]
Aug 27 12:54:21.193: INFO: successfully validated that service endpoint-test2 in namespace services-8245 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Aug 27 12:54:22.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8245 exec execpodjtl6n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 27 12:54:22.381: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:22.381: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:54:22.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8245 exec execpodjtl6n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.153 80'
Aug 27 12:54:22.579: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.153 80\nConnection to 10.152.183.153 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:22.579: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-8245
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8245 to expose endpoints map[pod2:[80]]
Aug 27 12:54:22.636: INFO: successfully validated that service endpoint-test2 in namespace services-8245 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Aug 27 12:54:23.636: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8245 exec execpodjtl6n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Aug 27 12:54:23.836: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:23.836: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:54:23.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8245 exec execpodjtl6n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.153 80'
Aug 27 12:54:23.999: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.153 80\nConnection to 10.152.183.153 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:23.999: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-8245
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8245 to expose endpoints map[]
Aug 27 12:54:24.047: INFO: successfully validated that service endpoint-test2 in namespace services-8245 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:54:24.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8245" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:11.648 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":200,"skipped":3781,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:24.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-6574
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:54:24.839: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:54:27.883: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:54:27.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:54:31.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-6574" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:7.156 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":201,"skipped":3836,"failed":0}
S
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:31.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7879
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:54:31.482: INFO: Waiting up to 5m0s for pod "downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1" in namespace "projected-7879" to be "Succeeded or Failed"
Aug 27 12:54:31.489: INFO: Pod "downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1": Phase="Pending", Reason="", readiness=false. Elapsed: 6.018031ms
Aug 27 12:54:33.501: INFO: Pod "downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017923835s
Aug 27 12:54:35.510: INFO: Pod "downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027461538s
STEP: Saw pod success
Aug 27 12:54:35.510: INFO: Pod "downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1" satisfied condition "Succeeded or Failed"
Aug 27 12:54:35.515: INFO: Trying to get logs from node ip-172-31-5-213 pod downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1 container client-container: <nil>
STEP: delete the pod
Aug 27 12:54:35.573: INFO: Waiting for pod downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1 to disappear
Aug 27 12:54:35.577: INFO: Pod downwardapi-volume-0145c932-e700-4d78-80df-5dfd083aebb1 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 12:54:35.577: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7879" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":202,"skipped":3837,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:35.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-904
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Aug 27 12:54:35.795: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:54:37.806: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Aug 27 12:54:37.824: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:54:39.834: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Aug 27 12:54:39.838: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:39.838: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:39.839: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:39.839: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 27 12:54:39.949: INFO: Exec stderr: ""
Aug 27 12:54:39.949: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:39.949: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:39.950: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:39.950: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 27 12:54:40.072: INFO: Exec stderr: ""
Aug 27 12:54:40.073: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.073: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.073: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 27 12:54:40.169: INFO: Exec stderr: ""
Aug 27 12:54:40.170: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.170: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.170: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.170: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 27 12:54:40.247: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Aug 27 12:54:40.247: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.248: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.248: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug 27 12:54:40.358: INFO: Exec stderr: ""
Aug 27 12:54:40.358: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.358: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.359: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.359: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Aug 27 12:54:40.455: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Aug 27 12:54:40.455: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.456: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.456: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 27 12:54:40.529: INFO: Exec stderr: ""
Aug 27 12:54:40.529: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.529: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.529: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.530: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Aug 27 12:54:40.616: INFO: Exec stderr: ""
Aug 27 12:54:40.616: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.616: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.617: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 27 12:54:40.693: INFO: Exec stderr: ""
Aug 27 12:54:40.693: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-904 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:54:40.693: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:54:40.694: INFO: ExecWithOptions: Clientset creation
Aug 27 12:54:40.694: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-904/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Aug 27 12:54:40.788: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Aug 27 12:54:40.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-904" for this suite.

• [SLOW TEST:5.224 seconds]
[sig-node] KubeletManagedEtcHosts
test/e2e/common/node/framework.go:23
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":203,"skipped":3888,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:40.822: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3960
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Aug 27 12:54:41.014: INFO: Waiting up to 5m0s for pod "pod-85b234d9-e747-4cdd-a56d-63ece424448d" in namespace "emptydir-3960" to be "Succeeded or Failed"
Aug 27 12:54:41.020: INFO: Pod "pod-85b234d9-e747-4cdd-a56d-63ece424448d": Phase="Pending", Reason="", readiness=false. Elapsed: 5.417901ms
Aug 27 12:54:43.031: INFO: Pod "pod-85b234d9-e747-4cdd-a56d-63ece424448d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016464472s
Aug 27 12:54:45.036: INFO: Pod "pod-85b234d9-e747-4cdd-a56d-63ece424448d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022202776s
STEP: Saw pod success
Aug 27 12:54:45.036: INFO: Pod "pod-85b234d9-e747-4cdd-a56d-63ece424448d" satisfied condition "Succeeded or Failed"
Aug 27 12:54:45.043: INFO: Trying to get logs from node ip-172-31-65-143 pod pod-85b234d9-e747-4cdd-a56d-63ece424448d container test-container: <nil>
STEP: delete the pod
Aug 27 12:54:45.096: INFO: Waiting for pod pod-85b234d9-e747-4cdd-a56d-63ece424448d to disappear
Aug 27 12:54:45.103: INFO: Pod pod-85b234d9-e747-4cdd-a56d-63ece424448d no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:54:45.103: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3960" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":204,"skipped":3938,"failed":0}
SSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:45.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5335
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5335
STEP: creating service affinity-clusterip-transition in namespace services-5335
STEP: creating replication controller affinity-clusterip-transition in namespace services-5335
I0827 12:54:45.320299      22 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-5335, replica count: 3
I0827 12:54:48.371592      22 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 12:54:48.412: INFO: Creating new exec pod
Aug 27 12:54:51.452: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-5335 exec execpod-affinity7k8g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Aug 27 12:54:51.636: INFO: stderr: "+ + ncecho -v hostName -t\n -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:51.637: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:54:51.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-5335 exec execpod-affinity7k8g4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.243 80'
Aug 27 12:54:51.817: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.243 80\nConnection to 10.152.183.243 80 port [tcp/http] succeeded!\n"
Aug 27 12:54:51.818: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 12:54:51.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-5335 exec execpod-affinity7k8g4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.243:80/ ; done'
Aug 27 12:54:52.124: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n"
Aug 27 12:54:52.124: INFO: stdout: "\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-74xkk\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-74xkk\naffinity-clusterip-transition-74xkk\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-md2ch\naffinity-clusterip-transition-md2ch\naffinity-clusterip-transition-74xkk\naffinity-clusterip-transition-74xkk\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-md2ch\naffinity-clusterip-transition-md2ch\naffinity-clusterip-transition-74xkk\naffinity-clusterip-transition-md2ch\naffinity-clusterip-transition-74xkk"
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-74xkk
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-74xkk
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-74xkk
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-md2ch
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-md2ch
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-74xkk
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-74xkk
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-md2ch
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-md2ch
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-74xkk
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-md2ch
Aug 27 12:54:52.124: INFO: Received response from host: affinity-clusterip-transition-74xkk
Aug 27 12:54:52.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-5335 exec execpod-affinity7k8g4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.243:80/ ; done'
Aug 27 12:54:52.458: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.243:80/\n"
Aug 27 12:54:52.458: INFO: stdout: "\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp\naffinity-clusterip-transition-4wqbp"
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Received response from host: affinity-clusterip-transition-4wqbp
Aug 27 12:54:52.458: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5335, will wait for the garbage collector to delete the pods
Aug 27 12:54:52.546: INFO: Deleting ReplicationController affinity-clusterip-transition took: 11.987359ms
Aug 27 12:54:52.647: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.244316ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:54:55.182: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5335" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:10.084 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":205,"skipped":3947,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:54:55.205: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2142
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Aug 27 12:54:55.362: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 12:55:00.075: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2142" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":206,"skipped":4015,"failed":0}
SS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:00.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-3576
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Aug 27 12:55:00.305: INFO: Waiting up to 5m0s for pod "var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe" in namespace "var-expansion-3576" to be "Succeeded or Failed"
Aug 27 12:55:00.312: INFO: Pod "var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe": Phase="Pending", Reason="", readiness=false. Elapsed: 6.904459ms
Aug 27 12:55:02.328: INFO: Pod "var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02344094s
Aug 27 12:55:04.340: INFO: Pod "var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035550704s
STEP: Saw pod success
Aug 27 12:55:04.341: INFO: Pod "var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe" satisfied condition "Succeeded or Failed"
Aug 27 12:55:04.348: INFO: Trying to get logs from node ip-172-31-31-152 pod var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe container dapi-container: <nil>
STEP: delete the pod
Aug 27 12:55:04.403: INFO: Waiting for pod var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe to disappear
Aug 27 12:55:04.417: INFO: Pod var-expansion-64534f78-71f6-4e03-937b-cbc009dbe9fe no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 12:55:04.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-3576" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":207,"skipped":4017,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:04.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-4480
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:55:04.604: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:55:07.923: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-4480" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":208,"skipped":4031,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:07.947: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8797
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 27 12:55:08.145: INFO: The status of Pod annotationupdate5b890bd6-08f2-4332-bd30-68236d6c72ac is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:55:10.153: INFO: The status of Pod annotationupdate5b890bd6-08f2-4332-bd30-68236d6c72ac is Running (Ready = true)
Aug 27 12:55:10.694: INFO: Successfully updated pod "annotationupdate5b890bd6-08f2-4332-bd30-68236d6c72ac"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 12:55:14.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8797" for this suite.

• [SLOW TEST:6.827 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":209,"skipped":4054,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:14.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2512
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Aug 27 12:55:14.980: INFO: Waiting up to 5m0s for pod "pod-e18e67fc-586d-4fef-b108-e50c53de67e4" in namespace "emptydir-2512" to be "Succeeded or Failed"
Aug 27 12:55:14.988: INFO: Pod "pod-e18e67fc-586d-4fef-b108-e50c53de67e4": Phase="Pending", Reason="", readiness=false. Elapsed: 8.484862ms
Aug 27 12:55:17.000: INFO: Pod "pod-e18e67fc-586d-4fef-b108-e50c53de67e4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020578953s
Aug 27 12:55:19.010: INFO: Pod "pod-e18e67fc-586d-4fef-b108-e50c53de67e4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030172064s
STEP: Saw pod success
Aug 27 12:55:19.010: INFO: Pod "pod-e18e67fc-586d-4fef-b108-e50c53de67e4" satisfied condition "Succeeded or Failed"
Aug 27 12:55:19.015: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-e18e67fc-586d-4fef-b108-e50c53de67e4 container test-container: <nil>
STEP: delete the pod
Aug 27 12:55:19.054: INFO: Waiting for pod pod-e18e67fc-586d-4fef-b108-e50c53de67e4 to disappear
Aug 27 12:55:19.062: INFO: Pod pod-e18e67fc-586d-4fef-b108-e50c53de67e4 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 12:55:19.062: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2512" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":210,"skipped":4077,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:19.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-6425
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 12:55:30.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-6425" for this suite.

• [SLOW TEST:11.397 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":211,"skipped":4093,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:30.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4852
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:55:30.682: INFO: Pod name rollover-pod: Found 0 pods out of 1
Aug 27 12:55:35.691: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 27 12:55:35.691: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Aug 27 12:55:37.706: INFO: Creating deployment "test-rollover-deployment"
Aug 27 12:55:37.725: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Aug 27 12:55:39.749: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Aug 27 12:55:39.762: INFO: Ensure that both replica sets have 1 created replica
Aug 27 12:55:39.778: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Aug 27 12:55:39.796: INFO: Updating deployment test-rollover-deployment
Aug 27 12:55:39.796: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Aug 27 12:55:41.811: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Aug 27 12:55:41.824: INFO: Make sure deployment "test-rollover-deployment" is complete
Aug 27 12:55:41.846: INFO: all replica sets need to contain the pod-template-hash label
Aug 27 12:55:41.846: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 41, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:55:43.871: INFO: all replica sets need to contain the pod-template-hash label
Aug 27 12:55:43.871: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 41, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:55:45.861: INFO: all replica sets need to contain the pod-template-hash label
Aug 27 12:55:45.861: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 41, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:55:47.860: INFO: all replica sets need to contain the pod-template-hash label
Aug 27 12:55:47.860: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 41, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:55:49.868: INFO: all replica sets need to contain the pod-template-hash label
Aug 27 12:55:49.868: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.August, 27, 12, 55, 41, 0, time.Local), LastTransitionTime:time.Date(2022, time.August, 27, 12, 55, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Aug 27 12:55:51.886: INFO: 
Aug 27 12:55:51.886: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 12:55:51.930: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-4852  47a9825a-5621-4327-b8dc-02b3c0abed8b 26469 2 2022-08-27 12:55:37 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-08-27 12:55:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:55:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002285598 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-27 12:55:37 +0000 UTC,LastTransitionTime:2022-08-27 12:55:37 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-08-27 12:55:51 +0000 UTC,LastTransitionTime:2022-08-27 12:55:37 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 27 12:55:51.939: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-4852  12ccb666-0463-44b7-b367-60872ab0943d 26459 2 2022-08-27 12:55:39 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 47a9825a-5621-4327-b8dc-02b3c0abed8b 0xc002285a57 0xc002285a58}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:55:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a9825a-5621-4327-b8dc-02b3c0abed8b\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:55:51 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002285b08 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:55:51.939: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Aug 27 12:55:51.939: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-4852  956a522e-1bfa-4b52-a551-8c04d03f4377 26468 2 2022-08-27 12:55:30 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 47a9825a-5621-4327-b8dc-02b3c0abed8b 0xc002285927 0xc002285928}] []  [{e2e.test Update apps/v1 2022-08-27 12:55:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:55:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a9825a-5621-4327-b8dc-02b3c0abed8b\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:55:51 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0022859e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:55:51.940: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-4852  e099c169-bd4f-407f-bd3b-56b13a48bcbe 26420 2 2022-08-27 12:55:37 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 47a9825a-5621-4327-b8dc-02b3c0abed8b 0xc002285b70 0xc002285b71}] []  [{kube-controller-manager Update apps/v1 2022-08-27 12:55:37 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47a9825a-5621-4327-b8dc-02b3c0abed8b\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 12:55:39 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002285c18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 27 12:55:51.961: INFO: Pod "test-rollover-deployment-779c67f4f8-g5dpk" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-g5dpk test-rollover-deployment-779c67f4f8- deployment-4852  5a844346-b002-42a4-af76-76cd88c7df80 26438 0 2022-08-27 12:55:39 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 12ccb666-0463-44b7-b367-60872ab0943d 0xc00102de17 0xc00102de18}] []  [{kube-controller-manager Update v1 2022-08-27 12:55:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"12ccb666-0463-44b7-b367-60872ab0943d\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 12:55:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.190\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5lhvd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5lhvd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:55:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:55:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:55:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 12:55:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:192.168.233.190,StartTime:2022-08-27 12:55:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 12:55:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://11786ba8fcb0c59bf0df172b5e16c2c723e3429368b1a278cae33d7620178ff7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.233.190,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 12:55:51.961: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4852" for this suite.

• [SLOW TEST:21.486 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":212,"skipped":4133,"failed":0}
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:51.987: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5173
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Aug 27 12:55:52.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5173 cluster-info'
Aug 27 12:55:52.263: INFO: stderr: ""
Aug 27 12:55:52.263: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:55:52.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5173" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":213,"skipped":4137,"failed":0}
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:52.279: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-5307
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:55:53.096: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:55:56.133: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:55:56.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:55:59.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-5307" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:7.152 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":214,"skipped":4141,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:55:59.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8756
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 12:55:59.613: INFO: Waiting up to 5m0s for pod "downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd" in namespace "downward-api-8756" to be "Succeeded or Failed"
Aug 27 12:55:59.621: INFO: Pod "downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd": Phase="Pending", Reason="", readiness=false. Elapsed: 8.115825ms
Aug 27 12:56:01.630: INFO: Pod "downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017047815s
Aug 27 12:56:03.649: INFO: Pod "downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036225646s
STEP: Saw pod success
Aug 27 12:56:03.649: INFO: Pod "downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd" satisfied condition "Succeeded or Failed"
Aug 27 12:56:03.655: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd container client-container: <nil>
STEP: delete the pod
Aug 27 12:56:03.689: INFO: Waiting for pod downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd to disappear
Aug 27 12:56:03.694: INFO: Pod downwardapi-volume-dcad9e3a-2f14-418f-9f7f-601608c795bd no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 12:56:03.694: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8756" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":215,"skipped":4182,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:56:03.713: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-9782
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 27 12:56:03.885: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 27 12:56:03.897: INFO: Waiting for terminating namespaces to be deleted...
Aug 27 12:56:03.904: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-31-152 before test
Aug 27 12:56:03.921: INFO: nginx-ingress-controller-kubernetes-worker-n7zvh from ingress-nginx-kubernetes-worker started at 2022-08-27 12:34:27 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.921: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 12:56:03.921: INFO: calico-kube-controllers-6c96fbdbd9-5v99t from kube-system started at 2022-08-27 12:34:15 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.921: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 27 12:56:03.921: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-s8z8v from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 12:56:03.921: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 12:56:03.921: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 12:56:03.921: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-5-213 before test
Aug 27 12:56:03.927: INFO: nginx-ingress-controller-kubernetes-worker-n4kcs from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:12 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.927: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 12:56:03.927: INFO: sonobuoy from sonobuoy started at 2022-08-27 11:57:36 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.927: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 27 12:56:03.927: INFO: sonobuoy-e2e-job-23201a167722436f from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 12:56:03.927: INFO: 	Container e2e ready: true, restart count 0
Aug 27 12:56:03.927: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 12:56:03.927: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-lbr5l from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 12:56:03.927: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 12:56:03.927: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 12:56:03.927: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-65-143 before test
Aug 27 12:56:03.944: INFO: default-http-backend-kubernetes-worker-6c59687bf6-srhcj from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 27 12:56:03.945: INFO: nginx-ingress-controller-kubernetes-worker-m5mkd from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 12:56:03.945: INFO: coredns-86c98bfcdb-klnhg from kube-system started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container coredns ready: true, restart count 0
Aug 27 12:56:03.945: INFO: kube-state-metrics-5cdbfd47b4-44nkd from kube-system started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 27 12:56:03.945: INFO: metrics-server-v0.5.2-6bfd958b56-bvvbj from kube-system started at 2022-08-27 11:53:07 +0000 UTC (2 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container metrics-server ready: true, restart count 0
Aug 27 12:56:03.945: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 27 12:56:03.945: INFO: dashboard-metrics-scraper-8669b59d4f-x9mgm from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 27 12:56:03.945: INFO: kubernetes-dashboard-585fc6bc87-gp4f6 from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 27 12:56:03.945: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-spbcd from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 12:56:03.945: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 12:56:03.945: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-257f7109-7640-4cc9-962c-4a886e790e7c 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-257f7109-7640-4cc9-962c-4a886e790e7c off the node ip-172-31-31-152
STEP: verifying the node doesn't have the label kubernetes.io/e2e-257f7109-7640-4cc9-962c-4a886e790e7c
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:56:08.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-9782" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":216,"skipped":4204,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:56:08.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4052
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:56:09.411: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:56:12.464: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:56:12.477: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2557-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:56:15.626: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4052" for this suite.
STEP: Destroying namespace "webhook-4052-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.633 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":217,"skipped":4256,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:56:15.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9647
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 27 12:56:15.953: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9647" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":218,"skipped":4273,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:56:15.972: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-1528
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:56:16.121: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Aug 27 12:56:17.191: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 27 12:56:17.204: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-1528" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":219,"skipped":4293,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:56:17.224: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-761
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-761
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-761
I0827 12:56:17.498480      22 runners.go:193] Created replication controller with name: externalname-service, namespace: services-761, replica count: 2
I0827 12:56:20.549696      22 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 12:56:20.549: INFO: Creating new exec pod
Aug 27 12:56:23.604: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-761 exec execpodnrtm7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Aug 27 12:56:23.754: INFO: stderr: "+ + echonc -v hostName -t\n -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Aug 27 12:56:23.754: INFO: stdout: "externalname-service-nlxb7"
Aug 27 12:56:23.754: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-761 exec execpodnrtm7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.201 80'
Aug 27 12:56:23.911: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.201 80\nConnection to 10.152.183.201 80 port [tcp/http] succeeded!\n"
Aug 27 12:56:23.911: INFO: stdout: ""
Aug 27 12:56:24.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-761 exec execpodnrtm7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.201 80'
Aug 27 12:56:25.071: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.201 80\nConnection to 10.152.183.201 80 port [tcp/http] succeeded!\n"
Aug 27 12:56:25.071: INFO: stdout: ""
Aug 27 12:56:25.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-761 exec execpodnrtm7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.201 80'
Aug 27 12:56:26.102: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.201 80\nConnection to 10.152.183.201 80 port [tcp/http] succeeded!\n"
Aug 27 12:56:26.102: INFO: stdout: "externalname-service-nlxb7"
Aug 27 12:56:26.102: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:56:26.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-761" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.928 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":220,"skipped":4296,"failed":0}
S
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:56:26.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-6763
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Aug 27 12:56:26.341: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27036 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:56:26.341: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27036 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Aug 27 12:56:26.358: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27037 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:56:26.358: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27037 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Aug 27 12:56:26.373: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27038 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:56:26.373: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27038 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Aug 27 12:56:26.392: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27039 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:56:26.393: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6763  27799828-ba53-46a6-8d1a-d25e2e308d83 27039 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Aug 27 12:56:26.400: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6763  39434b01-2023-4ae4-9a02-5f4d7604251d 27040 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:56:26.400: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6763  39434b01-2023-4ae4-9a02-5f4d7604251d 27040 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Aug 27 12:56:36.419: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6763  39434b01-2023-4ae4-9a02-5f4d7604251d 27104 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 12:56:36.419: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6763  39434b01-2023-4ae4-9a02-5f4d7604251d 27104 0 2022-08-27 12:56:26 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-08-27 12:56:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 27 12:56:46.419: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-6763" for this suite.

• [SLOW TEST:20.294 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":221,"skipped":4297,"failed":0}
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:56:46.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-5722
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Aug 27 12:56:46.684: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 27 12:57:46.731: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:57:46.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-1646
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Aug 27 12:57:48.973: INFO: found a healthy node: ip-172-31-31-152
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:58:01.133: INFO: pods created so far: [1 1 1]
Aug 27 12:58:01.133: INFO: length of pods created so far: 3
Aug 27 12:58:03.159: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Aug 27 12:58:10.163: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-1646" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Aug 27 12:58:10.280: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-5722" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:83.940 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":222,"skipped":4299,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:10.386: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-9026
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 12:58:10.995: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 12:58:14.044: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:58:14.176: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-9026" for this suite.
STEP: Destroying namespace "webhook-9026-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":223,"skipped":4313,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:14.316: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1920
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 12:58:14.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1920 create -f -'
Aug 27 12:58:14.842: INFO: stderr: ""
Aug 27 12:58:14.842: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Aug 27 12:58:14.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1920 create -f -'
Aug 27 12:58:15.104: INFO: stderr: ""
Aug 27 12:58:15.104: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 27 12:58:16.113: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 12:58:16.113: INFO: Found 1 / 1
Aug 27 12:58:16.113: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 27 12:58:16.129: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 12:58:16.129: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 27 12:58:16.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1920 describe pod agnhost-primary-stvf8'
Aug 27 12:58:16.233: INFO: stderr: ""
Aug 27 12:58:16.233: INFO: stdout: "Name:         agnhost-primary-stvf8\nNamespace:    kubectl-1920\nPriority:     0\nNode:         ip-172-31-5-213/172.31.5.213\nStart Time:   Sat, 27 Aug 2022 12:58:14 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           192.168.163.86\nIPs:\n  IP:           192.168.163.86\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://1d30592920bd750f07596a6362ea14a38ead27c1561f155bf0305008602b8b9c\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 27 Aug 2022 12:58:15 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-fbrvj (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-fbrvj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-1920/agnhost-primary-stvf8 to ip-172-31-5-213\n  Normal  Pulled     1s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
Aug 27 12:58:16.233: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1920 describe rc agnhost-primary'
Aug 27 12:58:16.324: INFO: stderr: ""
Aug 27 12:58:16.324: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1920\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-stvf8\n"
Aug 27 12:58:16.324: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1920 describe service agnhost-primary'
Aug 27 12:58:16.416: INFO: stderr: ""
Aug 27 12:58:16.416: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1920\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.125\nIPs:               10.152.183.125\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.163.86:6379\nSession Affinity:  None\nEvents:            <none>\n"
Aug 27 12:58:16.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1920 describe node ip-172-31-10-46'
Aug 27 12:58:16.534: INFO: stderr: ""
Aug 27 12:58:16.534: INFO: stdout: "Name:               ip-172-31-10-46\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-10-46\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 27 Aug 2022 11:51:09 +0000\nTaints:             juju.is/kubernetes-control-plane=true:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-10-46\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 27 Aug 2022 12:58:14 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Sat, 27 Aug 2022 12:54:31 +0000   Sat, 27 Aug 2022 11:51:09 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Sat, 27 Aug 2022 12:54:31 +0000   Sat, 27 Aug 2022 11:51:09 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Sat, 27 Aug 2022 12:54:31 +0000   Sat, 27 Aug 2022 11:51:09 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Sat, 27 Aug 2022 12:54:31 +0000   Sat, 27 Aug 2022 11:51:19 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.10.46\n  Hostname:    ip-172-31-10-46\nCapacity:\n  cpu:                4\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16240156Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16137756Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec28808b6b8a139c4cde42940a7f501b\n  System UUID:                ec28808b-6b8a-139c-4cde-42940a7f501b\n  Boot ID:                    cd82009f-c712-4b52-9be3-bba128937185\n  Kernel Version:             5.15.0-1017-aws\n  OS Image:                   Ubuntu 20.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.9\n  Kubelet Version:            v1.24.4\n  Kube-Proxy Version:         v1.24.4\nNon-terminated Pods:          (1 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-tn57d    0 (0%)        0 (0%)      0 (0%)           0 (0%)         60m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-1Gi      0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:              <none>\n"
Aug 27 12:58:16.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1920 describe namespace kubectl-1920'
Aug 27 12:58:16.620: INFO: stderr: ""
Aug 27 12:58:16.620: INFO: stdout: "Name:         kubectl-1920\nLabels:       e2e-framework=kubectl\n              e2e-run=cba14607-0e8d-46b3-a35e-bac550511989\n              kubernetes.io/metadata.name=kubectl-1920\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 12:58:16.620: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1920" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":224,"skipped":4365,"failed":0}
S
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:16.635: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1309
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1309
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Aug 27 12:58:16.779: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Aug 27 12:58:16.905: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:58:18.913: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:58:20.917: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:58:22.924: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:58:24.933: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:58:26.912: INFO: The status of Pod netserver-0 is Running (Ready = false)
Aug 27 12:58:28.922: INFO: The status of Pod netserver-0 is Running (Ready = true)
Aug 27 12:58:28.937: INFO: The status of Pod netserver-1 is Running (Ready = true)
Aug 27 12:58:28.953: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Aug 27 12:58:31.002: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Aug 27 12:58:31.002: INFO: Breadth first check of 192.168.233.139 on host 172.31.31.152...
Aug 27 12:58:31.007: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.233.162:9080/dial?request=hostname&protocol=http&host=192.168.233.139&port=8083&tries=1'] Namespace:pod-network-test-1309 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:58:31.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:58:31.007: INFO: ExecWithOptions: Clientset creation
Aug 27 12:58:31.008: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1309/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.233.162%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.233.139%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 27 12:58:31.100: INFO: Waiting for responses: map[]
Aug 27 12:58:31.100: INFO: reached 192.168.233.139 after 0/1 tries
Aug 27 12:58:31.100: INFO: Breadth first check of 192.168.163.81 on host 172.31.5.213...
Aug 27 12:58:31.107: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.233.162:9080/dial?request=hostname&protocol=http&host=192.168.163.81&port=8083&tries=1'] Namespace:pod-network-test-1309 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:58:31.107: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:58:31.108: INFO: ExecWithOptions: Clientset creation
Aug 27 12:58:31.108: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1309/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.233.162%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.163.81%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 27 12:58:31.193: INFO: Waiting for responses: map[]
Aug 27 12:58:31.193: INFO: reached 192.168.163.81 after 0/1 tries
Aug 27 12:58:31.193: INFO: Breadth first check of 192.168.50.107 on host 172.31.65.143...
Aug 27 12:58:31.199: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.233.162:9080/dial?request=hostname&protocol=http&host=192.168.50.107&port=8083&tries=1'] Namespace:pod-network-test-1309 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 12:58:31.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 12:58:31.199: INFO: ExecWithOptions: Clientset creation
Aug 27 12:58:31.200: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1309/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.233.162%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.50.107%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Aug 27 12:58:31.284: INFO: Waiting for responses: map[]
Aug 27 12:58:31.284: INFO: reached 192.168.50.107 after 0/1 tries
Aug 27 12:58:31.284: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Aug 27 12:58:31.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1309" for this suite.

• [SLOW TEST:14.667 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":225,"skipped":4366,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:31.302: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7886
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 27 12:58:34.216: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7886" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":226,"skipped":4372,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:34.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4434
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 27 12:58:34.525: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:58:36.533: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 27 12:58:36.562: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 27 12:58:38.578: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 27 12:58:38.630: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 27 12:58:38.636: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 27 12:58:40.637: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 27 12:58:40.646: INFO: Pod pod-with-poststart-exec-hook still exists
Aug 27 12:58:42.636: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Aug 27 12:58:42.662: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 27 12:58:42.662: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4434" for this suite.

• [SLOW TEST:8.367 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":227,"skipped":4380,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:42.683: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8361
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-efb4b6d2-6445-40d0-a93e-ee8b5fd5e2db
STEP: Creating a pod to test consume secrets
Aug 27 12:58:42.880: INFO: Waiting up to 5m0s for pod "pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9" in namespace "secrets-8361" to be "Succeeded or Failed"
Aug 27 12:58:42.891: INFO: Pod "pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9": Phase="Pending", Reason="", readiness=false. Elapsed: 10.032096ms
Aug 27 12:58:44.902: INFO: Pod "pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.02172131s
Aug 27 12:58:46.913: INFO: Pod "pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032570615s
STEP: Saw pod success
Aug 27 12:58:46.913: INFO: Pod "pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9" satisfied condition "Succeeded or Failed"
Aug 27 12:58:46.921: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9 container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 12:58:46.948: INFO: Waiting for pod pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9 to disappear
Aug 27 12:58:46.953: INFO: Pod pod-secrets-4fa7d904-2de3-4fba-acac-b91bf957c9e9 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 12:58:46.953: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8361" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":228,"skipped":4393,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:46.979: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-9990
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 27 12:58:49.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-9990" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":229,"skipped":4421,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:58:49.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-141
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Aug 27 12:58:49.365: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 12:59:10.185: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-141" for this suite.

• [SLOW TEST:21.021 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":230,"skipped":4452,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:59:10.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-5dd17773-9236-424a-bb66-e6368f41f778
STEP: Creating a pod to test consume configMaps
Aug 27 12:59:10.410: INFO: Waiting up to 5m0s for pod "pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc" in namespace "configmap-1565" to be "Succeeded or Failed"
Aug 27 12:59:10.415: INFO: Pod "pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc": Phase="Pending", Reason="", readiness=false. Elapsed: 5.193392ms
Aug 27 12:59:12.427: INFO: Pod "pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017230834s
Aug 27 12:59:14.442: INFO: Pod "pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032024438s
STEP: Saw pod success
Aug 27 12:59:14.442: INFO: Pod "pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc" satisfied condition "Succeeded or Failed"
Aug 27 12:59:14.447: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc container agnhost-container: <nil>
STEP: delete the pod
Aug 27 12:59:14.487: INFO: Waiting for pod pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc to disappear
Aug 27 12:59:14.493: INFO: Pod pod-configmaps-ee7e1361-6da9-4ab1-8dbb-08ef53579cbc no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 12:59:14.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1565" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":231,"skipped":4455,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:59:14.512: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7801
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 12:59:14.667: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7801" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":232,"skipped":4458,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:59:14.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-9248
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
W0827 12:59:54.938707      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 27 12:59:54.938: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

Aug 27 12:59:54.939: INFO: Deleting pod "simpletest.rc-2z4p6" in namespace "gc-9248"
Aug 27 12:59:54.966: INFO: Deleting pod "simpletest.rc-46nsl" in namespace "gc-9248"
Aug 27 12:59:54.988: INFO: Deleting pod "simpletest.rc-4bsnv" in namespace "gc-9248"
Aug 27 12:59:55.006: INFO: Deleting pod "simpletest.rc-4cf56" in namespace "gc-9248"
Aug 27 12:59:55.027: INFO: Deleting pod "simpletest.rc-4gl8r" in namespace "gc-9248"
Aug 27 12:59:55.047: INFO: Deleting pod "simpletest.rc-4p2d6" in namespace "gc-9248"
Aug 27 12:59:55.067: INFO: Deleting pod "simpletest.rc-5dhwl" in namespace "gc-9248"
Aug 27 12:59:55.084: INFO: Deleting pod "simpletest.rc-5qmp6" in namespace "gc-9248"
Aug 27 12:59:55.110: INFO: Deleting pod "simpletest.rc-5s528" in namespace "gc-9248"
Aug 27 12:59:55.129: INFO: Deleting pod "simpletest.rc-5swnj" in namespace "gc-9248"
Aug 27 12:59:55.149: INFO: Deleting pod "simpletest.rc-6crvf" in namespace "gc-9248"
Aug 27 12:59:55.179: INFO: Deleting pod "simpletest.rc-6shx6" in namespace "gc-9248"
Aug 27 12:59:55.200: INFO: Deleting pod "simpletest.rc-7ngdm" in namespace "gc-9248"
Aug 27 12:59:55.227: INFO: Deleting pod "simpletest.rc-7rwqx" in namespace "gc-9248"
Aug 27 12:59:55.252: INFO: Deleting pod "simpletest.rc-7w4mr" in namespace "gc-9248"
Aug 27 12:59:55.272: INFO: Deleting pod "simpletest.rc-88cx9" in namespace "gc-9248"
Aug 27 12:59:55.290: INFO: Deleting pod "simpletest.rc-8frfz" in namespace "gc-9248"
Aug 27 12:59:55.315: INFO: Deleting pod "simpletest.rc-8nbw7" in namespace "gc-9248"
Aug 27 12:59:55.342: INFO: Deleting pod "simpletest.rc-8pctr" in namespace "gc-9248"
Aug 27 12:59:55.365: INFO: Deleting pod "simpletest.rc-8s7z6" in namespace "gc-9248"
Aug 27 12:59:55.394: INFO: Deleting pod "simpletest.rc-94mdf" in namespace "gc-9248"
Aug 27 12:59:55.414: INFO: Deleting pod "simpletest.rc-9vznp" in namespace "gc-9248"
Aug 27 12:59:55.438: INFO: Deleting pod "simpletest.rc-9xb4q" in namespace "gc-9248"
Aug 27 12:59:55.458: INFO: Deleting pod "simpletest.rc-bdppx" in namespace "gc-9248"
Aug 27 12:59:55.475: INFO: Deleting pod "simpletest.rc-c4k82" in namespace "gc-9248"
Aug 27 12:59:55.492: INFO: Deleting pod "simpletest.rc-cbj7g" in namespace "gc-9248"
Aug 27 12:59:55.513: INFO: Deleting pod "simpletest.rc-cfhgt" in namespace "gc-9248"
Aug 27 12:59:55.561: INFO: Deleting pod "simpletest.rc-clq2w" in namespace "gc-9248"
Aug 27 12:59:55.583: INFO: Deleting pod "simpletest.rc-cw2th" in namespace "gc-9248"
Aug 27 12:59:55.611: INFO: Deleting pod "simpletest.rc-czbxg" in namespace "gc-9248"
Aug 27 12:59:55.638: INFO: Deleting pod "simpletest.rc-f6qxz" in namespace "gc-9248"
Aug 27 12:59:55.657: INFO: Deleting pod "simpletest.rc-fds2l" in namespace "gc-9248"
Aug 27 12:59:55.674: INFO: Deleting pod "simpletest.rc-fn52c" in namespace "gc-9248"
Aug 27 12:59:55.712: INFO: Deleting pod "simpletest.rc-fx9lt" in namespace "gc-9248"
Aug 27 12:59:55.734: INFO: Deleting pod "simpletest.rc-fzp74" in namespace "gc-9248"
Aug 27 12:59:55.762: INFO: Deleting pod "simpletest.rc-g2cbw" in namespace "gc-9248"
Aug 27 12:59:55.797: INFO: Deleting pod "simpletest.rc-g2vq9" in namespace "gc-9248"
Aug 27 12:59:55.835: INFO: Deleting pod "simpletest.rc-g5z7f" in namespace "gc-9248"
Aug 27 12:59:55.868: INFO: Deleting pod "simpletest.rc-g7h5t" in namespace "gc-9248"
Aug 27 12:59:55.891: INFO: Deleting pod "simpletest.rc-gk8g8" in namespace "gc-9248"
Aug 27 12:59:55.919: INFO: Deleting pod "simpletest.rc-gxmmz" in namespace "gc-9248"
Aug 27 12:59:55.952: INFO: Deleting pod "simpletest.rc-h4dqz" in namespace "gc-9248"
Aug 27 12:59:55.976: INFO: Deleting pod "simpletest.rc-h4vk4" in namespace "gc-9248"
Aug 27 12:59:55.997: INFO: Deleting pod "simpletest.rc-jkfxx" in namespace "gc-9248"
Aug 27 12:59:56.015: INFO: Deleting pod "simpletest.rc-jq8k5" in namespace "gc-9248"
Aug 27 12:59:56.033: INFO: Deleting pod "simpletest.rc-k42wq" in namespace "gc-9248"
Aug 27 12:59:56.062: INFO: Deleting pod "simpletest.rc-kvpd2" in namespace "gc-9248"
Aug 27 12:59:56.082: INFO: Deleting pod "simpletest.rc-kwv96" in namespace "gc-9248"
Aug 27 12:59:56.106: INFO: Deleting pod "simpletest.rc-lcvm7" in namespace "gc-9248"
Aug 27 12:59:56.127: INFO: Deleting pod "simpletest.rc-lh9nf" in namespace "gc-9248"
Aug 27 12:59:56.152: INFO: Deleting pod "simpletest.rc-lhgfz" in namespace "gc-9248"
Aug 27 12:59:56.173: INFO: Deleting pod "simpletest.rc-lktwc" in namespace "gc-9248"
Aug 27 12:59:56.189: INFO: Deleting pod "simpletest.rc-lp8jb" in namespace "gc-9248"
Aug 27 12:59:56.209: INFO: Deleting pod "simpletest.rc-lqhn4" in namespace "gc-9248"
Aug 27 12:59:56.229: INFO: Deleting pod "simpletest.rc-mc6xd" in namespace "gc-9248"
Aug 27 12:59:56.251: INFO: Deleting pod "simpletest.rc-mp8pr" in namespace "gc-9248"
Aug 27 12:59:56.267: INFO: Deleting pod "simpletest.rc-msg9m" in namespace "gc-9248"
Aug 27 12:59:56.294: INFO: Deleting pod "simpletest.rc-mvzcw" in namespace "gc-9248"
Aug 27 12:59:56.314: INFO: Deleting pod "simpletest.rc-n4ck8" in namespace "gc-9248"
Aug 27 12:59:56.335: INFO: Deleting pod "simpletest.rc-n55cw" in namespace "gc-9248"
Aug 27 12:59:56.431: INFO: Deleting pod "simpletest.rc-n6g84" in namespace "gc-9248"
Aug 27 12:59:56.457: INFO: Deleting pod "simpletest.rc-nb22p" in namespace "gc-9248"
Aug 27 12:59:56.481: INFO: Deleting pod "simpletest.rc-nh8qw" in namespace "gc-9248"
Aug 27 12:59:56.504: INFO: Deleting pod "simpletest.rc-njgcv" in namespace "gc-9248"
Aug 27 12:59:56.524: INFO: Deleting pod "simpletest.rc-nktkv" in namespace "gc-9248"
Aug 27 12:59:56.543: INFO: Deleting pod "simpletest.rc-nn8j9" in namespace "gc-9248"
Aug 27 12:59:56.561: INFO: Deleting pod "simpletest.rc-nvtj7" in namespace "gc-9248"
Aug 27 12:59:56.574: INFO: Deleting pod "simpletest.rc-p6f49" in namespace "gc-9248"
Aug 27 12:59:56.588: INFO: Deleting pod "simpletest.rc-pbvf9" in namespace "gc-9248"
Aug 27 12:59:56.608: INFO: Deleting pod "simpletest.rc-pc7hv" in namespace "gc-9248"
Aug 27 12:59:56.630: INFO: Deleting pod "simpletest.rc-pvm7t" in namespace "gc-9248"
Aug 27 12:59:56.652: INFO: Deleting pod "simpletest.rc-pvww7" in namespace "gc-9248"
Aug 27 12:59:56.673: INFO: Deleting pod "simpletest.rc-pz4j4" in namespace "gc-9248"
Aug 27 12:59:56.695: INFO: Deleting pod "simpletest.rc-q65m7" in namespace "gc-9248"
Aug 27 12:59:56.717: INFO: Deleting pod "simpletest.rc-q6w45" in namespace "gc-9248"
Aug 27 12:59:56.740: INFO: Deleting pod "simpletest.rc-q8ztc" in namespace "gc-9248"
Aug 27 12:59:56.757: INFO: Deleting pod "simpletest.rc-qlhbj" in namespace "gc-9248"
Aug 27 12:59:56.773: INFO: Deleting pod "simpletest.rc-r67j5" in namespace "gc-9248"
Aug 27 12:59:56.793: INFO: Deleting pod "simpletest.rc-rpkgm" in namespace "gc-9248"
Aug 27 12:59:56.817: INFO: Deleting pod "simpletest.rc-rt2nd" in namespace "gc-9248"
Aug 27 12:59:56.841: INFO: Deleting pod "simpletest.rc-sgs92" in namespace "gc-9248"
Aug 27 12:59:56.858: INFO: Deleting pod "simpletest.rc-shwwr" in namespace "gc-9248"
Aug 27 12:59:56.880: INFO: Deleting pod "simpletest.rc-t5pb8" in namespace "gc-9248"
Aug 27 12:59:56.899: INFO: Deleting pod "simpletest.rc-tgtlw" in namespace "gc-9248"
Aug 27 12:59:56.923: INFO: Deleting pod "simpletest.rc-tkpq7" in namespace "gc-9248"
Aug 27 12:59:56.938: INFO: Deleting pod "simpletest.rc-ttwzr" in namespace "gc-9248"
Aug 27 12:59:56.958: INFO: Deleting pod "simpletest.rc-v4sww" in namespace "gc-9248"
Aug 27 12:59:56.975: INFO: Deleting pod "simpletest.rc-v8cdc" in namespace "gc-9248"
Aug 27 12:59:56.991: INFO: Deleting pod "simpletest.rc-vh9lj" in namespace "gc-9248"
Aug 27 12:59:57.047: INFO: Deleting pod "simpletest.rc-vr7jg" in namespace "gc-9248"
Aug 27 12:59:57.073: INFO: Deleting pod "simpletest.rc-vrbjx" in namespace "gc-9248"
Aug 27 12:59:57.101: INFO: Deleting pod "simpletest.rc-vt8hz" in namespace "gc-9248"
Aug 27 12:59:57.129: INFO: Deleting pod "simpletest.rc-wctrz" in namespace "gc-9248"
Aug 27 12:59:57.176: INFO: Deleting pod "simpletest.rc-wmk6w" in namespace "gc-9248"
Aug 27 12:59:57.239: INFO: Deleting pod "simpletest.rc-wvb2s" in namespace "gc-9248"
Aug 27 12:59:57.282: INFO: Deleting pod "simpletest.rc-xph56" in namespace "gc-9248"
Aug 27 12:59:57.332: INFO: Deleting pod "simpletest.rc-xslqw" in namespace "gc-9248"
Aug 27 12:59:57.386: INFO: Deleting pod "simpletest.rc-z8plt" in namespace "gc-9248"
Aug 27 12:59:57.429: INFO: Deleting pod "simpletest.rc-znf7j" in namespace "gc-9248"
Aug 27 12:59:57.477: INFO: Deleting pod "simpletest.rc-zzfgj" in namespace "gc-9248"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 27 12:59:57.524: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-9248" for this suite.

• [SLOW TEST:42.921 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":233,"skipped":4472,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 12:59:57.620: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9920
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Aug 27 12:59:57.831: INFO: Waiting up to 5m0s for pod "pod-a4be40e1-5f67-415d-8062-65cb53745348" in namespace "emptydir-9920" to be "Succeeded or Failed"
Aug 27 12:59:57.837: INFO: Pod "pod-a4be40e1-5f67-415d-8062-65cb53745348": Phase="Pending", Reason="", readiness=false. Elapsed: 5.865652ms
Aug 27 12:59:59.846: INFO: Pod "pod-a4be40e1-5f67-415d-8062-65cb53745348": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015445187s
Aug 27 13:00:01.862: INFO: Pod "pod-a4be40e1-5f67-415d-8062-65cb53745348": Phase="Pending", Reason="", readiness=false. Elapsed: 4.030984484s
Aug 27 13:00:03.874: INFO: Pod "pod-a4be40e1-5f67-415d-8062-65cb53745348": Phase="Pending", Reason="", readiness=false. Elapsed: 6.04331276s
Aug 27 13:00:05.883: INFO: Pod "pod-a4be40e1-5f67-415d-8062-65cb53745348": Phase="Pending", Reason="", readiness=false. Elapsed: 8.051868857s
Aug 27 13:00:07.894: INFO: Pod "pod-a4be40e1-5f67-415d-8062-65cb53745348": Phase="Succeeded", Reason="", readiness=false. Elapsed: 10.063130837s
STEP: Saw pod success
Aug 27 13:00:07.894: INFO: Pod "pod-a4be40e1-5f67-415d-8062-65cb53745348" satisfied condition "Succeeded or Failed"
Aug 27 13:00:07.905: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-a4be40e1-5f67-415d-8062-65cb53745348 container test-container: <nil>
STEP: delete the pod
Aug 27 13:00:07.943: INFO: Waiting for pod pod-a4be40e1-5f67-415d-8062-65cb53745348 to disappear
Aug 27 13:00:07.948: INFO: Pod pod-a4be40e1-5f67-415d-8062-65cb53745348 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 13:00:07.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9920" for this suite.

• [SLOW TEST:10.355 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":234,"skipped":4514,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:07.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1560
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Aug 27 13:00:08.164: INFO: Waiting up to 5m0s for pod "pod-586cf29d-fdbe-4171-8efe-54a86f515b59" in namespace "emptydir-1560" to be "Succeeded or Failed"
Aug 27 13:00:08.170: INFO: Pod "pod-586cf29d-fdbe-4171-8efe-54a86f515b59": Phase="Pending", Reason="", readiness=false. Elapsed: 5.698297ms
Aug 27 13:00:10.182: INFO: Pod "pod-586cf29d-fdbe-4171-8efe-54a86f515b59": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017523299s
Aug 27 13:00:12.188: INFO: Pod "pod-586cf29d-fdbe-4171-8efe-54a86f515b59": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.024437996s
STEP: Saw pod success
Aug 27 13:00:12.189: INFO: Pod "pod-586cf29d-fdbe-4171-8efe-54a86f515b59" satisfied condition "Succeeded or Failed"
Aug 27 13:00:12.193: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-586cf29d-fdbe-4171-8efe-54a86f515b59 container test-container: <nil>
STEP: delete the pod
Aug 27 13:00:12.229: INFO: Waiting for pod pod-586cf29d-fdbe-4171-8efe-54a86f515b59 to disappear
Aug 27 13:00:12.234: INFO: Pod pod-586cf29d-fdbe-4171-8efe-54a86f515b59 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 13:00:12.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1560" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":235,"skipped":4519,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:12.257: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4716
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 13:00:12.429: INFO: Waiting up to 5m0s for pod "downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012" in namespace "projected-4716" to be "Succeeded or Failed"
Aug 27 13:00:12.439: INFO: Pod "downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012": Phase="Pending", Reason="", readiness=false. Elapsed: 10.004811ms
Aug 27 13:00:14.453: INFO: Pod "downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012": Phase="Running", Reason="", readiness=false. Elapsed: 2.024454329s
Aug 27 13:00:16.466: INFO: Pod "downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036530072s
STEP: Saw pod success
Aug 27 13:00:16.466: INFO: Pod "downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012" satisfied condition "Succeeded or Failed"
Aug 27 13:00:16.474: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012 container client-container: <nil>
STEP: delete the pod
Aug 27 13:00:16.512: INFO: Waiting for pod downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012 to disappear
Aug 27 13:00:16.522: INFO: Pod downwardapi-volume-c5348621-fe46-4960-b254-debadf50d012 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 13:00:16.522: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4716" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":236,"skipped":4533,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:16.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-5986
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 27 13:00:16.696: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-5986" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":237,"skipped":4548,"failed":0}
SSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:16.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5537
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-5306608d-af97-4dd6-be13-87cce8eb2bc7
STEP: Creating a pod to test consume secrets
Aug 27 13:00:16.909: INFO: Waiting up to 5m0s for pod "pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce" in namespace "secrets-5537" to be "Succeeded or Failed"
Aug 27 13:00:16.915: INFO: Pod "pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce": Phase="Pending", Reason="", readiness=false. Elapsed: 6.45887ms
Aug 27 13:00:18.926: INFO: Pod "pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017516397s
Aug 27 13:00:20.937: INFO: Pod "pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028021976s
STEP: Saw pod success
Aug 27 13:00:20.937: INFO: Pod "pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce" satisfied condition "Succeeded or Failed"
Aug 27 13:00:20.942: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 13:00:20.980: INFO: Waiting for pod pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce to disappear
Aug 27 13:00:20.986: INFO: Pod pod-secrets-10277947-c5aa-4e40-871a-cc6e3f1d22ce no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:00:20.986: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5537" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":238,"skipped":4554,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:21.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-133
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 13:00:21.879: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 13:00:24.965: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:00:25.104: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-133" for this suite.
STEP: Destroying namespace "webhook-133-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":239,"skipped":4565,"failed":0}

------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:25.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-5470
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Aug 27 13:00:25.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 create -f -'
Aug 27 13:00:26.334: INFO: stderr: ""
Aug 27 13:00:26.334: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Aug 27 13:00:26.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 13:00:26.424: INFO: stderr: ""
Aug 27 13:00:26.424: INFO: stdout: "update-demo-nautilus-lc5mq update-demo-nautilus-vbngr "
Aug 27 13:00:26.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods update-demo-nautilus-lc5mq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 13:00:26.511: INFO: stderr: ""
Aug 27 13:00:26.511: INFO: stdout: ""
Aug 27 13:00:26.511: INFO: update-demo-nautilus-lc5mq is created but not running
Aug 27 13:00:31.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Aug 27 13:00:31.606: INFO: stderr: ""
Aug 27 13:00:31.606: INFO: stdout: "update-demo-nautilus-lc5mq update-demo-nautilus-vbngr "
Aug 27 13:00:31.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods update-demo-nautilus-lc5mq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 13:00:31.686: INFO: stderr: ""
Aug 27 13:00:31.686: INFO: stdout: "true"
Aug 27 13:00:31.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods update-demo-nautilus-lc5mq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 13:00:31.773: INFO: stderr: ""
Aug 27 13:00:31.773: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 13:00:31.773: INFO: validating pod update-demo-nautilus-lc5mq
Aug 27 13:00:31.781: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 13:00:31.781: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 13:00:31.781: INFO: update-demo-nautilus-lc5mq is verified up and running
Aug 27 13:00:31.781: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods update-demo-nautilus-vbngr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Aug 27 13:00:31.857: INFO: stderr: ""
Aug 27 13:00:31.857: INFO: stdout: "true"
Aug 27 13:00:31.857: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods update-demo-nautilus-vbngr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Aug 27 13:00:31.944: INFO: stderr: ""
Aug 27 13:00:31.944: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Aug 27 13:00:31.944: INFO: validating pod update-demo-nautilus-vbngr
Aug 27 13:00:31.953: INFO: got data: {
  "image": "nautilus.jpg"
}

Aug 27 13:00:31.953: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Aug 27 13:00:31.953: INFO: update-demo-nautilus-vbngr is verified up and running
STEP: using delete to clean up resources
Aug 27 13:00:31.953: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 delete --grace-period=0 --force -f -'
Aug 27 13:00:32.034: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Aug 27 13:00:32.034: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Aug 27 13:00:32.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get rc,svc -l name=update-demo --no-headers'
Aug 27 13:00:32.129: INFO: stderr: "No resources found in kubectl-5470 namespace.\n"
Aug 27 13:00:32.129: INFO: stdout: ""
Aug 27 13:00:32.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-5470 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Aug 27 13:00:32.222: INFO: stderr: ""
Aug 27 13:00:32.222: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:00:32.222: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-5470" for this suite.

• [SLOW TEST:7.018 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":240,"skipped":4565,"failed":0}
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:32.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-1077
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Aug 27 13:00:32.394: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Aug 27 13:00:32.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-1077" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":241,"skipped":4565,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:32.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-3160
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-pkvz
STEP: Creating a pod to test atomic-volume-subpath
Aug 27 13:00:32.630: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-pkvz" in namespace "subpath-3160" to be "Succeeded or Failed"
Aug 27 13:00:32.635: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Pending", Reason="", readiness=false. Elapsed: 5.104827ms
Aug 27 13:00:34.648: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 2.017546945s
Aug 27 13:00:36.659: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 4.028509916s
Aug 27 13:00:38.671: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 6.040994793s
Aug 27 13:00:40.685: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 8.055020869s
Aug 27 13:00:42.693: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 10.062973866s
Aug 27 13:00:44.701: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 12.07115898s
Aug 27 13:00:46.712: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 14.081997936s
Aug 27 13:00:48.723: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 16.093174143s
Aug 27 13:00:50.738: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 18.10759779s
Aug 27 13:00:52.745: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=true. Elapsed: 20.11495722s
Aug 27 13:00:54.756: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Running", Reason="", readiness=false. Elapsed: 22.126136797s
Aug 27 13:00:56.767: INFO: Pod "pod-subpath-test-projected-pkvz": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.136278423s
STEP: Saw pod success
Aug 27 13:00:56.767: INFO: Pod "pod-subpath-test-projected-pkvz" satisfied condition "Succeeded or Failed"
Aug 27 13:00:56.773: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-subpath-test-projected-pkvz container test-container-subpath-projected-pkvz: <nil>
STEP: delete the pod
Aug 27 13:00:56.808: INFO: Waiting for pod pod-subpath-test-projected-pkvz to disappear
Aug 27 13:00:56.816: INFO: Pod pod-subpath-test-projected-pkvz no longer exists
STEP: Deleting pod pod-subpath-test-projected-pkvz
Aug 27 13:00:56.816: INFO: Deleting pod "pod-subpath-test-projected-pkvz" in namespace "subpath-3160"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 27 13:00:56.820: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-3160" for this suite.

• [SLOW TEST:24.412 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":242,"skipped":4585,"failed":0}
S
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:56.843: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-3400
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 27 13:00:57.057: INFO: starting watch
STEP: patching
STEP: updating
Aug 27 13:00:57.076: INFO: waiting for watch events with expected annotations
Aug 27 13:00:57.076: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Aug 27 13:00:57.133: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-3400" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":243,"skipped":4586,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:57.154: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-9571
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 27 13:00:59.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-9571" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":244,"skipped":4608,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:00:59.390: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7719
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7719
STEP: creating service affinity-nodeport-transition in namespace services-7719
STEP: creating replication controller affinity-nodeport-transition in namespace services-7719
I0827 13:00:59.578019      22 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-7719, replica count: 3
I0827 13:01:02.628945      22 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 13:01:02.653: INFO: Creating new exec pod
Aug 27 13:01:05.698: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7719 exec execpod-affinity4z7hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Aug 27 13:01:05.891: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Aug 27 13:01:05.891: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 13:01:05.891: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7719 exec execpod-affinity4z7hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.212 80'
Aug 27 13:01:06.069: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.212 80\nConnection to 10.152.183.212 80 port [tcp/http] succeeded!\n"
Aug 27 13:01:06.069: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 13:01:06.069: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7719 exec execpod-affinity4z7hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.152 30583'
Aug 27 13:01:06.240: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.152 30583\nConnection to 172.31.31.152 30583 port [tcp/*] succeeded!\n"
Aug 27 13:01:06.240: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 13:01:06.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7719 exec execpod-affinity4z7hp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.213 30583'
Aug 27 13:01:06.422: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.213 30583\nConnection to 172.31.5.213 30583 port [tcp/*] succeeded!\n"
Aug 27 13:01:06.422: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 13:01:06.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7719 exec execpod-affinity4z7hp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.152:30583/ ; done'
Aug 27 13:01:06.747: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n"
Aug 27 13:01:06.747: INFO: stdout: "\naffinity-nodeport-transition-6lqm6\naffinity-nodeport-transition-6lqm6\naffinity-nodeport-transition-plw96\naffinity-nodeport-transition-plw96\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-plw96\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-6lqm6\naffinity-nodeport-transition-plw96\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-6lqm6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-plw96\naffinity-nodeport-transition-bnwc6"
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-6lqm6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-6lqm6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-plw96
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-plw96
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-plw96
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-6lqm6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-plw96
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-6lqm6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-plw96
Aug 27 13:01:06.747: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:06.761: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7719 exec execpod-affinity4z7hp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.31.152:30583/ ; done'
Aug 27 13:01:07.023: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.31.152:30583/\n"
Aug 27 13:01:07.023: INFO: stdout: "\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6\naffinity-nodeport-transition-bnwc6"
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Received response from host: affinity-nodeport-transition-bnwc6
Aug 27 13:01:07.024: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7719, will wait for the garbage collector to delete the pods
Aug 27 13:01:07.110: INFO: Deleting ReplicationController affinity-nodeport-transition took: 10.72917ms
Aug 27 13:01:07.211: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 101.013973ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 13:01:09.756: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7719" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:10.389 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":245,"skipped":4623,"failed":0}
SSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:01:09.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-429
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-8b9258eb-eb3b-4811-8d90-a6b8a2c43744
STEP: Creating a pod to test consume secrets
Aug 27 13:01:09.960: INFO: Waiting up to 5m0s for pod "pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d" in namespace "secrets-429" to be "Succeeded or Failed"
Aug 27 13:01:09.969: INFO: Pod "pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d": Phase="Pending", Reason="", readiness=false. Elapsed: 9.007647ms
Aug 27 13:01:11.989: INFO: Pod "pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.029205596s
Aug 27 13:01:14.002: INFO: Pod "pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.042389531s
STEP: Saw pod success
Aug 27 13:01:14.002: INFO: Pod "pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d" satisfied condition "Succeeded or Failed"
Aug 27 13:01:14.013: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 13:01:14.049: INFO: Waiting for pod pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d to disappear
Aug 27 13:01:14.056: INFO: Pod pod-secrets-8cf1e1d0-0185-402a-b478-fa825b36946d no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:01:14.056: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-429" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":246,"skipped":4627,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:01:14.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-6747
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Aug 27 13:01:14.230: INFO: Waiting up to 1m0s for all nodes to be ready
Aug 27 13:02:14.257: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:02:14.262: INFO: Starting informer...
STEP: Starting pods...
Aug 27 13:02:14.515: INFO: Pod1 is running on ip-172-31-31-152. Tainting Node
Aug 27 13:02:16.758: INFO: Pod2 is running on ip-172-31-31-152. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Aug 27 13:02:22.784: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Aug 27 13:02:42.811: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Aug 27 13:02:42.852: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-6747" for this suite.

• [SLOW TEST:88.800 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":247,"skipped":4670,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:02:42.873: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2235
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Aug 27 13:02:43.119: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:43.119: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:43.129: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:02:43.129: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 13:02:44.139: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:44.139: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:44.147: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 27 13:02:44.147: INFO: Node ip-172-31-31-152 is running 0 daemon pod, expected 1
Aug 27 13:02:45.141: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:45.141: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:45.147: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 13:02:45.147: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Aug 27 13:02:45.180: INFO: DaemonSet pods can't tolerate node ip-172-31-10-46 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:45.180: INFO: DaemonSet pods can't tolerate node ip-172-31-36-1 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Aug 27 13:02:45.185: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Aug 27 13:02:45.185: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2235, will wait for the garbage collector to delete the pods
Aug 27 13:02:46.273: INFO: Deleting DaemonSet.extensions daemon-set took: 9.428096ms
Aug 27 13:02:46.374: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.017931ms
Aug 27 13:02:47.886: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:02:47.886: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 27 13:02:47.896: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"31698"},"items":null}

Aug 27 13:02:47.902: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"31698"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 27 13:02:47.931: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2235" for this suite.

• [SLOW TEST:5.080 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":248,"skipped":4685,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:02:47.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-2454
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Aug 27 13:02:48.153: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:02:50.164: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.65.143 on the node which pod1 resides and expect scheduled
Aug 27 13:02:50.186: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:02:52.198: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.65.143 but use UDP protocol on the node which pod2 resides
Aug 27 13:02:52.219: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:02:54.228: INFO: The status of Pod pod3 is Running (Ready = true)
Aug 27 13:02:54.244: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:02:56.251: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Aug 27 13:02:56.258: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.65.143 http://127.0.0.1:54323/hostname] Namespace:hostport-2454 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 13:02:56.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 13:02:56.259: INFO: ExecWithOptions: Clientset creation
Aug 27 13:02:56.259: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2454/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.65.143+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.65.143, port: 54323
Aug 27 13:02:56.354: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.65.143:54323/hostname] Namespace:hostport-2454 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 13:02:56.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 13:02:56.355: INFO: ExecWithOptions: Clientset creation
Aug 27 13:02:56.355: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2454/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.65.143%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.65.143, port: 54323 UDP
Aug 27 13:02:56.434: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 172.31.65.143 54323] Namespace:hostport-2454 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Aug 27 13:02:56.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 13:02:56.435: INFO: ExecWithOptions: Clientset creation
Aug 27 13:02:56.435: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2454/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+172.31.65.143+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Aug 27 13:03:01.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-2454" for this suite.

• [SLOW TEST:13.584 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":249,"skipped":4728,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:03:01.539: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1411
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-7d69af96-2fc8-4ea8-9602-adc0ac152d9e
STEP: Creating a pod to test consume configMaps
Aug 27 13:03:01.739: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad" in namespace "projected-1411" to be "Succeeded or Failed"
Aug 27 13:03:01.748: INFO: Pod "pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad": Phase="Pending", Reason="", readiness=false. Elapsed: 9.009742ms
Aug 27 13:03:03.759: INFO: Pod "pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020240358s
Aug 27 13:03:05.766: INFO: Pod "pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026491538s
STEP: Saw pod success
Aug 27 13:03:05.766: INFO: Pod "pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad" satisfied condition "Succeeded or Failed"
Aug 27 13:03:05.771: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad container agnhost-container: <nil>
STEP: delete the pod
Aug 27 13:03:05.816: INFO: Waiting for pod pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad to disappear
Aug 27 13:03:05.820: INFO: Pod pod-projected-configmaps-5a712fde-9975-43d0-86cd-06c9141f2cad no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 13:03:05.820: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1411" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":250,"skipped":4835,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:03:05.839: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3537
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 13:03:07.289: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 13:03:10.336: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:03:10.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3537" for this suite.
STEP: Destroying namespace "webhook-3537-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":251,"skipped":4854,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:03:10.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-3743
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-2c87949c-05da-4288-a23e-4d874b6190cc
STEP: Creating a pod to test consume configMaps
Aug 27 13:03:10.987: INFO: Waiting up to 5m0s for pod "pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82" in namespace "configmap-3743" to be "Succeeded or Failed"
Aug 27 13:03:10.992: INFO: Pod "pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82": Phase="Pending", Reason="", readiness=false. Elapsed: 5.529507ms
Aug 27 13:03:12.998: INFO: Pod "pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010757882s
Aug 27 13:03:15.007: INFO: Pod "pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020364715s
STEP: Saw pod success
Aug 27 13:03:15.007: INFO: Pod "pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82" satisfied condition "Succeeded or Failed"
Aug 27 13:03:15.013: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 13:03:15.042: INFO: Waiting for pod pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82 to disappear
Aug 27 13:03:15.048: INFO: Pod pod-configmaps-0610d40f-be41-4c15-ac37-506dea63da82 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 13:03:15.048: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-3743" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":252,"skipped":4867,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:03:15.066: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-8244
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Aug 27 13:03:15.281: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8244  4f31771e-bbc1-48e1-be1e-ff6937284bba 32043 0 2022-08-27 13:03:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-27 13:03:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 13:03:15.281: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8244  4f31771e-bbc1-48e1-be1e-ff6937284bba 32044 0 2022-08-27 13:03:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-27 13:03:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 13:03:15.281: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8244  4f31771e-bbc1-48e1-be1e-ff6937284bba 32045 0 2022-08-27 13:03:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-27 13:03:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Aug 27 13:03:25.336: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8244  4f31771e-bbc1-48e1-be1e-ff6937284bba 32096 0 2022-08-27 13:03:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-27 13:03:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 13:03:25.336: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8244  4f31771e-bbc1-48e1-be1e-ff6937284bba 32097 0 2022-08-27 13:03:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-27 13:03:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Aug 27 13:03:25.337: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8244  4f31771e-bbc1-48e1-be1e-ff6937284bba 32098 0 2022-08-27 13:03:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-08-27 13:03:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Aug 27 13:03:25.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-8244" for this suite.

• [SLOW TEST:10.286 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":253,"skipped":4921,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:03:25.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1541
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 13:03:25.540: INFO: Waiting up to 5m0s for pod "downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0" in namespace "projected-1541" to be "Succeeded or Failed"
Aug 27 13:03:25.549: INFO: Pod "downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0": Phase="Pending", Reason="", readiness=false. Elapsed: 9.422744ms
Aug 27 13:03:27.557: INFO: Pod "downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017125997s
Aug 27 13:03:29.572: INFO: Pod "downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.031998021s
STEP: Saw pod success
Aug 27 13:03:29.572: INFO: Pod "downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0" satisfied condition "Succeeded or Failed"
Aug 27 13:03:29.585: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0 container client-container: <nil>
STEP: delete the pod
Aug 27 13:03:29.618: INFO: Waiting for pod downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0 to disappear
Aug 27 13:03:29.622: INFO: Pod downwardapi-volume-653064eb-73f4-4b27-8adf-a0e31ab2fcf0 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 13:03:29.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1541" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":254,"skipped":4936,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:03:29.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4011
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Aug 27 13:03:29.821: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:29.821: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:29.840: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:29.840: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:29.873: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:29.873: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:29.939: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:29.939: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Aug 27 13:03:30.911: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 27 13:03:30.911: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Aug 27 13:03:31.543: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Aug 27 13:03:31.570: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 0
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.580: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.590: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.591: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.627: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.627: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:31.663: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:31.663: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:31.678: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:31.678: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:32.931: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:32.931: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:32.971: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
STEP: listing Deployments
Aug 27 13:03:32.986: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Aug 27 13:03:33.007: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Aug 27 13:03:33.020: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:33.034: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:33.064: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:33.106: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:33.125: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:34.548: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:34.967: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:35.031: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:35.049: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Aug 27 13:03:36.584: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Aug 27 13:03:36.652: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:36.652: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:36.652: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:36.652: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:36.652: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 1
Aug 27 13:03:36.653: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:36.653: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 3
Aug 27 13:03:36.653: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:36.653: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 2
Aug 27 13:03:36.653: INFO: observed Deployment test-deployment in namespace deployment-4011 with ReadyReplicas 3
STEP: deleting the Deployment
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.674: INFO: observed event type MODIFIED
Aug 27 13:03:36.675: INFO: observed event type MODIFIED
Aug 27 13:03:36.675: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 13:03:36.684: INFO: Log out all the ReplicaSets if there is no deployment created
Aug 27 13:03:36.690: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-4011  24f1e921-c20d-4f03-8bee-fc5efe6771b2 32223 3 2022-08-27 13:03:29 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 49f73df7-6ee7-4f66-9252-655d53f07453 0xc003eb12a7 0xc003eb12a8}] []  [{kube-controller-manager Update apps/v1 2022-08-27 13:03:29 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"49f73df7-6ee7-4f66-9252-655d53f07453\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 13:03:32 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003eb1330 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Aug 27 13:03:36.697: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-4011  7f2777d7-0146-4d98-8cbc-c798c7f951a0 32328 2 2022-08-27 13:03:33 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 49f73df7-6ee7-4f66-9252-655d53f07453 0xc003eb1397 0xc003eb1398}] []  [{kube-controller-manager Update apps/v1 2022-08-27 13:03:33 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"49f73df7-6ee7-4f66-9252-655d53f07453\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 13:03:34 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003eb1420 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Aug 27 13:03:36.704: INFO: pod: "test-deployment-74c6dd549b-9fn84":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-9fn84 test-deployment-74c6dd549b- deployment-4011  900f5faa-c38a-495c-92e1-7870a745e5fe 32284 0 2022-08-27 13:03:33 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 7f2777d7-0146-4d98-8cbc-c798c7f951a0 0xc004ab8677 0xc004ab8678}] []  [{kube-controller-manager Update v1 2022-08-27 13:03:33 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7f2777d7-0146-4d98-8cbc-c798c7f951a0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 13:03:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.163\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bh7hz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bh7hz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:33 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:192.168.233.163,StartTime:2022-08-27 13:03:33 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 13:03:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://46b83ba9c10227d9301a3ca32248f85ada472d4e3d4b59793a2ec131059bbd91,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.233.163,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Aug 27 13:03:36.704: INFO: pod: "test-deployment-74c6dd549b-k9z25":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-k9z25 test-deployment-74c6dd549b- deployment-4011  c7f63371-407e-4d7d-87ea-9d4d37597462 32327 0 2022-08-27 13:03:35 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 7f2777d7-0146-4d98-8cbc-c798c7f951a0 0xc004ab8867 0xc004ab8868}] []  [{kube-controller-manager Update v1 2022-08-27 13:03:35 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"7f2777d7-0146-4d98-8cbc-c798c7f951a0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 13:03:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.163.106\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-755nj,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-755nj,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:03:35 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:192.168.163.106,StartTime:2022-08-27 13:03:35 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 13:03:35 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://be5d40eb2adf7cf28987ca989d6b081805d909e5a2af1707b4e3344d3ff25b52,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.163.106,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 13:03:36.704: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4011" for this suite.

• [SLOW TEST:7.085 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":255,"skipped":4951,"failed":0}
SSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:03:36.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-6527
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 27 13:03:36.875: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 27 13:03:36.897: INFO: Waiting for terminating namespaces to be deleted...
Aug 27 13:03:36.904: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-31-152 before test
Aug 27 13:03:36.924: INFO: test-deployment-74c6dd549b-9fn84 from deployment-4011 started at 2022-08-27 13:03:33 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.924: INFO: 	Container test-deployment ready: true, restart count 0
Aug 27 13:03:36.924: INFO: nginx-ingress-controller-kubernetes-worker-srk75 from ingress-nginx-kubernetes-worker started at 2022-08-27 13:02:42 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.924: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:03:36.924: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-s8z8v from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:03:36.924: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:03:36.924: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 13:03:36.924: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-5-213 before test
Aug 27 13:03:36.939: INFO: test-deployment-74c6dd549b-k9z25 from deployment-4011 started at 2022-08-27 13:03:35 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.939: INFO: 	Container test-deployment ready: true, restart count 0
Aug 27 13:03:36.939: INFO: test-deployment-84b949bdfc-gmdzt from deployment-4011 started at 2022-08-27 13:03:33 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.939: INFO: 	Container test-deployment ready: true, restart count 0
Aug 27 13:03:36.939: INFO: nginx-ingress-controller-kubernetes-worker-n4kcs from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:12 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.939: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:03:36.939: INFO: calico-kube-controllers-6c96fbdbd9-5j7cg from kube-system started at 2022-08-27 13:02:16 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.939: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 27 13:03:36.939: INFO: sonobuoy from sonobuoy started at 2022-08-27 11:57:36 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.939: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 27 13:03:36.939: INFO: sonobuoy-e2e-job-23201a167722436f from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:03:36.939: INFO: 	Container e2e ready: true, restart count 0
Aug 27 13:03:36.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:03:36.939: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-lbr5l from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:03:36.939: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:03:36.939: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 13:03:36.939: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-65-143 before test
Aug 27 13:03:36.959: INFO: default-http-backend-kubernetes-worker-6c59687bf6-srhcj from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.959: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 27 13:03:36.959: INFO: nginx-ingress-controller-kubernetes-worker-m5mkd from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.959: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:03:36.959: INFO: coredns-86c98bfcdb-klnhg from kube-system started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.959: INFO: 	Container coredns ready: true, restart count 0
Aug 27 13:03:36.959: INFO: kube-state-metrics-5cdbfd47b4-44nkd from kube-system started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.959: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 27 13:03:36.959: INFO: metrics-server-v0.5.2-6bfd958b56-bvvbj from kube-system started at 2022-08-27 11:53:07 +0000 UTC (2 container statuses recorded)
Aug 27 13:03:36.959: INFO: 	Container metrics-server ready: true, restart count 0
Aug 27 13:03:36.959: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 27 13:03:36.959: INFO: dashboard-metrics-scraper-8669b59d4f-x9mgm from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.960: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 27 13:03:36.960: INFO: kubernetes-dashboard-585fc6bc87-gp4f6 from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:03:36.960: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 27 13:03:36.960: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-spbcd from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:03:36.960: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:03:36.960: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-52c6c1e0-4638-44be-884d-ac3059141c72 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.31.152 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-52c6c1e0-4638-44be-884d-ac3059141c72 off the node ip-172-31-31-152
STEP: verifying the node doesn't have the label kubernetes.io/e2e-52c6c1e0-4638-44be-884d-ac3059141c72
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 27 13:08:41.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-6527" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:304.455 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":256,"skipped":4957,"failed":0}
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:08:41.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-1126
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 27 13:08:41.926: INFO: starting watch
STEP: patching
STEP: updating
Aug 27 13:08:41.947: INFO: waiting for watch events with expected annotations
Aug 27 13:08:41.947: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:08:42.082: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-1126" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":257,"skipped":4958,"failed":0}
SSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:08:42.098: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-994
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Aug 27 13:08:42.292: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Aug 27 13:08:42.292: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-994" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":258,"skipped":4965,"failed":0}
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:08:42.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5562
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5562
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-5562
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5562
Aug 27 13:08:42.530: INFO: Found 0 stateful pods, waiting for 1
Aug 27 13:08:52.544: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Aug 27 13:08:52.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 13:08:52.740: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 13:08:52.740: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 13:08:52.740: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 13:08:52.749: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Aug 27 13:09:02.766: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 13:09:02.766: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 13:09:02.796: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999965s
Aug 27 13:09:03.810: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.992578702s
Aug 27 13:09:04.821: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.978638192s
Aug 27 13:09:05.832: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.967636812s
Aug 27 13:09:06.841: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.957040186s
Aug 27 13:09:07.850: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.94805732s
Aug 27 13:09:08.863: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.938692114s
Aug 27 13:09:09.874: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.925971361s
Aug 27 13:09:10.885: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.914346692s
Aug 27 13:09:11.895: INFO: Verifying statefulset ss doesn't scale past 1 for another 904.424046ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5562
Aug 27 13:09:12.904: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 13:09:13.070: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 27 13:09:13.070: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 13:09:13.070: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 13:09:13.083: INFO: Found 1 stateful pods, waiting for 3
Aug 27 13:09:23.092: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 13:09:23.092: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 13:09:23.092: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Aug 27 13:09:23.103: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 13:09:23.272: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 13:09:23.272: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 13:09:23.272: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 13:09:23.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 13:09:23.469: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 13:09:23.469: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 13:09:23.469: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 13:09:23.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 13:09:23.650: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 13:09:23.650: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 13:09:23.650: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 13:09:23.651: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 13:09:23.658: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Aug 27 13:09:33.687: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 13:09:33.687: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 13:09:33.687: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Aug 27 13:09:33.716: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999975s
Aug 27 13:09:34.727: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.994175095s
Aug 27 13:09:35.736: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.983696715s
Aug 27 13:09:36.752: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.974513935s
Aug 27 13:09:37.765: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.958232249s
Aug 27 13:09:38.773: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.945841309s
Aug 27 13:09:39.786: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.937263962s
Aug 27 13:09:40.798: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.923566987s
Aug 27 13:09:41.808: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.913069887s
Aug 27 13:09:42.819: INFO: Verifying statefulset ss doesn't scale past 3 for another 902.627741ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5562
Aug 27 13:09:43.831: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 13:09:43.995: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 27 13:09:43.995: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 13:09:43.995: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 13:09:43.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 13:09:44.158: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 27 13:09:44.158: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 13:09:44.158: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 13:09:44.158: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-5562 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 13:09:44.329: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 27 13:09:44.329: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 13:09:44.329: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 13:09:44.329: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 13:09:54.371: INFO: Deleting all statefulset in ns statefulset-5562
Aug 27 13:09:54.378: INFO: Scaling statefulset ss to 0
Aug 27 13:09:54.401: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 13:09:54.409: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 13:09:54.435: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5562" for this suite.

• [SLOW TEST:72.135 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":259,"skipped":4971,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:09:54.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-240
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:09:54.623: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-240" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":260,"skipped":4984,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:09:54.646: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-5013
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-zbbkg in namespace proxy-5013
I0827 13:09:54.830030      22 runners.go:193] Created replication controller with name: proxy-service-zbbkg, namespace: proxy-5013, replica count: 1
I0827 13:09:55.881770      22 runners.go:193] proxy-service-zbbkg Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0827 13:09:56.882548      22 runners.go:193] proxy-service-zbbkg Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 13:09:56.890: INFO: setup took 2.091331561s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Aug 27 13:09:56.900: INFO: (0) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 9.001942ms)
Aug 27 13:09:56.901: INFO: (0) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 10.505246ms)
Aug 27 13:09:56.901: INFO: (0) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 10.172057ms)
Aug 27 13:09:56.902: INFO: (0) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 11.336181ms)
Aug 27 13:09:56.903: INFO: (0) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 12.397801ms)
Aug 27 13:09:56.903: INFO: (0) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 12.582176ms)
Aug 27 13:09:56.904: INFO: (0) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 13.474333ms)
Aug 27 13:09:56.904: INFO: (0) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 13.594546ms)
Aug 27 13:09:56.905: INFO: (0) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 14.516853ms)
Aug 27 13:09:56.908: INFO: (0) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 16.921674ms)
Aug 27 13:09:56.908: INFO: (0) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 17.053747ms)
Aug 27 13:09:56.908: INFO: (0) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 17.096179ms)
Aug 27 13:09:56.908: INFO: (0) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 17.423239ms)
Aug 27 13:09:56.909: INFO: (0) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 18.51587ms)
Aug 27 13:09:56.909: INFO: (0) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 18.473859ms)
Aug 27 13:09:56.911: INFO: (0) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 20.093107ms)
Aug 27 13:09:56.919: INFO: (1) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 7.992523ms)
Aug 27 13:09:56.919: INFO: (1) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 8.632021ms)
Aug 27 13:09:56.921: INFO: (1) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 10.283069ms)
Aug 27 13:09:56.922: INFO: (1) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 10.696962ms)
Aug 27 13:09:56.924: INFO: (1) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 12.628759ms)
Aug 27 13:09:56.924: INFO: (1) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 12.809273ms)
Aug 27 13:09:56.925: INFO: (1) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 13.675059ms)
Aug 27 13:09:56.926: INFO: (1) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 14.551355ms)
Aug 27 13:09:56.926: INFO: (1) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 14.39561ms)
Aug 27 13:09:56.926: INFO: (1) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 14.448571ms)
Aug 27 13:09:56.926: INFO: (1) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 15.10168ms)
Aug 27 13:09:56.927: INFO: (1) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 15.322847ms)
Aug 27 13:09:56.929: INFO: (1) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 17.486349ms)
Aug 27 13:09:56.929: INFO: (1) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 17.182931ms)
Aug 27 13:09:56.929: INFO: (1) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 17.660155ms)
Aug 27 13:09:56.930: INFO: (1) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 19.087867ms)
Aug 27 13:09:56.945: INFO: (2) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 14.541854ms)
Aug 27 13:09:56.945: INFO: (2) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 14.955047ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 15.446821ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 15.164542ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 15.379109ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 15.300226ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 15.352018ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 15.665167ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 15.943075ms)
Aug 27 13:09:56.946: INFO: (2) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 15.991327ms)
Aug 27 13:09:56.949: INFO: (2) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 18.50555ms)
Aug 27 13:09:56.949: INFO: (2) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 18.785499ms)
Aug 27 13:09:56.949: INFO: (2) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 18.538521ms)
Aug 27 13:09:56.949: INFO: (2) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 18.578762ms)
Aug 27 13:09:56.950: INFO: (2) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 19.166729ms)
Aug 27 13:09:56.951: INFO: (2) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 20.430187ms)
Aug 27 13:09:56.957: INFO: (3) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 5.932583ms)
Aug 27 13:09:56.962: INFO: (3) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 9.911149ms)
Aug 27 13:09:56.962: INFO: (3) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 10.510027ms)
Aug 27 13:09:56.962: INFO: (3) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 9.810256ms)
Aug 27 13:09:56.962: INFO: (3) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 9.867328ms)
Aug 27 13:09:56.962: INFO: (3) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 10.942989ms)
Aug 27 13:09:56.963: INFO: (3) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 10.739744ms)
Aug 27 13:09:56.963: INFO: (3) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 11.824885ms)
Aug 27 13:09:56.965: INFO: (3) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 12.963128ms)
Aug 27 13:09:56.965: INFO: (3) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 12.900627ms)
Aug 27 13:09:56.965: INFO: (3) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 13.395301ms)
Aug 27 13:09:56.965: INFO: (3) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 13.786912ms)
Aug 27 13:09:56.965: INFO: (3) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 13.342629ms)
Aug 27 13:09:56.965: INFO: (3) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 13.834113ms)
Aug 27 13:09:56.967: INFO: (3) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 15.639305ms)
Aug 27 13:09:56.969: INFO: (3) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 16.692527ms)
Aug 27 13:09:56.979: INFO: (4) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 10.439935ms)
Aug 27 13:09:56.980: INFO: (4) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 10.597639ms)
Aug 27 13:09:56.980: INFO: (4) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 11.081893ms)
Aug 27 13:09:56.980: INFO: (4) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 11.164006ms)
Aug 27 13:09:56.980: INFO: (4) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 11.485585ms)
Aug 27 13:09:56.981: INFO: (4) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 11.827135ms)
Aug 27 13:09:56.981: INFO: (4) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 12.206536ms)
Aug 27 13:09:56.982: INFO: (4) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 12.792163ms)
Aug 27 13:09:56.984: INFO: (4) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 15.10843ms)
Aug 27 13:09:56.984: INFO: (4) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 15.286456ms)
Aug 27 13:09:56.985: INFO: (4) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 16.245213ms)
Aug 27 13:09:56.985: INFO: (4) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 16.158111ms)
Aug 27 13:09:56.985: INFO: (4) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 16.086919ms)
Aug 27 13:09:56.986: INFO: (4) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 16.925364ms)
Aug 27 13:09:56.991: INFO: (4) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 22.930109ms)
Aug 27 13:09:56.992: INFO: (4) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 23.144655ms)
Aug 27 13:09:56.999: INFO: (5) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 6.50554ms)
Aug 27 13:09:57.000: INFO: (5) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 7.743036ms)
Aug 27 13:09:57.001: INFO: (5) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 8.322183ms)
Aug 27 13:09:57.002: INFO: (5) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 9.446506ms)
Aug 27 13:09:57.002: INFO: (5) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 9.664282ms)
Aug 27 13:09:57.002: INFO: (5) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 9.499977ms)
Aug 27 13:09:57.002: INFO: (5) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 9.92649ms)
Aug 27 13:09:57.002: INFO: (5) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 9.93193ms)
Aug 27 13:09:57.004: INFO: (5) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 11.564767ms)
Aug 27 13:09:57.005: INFO: (5) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 12.31978ms)
Aug 27 13:09:57.005: INFO: (5) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 12.376401ms)
Aug 27 13:09:57.007: INFO: (5) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 14.594586ms)
Aug 27 13:09:57.007: INFO: (5) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 14.523254ms)
Aug 27 13:09:57.007: INFO: (5) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 14.634037ms)
Aug 27 13:09:57.008: INFO: (5) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 15.967396ms)
Aug 27 13:09:57.009: INFO: (5) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 16.583614ms)
Aug 27 13:09:57.017: INFO: (6) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 8.021894ms)
Aug 27 13:09:57.019: INFO: (6) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 10.322271ms)
Aug 27 13:09:57.020: INFO: (6) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 11.445334ms)
Aug 27 13:09:57.020: INFO: (6) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 11.036712ms)
Aug 27 13:09:57.021: INFO: (6) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 11.765543ms)
Aug 27 13:09:57.022: INFO: (6) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 13.221236ms)
Aug 27 13:09:57.022: INFO: (6) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 12.845614ms)
Aug 27 13:09:57.023: INFO: (6) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 14.093761ms)
Aug 27 13:09:57.026: INFO: (6) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 16.845001ms)
Aug 27 13:09:57.026: INFO: (6) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 16.495801ms)
Aug 27 13:09:57.027: INFO: (6) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 17.451179ms)
Aug 27 13:09:57.028: INFO: (6) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 19.179009ms)
Aug 27 13:09:57.032: INFO: (6) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 22.806585ms)
Aug 27 13:09:57.034: INFO: (6) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 24.796333ms)
Aug 27 13:09:57.034: INFO: (6) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 25.445992ms)
Aug 27 13:09:57.039: INFO: (6) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 29.923803ms)
Aug 27 13:09:57.046: INFO: (7) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 6.632724ms)
Aug 27 13:09:57.046: INFO: (7) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 6.907072ms)
Aug 27 13:09:57.047: INFO: (7) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 7.948262ms)
Aug 27 13:09:57.048: INFO: (7) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 8.285022ms)
Aug 27 13:09:57.049: INFO: (7) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 9.553518ms)
Aug 27 13:09:57.050: INFO: (7) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 10.068874ms)
Aug 27 13:09:57.050: INFO: (7) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 10.2941ms)
Aug 27 13:09:57.054: INFO: (7) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 13.973938ms)
Aug 27 13:09:57.055: INFO: (7) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 15.116771ms)
Aug 27 13:09:57.060: INFO: (7) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 20.345594ms)
Aug 27 13:09:57.061: INFO: (7) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 21.353623ms)
Aug 27 13:09:57.061: INFO: (7) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 21.150697ms)
Aug 27 13:09:57.061: INFO: (7) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 21.136097ms)
Aug 27 13:09:57.064: INFO: (7) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 24.505094ms)
Aug 27 13:09:57.064: INFO: (7) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 24.457863ms)
Aug 27 13:09:57.068: INFO: (7) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 28.177342ms)
Aug 27 13:09:57.079: INFO: (8) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 10.811525ms)
Aug 27 13:09:57.079: INFO: (8) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 10.586389ms)
Aug 27 13:09:57.080: INFO: (8) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 11.563007ms)
Aug 27 13:09:57.080: INFO: (8) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 11.738892ms)
Aug 27 13:09:57.080: INFO: (8) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 11.926498ms)
Aug 27 13:09:57.080: INFO: (8) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 11.562358ms)
Aug 27 13:09:57.080: INFO: (8) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 11.97283ms)
Aug 27 13:09:57.080: INFO: (8) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 12.098183ms)
Aug 27 13:09:57.082: INFO: (8) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 13.698179ms)
Aug 27 13:09:57.084: INFO: (8) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 15.155562ms)
Aug 27 13:09:57.093: INFO: (8) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 24.966558ms)
Aug 27 13:09:57.094: INFO: (8) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 25.309078ms)
Aug 27 13:09:57.101: INFO: (8) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 32.789987ms)
Aug 27 13:09:57.101: INFO: (8) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 32.994653ms)
Aug 27 13:09:57.101: INFO: (8) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 33.201748ms)
Aug 27 13:09:57.106: INFO: (8) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 37.313998ms)
Aug 27 13:09:57.113: INFO: (9) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 6.910581ms)
Aug 27 13:09:57.113: INFO: (9) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 6.989094ms)
Aug 27 13:09:57.113: INFO: (9) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 6.981963ms)
Aug 27 13:09:57.113: INFO: (9) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 7.512029ms)
Aug 27 13:09:57.115: INFO: (9) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 9.58813ms)
Aug 27 13:09:57.115: INFO: (9) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 9.539977ms)
Aug 27 13:09:57.115: INFO: (9) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 9.61777ms)
Aug 27 13:09:57.116: INFO: (9) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 10.026712ms)
Aug 27 13:09:57.117: INFO: (9) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 11.67327ms)
Aug 27 13:09:57.126: INFO: (9) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 20.515208ms)
Aug 27 13:09:57.126: INFO: (9) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 20.59653ms)
Aug 27 13:09:57.126: INFO: (9) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 20.712383ms)
Aug 27 13:09:57.128: INFO: (9) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 21.865257ms)
Aug 27 13:09:57.128: INFO: (9) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 21.892709ms)
Aug 27 13:09:57.136: INFO: (9) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 30.142889ms)
Aug 27 13:09:57.138: INFO: (9) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 32.466087ms)
Aug 27 13:09:57.149: INFO: (10) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 10.016242ms)
Aug 27 13:09:57.149: INFO: (10) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 10.196418ms)
Aug 27 13:09:57.149: INFO: (10) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 10.450475ms)
Aug 27 13:09:57.149: INFO: (10) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 10.671862ms)
Aug 27 13:09:57.150: INFO: (10) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 11.915157ms)
Aug 27 13:09:57.151: INFO: (10) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 12.519845ms)
Aug 27 13:09:57.151: INFO: (10) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 12.428422ms)
Aug 27 13:09:57.153: INFO: (10) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 14.280646ms)
Aug 27 13:09:57.155: INFO: (10) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 16.323946ms)
Aug 27 13:09:57.157: INFO: (10) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 18.425497ms)
Aug 27 13:09:57.160: INFO: (10) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 21.95698ms)
Aug 27 13:09:57.163: INFO: (10) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 24.579677ms)
Aug 27 13:09:57.168: INFO: (10) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 29.775298ms)
Aug 27 13:09:57.168: INFO: (10) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 29.871981ms)
Aug 27 13:09:57.175: INFO: (10) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 36.904376ms)
Aug 27 13:09:57.179: INFO: (10) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 40.45003ms)
Aug 27 13:09:57.184: INFO: (11) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 4.80823ms)
Aug 27 13:09:57.186: INFO: (11) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 6.679735ms)
Aug 27 13:09:57.186: INFO: (11) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 6.84667ms)
Aug 27 13:09:57.188: INFO: (11) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 8.54625ms)
Aug 27 13:09:57.189: INFO: (11) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 9.094725ms)
Aug 27 13:09:57.189: INFO: (11) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 9.345243ms)
Aug 27 13:09:57.189: INFO: (11) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 9.411185ms)
Aug 27 13:09:57.190: INFO: (11) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 10.996121ms)
Aug 27 13:09:57.190: INFO: (11) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 11.061923ms)
Aug 27 13:09:57.191: INFO: (11) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 11.181336ms)
Aug 27 13:09:57.196: INFO: (11) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 16.947715ms)
Aug 27 13:09:57.196: INFO: (11) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 16.878392ms)
Aug 27 13:09:57.196: INFO: (11) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 17.293215ms)
Aug 27 13:09:57.196: INFO: (11) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 16.816251ms)
Aug 27 13:09:57.198: INFO: (11) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 18.932273ms)
Aug 27 13:09:57.200: INFO: (11) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 20.741025ms)
Aug 27 13:09:57.211: INFO: (12) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 10.478965ms)
Aug 27 13:09:57.211: INFO: (12) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 10.668881ms)
Aug 27 13:09:57.211: INFO: (12) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 10.473265ms)
Aug 27 13:09:57.213: INFO: (12) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 12.096943ms)
Aug 27 13:09:57.213: INFO: (12) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 12.311119ms)
Aug 27 13:09:57.213: INFO: (12) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 12.110483ms)
Aug 27 13:09:57.213: INFO: (12) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 12.632759ms)
Aug 27 13:09:57.213: INFO: (12) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 12.667059ms)
Aug 27 13:09:57.213: INFO: (12) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 12.903156ms)
Aug 27 13:09:57.214: INFO: (12) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 13.796142ms)
Aug 27 13:09:57.214: INFO: (12) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 13.737891ms)
Aug 27 13:09:57.215: INFO: (12) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 14.346899ms)
Aug 27 13:09:57.215: INFO: (12) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 14.963976ms)
Aug 27 13:09:57.216: INFO: (12) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 15.768109ms)
Aug 27 13:09:57.217: INFO: (12) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 16.499741ms)
Aug 27 13:09:57.217: INFO: (12) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 16.442299ms)
Aug 27 13:09:57.224: INFO: (13) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 7.115187ms)
Aug 27 13:09:57.225: INFO: (13) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 7.830889ms)
Aug 27 13:09:57.225: INFO: (13) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 7.768846ms)
Aug 27 13:09:57.226: INFO: (13) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 9.23582ms)
Aug 27 13:09:57.226: INFO: (13) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 9.519038ms)
Aug 27 13:09:57.228: INFO: (13) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 10.694423ms)
Aug 27 13:09:57.228: INFO: (13) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 10.94321ms)
Aug 27 13:09:57.228: INFO: (13) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 10.991391ms)
Aug 27 13:09:57.228: INFO: (13) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 10.931099ms)
Aug 27 13:09:57.228: INFO: (13) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 11.083843ms)
Aug 27 13:09:57.229: INFO: (13) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 12.221826ms)
Aug 27 13:09:57.230: INFO: (13) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 12.891556ms)
Aug 27 13:09:57.231: INFO: (13) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 14.233906ms)
Aug 27 13:09:57.232: INFO: (13) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 14.308428ms)
Aug 27 13:09:57.233: INFO: (13) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 15.973836ms)
Aug 27 13:09:57.237: INFO: (13) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 20.22255ms)
Aug 27 13:09:57.244: INFO: (14) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 6.392636ms)
Aug 27 13:09:57.246: INFO: (14) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 8.411656ms)
Aug 27 13:09:57.246: INFO: (14) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 8.414196ms)
Aug 27 13:09:57.247: INFO: (14) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 9.132076ms)
Aug 27 13:09:57.247: INFO: (14) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 9.547788ms)
Aug 27 13:09:57.248: INFO: (14) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 10.812585ms)
Aug 27 13:09:57.248: INFO: (14) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 10.871097ms)
Aug 27 13:09:57.248: INFO: (14) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 10.947929ms)
Aug 27 13:09:57.248: INFO: (14) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 10.826885ms)
Aug 27 13:09:57.249: INFO: (14) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 11.083054ms)
Aug 27 13:09:57.250: INFO: (14) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 12.154544ms)
Aug 27 13:09:57.250: INFO: (14) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 12.380931ms)
Aug 27 13:09:57.251: INFO: (14) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 13.214575ms)
Aug 27 13:09:57.253: INFO: (14) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 14.977096ms)
Aug 27 13:09:57.254: INFO: (14) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 16.46234ms)
Aug 27 13:09:57.255: INFO: (14) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 18.074678ms)
Aug 27 13:09:57.261: INFO: (15) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 4.898212ms)
Aug 27 13:09:57.261: INFO: (15) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 5.772038ms)
Aug 27 13:09:57.262: INFO: (15) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 6.326674ms)
Aug 27 13:09:57.262: INFO: (15) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 6.594213ms)
Aug 27 13:09:57.264: INFO: (15) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 7.483638ms)
Aug 27 13:09:57.265: INFO: (15) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 9.178768ms)
Aug 27 13:09:57.265: INFO: (15) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 8.305602ms)
Aug 27 13:09:57.265: INFO: (15) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 9.216689ms)
Aug 27 13:09:57.266: INFO: (15) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 10.233788ms)
Aug 27 13:09:57.266: INFO: (15) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 9.360153ms)
Aug 27 13:09:57.267: INFO: (15) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 10.205498ms)
Aug 27 13:09:57.267: INFO: (15) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 10.349142ms)
Aug 27 13:09:57.267: INFO: (15) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 10.612439ms)
Aug 27 13:09:57.269: INFO: (15) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 12.787173ms)
Aug 27 13:09:57.270: INFO: (15) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 13.682039ms)
Aug 27 13:09:57.270: INFO: (15) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 13.772842ms)
Aug 27 13:09:57.276: INFO: (16) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 6.004525ms)
Aug 27 13:09:57.278: INFO: (16) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 7.89888ms)
Aug 27 13:09:57.278: INFO: (16) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 7.976362ms)
Aug 27 13:09:57.280: INFO: (16) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 10.146286ms)
Aug 27 13:09:57.281: INFO: (16) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 10.788114ms)
Aug 27 13:09:57.282: INFO: (16) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 11.775594ms)
Aug 27 13:09:57.282: INFO: (16) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 11.866796ms)
Aug 27 13:09:57.283: INFO: (16) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 12.646459ms)
Aug 27 13:09:57.283: INFO: (16) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 12.703191ms)
Aug 27 13:09:57.286: INFO: (16) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 15.474001ms)
Aug 27 13:09:57.286: INFO: (16) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 15.561264ms)
Aug 27 13:09:57.286: INFO: (16) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 15.830311ms)
Aug 27 13:09:57.286: INFO: (16) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 15.903194ms)
Aug 27 13:09:57.288: INFO: (16) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 17.375416ms)
Aug 27 13:09:57.290: INFO: (16) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 19.949661ms)
Aug 27 13:09:57.292: INFO: (16) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 22.147196ms)
Aug 27 13:09:57.300: INFO: (17) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 7.8885ms)
Aug 27 13:09:57.301: INFO: (17) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 8.485327ms)
Aug 27 13:09:57.301: INFO: (17) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 8.436936ms)
Aug 27 13:09:57.302: INFO: (17) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 8.929061ms)
Aug 27 13:09:57.305: INFO: (17) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 12.277558ms)
Aug 27 13:09:57.305: INFO: (17) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 12.470963ms)
Aug 27 13:09:57.305: INFO: (17) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 12.707011ms)
Aug 27 13:09:57.305: INFO: (17) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 12.398861ms)
Aug 27 13:09:57.306: INFO: (17) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 13.601547ms)
Aug 27 13:09:57.306: INFO: (17) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 13.574696ms)
Aug 27 13:09:57.306: INFO: (17) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 13.428971ms)
Aug 27 13:09:57.306: INFO: (17) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 13.682139ms)
Aug 27 13:09:57.307: INFO: (17) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 14.985977ms)
Aug 27 13:09:57.307: INFO: (17) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 14.7463ms)
Aug 27 13:09:57.309: INFO: (17) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 16.790169ms)
Aug 27 13:09:57.311: INFO: (17) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 18.609563ms)
Aug 27 13:09:57.317: INFO: (18) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 5.359567ms)
Aug 27 13:09:57.319: INFO: (18) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 6.908712ms)
Aug 27 13:09:57.319: INFO: (18) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 6.717006ms)
Aug 27 13:09:57.320: INFO: (18) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 8.005634ms)
Aug 27 13:09:57.321: INFO: (18) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 9.314742ms)
Aug 27 13:09:57.321: INFO: (18) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 9.24371ms)
Aug 27 13:09:57.321: INFO: (18) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 9.60082ms)
Aug 27 13:09:57.321: INFO: (18) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 9.077705ms)
Aug 27 13:09:57.322: INFO: (18) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 9.478997ms)
Aug 27 13:09:57.323: INFO: (18) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 11.395163ms)
Aug 27 13:09:57.324: INFO: (18) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 12.077203ms)
Aug 27 13:09:57.324: INFO: (18) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 12.377381ms)
Aug 27 13:09:57.324: INFO: (18) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 12.042851ms)
Aug 27 13:09:57.324: INFO: (18) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 11.842106ms)
Aug 27 13:09:57.324: INFO: (18) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 11.98901ms)
Aug 27 13:09:57.325: INFO: (18) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 13.065051ms)
Aug 27 13:09:57.334: INFO: (19) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">... (200; 8.492408ms)
Aug 27 13:09:57.334: INFO: (19) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:1080/proxy/rewriteme">test<... (200; 8.409856ms)
Aug 27 13:09:57.335: INFO: (19) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:443/proxy/tlsrewritem... (200; 10.177267ms)
Aug 27 13:09:57.335: INFO: (19) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname1/proxy/: foo (200; 10.459315ms)
Aug 27 13:09:57.335: INFO: (19) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:460/proxy/: tls baz (200; 10.328191ms)
Aug 27 13:09:57.337: INFO: (19) /api/v1/namespaces/proxy-5013/pods/https:proxy-service-zbbkg-hmq7q:462/proxy/: tls qux (200; 11.282009ms)
Aug 27 13:09:57.337: INFO: (19) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 12.011321ms)
Aug 27 13:09:57.337: INFO: (19) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:160/proxy/: foo (200; 12.454213ms)
Aug 27 13:09:57.338: INFO: (19) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname2/proxy/: bar (200; 12.723991ms)
Aug 27 13:09:57.338: INFO: (19) /api/v1/namespaces/proxy-5013/services/http:proxy-service-zbbkg:portname2/proxy/: bar (200; 13.119593ms)
Aug 27 13:09:57.340: INFO: (19) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/: <a href="/api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q/proxy/rewriteme">test</a> (200; 14.463392ms)
Aug 27 13:09:57.340: INFO: (19) /api/v1/namespaces/proxy-5013/pods/proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 14.541234ms)
Aug 27 13:09:57.340: INFO: (19) /api/v1/namespaces/proxy-5013/pods/http:proxy-service-zbbkg-hmq7q:162/proxy/: bar (200; 14.746729ms)
Aug 27 13:09:57.340: INFO: (19) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname2/proxy/: tls qux (200; 15.289566ms)
Aug 27 13:09:57.342: INFO: (19) /api/v1/namespaces/proxy-5013/services/proxy-service-zbbkg:portname1/proxy/: foo (200; 16.508872ms)
Aug 27 13:09:57.348: INFO: (19) /api/v1/namespaces/proxy-5013/services/https:proxy-service-zbbkg:tlsportname1/proxy/: tls baz (200; 22.138006ms)
STEP: deleting ReplicationController proxy-service-zbbkg in namespace proxy-5013, will wait for the garbage collector to delete the pods
Aug 27 13:09:57.416: INFO: Deleting ReplicationController proxy-service-zbbkg took: 10.216188ms
Aug 27 13:09:57.517: INFO: Terminating ReplicationController proxy-service-zbbkg pods took: 100.685366ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Aug 27 13:09:59.718: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-5013" for this suite.

• [SLOW TEST:5.100 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":261,"skipped":5001,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:09:59.746: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-2648
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 27 13:10:04.013: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 27 13:10:04.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-2648" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":262,"skipped":5014,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:10:04.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2622
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-af97ef0f-fcb7-4845-bcd0-5a12fed7ec50
STEP: Creating a pod to test consume secrets
Aug 27 13:10:04.236: INFO: Waiting up to 5m0s for pod "pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8" in namespace "secrets-2622" to be "Succeeded or Failed"
Aug 27 13:10:04.243: INFO: Pod "pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8": Phase="Pending", Reason="", readiness=false. Elapsed: 6.997293ms
Aug 27 13:10:06.254: INFO: Pod "pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018143793s
Aug 27 13:10:08.266: INFO: Pod "pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029345508s
STEP: Saw pod success
Aug 27 13:10:08.266: INFO: Pod "pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8" satisfied condition "Succeeded or Failed"
Aug 27 13:10:08.274: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8 container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 13:10:08.412: INFO: Waiting for pod pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8 to disappear
Aug 27 13:10:08.417: INFO: Pod pod-secrets-90c48a72-287a-4248-b343-6f8a966e37c8 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:10:08.417: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2622" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":263,"skipped":5016,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:10:08.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6428
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-85c8696b-ad03-4ec6-ad6d-e2f806d735dd
STEP: Creating a pod to test consume secrets
Aug 27 13:10:08.820: INFO: Waiting up to 5m0s for pod "pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29" in namespace "secrets-6428" to be "Succeeded or Failed"
Aug 27 13:10:08.831: INFO: Pod "pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29": Phase="Pending", Reason="", readiness=false. Elapsed: 10.880808ms
Aug 27 13:10:10.844: INFO: Pod "pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023075713s
Aug 27 13:10:12.857: INFO: Pod "pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29": Phase="Pending", Reason="", readiness=false. Elapsed: 4.036348554s
Aug 27 13:10:14.873: INFO: Pod "pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.052589364s
STEP: Saw pod success
Aug 27 13:10:14.873: INFO: Pod "pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29" satisfied condition "Succeeded or Failed"
Aug 27 13:10:14.880: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29 container secret-env-test: <nil>
STEP: delete the pod
Aug 27 13:10:14.909: INFO: Waiting for pod pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29 to disappear
Aug 27 13:10:14.915: INFO: Pod pod-secrets-3df6bdd8-b15c-4915-aae5-f95967d3fa29 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:10:14.916: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6428" for this suite.

• [SLOW TEST:6.453 seconds]
[sig-node] Secrets
test/e2e/common/node/framework.go:23
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":264,"skipped":5032,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:10:14.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-1764
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 27 13:10:19.201: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-1764" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":265,"skipped":5042,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:10:19.217: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4640
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:10:19.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4640 version'
Aug 27 13:10:19.439: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Aug 27 13:10:19.439: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.4\", GitCommit:\"95ee5ab382d64cfe6c28967f36b53970b8374491\", GitTreeState:\"clean\", BuildDate:\"2022-08-17T18:54:23Z\", GoVersion:\"go1.18.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.4\", GitCommit:\"95ee5ab382d64cfe6c28967f36b53970b8374491\", GitTreeState:\"clean\", BuildDate:\"2022-08-18T02:10:23Z\", GoVersion:\"go1.18.5\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:10:19.439: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4640" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":266,"skipped":5063,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:10:19.458: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6781
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Aug 27 13:10:19.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Aug 27 13:10:19.717: INFO: stderr: ""
Aug 27 13:10:19.717: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Aug 27 13:10:19.717: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Aug 27 13:10:19.717: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-6781" to be "running and ready, or succeeded"
Aug 27 13:10:19.732: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 15.002687ms
Aug 27 13:10:21.742: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.024964742s
Aug 27 13:10:21.742: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Aug 27 13:10:21.742: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Aug 27 13:10:21.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 logs logs-generator logs-generator'
Aug 27 13:10:21.839: INFO: stderr: ""
Aug 27 13:10:21.839: INFO: stdout: "I0827 13:10:20.733664       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/szd 320\nI0827 13:10:20.933809       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/hbbg 593\nI0827 13:10:21.134333       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/dtw7 251\nI0827 13:10:21.334654       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/mss 465\nI0827 13:10:21.534025       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/f8g 495\nI0827 13:10:21.734413       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/9x5q 283\n"
STEP: limiting log lines
Aug 27 13:10:21.839: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 logs logs-generator logs-generator --tail=1'
Aug 27 13:10:21.928: INFO: stderr: ""
Aug 27 13:10:21.928: INFO: stdout: "I0827 13:10:21.734413       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/9x5q 283\n"
Aug 27 13:10:21.928: INFO: got output "I0827 13:10:21.734413       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/9x5q 283\n"
STEP: limiting log bytes
Aug 27 13:10:21.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 logs logs-generator logs-generator --limit-bytes=1'
Aug 27 13:10:22.013: INFO: stderr: ""
Aug 27 13:10:22.013: INFO: stdout: "I"
Aug 27 13:10:22.013: INFO: got output "I"
STEP: exposing timestamps
Aug 27 13:10:22.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 logs logs-generator logs-generator --tail=1 --timestamps'
Aug 27 13:10:22.109: INFO: stderr: ""
Aug 27 13:10:22.109: INFO: stdout: "2022-08-27T13:10:21.933822496Z I0827 13:10:21.933702       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/g84m 556\n"
Aug 27 13:10:22.109: INFO: got output "2022-08-27T13:10:21.933822496Z I0827 13:10:21.933702       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/g84m 556\n"
STEP: restricting to a time range
Aug 27 13:10:24.611: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 logs logs-generator logs-generator --since=1s'
Aug 27 13:10:24.701: INFO: stderr: ""
Aug 27 13:10:24.701: INFO: stdout: "I0827 13:10:23.733738       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/bcd 317\nI0827 13:10:23.934073       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/t6bm 238\nI0827 13:10:24.134270       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/jlc 409\nI0827 13:10:24.334873       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/5ksv 439\nI0827 13:10:24.534201       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/fcrt 447\n"
Aug 27 13:10:24.701: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 logs logs-generator logs-generator --since=24h'
Aug 27 13:10:24.802: INFO: stderr: ""
Aug 27 13:10:24.802: INFO: stdout: "I0827 13:10:20.733664       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/szd 320\nI0827 13:10:20.933809       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/hbbg 593\nI0827 13:10:21.134333       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/dtw7 251\nI0827 13:10:21.334654       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/mss 465\nI0827 13:10:21.534025       1 logs_generator.go:76] 4 GET /api/v1/namespaces/kube-system/pods/f8g 495\nI0827 13:10:21.734413       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/9x5q 283\nI0827 13:10:21.933702       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/g84m 556\nI0827 13:10:22.134083       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/qjf 463\nI0827 13:10:22.334439       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/55m 338\nI0827 13:10:22.533769       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/89gx 331\nI0827 13:10:22.734087       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/bd8 288\nI0827 13:10:22.934464       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/k2qx 508\nI0827 13:10:23.133742       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/ns/pods/gb4 324\nI0827 13:10:23.334192       1 logs_generator.go:76] 13 POST /api/v1/namespaces/ns/pods/bm74 501\nI0827 13:10:23.534470       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/np95 412\nI0827 13:10:23.733738       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/bcd 317\nI0827 13:10:23.934073       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/t6bm 238\nI0827 13:10:24.134270       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/jlc 409\nI0827 13:10:24.334873       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/5ksv 439\nI0827 13:10:24.534201       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/fcrt 447\nI0827 13:10:24.734577       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/9w5 204\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Aug 27 13:10:24.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-6781 delete pod logs-generator'
Aug 27 13:10:25.691: INFO: stderr: ""
Aug 27 13:10:25.691: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:10:25.691: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6781" for this suite.

• [SLOW TEST:6.249 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":267,"skipped":5078,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:10:25.708: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7721
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-3885bdce-aeb0-498e-a46f-3c30ecbc70fa
STEP: Creating a pod to test consume secrets
Aug 27 13:10:25.870: INFO: Waiting up to 5m0s for pod "pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82" in namespace "secrets-7721" to be "Succeeded or Failed"
Aug 27 13:10:25.875: INFO: Pod "pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82": Phase="Pending", Reason="", readiness=false. Elapsed: 4.449479ms
Aug 27 13:10:27.888: INFO: Pod "pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017584228s
Aug 27 13:10:29.901: INFO: Pod "pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030433771s
STEP: Saw pod success
Aug 27 13:10:29.901: INFO: Pod "pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82" satisfied condition "Succeeded or Failed"
Aug 27 13:10:29.909: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82 container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 13:10:29.936: INFO: Waiting for pod pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82 to disappear
Aug 27 13:10:29.942: INFO: Pod pod-secrets-64f1d6e5-74ac-4aaa-a706-6b30f629bf82 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:10:29.942: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7721" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":268,"skipped":5088,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:10:29.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4742
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:10:30.146: INFO: created pod
Aug 27 13:10:30.146: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-4742" to be "Succeeded or Failed"
Aug 27 13:10:30.154: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 7.453427ms
Aug 27 13:10:32.162: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016152563s
Aug 27 13:10:34.176: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030334612s
STEP: Saw pod success
Aug 27 13:10:34.176: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Aug 27 13:11:04.178: INFO: polling logs
Aug 27 13:11:04.192: INFO: Pod logs: 
I0827 13:10:31.112535       1 log.go:195] OK: Got token
I0827 13:10:31.112584       1 log.go:195] validating with in-cluster discovery
I0827 13:10:31.112993       1 log.go:195] OK: got issuer https://kubernetes.default.svc
I0827 13:10:31.113034       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4742:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1661606430, NotBefore:1661605830, IssuedAt:1661605830, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4742", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"29107b07-8982-4909-aa64-0dd7c148102f"}}}
I0827 13:10:31.131710       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0827 13:10:31.149652       1 log.go:195] OK: Validated signature on JWT
I0827 13:10:31.149741       1 log.go:195] OK: Got valid claims from token!
I0827 13:10:31.149765       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4742:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1661606430, NotBefore:1661605830, IssuedAt:1661605830, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4742", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"29107b07-8982-4909-aa64-0dd7c148102f"}}}

Aug 27 13:11:04.192: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Aug 27 13:11:04.212: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4742" for this suite.

• [SLOW TEST:34.271 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":269,"skipped":5104,"failed":0}
SSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:11:04.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1387
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-1387/configmap-test-1faa4990-7a6f-4488-a9dc-18ef2230910a
STEP: Creating a pod to test consume configMaps
Aug 27 13:11:04.453: INFO: Waiting up to 5m0s for pod "pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1" in namespace "configmap-1387" to be "Succeeded or Failed"
Aug 27 13:11:04.475: INFO: Pod "pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1": Phase="Pending", Reason="", readiness=false. Elapsed: 21.594948ms
Aug 27 13:11:06.484: INFO: Pod "pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030279978s
Aug 27 13:11:08.501: INFO: Pod "pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.047339565s
STEP: Saw pod success
Aug 27 13:11:08.501: INFO: Pod "pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1" satisfied condition "Succeeded or Failed"
Aug 27 13:11:08.509: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1 container env-test: <nil>
STEP: delete the pod
Aug 27 13:11:08.544: INFO: Waiting for pod pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1 to disappear
Aug 27 13:11:08.549: INFO: Pod pod-configmaps-71f6d6a6-1215-4e62-8e0d-600c4de694b1 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 13:11:08.549: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1387" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":270,"skipped":5107,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:11:08.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8778
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Aug 27 13:11:08.750: INFO: Found Service test-service-fvbxv in namespace services-8778 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Aug 27 13:11:08.750: INFO: Service test-service-fvbxv created
STEP: Getting /status
Aug 27 13:11:08.758: INFO: Service test-service-fvbxv has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Aug 27 13:11:08.774: INFO: observed Service test-service-fvbxv in namespace services-8778 with annotations: map[] & LoadBalancer: {[]}
Aug 27 13:11:08.774: INFO: Found Service test-service-fvbxv in namespace services-8778 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Aug 27 13:11:08.774: INFO: Service test-service-fvbxv has service status patched
STEP: updating the ServiceStatus
Aug 27 13:11:08.793: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Aug 27 13:11:08.796: INFO: Observed Service test-service-fvbxv in namespace services-8778 with annotations: map[] & Conditions: {[]}
Aug 27 13:11:08.796: INFO: Observed event: &Service{ObjectMeta:{test-service-fvbxv  services-8778  f859d7e8-db35-4c22-8961-5b7aced42331 33967 0 2022-08-27 13:11:08 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-08-27 13:11:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-08-27 13:11:08 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.159,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.159],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Aug 27 13:11:08.796: INFO: Found Service test-service-fvbxv in namespace services-8778 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Aug 27 13:11:08.796: INFO: Service test-service-fvbxv has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Aug 27 13:11:08.828: INFO: observed Service test-service-fvbxv in namespace services-8778 with labels: map[test-service-static:true]
Aug 27 13:11:08.828: INFO: observed Service test-service-fvbxv in namespace services-8778 with labels: map[test-service-static:true]
Aug 27 13:11:08.828: INFO: observed Service test-service-fvbxv in namespace services-8778 with labels: map[test-service-static:true]
Aug 27 13:11:08.828: INFO: Found Service test-service-fvbxv in namespace services-8778 with labels: map[test-service:patched test-service-static:true]
Aug 27 13:11:08.828: INFO: Service test-service-fvbxv patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Aug 27 13:11:08.860: INFO: Observed event: ADDED
Aug 27 13:11:08.860: INFO: Observed event: MODIFIED
Aug 27 13:11:08.860: INFO: Observed event: MODIFIED
Aug 27 13:11:08.860: INFO: Observed event: MODIFIED
Aug 27 13:11:08.861: INFO: Found Service test-service-fvbxv in namespace services-8778 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Aug 27 13:11:08.861: INFO: Service test-service-fvbxv deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 13:11:08.861: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8778" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":271,"skipped":5110,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:11:08.887: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug 27 13:11:09.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1738 create -f -'
Aug 27 13:11:09.299: INFO: stderr: ""
Aug 27 13:11:09.299: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 27 13:11:10.308: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 13:11:10.308: INFO: Found 0 / 1
Aug 27 13:11:11.309: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 13:11:11.309: INFO: Found 1 / 1
Aug 27 13:11:11.309: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Aug 27 13:11:11.317: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 13:11:11.317: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 27 13:11:11.317: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1738 patch pod agnhost-primary-xk989 -p {"metadata":{"annotations":{"x":"y"}}}'
Aug 27 13:11:11.418: INFO: stderr: ""
Aug 27 13:11:11.418: INFO: stdout: "pod/agnhost-primary-xk989 patched\n"
STEP: checking annotations
Aug 27 13:11:11.425: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 13:11:11.425: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:11:11.425: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1738" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":272,"skipped":5178,"failed":0}
SSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:11:11.441: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-9257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:11:11.611: INFO: The status of Pod busybox-host-aliases157cfb35-87fd-4136-85eb-5ecbc45dafdf is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:11:13.627: INFO: The status of Pod busybox-host-aliases157cfb35-87fd-4136-85eb-5ecbc45dafdf is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 27 13:11:13.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-9257" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":273,"skipped":5185,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:11:13.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-3667
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Aug 27 13:11:14.432: INFO: Pod name wrapped-volume-race-ce1f8656-bb18-4af4-89e5-73a474a8a846: Found 0 pods out of 5
Aug 27 13:11:19.448: INFO: Pod name wrapped-volume-race-ce1f8656-bb18-4af4-89e5-73a474a8a846: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-ce1f8656-bb18-4af4-89e5-73a474a8a846 in namespace emptydir-wrapper-3667, will wait for the garbage collector to delete the pods
Aug 27 13:11:29.568: INFO: Deleting ReplicationController wrapped-volume-race-ce1f8656-bb18-4af4-89e5-73a474a8a846 took: 16.648443ms
Aug 27 13:11:29.669: INFO: Terminating ReplicationController wrapped-volume-race-ce1f8656-bb18-4af4-89e5-73a474a8a846 pods took: 100.716233ms
STEP: Creating RC which spawns configmap-volume pods
Aug 27 13:11:33.112: INFO: Pod name wrapped-volume-race-6e9b3d10-ba93-4948-b9b9-d00c26fcbb2b: Found 0 pods out of 5
Aug 27 13:11:38.125: INFO: Pod name wrapped-volume-race-6e9b3d10-ba93-4948-b9b9-d00c26fcbb2b: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-6e9b3d10-ba93-4948-b9b9-d00c26fcbb2b in namespace emptydir-wrapper-3667, will wait for the garbage collector to delete the pods
Aug 27 13:11:48.242: INFO: Deleting ReplicationController wrapped-volume-race-6e9b3d10-ba93-4948-b9b9-d00c26fcbb2b took: 15.434308ms
Aug 27 13:11:48.343: INFO: Terminating ReplicationController wrapped-volume-race-6e9b3d10-ba93-4948-b9b9-d00c26fcbb2b pods took: 100.736211ms
STEP: Creating RC which spawns configmap-volume pods
Aug 27 13:11:52.605: INFO: Pod name wrapped-volume-race-60015221-f2bb-4831-8cd8-26ee89e00188: Found 0 pods out of 5
Aug 27 13:11:57.618: INFO: Pod name wrapped-volume-race-60015221-f2bb-4831-8cd8-26ee89e00188: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-60015221-f2bb-4831-8cd8-26ee89e00188 in namespace emptydir-wrapper-3667, will wait for the garbage collector to delete the pods
Aug 27 13:12:07.731: INFO: Deleting ReplicationController wrapped-volume-race-60015221-f2bb-4831-8cd8-26ee89e00188 took: 13.540943ms
Aug 27 13:12:07.832: INFO: Terminating ReplicationController wrapped-volume-race-60015221-f2bb-4831-8cd8-26ee89e00188 pods took: 100.283655ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Aug 27 13:12:11.830: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-3667" for this suite.

• [SLOW TEST:58.189 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":274,"skipped":5197,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:12:11.853: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-2907
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-h96p
STEP: Creating a pod to test atomic-volume-subpath
Aug 27 13:12:12.034: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-h96p" in namespace "subpath-2907" to be "Succeeded or Failed"
Aug 27 13:12:12.041: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Pending", Reason="", readiness=false. Elapsed: 7.370634ms
Aug 27 13:12:14.058: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 2.024183942s
Aug 27 13:12:16.066: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 4.031889632s
Aug 27 13:12:18.097: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 6.062693346s
Aug 27 13:12:20.103: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 8.069321284s
Aug 27 13:12:22.117: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 10.083548377s
Aug 27 13:12:24.124: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 12.090147424s
Aug 27 13:12:26.136: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 14.102625367s
Aug 27 13:12:28.148: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 16.113750725s
Aug 27 13:12:30.157: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 18.12354642s
Aug 27 13:12:32.165: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=true. Elapsed: 20.131559768s
Aug 27 13:12:34.176: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Running", Reason="", readiness=false. Elapsed: 22.142566108s
Aug 27 13:12:36.187: INFO: Pod "pod-subpath-test-downwardapi-h96p": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.153149548s
STEP: Saw pod success
Aug 27 13:12:36.187: INFO: Pod "pod-subpath-test-downwardapi-h96p" satisfied condition "Succeeded or Failed"
Aug 27 13:12:36.193: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-subpath-test-downwardapi-h96p container test-container-subpath-downwardapi-h96p: <nil>
STEP: delete the pod
Aug 27 13:12:36.227: INFO: Waiting for pod pod-subpath-test-downwardapi-h96p to disappear
Aug 27 13:12:36.233: INFO: Pod pod-subpath-test-downwardapi-h96p no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-h96p
Aug 27 13:12:36.233: INFO: Deleting pod "pod-subpath-test-downwardapi-h96p" in namespace "subpath-2907"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 27 13:12:36.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-2907" for this suite.

• [SLOW TEST:24.405 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":275,"skipped":5222,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:12:36.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2969
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 13:12:52.679: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2969" for this suite.

• [SLOW TEST:16.442 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":276,"skipped":5243,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:12:52.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-197
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 27 13:12:52.895: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:12:54.909: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 27 13:12:54.938: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:12:56.964: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 27 13:12:56.986: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 27 13:12:56.991: INFO: Pod pod-with-prestop-http-hook still exists
Aug 27 13:12:58.992: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 27 13:12:58.999: INFO: Pod pod-with-prestop-http-hook still exists
Aug 27 13:13:00.992: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Aug 27 13:13:01.003: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 27 13:13:01.014: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-197" for this suite.

• [SLOW TEST:8.337 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":277,"skipped":5258,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:01.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-1266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 27 13:13:05.233: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-1266" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":278,"skipped":5288,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:05.255: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-7965
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Aug 27 13:13:05.441: INFO: Waiting up to 5m0s for pod "client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0" in namespace "containers-7965" to be "Succeeded or Failed"
Aug 27 13:13:05.452: INFO: Pod "client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0": Phase="Pending", Reason="", readiness=false. Elapsed: 10.917996ms
Aug 27 13:13:07.461: INFO: Pod "client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020293188s
Aug 27 13:13:09.467: INFO: Pod "client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.026318867s
STEP: Saw pod success
Aug 27 13:13:09.468: INFO: Pod "client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0" satisfied condition "Succeeded or Failed"
Aug 27 13:13:09.473: INFO: Trying to get logs from node ip-172-31-31-152 pod client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 13:13:09.501: INFO: Waiting for pod client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0 to disappear
Aug 27 13:13:09.506: INFO: Pod client-containers-39d0c961-c105-4874-909c-1e4ea744e7b0 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Aug 27 13:13:09.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-7965" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":279,"skipped":5300,"failed":0}
SSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:09.523: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1583
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 13:13:09.690: INFO: Waiting up to 5m0s for pod "downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72" in namespace "downward-api-1583" to be "Succeeded or Failed"
Aug 27 13:13:09.699: INFO: Pod "downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72": Phase="Pending", Reason="", readiness=false. Elapsed: 9.021851ms
Aug 27 13:13:11.712: INFO: Pod "downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72": Phase="Pending", Reason="", readiness=false. Elapsed: 2.022446339s
Aug 27 13:13:13.722: INFO: Pod "downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032087213s
STEP: Saw pod success
Aug 27 13:13:13.722: INFO: Pod "downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72" satisfied condition "Succeeded or Failed"
Aug 27 13:13:13.727: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72 container client-container: <nil>
STEP: delete the pod
Aug 27 13:13:13.767: INFO: Waiting for pod downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72 to disappear
Aug 27 13:13:13.772: INFO: Pod downwardapi-volume-f8268289-09a4-4cd7-9c3b-544b9abe0d72 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 13:13:13.772: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1583" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":280,"skipped":5305,"failed":0}

------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:13.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-4154
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Aug 27 13:13:13.969: INFO: Waiting up to 5m0s for pod "pod-a498f9c8-f102-401c-a802-ab922112f7c4" in namespace "emptydir-4154" to be "Succeeded or Failed"
Aug 27 13:13:13.977: INFO: Pod "pod-a498f9c8-f102-401c-a802-ab922112f7c4": Phase="Pending", Reason="", readiness=false. Elapsed: 8.32809ms
Aug 27 13:13:15.989: INFO: Pod "pod-a498f9c8-f102-401c-a802-ab922112f7c4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020215406s
Aug 27 13:13:18.001: INFO: Pod "pod-a498f9c8-f102-401c-a802-ab922112f7c4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03186112s
STEP: Saw pod success
Aug 27 13:13:18.001: INFO: Pod "pod-a498f9c8-f102-401c-a802-ab922112f7c4" satisfied condition "Succeeded or Failed"
Aug 27 13:13:18.010: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-a498f9c8-f102-401c-a802-ab922112f7c4 container test-container: <nil>
STEP: delete the pod
Aug 27 13:13:18.050: INFO: Waiting for pod pod-a498f9c8-f102-401c-a802-ab922112f7c4 to disappear
Aug 27 13:13:18.058: INFO: Pod pod-a498f9c8-f102-401c-a802-ab922112f7c4 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 13:13:18.058: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-4154" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":281,"skipped":5305,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:18.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Aug 27 13:13:18.230: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1874 proxy --unix-socket=/tmp/kubectl-proxy-unix4174870281/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:13:18.284: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1874" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":282,"skipped":5316,"failed":0}
SSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:18.299: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1668
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 13:13:18.478: INFO: Waiting up to 5m0s for pod "downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59" in namespace "downward-api-1668" to be "Succeeded or Failed"
Aug 27 13:13:18.485: INFO: Pod "downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59": Phase="Pending", Reason="", readiness=false. Elapsed: 6.774406ms
Aug 27 13:13:20.492: INFO: Pod "downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013789919s
Aug 27 13:13:22.513: INFO: Pod "downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035195403s
STEP: Saw pod success
Aug 27 13:13:22.513: INFO: Pod "downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59" satisfied condition "Succeeded or Failed"
Aug 27 13:13:22.520: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59 container client-container: <nil>
STEP: delete the pod
Aug 27 13:13:22.549: INFO: Waiting for pod downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59 to disappear
Aug 27 13:13:22.554: INFO: Pod downwardapi-volume-92662129-3add-49ec-8bfa-e4ece82b2a59 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Aug 27 13:13:22.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1668" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":283,"skipped":5320,"failed":0}
SS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:22.571: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-6656
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Aug 27 13:13:22.723: INFO: Major version: 1
STEP: Confirm minor version
Aug 27 13:13:22.723: INFO: cleanMinorVersion: 24
Aug 27 13:13:22.723: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Aug 27 13:13:22.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-6656" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":284,"skipped":5322,"failed":0}
SS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:22.740: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-7979
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug 27 13:13:22.985: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-7979" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":285,"skipped":5324,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:23.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-9867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 13:13:36.285: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-9867" for this suite.

• [SLOW TEST:13.294 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":286,"skipped":5345,"failed":0}
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:36.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-3521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 27 13:13:40.558: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 27 13:13:40.587: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-3521" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":287,"skipped":5349,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:40.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4988
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Aug 27 13:13:40.757: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-4988 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:13:40.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4988" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":288,"skipped":5390,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:40.868: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-9120
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Aug 27 13:13:41.040: INFO: Pod name pod-release: Found 0 pods out of 1
Aug 27 13:13:46.056: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Aug 27 13:13:47.122: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-9120" for this suite.

• [SLOW TEST:6.283 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":289,"skipped":5398,"failed":0}
SSS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:47.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-7633
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Aug 27 13:13:47.329: INFO: Waiting up to 5m0s for pod "security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e" in namespace "security-context-7633" to be "Succeeded or Failed"
Aug 27 13:13:47.333: INFO: Pod "security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e": Phase="Pending", Reason="", readiness=false. Elapsed: 4.615264ms
Aug 27 13:13:49.346: INFO: Pod "security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017016459s
Aug 27 13:13:51.356: INFO: Pod "security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.02730298s
STEP: Saw pod success
Aug 27 13:13:51.356: INFO: Pod "security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e" satisfied condition "Succeeded or Failed"
Aug 27 13:13:51.362: INFO: Trying to get logs from node ip-172-31-31-152 pod security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e container test-container: <nil>
STEP: delete the pod
Aug 27 13:13:51.388: INFO: Waiting for pod security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e to disappear
Aug 27 13:13:51.393: INFO: Pod security-context-1412d6ab-6ed7-4365-97dd-06845bb6f11e no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 27 13:13:51.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-7633" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":290,"skipped":5401,"failed":0}

------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:51.410: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-8870
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:13:52.403: INFO: Checking APIGroup: apiregistration.k8s.io
Aug 27 13:13:52.406: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Aug 27 13:13:52.406: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Aug 27 13:13:52.407: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Aug 27 13:13:52.407: INFO: Checking APIGroup: apps
Aug 27 13:13:52.408: INFO: PreferredVersion.GroupVersion: apps/v1
Aug 27 13:13:52.408: INFO: Versions found [{apps/v1 v1}]
Aug 27 13:13:52.408: INFO: apps/v1 matches apps/v1
Aug 27 13:13:52.408: INFO: Checking APIGroup: events.k8s.io
Aug 27 13:13:52.410: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Aug 27 13:13:52.410: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Aug 27 13:13:52.410: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Aug 27 13:13:52.410: INFO: Checking APIGroup: authentication.k8s.io
Aug 27 13:13:52.412: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Aug 27 13:13:52.412: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Aug 27 13:13:52.412: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Aug 27 13:13:52.412: INFO: Checking APIGroup: authorization.k8s.io
Aug 27 13:13:52.413: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Aug 27 13:13:52.414: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Aug 27 13:13:52.414: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Aug 27 13:13:52.414: INFO: Checking APIGroup: autoscaling
Aug 27 13:13:52.415: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Aug 27 13:13:52.415: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Aug 27 13:13:52.415: INFO: autoscaling/v2 matches autoscaling/v2
Aug 27 13:13:52.415: INFO: Checking APIGroup: batch
Aug 27 13:13:52.416: INFO: PreferredVersion.GroupVersion: batch/v1
Aug 27 13:13:52.417: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Aug 27 13:13:52.417: INFO: batch/v1 matches batch/v1
Aug 27 13:13:52.417: INFO: Checking APIGroup: certificates.k8s.io
Aug 27 13:13:52.418: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Aug 27 13:13:52.418: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Aug 27 13:13:52.418: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Aug 27 13:13:52.418: INFO: Checking APIGroup: networking.k8s.io
Aug 27 13:13:52.419: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Aug 27 13:13:52.420: INFO: Versions found [{networking.k8s.io/v1 v1}]
Aug 27 13:13:52.420: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Aug 27 13:13:52.420: INFO: Checking APIGroup: policy
Aug 27 13:13:52.424: INFO: PreferredVersion.GroupVersion: policy/v1
Aug 27 13:13:52.424: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Aug 27 13:13:52.424: INFO: policy/v1 matches policy/v1
Aug 27 13:13:52.424: INFO: Checking APIGroup: rbac.authorization.k8s.io
Aug 27 13:13:52.427: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Aug 27 13:13:52.427: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Aug 27 13:13:52.427: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Aug 27 13:13:52.427: INFO: Checking APIGroup: storage.k8s.io
Aug 27 13:13:52.429: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Aug 27 13:13:52.429: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Aug 27 13:13:52.429: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Aug 27 13:13:52.429: INFO: Checking APIGroup: admissionregistration.k8s.io
Aug 27 13:13:52.436: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Aug 27 13:13:52.437: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Aug 27 13:13:52.437: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Aug 27 13:13:52.437: INFO: Checking APIGroup: apiextensions.k8s.io
Aug 27 13:13:52.439: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Aug 27 13:13:52.439: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Aug 27 13:13:52.439: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Aug 27 13:13:52.439: INFO: Checking APIGroup: scheduling.k8s.io
Aug 27 13:13:52.440: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Aug 27 13:13:52.440: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Aug 27 13:13:52.440: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Aug 27 13:13:52.441: INFO: Checking APIGroup: coordination.k8s.io
Aug 27 13:13:52.442: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Aug 27 13:13:52.442: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Aug 27 13:13:52.442: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Aug 27 13:13:52.442: INFO: Checking APIGroup: node.k8s.io
Aug 27 13:13:52.444: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Aug 27 13:13:52.444: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Aug 27 13:13:52.444: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Aug 27 13:13:52.444: INFO: Checking APIGroup: discovery.k8s.io
Aug 27 13:13:52.448: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Aug 27 13:13:52.448: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Aug 27 13:13:52.448: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Aug 27 13:13:52.448: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Aug 27 13:13:52.449: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Aug 27 13:13:52.449: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Aug 27 13:13:52.449: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Aug 27 13:13:52.449: INFO: Checking APIGroup: metrics.k8s.io
Aug 27 13:13:52.450: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Aug 27 13:13:52.450: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Aug 27 13:13:52.450: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Aug 27 13:13:52.450: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-8870" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":291,"skipped":5401,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:13:52.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6599
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 27 13:14:20.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6599" for this suite.

• [SLOW TEST:27.715 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":292,"skipped":5412,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:14:20.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-3644
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 27 13:14:20.374: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:14:22.383: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 27 13:14:22.418: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:14:24.430: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Aug 27 13:14:24.457: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 27 13:14:24.464: INFO: Pod pod-with-poststart-http-hook still exists
Aug 27 13:14:26.464: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 27 13:14:26.477: INFO: Pod pod-with-poststart-http-hook still exists
Aug 27 13:14:28.465: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Aug 27 13:14:28.489: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 27 13:14:28.489: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-3644" for this suite.

• [SLOW TEST:8.339 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":293,"skipped":5425,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:14:28.519: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7119
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7119
Aug 27 13:14:28.732: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:14:30.741: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Aug 27 13:14:30.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Aug 27 13:14:30.932: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Aug 27 13:14:30.932: INFO: stdout: "iptables"
Aug 27 13:14:30.932: INFO: proxyMode: iptables
Aug 27 13:14:30.954: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Aug 27 13:14:30.960: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-7119
STEP: creating replication controller affinity-clusterip-timeout in namespace services-7119
I0827 13:14:30.992010      22 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-7119, replica count: 3
I0827 13:14:34.043408      22 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 13:14:34.061: INFO: Creating new exec pod
Aug 27 13:14:37.101: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec execpod-affinityt8tvb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Aug 27 13:14:37.278: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Aug 27 13:14:37.278: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 13:14:37.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec execpod-affinityt8tvb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.180 80'
Aug 27 13:14:37.472: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.180 80\nConnection to 10.152.183.180 80 port [tcp/http] succeeded!\n"
Aug 27 13:14:37.472: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Aug 27 13:14:37.473: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec execpod-affinityt8tvb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.180:80/ ; done'
Aug 27 13:14:37.710: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n"
Aug 27 13:14:37.710: INFO: stdout: "\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d\naffinity-clusterip-timeout-tmj6d"
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Received response from host: affinity-clusterip-timeout-tmj6d
Aug 27 13:14:37.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec execpod-affinityt8tvb -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.180:80/'
Aug 27 13:14:37.871: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n"
Aug 27 13:14:37.871: INFO: stdout: "affinity-clusterip-timeout-tmj6d"
Aug 27 13:14:57.871: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec execpod-affinityt8tvb -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.180:80/'
Aug 27 13:14:58.122: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n"
Aug 27 13:14:58.122: INFO: stdout: "affinity-clusterip-timeout-tmj6d"
Aug 27 13:15:18.123: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec execpod-affinityt8tvb -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.180:80/'
Aug 27 13:15:18.309: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n"
Aug 27 13:15:18.309: INFO: stdout: "affinity-clusterip-timeout-tmj6d"
Aug 27 13:15:38.311: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-7119 exec execpod-affinityt8tvb -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.180:80/'
Aug 27 13:15:38.480: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.180:80/\n"
Aug 27 13:15:38.480: INFO: stdout: "affinity-clusterip-timeout-kn557"
Aug 27 13:15:38.480: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-7119, will wait for the garbage collector to delete the pods
Aug 27 13:15:38.582: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 15.386973ms
Aug 27 13:15:38.682: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.19748ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 13:15:41.214: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7119" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:72.721 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":294,"skipped":5448,"failed":0}
SSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:15:41.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-4670
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Aug 27 13:15:41.406: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 27 13:15:46.433: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 27 13:15:46.488: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-4670" for this suite.

• [SLOW TEST:5.272 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":295,"skipped":5453,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:15:46.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 13:15:46.717: INFO: Waiting up to 5m0s for pod "downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18" in namespace "projected-8198" to be "Succeeded or Failed"
Aug 27 13:15:46.730: INFO: Pod "downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18": Phase="Pending", Reason="", readiness=false. Elapsed: 12.918511ms
Aug 27 13:15:48.742: INFO: Pod "downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024394981s
Aug 27 13:15:50.759: INFO: Pod "downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.04186611s
STEP: Saw pod success
Aug 27 13:15:50.759: INFO: Pod "downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18" satisfied condition "Succeeded or Failed"
Aug 27 13:15:50.764: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18 container client-container: <nil>
STEP: delete the pod
Aug 27 13:15:50.805: INFO: Waiting for pod downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18 to disappear
Aug 27 13:15:50.811: INFO: Pod downwardapi-volume-02b5f2c3-bfaa-4d29-9e98-eb3ef2d93c18 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 13:15:50.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8198" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":296,"skipped":5496,"failed":0}

------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:15:50.834: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6073
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Aug 27 13:15:51.013: INFO: Waiting up to 5m0s for pod "pod-664fd656-9f80-4811-81ee-ba8a98e4f96f" in namespace "emptydir-6073" to be "Succeeded or Failed"
Aug 27 13:15:51.019: INFO: Pod "pod-664fd656-9f80-4811-81ee-ba8a98e4f96f": Phase="Pending", Reason="", readiness=false. Elapsed: 5.592461ms
Aug 27 13:15:53.033: INFO: Pod "pod-664fd656-9f80-4811-81ee-ba8a98e4f96f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020486552s
Aug 27 13:15:55.045: INFO: Pod "pod-664fd656-9f80-4811-81ee-ba8a98e4f96f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.032154026s
STEP: Saw pod success
Aug 27 13:15:55.045: INFO: Pod "pod-664fd656-9f80-4811-81ee-ba8a98e4f96f" satisfied condition "Succeeded or Failed"
Aug 27 13:15:55.054: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-664fd656-9f80-4811-81ee-ba8a98e4f96f container test-container: <nil>
STEP: delete the pod
Aug 27 13:15:55.088: INFO: Waiting for pod pod-664fd656-9f80-4811-81ee-ba8a98e4f96f to disappear
Aug 27 13:15:55.097: INFO: Pod pod-664fd656-9f80-4811-81ee-ba8a98e4f96f no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 13:15:55.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6073" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":297,"skipped":5496,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:15:55.119: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-31
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-31
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Aug 27 13:15:55.302: INFO: Found 0 stateful pods, waiting for 3
Aug 27 13:16:05.319: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 13:16:05.319: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 13:16:05.319: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Aug 27 13:16:05.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-31 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 13:16:05.513: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 13:16:05.513: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 13:16:05.513: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Aug 27 13:16:15.600: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Aug 27 13:16:25.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-31 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 13:16:25.806: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 27 13:16:25.806: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 13:16:25.806: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Aug 27 13:16:35.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-31 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Aug 27 13:16:36.017: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Aug 27 13:16:36.017: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Aug 27 13:16:36.017: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Aug 27 13:16:46.078: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Aug 27 13:16:56.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=statefulset-31 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Aug 27 13:16:56.345: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Aug 27 13:16:56.345: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Aug 27 13:16:56.345: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Aug 27 13:17:06.394: INFO: Waiting for StatefulSet statefulset-31/ss2 to complete update
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 13:17:16.411: INFO: Deleting all statefulset in ns statefulset-31
Aug 27 13:17:16.416: INFO: Scaling statefulset ss2 to 0
Aug 27 13:17:26.453: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 13:17:26.460: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 13:17:26.482: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-31" for this suite.

• [SLOW TEST:91.382 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":298,"skipped":5542,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:17:26.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-9444
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-9444, will wait for the garbage collector to delete the pods
Aug 27 13:17:28.764: INFO: Deleting Job.batch foo took: 20.209011ms
Aug 27 13:17:28.864: INFO: Terminating Job.batch foo pods took: 100.123993ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Aug 27 13:18:01.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-9444" for this suite.

• [SLOW TEST:35.395 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":299,"skipped":5624,"failed":0}
SSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:01.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-2935
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:18:02.070: INFO: Pod name sample-pod: Found 0 pods out of 1
Aug 27 13:18:07.080: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Aug 27 13:18:07.095: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Aug 27 13:18:07.112: INFO: observed ReplicaSet test-rs in namespace replicaset-2935 with ReadyReplicas 1, AvailableReplicas 1
Aug 27 13:18:07.148: INFO: observed ReplicaSet test-rs in namespace replicaset-2935 with ReadyReplicas 1, AvailableReplicas 1
Aug 27 13:18:07.180: INFO: observed ReplicaSet test-rs in namespace replicaset-2935 with ReadyReplicas 1, AvailableReplicas 1
Aug 27 13:18:07.212: INFO: observed ReplicaSet test-rs in namespace replicaset-2935 with ReadyReplicas 1, AvailableReplicas 1
Aug 27 13:18:08.414: INFO: observed ReplicaSet test-rs in namespace replicaset-2935 with ReadyReplicas 2, AvailableReplicas 2
Aug 27 13:18:09.090: INFO: observed Replicaset test-rs in namespace replicaset-2935 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Aug 27 13:18:09.091: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-2935" for this suite.

• [SLOW TEST:7.214 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":300,"skipped":5627,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:09.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8323
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-e464cccd-6d24-44f5-a5ab-8e7e9ac6223b
STEP: Creating a pod to test consume configMaps
Aug 27 13:18:09.298: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d" in namespace "projected-8323" to be "Succeeded or Failed"
Aug 27 13:18:09.307: INFO: Pod "pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d": Phase="Pending", Reason="", readiness=false. Elapsed: 8.556663ms
Aug 27 13:18:11.318: INFO: Pod "pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019851086s
Aug 27 13:18:13.328: INFO: Pod "pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029859485s
STEP: Saw pod success
Aug 27 13:18:13.328: INFO: Pod "pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d" satisfied condition "Succeeded or Failed"
Aug 27 13:18:13.336: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d container projected-configmap-volume-test: <nil>
STEP: delete the pod
Aug 27 13:18:13.379: INFO: Waiting for pod pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d to disappear
Aug 27 13:18:13.385: INFO: Pod pod-projected-configmaps-52781743-9925-4298-a4cd-6bc4374cf67d no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 13:18:13.386: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8323" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":301,"skipped":5644,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:13.407: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6864
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 13:18:14.122: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 13:18:17.168: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:18:17.180: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6864" for this suite.
STEP: Destroying namespace "webhook-6864-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":302,"skipped":5700,"failed":0}
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:17.291: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-6778
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 27 13:18:17.444: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 27 13:18:17.460: INFO: Waiting for terminating namespaces to be deleted...
Aug 27 13:18:17.466: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-31-152 before test
Aug 27 13:18:17.476: INFO: nginx-ingress-controller-kubernetes-worker-srk75 from ingress-nginx-kubernetes-worker started at 2022-08-27 13:02:42 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.476: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:18:17.476: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-s8z8v from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:18:17.476: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:18:17.476: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 13:18:17.476: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-5-213 before test
Aug 27 13:18:17.483: INFO: nginx-ingress-controller-kubernetes-worker-n4kcs from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:12 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.484: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:18:17.484: INFO: calico-kube-controllers-6c96fbdbd9-5j7cg from kube-system started at 2022-08-27 13:02:16 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.484: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 27 13:18:17.484: INFO: sonobuoy from sonobuoy started at 2022-08-27 11:57:36 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.484: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 27 13:18:17.484: INFO: sonobuoy-e2e-job-23201a167722436f from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:18:17.484: INFO: 	Container e2e ready: true, restart count 0
Aug 27 13:18:17.484: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:18:17.484: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-lbr5l from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:18:17.484: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:18:17.484: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 13:18:17.484: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-65-143 before test
Aug 27 13:18:17.492: INFO: default-http-backend-kubernetes-worker-6c59687bf6-srhcj from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 27 13:18:17.493: INFO: nginx-ingress-controller-kubernetes-worker-m5mkd from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:18:17.493: INFO: coredns-86c98bfcdb-klnhg from kube-system started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container coredns ready: true, restart count 0
Aug 27 13:18:17.493: INFO: kube-state-metrics-5cdbfd47b4-44nkd from kube-system started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 27 13:18:17.493: INFO: metrics-server-v0.5.2-6bfd958b56-bvvbj from kube-system started at 2022-08-27 11:53:07 +0000 UTC (2 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container metrics-server ready: true, restart count 0
Aug 27 13:18:17.493: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 27 13:18:17.493: INFO: dashboard-metrics-scraper-8669b59d4f-x9mgm from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 27 13:18:17.493: INFO: kubernetes-dashboard-585fc6bc87-gp4f6 from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 27 13:18:17.493: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-spbcd from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:18:17.493: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:18:17.493: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.170f361fc166fbf4], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 27 13:18:18.543: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-6778" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":303,"skipped":5703,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:18.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-295
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-ad4a0c9c-c87e-4f19-a7a9-4e78f7a2fc11
STEP: Creating a pod to test consume secrets
Aug 27 13:18:18.765: INFO: Waiting up to 5m0s for pod "pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d" in namespace "secrets-295" to be "Succeeded or Failed"
Aug 27 13:18:18.775: INFO: Pod "pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d": Phase="Pending", Reason="", readiness=false. Elapsed: 10.013773ms
Aug 27 13:18:20.785: INFO: Pod "pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d": Phase="Pending", Reason="", readiness=false. Elapsed: 2.020624044s
Aug 27 13:18:22.793: INFO: Pod "pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.028775321s
STEP: Saw pod success
Aug 27 13:18:22.794: INFO: Pod "pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d" satisfied condition "Succeeded or Failed"
Aug 27 13:18:22.815: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 13:18:22.864: INFO: Waiting for pod pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d to disappear
Aug 27 13:18:22.870: INFO: Pod pod-secrets-c9958e2a-9f09-4278-b8d8-38bf4a1f7c3d no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:18:22.871: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-295" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5757,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:22.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2301
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Aug 27 13:18:24.178: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
W0827 13:18:24.178308      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Aug 27 13:18:24.178: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2301" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":305,"skipped":5763,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:24.199: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9697
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:18:24.382: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Aug 27 13:18:24.395: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:18:24.395: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Aug 27 13:18:24.426: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:18:24.427: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 13:18:25.435: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:18:25.435: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 13:18:26.436: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 27 13:18:26.436: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Aug 27 13:18:26.468: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 27 13:18:26.468: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Aug 27 13:18:27.477: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:18:27.477: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Aug 27 13:18:27.493: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:18:27.493: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 13:18:28.513: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:18:28.513: INFO: Node ip-172-31-5-213 is running 0 daemon pod, expected 1
Aug 27 13:18:29.502: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Aug 27 13:18:29.502: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9697, will wait for the garbage collector to delete the pods
Aug 27 13:18:29.591: INFO: Deleting DaemonSet.extensions daemon-set took: 12.800906ms
Aug 27 13:18:29.692: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.799344ms
Aug 27 13:18:32.608: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Aug 27 13:18:32.608: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Aug 27 13:18:32.614: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"37775"},"items":null}

Aug 27 13:18:32.621: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"37775"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Aug 27 13:18:32.653: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9697" for this suite.

• [SLOW TEST:8.476 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":306,"skipped":5781,"failed":0}
SS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:32.676: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9175
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 13:18:32.839: INFO: Waiting up to 5m0s for pod "downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac" in namespace "projected-9175" to be "Succeeded or Failed"
Aug 27 13:18:32.848: INFO: Pod "downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac": Phase="Pending", Reason="", readiness=false. Elapsed: 8.2103ms
Aug 27 13:18:34.864: INFO: Pod "downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024590883s
Aug 27 13:18:36.876: INFO: Pod "downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036510385s
STEP: Saw pod success
Aug 27 13:18:36.876: INFO: Pod "downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac" satisfied condition "Succeeded or Failed"
Aug 27 13:18:36.880: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac container client-container: <nil>
STEP: delete the pod
Aug 27 13:18:36.909: INFO: Waiting for pod downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac to disappear
Aug 27 13:18:36.914: INFO: Pod downwardapi-volume-428e5878-3851-4e3f-b016-e580de4b61ac no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 13:18:36.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9175" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5783,"failed":0}
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:36.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3895
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 13:18:37.509: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 13:18:40.554: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:18:40.619: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3895" for this suite.
STEP: Destroying namespace "webhook-3895-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":308,"skipped":5792,"failed":0}
SS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:18:40.731: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-1610
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-85691e58-c2c4-4f84-971d-e87d3768bf4e in namespace container-probe-1610
Aug 27 13:18:42.923: INFO: Started pod liveness-85691e58-c2c4-4f84-971d-e87d3768bf4e in namespace container-probe-1610
STEP: checking the pod's current state and verifying that restartCount is present
Aug 27 13:18:42.929: INFO: Initial restart count of pod liveness-85691e58-c2c4-4f84-971d-e87d3768bf4e is 0
Aug 27 13:19:03.078: INFO: Restart count of pod container-probe-1610/liveness-85691e58-c2c4-4f84-971d-e87d3768bf4e is now 1 (20.149110578s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 13:19:03.097: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-1610" for this suite.

• [SLOW TEST:22.390 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":309,"skipped":5794,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:19:03.121: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-3171
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Aug 27 13:19:04.409: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0827 13:19:04.409112      22 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Aug 27 13:19:04.409: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-3171" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":310,"skipped":5805,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:19:04.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7544
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Aug 27 13:19:04.612: INFO: The status of Pod labelsupdatedc8b04f2-0dfe-431d-94fc-9479548f5741 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:19:06.627: INFO: The status of Pod labelsupdatedc8b04f2-0dfe-431d-94fc-9479548f5741 is Running (Ready = true)
Aug 27 13:19:07.173: INFO: Successfully updated pod "labelsupdatedc8b04f2-0dfe-431d-94fc-9479548f5741"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 13:19:11.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7544" for this suite.

• [SLOW TEST:6.846 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":311,"skipped":5815,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:19:11.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5669
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Aug 27 13:19:11.462: INFO: The status of Pod pod-hostip-fc39c3cd-71a4-4cba-8fa8-63b330216f3e is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:19:13.471: INFO: The status of Pod pod-hostip-fc39c3cd-71a4-4cba-8fa8-63b330216f3e is Running (Ready = true)
Aug 27 13:19:13.483: INFO: Pod pod-hostip-fc39c3cd-71a4-4cba-8fa8-63b330216f3e has hostIP: 172.31.31.152
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 13:19:13.483: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5669" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":312,"skipped":5837,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:19:13.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-6587
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-b698
STEP: Creating a pod to test atomic-volume-subpath
Aug 27 13:19:13.698: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-b698" in namespace "subpath-6587" to be "Succeeded or Failed"
Aug 27 13:19:13.710: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Pending", Reason="", readiness=false. Elapsed: 11.840748ms
Aug 27 13:19:15.725: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 2.026881347s
Aug 27 13:19:17.732: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 4.03396349s
Aug 27 13:19:19.750: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 6.051795424s
Aug 27 13:19:21.761: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 8.063437091s
Aug 27 13:19:23.772: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 10.074166744s
Aug 27 13:19:25.784: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 12.085635636s
Aug 27 13:19:27.796: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 14.098075205s
Aug 27 13:19:29.807: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 16.109236266s
Aug 27 13:19:31.814: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 18.115593101s
Aug 27 13:19:33.823: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=true. Elapsed: 20.124811968s
Aug 27 13:19:35.831: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Running", Reason="", readiness=false. Elapsed: 22.132992426s
Aug 27 13:19:37.841: INFO: Pod "pod-subpath-test-configmap-b698": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.143207598s
STEP: Saw pod success
Aug 27 13:19:37.841: INFO: Pod "pod-subpath-test-configmap-b698" satisfied condition "Succeeded or Failed"
Aug 27 13:19:37.851: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-subpath-test-configmap-b698 container test-container-subpath-configmap-b698: <nil>
STEP: delete the pod
Aug 27 13:19:37.893: INFO: Waiting for pod pod-subpath-test-configmap-b698 to disappear
Aug 27 13:19:37.898: INFO: Pod pod-subpath-test-configmap-b698 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-b698
Aug 27 13:19:37.898: INFO: Deleting pod "pod-subpath-test-configmap-b698" in namespace "subpath-6587"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Aug 27 13:19:37.908: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-6587" for this suite.

• [SLOW TEST:24.429 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":313,"skipped":5866,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:19:37.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8803
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-8803
STEP: creating replication controller nodeport-test in namespace services-8803
I0827 13:19:38.144505      22 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-8803, replica count: 2
I0827 13:19:41.195005      22 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Aug 27 13:19:41.195: INFO: Creating new exec pod
Aug 27 13:19:44.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8803 exec execpodb6q2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug 27 13:19:44.446: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug 27 13:19:44.446: INFO: stdout: ""
Aug 27 13:19:45.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8803 exec execpodb6q2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Aug 27 13:19:45.622: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Aug 27 13:19:45.622: INFO: stdout: "nodeport-test-r5zh5"
Aug 27 13:19:45.622: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8803 exec execpodb6q2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.16 80'
Aug 27 13:19:45.793: INFO: stderr: "+ + echo hostNamenc\n -v -t -w 2 10.152.183.16 80\nConnection to 10.152.183.16 80 port [tcp/http] succeeded!\n"
Aug 27 13:19:45.793: INFO: stdout: "nodeport-test-r5zh5"
Aug 27 13:19:45.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8803 exec execpodb6q2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.152 30093'
Aug 27 13:19:45.959: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.152 30093\nConnection to 172.31.31.152 30093 port [tcp/*] succeeded!\n"
Aug 27 13:19:45.959: INFO: stdout: ""
Aug 27 13:19:46.960: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8803 exec execpodb6q2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.31.152 30093'
Aug 27 13:19:47.125: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.31.152 30093\nConnection to 172.31.31.152 30093 port [tcp/*] succeeded!\n"
Aug 27 13:19:47.125: INFO: stdout: "nodeport-test-wspjs"
Aug 27 13:19:47.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=services-8803 exec execpodb6q2n -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.213 30093'
Aug 27 13:19:47.288: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.213 30093\nConnection to 172.31.5.213 30093 port [tcp/*] succeeded!\n"
Aug 27 13:19:47.288: INFO: stdout: "nodeport-test-r5zh5"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Aug 27 13:19:47.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8803" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.380 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":314,"skipped":5933,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:19:47.310: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8214
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Aug 27 13:19:47.471: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Aug 27 13:20:00.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
Aug 27 13:20:03.985: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:20:16.391: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8214" for this suite.

• [SLOW TEST:29.104 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":315,"skipped":5943,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:20:16.414: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-3814
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Aug 27 13:20:16.586: INFO: PodSpec: initContainers in spec.initContainers
Aug 27 13:21:01.126: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-96929d4c-3b5b-4659-986d-39940f659e20", GenerateName:"", Namespace:"init-container-3814", SelfLink:"", UID:"4601a81d-c03c-417a-bf7a-80f454ba3398", ResourceVersion:"38590", Generation:0, CreationTimestamp:time.Date(2022, time.August, 27, 13, 20, 16, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"586414273"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 27, 13, 20, 16, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003baf128), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.August, 27, 13, 20, 18, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003baf158), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-f5nmv", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc002878060), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-f5nmv", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-f5nmv", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-f5nmv", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc004e5ec18), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-31-152", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00268f6c0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004e5eca0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc004e5ecc0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc004e5ecc8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc004e5eccc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0049a1920), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 27, 13, 20, 16, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 27, 13, 20, 16, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 27, 13, 20, 16, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.August, 27, 13, 20, 16, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.31.152", PodIP:"192.168.233.133", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.233.133"}}, StartTime:time.Date(2022, time.August, 27, 13, 20, 16, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00268f810)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00268f8f0)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://6b0ed3d6639ab1974a936611f9168d1ca3e4b89ceba4f1afbc7a5dc642117c18", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc002878120), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc002878100), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc004e5ed44)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Aug 27 13:21:01.126: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-3814" for this suite.

• [SLOW TEST:44.731 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":316,"skipped":5969,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:01.146: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 27 13:21:01.311: INFO: Waiting up to 5m0s for pod "pod-caa69915-2843-4eb3-b826-3904cc964b29" in namespace "emptydir-5538" to be "Succeeded or Failed"
Aug 27 13:21:01.318: INFO: Pod "pod-caa69915-2843-4eb3-b826-3904cc964b29": Phase="Pending", Reason="", readiness=false. Elapsed: 6.585736ms
Aug 27 13:21:03.337: INFO: Pod "pod-caa69915-2843-4eb3-b826-3904cc964b29": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025038537s
Aug 27 13:21:05.351: INFO: Pod "pod-caa69915-2843-4eb3-b826-3904cc964b29": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.039021163s
STEP: Saw pod success
Aug 27 13:21:05.351: INFO: Pod "pod-caa69915-2843-4eb3-b826-3904cc964b29" satisfied condition "Succeeded or Failed"
Aug 27 13:21:05.359: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-caa69915-2843-4eb3-b826-3904cc964b29 container test-container: <nil>
STEP: delete the pod
Aug 27 13:21:05.406: INFO: Waiting for pod pod-caa69915-2843-4eb3-b826-3904cc964b29 to disappear
Aug 27 13:21:05.411: INFO: Pod pod-caa69915-2843-4eb3-b826-3904cc964b29 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 13:21:05.411: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5538" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":317,"skipped":5973,"failed":0}

------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:05.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-1123
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Aug 27 13:21:05.590: INFO: namespace kubectl-1123
Aug 27 13:21:05.590: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1123 create -f -'
Aug 27 13:21:06.588: INFO: stderr: ""
Aug 27 13:21:06.588: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Aug 27 13:21:07.600: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 13:21:07.600: INFO: Found 0 / 1
Aug 27 13:21:08.600: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 13:21:08.600: INFO: Found 1 / 1
Aug 27 13:21:08.600: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Aug 27 13:21:08.606: INFO: Selector matched 1 pods for map[app:agnhost]
Aug 27 13:21:08.606: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Aug 27 13:21:08.606: INFO: wait on agnhost-primary startup in kubectl-1123 
Aug 27 13:21:08.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1123 logs agnhost-primary-7dwvs agnhost-primary'
Aug 27 13:21:08.727: INFO: stderr: ""
Aug 27 13:21:08.728: INFO: stdout: "Paused\n"
STEP: exposing RC
Aug 27 13:21:08.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1123 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Aug 27 13:21:08.832: INFO: stderr: ""
Aug 27 13:21:08.832: INFO: stdout: "service/rm2 exposed\n"
Aug 27 13:21:08.841: INFO: Service rm2 in namespace kubectl-1123 found.
STEP: exposing service
Aug 27 13:21:10.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-1123 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Aug 27 13:21:10.963: INFO: stderr: ""
Aug 27 13:21:10.963: INFO: stdout: "service/rm3 exposed\n"
Aug 27 13:21:10.968: INFO: Service rm3 in namespace kubectl-1123 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:21:12.983: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-1123" for this suite.

• [SLOW TEST:7.575 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":318,"skipped":5973,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:13.004: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-7897
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-7897-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Aug 27 13:21:13.196: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-7897" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":319,"skipped":5985,"failed":0}
SS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:13.210: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-7086
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-109625a4-443c-452a-b95e-84a23a8e8656
STEP: Creating a pod to test consume configMaps
Aug 27 13:21:13.395: INFO: Waiting up to 5m0s for pod "pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733" in namespace "configmap-7086" to be "Succeeded or Failed"
Aug 27 13:21:13.401: INFO: Pod "pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733": Phase="Pending", Reason="", readiness=false. Elapsed: 6.006866ms
Aug 27 13:21:15.413: INFO: Pod "pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017930211s
Aug 27 13:21:17.424: INFO: Pod "pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.029055452s
STEP: Saw pod success
Aug 27 13:21:17.425: INFO: Pod "pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733" satisfied condition "Succeeded or Failed"
Aug 27 13:21:17.430: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733 container agnhost-container: <nil>
STEP: delete the pod
Aug 27 13:21:17.462: INFO: Waiting for pod pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733 to disappear
Aug 27 13:21:17.467: INFO: Pod pod-configmaps-a4127b2c-8359-4ea3-be04-0690c6c65733 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 13:21:17.467: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-7086" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":320,"skipped":5987,"failed":0}
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:17.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5744
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5744
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-5744
Aug 27 13:21:17.664: INFO: Found 0 stateful pods, waiting for 1
Aug 27 13:21:27.687: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Aug 27 13:21:27.742: INFO: Deleting all statefulset in ns statefulset-5744
Aug 27 13:21:27.751: INFO: Scaling statefulset ss to 0
Aug 27 13:21:37.799: INFO: Waiting for statefulset status.replicas updated to 0
Aug 27 13:21:37.805: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Aug 27 13:21:37.829: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5744" for this suite.

• [SLOW TEST:20.361 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":321,"skipped":5992,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:37.847: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1815
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-f9f935d2-4328-4ce4-a2ab-6dc5d35d56d4
STEP: Creating configMap with name cm-test-opt-upd-49832cfa-af8e-4082-9c3d-cba96516de2a
STEP: Creating the pod
Aug 27 13:21:38.055: INFO: The status of Pod pod-projected-configmaps-e5a412e4-9eea-4fec-851c-3be33a1289cf is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:21:40.064: INFO: The status of Pod pod-projected-configmaps-e5a412e4-9eea-4fec-851c-3be33a1289cf is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-f9f935d2-4328-4ce4-a2ab-6dc5d35d56d4
STEP: Updating configmap cm-test-opt-upd-49832cfa-af8e-4082-9c3d-cba96516de2a
STEP: Creating configMap with name cm-test-opt-create-78f53064-93fb-458d-a13c-29f7cefcd25c
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Aug 27 13:21:42.187: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1815" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":322,"skipped":6006,"failed":0}
SSSSSSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:42.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-8641
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8641.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8641.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8641.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8641.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 13:21:44.450: INFO: DNS probes using dns-8641/dns-test-81da07a8-d1d0-4aa8-972c-58d7f203a00c succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 13:21:44.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-8641" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":323,"skipped":6014,"failed":0}
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:21:44.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 13:21:45.546: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 13:21:48.594: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:22:00.818: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-290" for this suite.
STEP: Destroying namespace "webhook-290-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:16.425 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":324,"skipped":6022,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:22:00.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1662
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Aug 27 13:24:01.665: INFO: Successfully updated pod "var-expansion-866f658d-b6d3-4127-8b53-6f4c48e5c5e5"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Aug 27 13:24:03.694: INFO: Deleting pod "var-expansion-866f658d-b6d3-4127-8b53-6f4c48e5c5e5" in namespace "var-expansion-1662"
Aug 27 13:24:03.713: INFO: Wait up to 5m0s for pod "var-expansion-866f658d-b6d3-4127-8b53-6f4c48e5c5e5" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 13:24:35.730: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1662" for this suite.

• [SLOW TEST:154.842 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":325,"skipped":6039,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:24:35.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3489
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 13:24:36.560: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 13:24:39.598: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:24:39.606: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:24:42.831: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3489" for this suite.
STEP: Destroying namespace "webhook-3489-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.171 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":326,"skipped":6112,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:24:42.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8357
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Aug 27 13:24:43.111: INFO: Waiting up to 5m0s for pod "downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1" in namespace "projected-8357" to be "Succeeded or Failed"
Aug 27 13:24:43.117: INFO: Pod "downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.724371ms
Aug 27 13:24:45.130: INFO: Pod "downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019490623s
Aug 27 13:24:47.138: INFO: Pod "downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027641249s
STEP: Saw pod success
Aug 27 13:24:47.139: INFO: Pod "downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1" satisfied condition "Succeeded or Failed"
Aug 27 13:24:47.145: INFO: Trying to get logs from node ip-172-31-31-152 pod downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1 container client-container: <nil>
STEP: delete the pod
Aug 27 13:24:47.189: INFO: Waiting for pod downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1 to disappear
Aug 27 13:24:47.194: INFO: Pod downwardapi-volume-becb2db5-ea4d-4fdc-a052-9eb333f217b1 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Aug 27 13:24:47.195: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8357" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":327,"skipped":6132,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:24:47.213: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7482
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:24:47.432: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7482" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":328,"skipped":6141,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:24:47.451: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-4822
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-4822
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-4822
STEP: Deleting pre-stop pod
Aug 27 13:24:56.718: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Aug 27 13:24:56.746: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-4822" for this suite.

• [SLOW TEST:9.319 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":329,"skipped":6170,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:24:56.770: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-5161
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:24:56.946: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Aug 27 13:25:01.953: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Aug 27 13:25:01.954: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 13:25:01.990: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-5161  5dd3516e-6144-4983-8e1a-c24bbc93a99a 39773 1 2022-08-27 13:25:01 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  [{e2e.test Update apps/v1 2022-08-27 13:25:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0041cf238 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Aug 27 13:25:01.996: INFO: New ReplicaSet "test-cleanup-deployment-6755c7b765" of Deployment "test-cleanup-deployment":
&ReplicaSet{ObjectMeta:{test-cleanup-deployment-6755c7b765  deployment-5161  8cb21ab4-84e7-457b-b3d6-ada0fead71fd 39775 1 2022-08-27 13:25:01 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-cleanup-deployment 5dd3516e-6144-4983-8e1a-c24bbc93a99a 0xc004640867 0xc004640868}] []  [{kube-controller-manager Update apps/v1 2022-08-27 13:25:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"5dd3516e-6144-4983-8e1a-c24bbc93a99a\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod-template-hash: 6755c7b765,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod-template-hash:6755c7b765] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0046408f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:0,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Aug 27 13:25:01.996: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Aug 27 13:25:01.996: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-5161  c845f948-1ece-4075-9640-839a7362dc19 39774 1 2022-08-27 13:24:56 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 5dd3516e-6144-4983-8e1a-c24bbc93a99a 0xc004640737 0xc004640738}] []  [{e2e.test Update apps/v1 2022-08-27 13:24:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 13:24:58 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2022-08-27 13:25:01 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"5dd3516e-6144-4983-8e1a-c24bbc93a99a\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0046407f8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 27 13:25:02.008: INFO: Pod "test-cleanup-controller-27rbd" is available:
&Pod{ObjectMeta:{test-cleanup-controller-27rbd test-cleanup-controller- deployment-5161  63cb662d-bcd9-41bb-9090-0db5deab330f 39763 0 2022-08-27 13:24:56 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-controller c845f948-1ece-4075-9640-839a7362dc19 0xc0041cf6c7 0xc0041cf6c8}] []  [{kube-controller-manager Update v1 2022-08-27 13:24:56 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c845f948-1ece-4075-9640-839a7362dc19\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 13:24:58 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.158\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-44jld,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-44jld,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:24:56 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:24:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:24:58 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:24:56 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:192.168.233.158,StartTime:2022-08-27 13:24:56 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 13:24:57 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://9b864155493db03ffb5dd2a21262216090e75a50dcbc877a9266fc3ab094cb91,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.233.158,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 13:25:02.008: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-5161" for this suite.

• [SLOW TEST:5.266 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":330,"skipped":6224,"failed":0}
SSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:25:02.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-2403
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:25:02.225: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-9d8e34cc-d209-4af9-a148-820d284615f0" in namespace "security-context-test-2403" to be "Succeeded or Failed"
Aug 27 13:25:02.236: INFO: Pod "alpine-nnp-false-9d8e34cc-d209-4af9-a148-820d284615f0": Phase="Pending", Reason="", readiness=false. Elapsed: 11.517642ms
Aug 27 13:25:04.250: INFO: Pod "alpine-nnp-false-9d8e34cc-d209-4af9-a148-820d284615f0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.024982598s
Aug 27 13:25:06.269: INFO: Pod "alpine-nnp-false-9d8e34cc-d209-4af9-a148-820d284615f0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.044212145s
Aug 27 13:25:06.269: INFO: Pod "alpine-nnp-false-9d8e34cc-d209-4af9-a148-820d284615f0" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 27 13:25:06.288: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-2403" for this suite.
•{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":331,"skipped":6227,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:25:06.309: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-9417
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Aug 27 13:25:06.564: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-9417" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":332,"skipped":6256,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:25:06.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-1867
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Aug 27 13:25:06.762: INFO: Waiting up to 5m0s for pod "var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676" in namespace "var-expansion-1867" to be "Succeeded or Failed"
Aug 27 13:25:06.776: INFO: Pod "var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676": Phase="Pending", Reason="", readiness=false. Elapsed: 13.272647ms
Aug 27 13:25:08.786: INFO: Pod "var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676": Phase="Pending", Reason="", readiness=false. Elapsed: 2.023367688s
Aug 27 13:25:10.793: INFO: Pod "var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.030381315s
STEP: Saw pod success
Aug 27 13:25:10.793: INFO: Pod "var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676" satisfied condition "Succeeded or Failed"
Aug 27 13:25:10.799: INFO: Trying to get logs from node ip-172-31-31-152 pod var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676 container dapi-container: <nil>
STEP: delete the pod
Aug 27 13:25:10.829: INFO: Waiting for pod var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676 to disappear
Aug 27 13:25:10.835: INFO: Pod var-expansion-e34e264b-a90d-4920-ba9b-74ee62393676 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Aug 27 13:25:10.835: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-1867" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":333,"skipped":6278,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:25:10.852: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6359
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Aug 27 13:25:11.716: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Aug 27 13:25:14.764: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:25:25.116: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6359" for this suite.
STEP: Destroying namespace "webhook-6359-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:14.361 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":334,"skipped":6291,"failed":0}
SS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:25:25.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5266.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5266.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5266.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5266.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 13:25:27.452: INFO: DNS probes using dns-test-7705f73f-efb1-4abf-9c8c-0d4c5ff4b9f8 succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5266.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5266.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5266.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5266.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 13:25:29.536: INFO: File wheezy_udp@dns-test-service-3.dns-5266.svc.cluster.local from pod  dns-5266/dns-test-27371081-fac9-4088-a8ef-ffe49b989a9b contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 27 13:25:29.543: INFO: File jessie_udp@dns-test-service-3.dns-5266.svc.cluster.local from pod  dns-5266/dns-test-27371081-fac9-4088-a8ef-ffe49b989a9b contains 'foo.example.com.
' instead of 'bar.example.com.'
Aug 27 13:25:29.543: INFO: Lookups using dns-5266/dns-test-27371081-fac9-4088-a8ef-ffe49b989a9b failed for: [wheezy_udp@dns-test-service-3.dns-5266.svc.cluster.local jessie_udp@dns-test-service-3.dns-5266.svc.cluster.local]

Aug 27 13:25:34.559: INFO: DNS probes using dns-test-27371081-fac9-4088-a8ef-ffe49b989a9b succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5266.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5266.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5266.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5266.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 13:25:38.676: INFO: DNS probes using dns-test-5bc0bc61-fd8a-49f4-9dac-23248698bd7d succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 13:25:38.729: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5266" for this suite.

• [SLOW TEST:13.541 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":335,"skipped":6293,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:25:38.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:25:38.929: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:25:40.937: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:42.940: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:44.946: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:46.941: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:48.940: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:50.937: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:52.943: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:54.940: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:56.942: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:25:58.942: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = false)
Aug 27 13:26:00.937: INFO: The status of Pod test-webserver-d7f391bc-ca7f-400d-b600-8b406163b838 is Running (Ready = true)
Aug 27 13:26:00.944: INFO: Container started at 2022-08-27 13:25:39 +0000 UTC, pod became ready at 2022-08-27 13:25:59 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Aug 27 13:26:00.944: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2367" for this suite.

• [SLOW TEST:22.211 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":336,"skipped":6317,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:00.967: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-5135
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:01.132: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-7751
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-5135
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Aug 27 13:26:03.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-7751" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Aug 27 13:26:03.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-5135" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":337,"skipped":6331,"failed":0}
SSSSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:03.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-4472
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Aug 27 13:26:03.660: INFO: observed Pod pod-test in namespace pods-4472 in phase Pending with labels: map[test-pod-static:true] & conditions []
Aug 27 13:26:03.663: INFO: observed Pod pod-test in namespace pods-4472 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:03 +0000 UTC  }]
Aug 27 13:26:03.720: INFO: observed Pod pod-test in namespace pods-4472 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:03 +0000 UTC  }]
Aug 27 13:26:04.768: INFO: Found Pod pod-test in namespace pods-4472 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:03 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:04 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:04 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-08-27 13:26:03 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Aug 27 13:26:04.850: INFO: observed event type MODIFIED
Aug 27 13:26:06.109: INFO: observed event type MODIFIED
Aug 27 13:26:07.835: INFO: observed event type MODIFIED
Aug 27 13:26:07.847: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Aug 27 13:26:07.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-4472" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":338,"skipped":6336,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:07.896: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1975
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-7ba1fa42-9609-4ac0-b84d-60974c2631b3
STEP: Creating a pod to test consume secrets
Aug 27 13:26:08.079: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e" in namespace "projected-1975" to be "Succeeded or Failed"
Aug 27 13:26:08.086: INFO: Pod "pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e": Phase="Pending", Reason="", readiness=false. Elapsed: 7.686559ms
Aug 27 13:26:10.096: INFO: Pod "pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.016802583s
Aug 27 13:26:12.106: INFO: Pod "pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027342905s
STEP: Saw pod success
Aug 27 13:26:12.106: INFO: Pod "pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e" satisfied condition "Succeeded or Failed"
Aug 27 13:26:12.114: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e container secret-volume-test: <nil>
STEP: delete the pod
Aug 27 13:26:12.161: INFO: Waiting for pod pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e to disappear
Aug 27 13:26:12.167: INFO: Pod pod-projected-secrets-335a5816-ff9a-48b8-ba67-a7a6bc459a0e no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Aug 27 13:26:12.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1975" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":339,"skipped":6351,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:12.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-6820
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:26:12.376: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-1c21e98c-d19d-44ad-9034-26ce79a24f44" in namespace "security-context-test-6820" to be "Succeeded or Failed"
Aug 27 13:26:12.383: INFO: Pod "busybox-privileged-false-1c21e98c-d19d-44ad-9034-26ce79a24f44": Phase="Pending", Reason="", readiness=false. Elapsed: 7.126242ms
Aug 27 13:26:14.395: INFO: Pod "busybox-privileged-false-1c21e98c-d19d-44ad-9034-26ce79a24f44": Phase="Pending", Reason="", readiness=false. Elapsed: 2.018945914s
Aug 27 13:26:16.403: INFO: Pod "busybox-privileged-false-1c21e98c-d19d-44ad-9034-26ce79a24f44": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027534401s
Aug 27 13:26:16.403: INFO: Pod "busybox-privileged-false-1c21e98c-d19d-44ad-9034-26ce79a24f44" satisfied condition "Succeeded or Failed"
Aug 27 13:26:16.415: INFO: Got logs for pod "busybox-privileged-false-1c21e98c-d19d-44ad-9034-26ce79a24f44": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Aug 27 13:26:16.415: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6820" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":340,"skipped":6362,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:16.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-5518
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Aug 27 13:26:16.633: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:26:18.641: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Aug 27 13:26:18.678: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:26:20.685: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Aug 27 13:26:20.706: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 27 13:26:20.717: INFO: Pod pod-with-prestop-exec-hook still exists
Aug 27 13:26:22.718: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 27 13:26:22.732: INFO: Pod pod-with-prestop-exec-hook still exists
Aug 27 13:26:24.719: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Aug 27 13:26:24.727: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Aug 27 13:26:24.738: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-5518" for this suite.

• [SLOW TEST:8.315 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":341,"skipped":6398,"failed":0}
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:24.754: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:26:24.941: INFO: The status of Pod busybox-scheduling-0256d98c-e553-4d13-867a-449301f7fc65 is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:26:26.953: INFO: The status of Pod busybox-scheduling-0256d98c-e553-4d13-867a-449301f7fc65 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 27 13:26:26.972: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5889" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":342,"skipped":6402,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:26.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-194
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Aug 27 13:26:27.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=kubectl-194 api-versions'
Aug 27 13:26:27.301: INFO: stderr: ""
Aug 27 13:26:27.301: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Aug 27 13:26:27.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-194" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":343,"skipped":6433,"failed":0}
SSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:27.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6758
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Aug 27 13:26:27.488: INFO: Waiting up to 5m0s for pod "downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28" in namespace "downward-api-6758" to be "Succeeded or Failed"
Aug 27 13:26:27.492: INFO: Pod "downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28": Phase="Pending", Reason="", readiness=false. Elapsed: 4.52871ms
Aug 27 13:26:29.508: INFO: Pod "downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.019578598s
Aug 27 13:26:31.527: INFO: Pod "downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.038599394s
STEP: Saw pod success
Aug 27 13:26:31.527: INFO: Pod "downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28" satisfied condition "Succeeded or Failed"
Aug 27 13:26:31.532: INFO: Trying to get logs from node ip-172-31-31-152 pod downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28 container dapi-container: <nil>
STEP: delete the pod
Aug 27 13:26:31.566: INFO: Waiting for pod downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28 to disappear
Aug 27 13:26:31.572: INFO: Pod downward-api-61579445-61e5-41b6-9d3d-8caf31c5fb28 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Aug 27 13:26:31.572: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6758" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":344,"skipped":6436,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:31.595: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-1208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Aug 27 13:26:31.754: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Aug 27 13:26:31.766: INFO: Waiting for terminating namespaces to be deleted...
Aug 27 13:26:31.771: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-31-152 before test
Aug 27 13:26:31.779: INFO: nginx-ingress-controller-kubernetes-worker-srk75 from ingress-nginx-kubernetes-worker started at 2022-08-27 13:02:42 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.779: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:26:31.779: INFO: busybox-scheduling-0256d98c-e553-4d13-867a-449301f7fc65 from kubelet-test-5889 started at 2022-08-27 13:26:24 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.779: INFO: 	Container busybox-scheduling-0256d98c-e553-4d13-867a-449301f7fc65 ready: true, restart count 0
Aug 27 13:26:31.779: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-s8z8v from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:26:31.779: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:26:31.779: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 13:26:31.779: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-5-213 before test
Aug 27 13:26:31.787: INFO: nginx-ingress-controller-kubernetes-worker-n4kcs from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:12 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.787: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:26:31.787: INFO: calico-kube-controllers-6c96fbdbd9-5j7cg from kube-system started at 2022-08-27 13:02:16 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.787: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Aug 27 13:26:31.787: INFO: sonobuoy from sonobuoy started at 2022-08-27 11:57:36 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.787: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Aug 27 13:26:31.787: INFO: sonobuoy-e2e-job-23201a167722436f from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:26:31.787: INFO: 	Container e2e ready: true, restart count 0
Aug 27 13:26:31.787: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:26:31.787: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-lbr5l from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:26:31.787: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:26:31.787: INFO: 	Container systemd-logs ready: true, restart count 0
Aug 27 13:26:31.787: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-65-143 before test
Aug 27 13:26:31.795: INFO: default-http-backend-kubernetes-worker-6c59687bf6-srhcj from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Aug 27 13:26:31.795: INFO: nginx-ingress-controller-kubernetes-worker-m5mkd from ingress-nginx-kubernetes-worker started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Aug 27 13:26:31.795: INFO: coredns-86c98bfcdb-klnhg from kube-system started at 2022-08-27 11:53:04 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container coredns ready: true, restart count 0
Aug 27 13:26:31.795: INFO: kube-state-metrics-5cdbfd47b4-44nkd from kube-system started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container kube-state-metrics ready: true, restart count 0
Aug 27 13:26:31.795: INFO: metrics-server-v0.5.2-6bfd958b56-bvvbj from kube-system started at 2022-08-27 11:53:07 +0000 UTC (2 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container metrics-server ready: true, restart count 0
Aug 27 13:26:31.795: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Aug 27 13:26:31.795: INFO: dashboard-metrics-scraper-8669b59d4f-x9mgm from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Aug 27 13:26:31.795: INFO: kubernetes-dashboard-585fc6bc87-gp4f6 from kubernetes-dashboard started at 2022-08-27 11:53:07 +0000 UTC (1 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Aug 27 13:26:31.795: INFO: sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-spbcd from sonobuoy started at 2022-08-27 11:57:40 +0000 UTC (2 container statuses recorded)
Aug 27 13:26:31.795: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Aug 27 13:26:31.795: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node ip-172-31-31-152
STEP: verifying the node has the label node ip-172-31-5-213
STEP: verifying the node has the label node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod default-http-backend-kubernetes-worker-6c59687bf6-srhcj requesting resource cpu=10m on Node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod nginx-ingress-controller-kubernetes-worker-m5mkd requesting resource cpu=0m on Node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod nginx-ingress-controller-kubernetes-worker-n4kcs requesting resource cpu=0m on Node ip-172-31-5-213
Aug 27 13:26:31.889: INFO: Pod nginx-ingress-controller-kubernetes-worker-srk75 requesting resource cpu=0m on Node ip-172-31-31-152
Aug 27 13:26:31.889: INFO: Pod calico-kube-controllers-6c96fbdbd9-5j7cg requesting resource cpu=0m on Node ip-172-31-5-213
Aug 27 13:26:31.889: INFO: Pod coredns-86c98bfcdb-klnhg requesting resource cpu=100m on Node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod kube-state-metrics-5cdbfd47b4-44nkd requesting resource cpu=0m on Node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod metrics-server-v0.5.2-6bfd958b56-bvvbj requesting resource cpu=5m on Node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod busybox-scheduling-0256d98c-e553-4d13-867a-449301f7fc65 requesting resource cpu=0m on Node ip-172-31-31-152
Aug 27 13:26:31.889: INFO: Pod dashboard-metrics-scraper-8669b59d4f-x9mgm requesting resource cpu=0m on Node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod kubernetes-dashboard-585fc6bc87-gp4f6 requesting resource cpu=0m on Node ip-172-31-65-143
Aug 27 13:26:31.889: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-5-213
Aug 27 13:26:31.889: INFO: Pod sonobuoy-e2e-job-23201a167722436f requesting resource cpu=0m on Node ip-172-31-5-213
Aug 27 13:26:31.889: INFO: Pod sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-lbr5l requesting resource cpu=0m on Node ip-172-31-5-213
Aug 27 13:26:31.889: INFO: Pod sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-s8z8v requesting resource cpu=0m on Node ip-172-31-31-152
Aug 27 13:26:31.889: INFO: Pod sonobuoy-systemd-logs-daemon-set-15d7ac86f4854b16-spbcd requesting resource cpu=0m on Node ip-172-31-65-143
STEP: Starting Pods to consume most of the cluster CPU.
Aug 27 13:26:31.890: INFO: Creating a pod which consumes cpu=2800m on Node ip-172-31-31-152
Aug 27 13:26:31.905: INFO: Creating a pod which consumes cpu=2800m on Node ip-172-31-5-213
Aug 27 13:26:31.922: INFO: Creating a pod which consumes cpu=2719m on Node ip-172-31-65-143
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0041fcfe-c151-4e18-a608-49124d0f1bf0.170f3692ddf10df8], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1208/filler-pod-0041fcfe-c151-4e18-a608-49124d0f1bf0 to ip-172-31-5-213]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0041fcfe-c151-4e18-a608-49124d0f1bf0.170f3693101e6de9], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0041fcfe-c151-4e18-a608-49124d0f1bf0.170f369319318210], Reason = [Created], Message = [Created container filler-pod-0041fcfe-c151-4e18-a608-49124d0f1bf0]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0041fcfe-c151-4e18-a608-49124d0f1bf0.170f36931dd0da07], Reason = [Started], Message = [Started container filler-pod-0041fcfe-c151-4e18-a608-49124d0f1bf0]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0debfe95-8a1a-4a34-9d35-9a2ccb4729df.170f3692deb7575a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1208/filler-pod-0debfe95-8a1a-4a34-9d35-9a2ccb4729df to ip-172-31-65-143]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0debfe95-8a1a-4a34-9d35-9a2ccb4729df.170f36930cf64796], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0debfe95-8a1a-4a34-9d35-9a2ccb4729df.170f369310a03288], Reason = [Created], Message = [Created container filler-pod-0debfe95-8a1a-4a34-9d35-9a2ccb4729df]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-0debfe95-8a1a-4a34-9d35-9a2ccb4729df.170f3693158cf626], Reason = [Started], Message = [Started container filler-pod-0debfe95-8a1a-4a34-9d35-9a2ccb4729df]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-81b94e78-86f2-43b5-9352-3afc2509d792.170f3692dd0f17ae], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1208/filler-pod-81b94e78-86f2-43b5-9352-3afc2509d792 to ip-172-31-31-152]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-81b94e78-86f2-43b5-9352-3afc2509d792.170f36930d2da19b], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-81b94e78-86f2-43b5-9352-3afc2509d792.170f369316c6743d], Reason = [Created], Message = [Created container filler-pod-81b94e78-86f2-43b5-9352-3afc2509d792]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-81b94e78-86f2-43b5-9352-3afc2509d792.170f36931ad7e4e3], Reason = [Started], Message = [Started container filler-pod-81b94e78-86f2-43b5-9352-3afc2509d792]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.170f3693589e0850], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.]
STEP: removing the label node off the node ip-172-31-65-143
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-31-152
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-5-213
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Aug 27 13:26:35.094: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-1208" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":345,"skipped":6455,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:26:35.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-44
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Aug 27 13:32:01.333: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-44" for this suite.

• [SLOW TEST:326.234 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":346,"skipped":6467,"failed":0}
SSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:01.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-3390
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:32:01.538: INFO: Creating simple deployment test-new-deployment
Aug 27 13:32:01.562: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Aug 27 13:32:03.670: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-3390  48cc7146-2871-4f92-9d90-33fd505e78fd 41444 3 2022-08-27 13:32:01 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-08-27 13:32:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 13:32:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0043748e8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-08-27 13:32:03 +0000 UTC,LastTransitionTime:2022-08-27 13:32:03 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-08-27 13:32:03 +0000 UTC,LastTransitionTime:2022-08-27 13:32:01 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Aug 27 13:32:03.678: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-3390  757c9912-48f3-43bd-b3f9-5e7cef264590 41448 2 2022-08-27 13:32:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment 48cc7146-2871-4f92-9d90-33fd505e78fd 0xc004374d37 0xc004374d38}] []  [{kube-controller-manager Update apps/v1 2022-08-27 13:32:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"48cc7146-2871-4f92-9d90-33fd505e78fd\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-08-27 13:32:03 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004374dd8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Aug 27 13:32:03.702: INFO: Pod "test-new-deployment-55df494869-6m26h" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-6m26h test-new-deployment-55df494869- deployment-3390  9f279ba7-a0b9-4448-85c3-e3cdbe515b61 41451 0 2022-08-27 13:32:03 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 757c9912-48f3-43bd-b3f9-5e7cef264590 0xc004375217 0xc004375218}] []  [{kube-controller-manager Update v1 2022-08-27 13:32:03 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"757c9912-48f3-43bd-b3f9-5e7cef264590\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 13:32:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dh4vg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dh4vg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-5-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:03 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:03 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:03 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.5.213,PodIP:,StartTime:2022-08-27 13:32:03 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 13:32:03.702: INFO: Pod "test-new-deployment-55df494869-blhrr" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-blhrr test-new-deployment-55df494869- deployment-3390  7383ed27-2943-40d7-b6d1-fef4e8c7c4d3 41453 0 2022-08-27 13:32:03 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 757c9912-48f3-43bd-b3f9-5e7cef264590 0xc0043753f7 0xc0043753f8}] []  [{kube-controller-manager Update v1 2022-08-27 13:32:03 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"757c9912-48f3-43bd-b3f9-5e7cef264590\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g67k9,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g67k9,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Aug 27 13:32:03.702: INFO: Pod "test-new-deployment-55df494869-wmqps" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-wmqps test-new-deployment-55df494869- deployment-3390  cb632fae-d86a-4dd4-b490-3e2d62771c77 41434 0 2022-08-27 13:32:01 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 757c9912-48f3-43bd-b3f9-5e7cef264590 0xc004375557 0xc004375558}] []  [{kube-controller-manager Update v1 2022-08-27 13:32:01 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"757c9912-48f3-43bd-b3f9-5e7cef264590\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-08-27 13:32:03 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.233.165\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-dwmrd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-dwmrd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-31-152,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:01 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-08-27 13:32:01 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.31.152,PodIP:192.168.233.165,StartTime:2022-08-27 13:32:01 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-08-27 13:32:02 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bde71e60ab08e78376c79a9b79d7fb0df2b83532b5fa86bbab0d0b982d973e97,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.233.165,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Aug 27 13:32:03.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-3390" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":347,"skipped":6470,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:03.748: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5258
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5258.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5258.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5258.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5258.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Aug 27 13:32:05.992: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.000: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.006: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.014: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.022: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.030: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.038: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.045: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5258.svc.cluster.local from pod dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8: the server could not find the requested resource (get pods dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8)
Aug 27 13:32:06.045: INFO: Lookups using dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5258.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5258.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5258.svc.cluster.local jessie_udp@dns-test-service-2.dns-5258.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5258.svc.cluster.local]

Aug 27 13:32:11.103: INFO: DNS probes using dns-5258/dns-test-84b48410-40f9-4634-ba6d-1a0d078fceb8 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Aug 27 13:32:11.152: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5258" for this suite.

• [SLOW TEST:7.434 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":348,"skipped":6481,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:11.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-3539
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Aug 27 13:32:11.388: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Aug 27 13:32:11.434: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-3539" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":349,"skipped":6520,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:11.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-1819
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:32:11.638: INFO: The status of Pod busybox-readonly-fs27486e6c-a256-4e99-b315-fa4b4383cfce is Pending, waiting for it to be Running (with Ready = true)
Aug 27 13:32:13.650: INFO: The status of Pod busybox-readonly-fs27486e6c-a256-4e99-b315-fa4b4383cfce is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Aug 27 13:32:13.686: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-1819" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":350,"skipped":6528,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:13.707: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-766
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Aug 27 13:32:17.956: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Aug 27 13:32:17.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-766" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":351,"skipped":6537,"failed":0}

------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:18.008: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Aug 27 13:32:18.225: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Aug 27 13:32:18.235: INFO: starting watch
STEP: patching
STEP: updating
Aug 27 13:32:18.259: INFO: waiting for watch events with expected annotations
Aug 27 13:32:18.259: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Aug 27 13:32:18.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-290" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":352,"skipped":6537,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:18.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6702
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Aug 27 13:32:18.493: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Aug 27 13:32:21.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-6702 --namespace=crd-publish-openapi-6702 create -f -'
Aug 27 13:32:22.965: INFO: stderr: ""
Aug 27 13:32:22.965: INFO: stdout: "e2e-test-crd-publish-openapi-5604-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 27 13:32:22.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-6702 --namespace=crd-publish-openapi-6702 delete e2e-test-crd-publish-openapi-5604-crds test-cr'
Aug 27 13:32:23.057: INFO: stderr: ""
Aug 27 13:32:23.057: INFO: stdout: "e2e-test-crd-publish-openapi-5604-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Aug 27 13:32:23.057: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-6702 --namespace=crd-publish-openapi-6702 apply -f -'
Aug 27 13:32:23.266: INFO: stderr: ""
Aug 27 13:32:23.266: INFO: stdout: "e2e-test-crd-publish-openapi-5604-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Aug 27 13:32:23.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-6702 --namespace=crd-publish-openapi-6702 delete e2e-test-crd-publish-openapi-5604-crds test-cr'
Aug 27 13:32:23.356: INFO: stderr: ""
Aug 27 13:32:23.356: INFO: stdout: "e2e-test-crd-publish-openapi-5604-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Aug 27 13:32:23.356: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3196265017 --namespace=crd-publish-openapi-6702 explain e2e-test-crd-publish-openapi-5604-crds'
Aug 27 13:32:24.135: INFO: stderr: ""
Aug 27 13:32:24.135: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-5604-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Aug 27 13:32:27.270: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6702" for this suite.

• [SLOW TEST:8.971 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":353,"skipped":6544,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:27.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5508
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Aug 27 13:32:27.494: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5508" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":354,"skipped":6580,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:27.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Aug 27 13:32:27.687: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8736" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":355,"skipped":6599,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Aug 27 13:32:27.704: INFO: >>> kubeConfig: /tmp/kubeconfig-3196265017
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7157
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Aug 27 13:32:27.859: INFO: Waiting up to 5m0s for pod "pod-19e24569-50b6-49f0-949b-0e184b370498" in namespace "emptydir-7157" to be "Succeeded or Failed"
Aug 27 13:32:27.864: INFO: Pod "pod-19e24569-50b6-49f0-949b-0e184b370498": Phase="Pending", Reason="", readiness=false. Elapsed: 4.397852ms
Aug 27 13:32:29.874: INFO: Pod "pod-19e24569-50b6-49f0-949b-0e184b370498": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015070933s
Aug 27 13:32:31.886: INFO: Pod "pod-19e24569-50b6-49f0-949b-0e184b370498": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.027226492s
STEP: Saw pod success
Aug 27 13:32:31.886: INFO: Pod "pod-19e24569-50b6-49f0-949b-0e184b370498" satisfied condition "Succeeded or Failed"
Aug 27 13:32:31.893: INFO: Trying to get logs from node ip-172-31-31-152 pod pod-19e24569-50b6-49f0-949b-0e184b370498 container test-container: <nil>
STEP: delete the pod
Aug 27 13:32:31.943: INFO: Waiting for pod pod-19e24569-50b6-49f0-949b-0e184b370498 to disappear
Aug 27 13:32:31.950: INFO: Pod pod-19e24569-50b6-49f0-949b-0e184b370498 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Aug 27 13:32:31.950: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7157" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":356,"skipped":6604,"failed":0}
SSSSSSSSSSSAug 27 13:32:31.967: INFO: Running AfterSuite actions on all nodes
Aug 27 13:32:31.967: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Aug 27 13:32:31.967: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Aug 27 13:32:31.967: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Aug 27 13:32:31.967: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Aug 27 13:32:31.967: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Aug 27 13:32:31.967: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Aug 27 13:32:31.967: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Aug 27 13:32:31.967: INFO: Running AfterSuite actions on node 1
Aug 27 13:32:31.967: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6615,"failed":0}

Ran 356 of 6971 Specs in 5669.153 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6615 Skipped
PASS

Ginkgo ran 1 suite in 1h34m31.918387384s
Test Suite Passed
