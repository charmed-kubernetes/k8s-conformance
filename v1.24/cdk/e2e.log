I0730 11:57:13.797092      23 e2e.go:129] Starting e2e run "84174732-125f-4a9b-a5b4-e015d7ee76fe" on Ginkgo node 1
{"msg":"Test Suite starting","total":356,"completed":0,"skipped":0,"failed":0}
Running Suite: Kubernetes e2e suite
===================================
Random Seed: 1659182233 - Will randomize all specs
Will run 356 of 6971 specs

Jul 30 11:57:14.887: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 11:57:14.888: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
Jul 30 11:57:14.901: INFO: Waiting up to 10m0s for all pods (need at least 0) in namespace 'kube-system' to be running and ready
Jul 30 11:57:14.915: INFO: 4 / 4 pods in namespace 'kube-system' are running and ready (0 seconds elapsed)
Jul 30 11:57:14.915: INFO: expected 4 pod replicas in namespace 'kube-system', 4 are Running and Ready.
Jul 30 11:57:14.915: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
Jul 30 11:57:14.918: INFO: e2e test version: v1.24.3
Jul 30 11:57:14.919: INFO: kube-apiserver version: v1.24.3
Jul 30 11:57:14.919: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 11:57:14.923: INFO: Cluster IP family: ipv4
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:57:14.923: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
Jul 30 11:57:14.940: INFO: Found PodSecurityPolicies; testing pod creation to see if PodSecurityPolicy is enabled
W0730 11:57:14.939963      23 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jul 30 11:57:14.949: INFO: PSP annotation exists on dry run pod: "privileged"; assuming PodSecurityPolicy is enabled
W0730 11:57:14.952516      23 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
W0730 11:57:14.957708      23 warnings.go:70] policy/v1beta1 PodSecurityPolicy is deprecated in v1.21+, unavailable in v1.25+
Jul 30 11:57:14.962: INFO: Found ClusterRoles; assuming RBAC is enabled.
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-6584
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jul 30 11:57:15.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: rename a version
STEP: check the new version name is served
STEP: check the old version name is removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 11:57:29.761: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-6584" for this suite.

• [SLOW TEST:14.854 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  updates the published spec when one version gets renamed [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]","total":356,"completed":1,"skipped":10,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:57:29.778: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7960
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-8f5439a9-f524-401b-b47e-e5a707f51bc7
STEP: Creating a pod to test consume configMaps
Jul 30 11:57:29.926: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924" in namespace "projected-7960" to be "Succeeded or Failed"
Jul 30 11:57:29.929: INFO: Pod "pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924": Phase="Pending", Reason="", readiness=false. Elapsed: 3.302449ms
Jul 30 11:57:31.934: INFO: Pod "pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008428005s
Jul 30 11:57:33.940: INFO: Pod "pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924": Phase="Pending", Reason="", readiness=false. Elapsed: 4.014591051s
Jul 30 11:57:35.948: INFO: Pod "pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.02238437s
STEP: Saw pod success
Jul 30 11:57:35.948: INFO: Pod "pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924" satisfied condition "Succeeded or Failed"
Jul 30 11:57:35.952: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924 container projected-configmap-volume-test: <nil>
STEP: delete the pod
Jul 30 11:57:35.991: INFO: Waiting for pod pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924 to disappear
Jul 30 11:57:36.068: INFO: Pod pod-projected-configmaps-e30de062-3821-49b1-a58e-d7c45cfd9924 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 11:57:36.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7960" for this suite.

• [SLOW TEST:6.299 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":2,"skipped":85,"failed":0}
SS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:57:36.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-3250
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not terminating scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a long running pod
STEP: Ensuring resource quota with not terminating scope captures the pod usage
STEP: Ensuring resource quota with terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a terminating pod
STEP: Ensuring resource quota with terminating scope captures the pod usage
STEP: Ensuring resource quota with not terminating scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 11:57:52.342: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-3250" for this suite.

• [SLOW TEST:16.279 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with terminating scopes. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]","total":356,"completed":3,"skipped":87,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:57:52.356: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4893
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-c7d87704-82a6-4d50-9325-a0e160559ec9
STEP: Creating configMap with name cm-test-opt-upd-4dd7a489-d891-4f77-86ba-430ec71c4f3d
STEP: Creating the pod
Jul 30 11:57:52.516: INFO: The status of Pod pod-configmaps-b7263a1b-e836-4de0-959d-f41444fe3e00 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 11:57:54.525: INFO: The status of Pod pod-configmaps-b7263a1b-e836-4de0-959d-f41444fe3e00 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-c7d87704-82a6-4d50-9325-a0e160559ec9
STEP: Updating configmap cm-test-opt-upd-4dd7a489-d891-4f77-86ba-430ec71c4f3d
STEP: Creating configMap with name cm-test-opt-create-bb8649cc-0637-4b3f-b206-bda920ddd69f
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 11:57:56.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4893" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":4,"skipped":99,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:57:56.632: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-2070
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul 30 11:57:56.815: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:56.815: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:56.819: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 11:57:56.819: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 11:57:57.829: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:57.829: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:57.833: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 11:57:57.833: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 11:57:58.829: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:58.829: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:58.834: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 11:57:58.834: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 11:57:59.828: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:59.828: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:57:59.832: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 11:57:59.832: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 11:58:00.827: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:58:00.827: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:58:00.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 11:58:00.831: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 11:58:01.827: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:58:01.827: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:58:01.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul 30 11:58:01.831: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 11:58:02.825: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:58:02.826: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 11:58:02.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 11:58:02.830: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: listing all DeamonSets
STEP: DeleteCollection of the DaemonSets
STEP: Verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
Jul 30 11:58:02.858: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2699"},"items":null}

Jul 30 11:58:02.862: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2699"},"items":[{"metadata":{"name":"daemon-set-24s4r","generateName":"daemon-set-","namespace":"daemonsets-2070","uid":"3477e6f9-0171-4e3d-bb81-45037ebd1429","resourceVersion":"2669","creationTimestamp":"2022-07-30T11:57:56Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f09874a5-aed9-4191-910e-2d767d35fd0e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-07-30T11:57:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f09874a5-aed9-4191-910e-2d767d35fd0e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-07-30T11:58:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-lsxrz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-lsxrz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-74-61","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-74-61"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:57:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:58:01Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:58:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:57:56Z"}],"hostIP":"172.31.74.61","podIP":"192.168.81.67","podIPs":[{"ip":"192.168.81.67"}],"startTime":"2022-07-30T11:57:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-07-30T11:58:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://4fd1c1d3ae61dfcf48923261425fd232c11300bdea4ded28e462fa520ab4c612","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-6vsnz","generateName":"daemon-set-","namespace":"daemonsets-2070","uid":"db8376d2-1a54-4cdd-902b-57148347baec","resourceVersion":"2697","creationTimestamp":"2022-07-30T11:57:56Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f09874a5-aed9-4191-910e-2d767d35fd0e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-07-30T11:57:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f09874a5-aed9-4191-910e-2d767d35fd0e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-07-30T11:58:02Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.223.67\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-5mxr4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-5mxr4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-47-213","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-47-213"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:57:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:58:02Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:58:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:57:56Z"}],"hostIP":"172.31.47.213","podIP":"192.168.223.67","podIPs":[{"ip":"192.168.223.67"}],"startTime":"2022-07-30T11:57:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-07-30T11:58:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://fed6f4895da71b495c3003d9266a88f25b004d2f1d195de20e25e085999a9080","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dn6w8","generateName":"daemon-set-","namespace":"daemonsets-2070","uid":"449ddda9-b892-4021-acca-7bc3d3badd9a","resourceVersion":"2666","creationTimestamp":"2022-07-30T11:57:56Z","labels":{"controller-revision-hash":"6df8db488c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"kubernetes.io/psp":"e2e-test-privileged-psp"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f09874a5-aed9-4191-910e-2d767d35fd0e","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2022-07-30T11:57:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f09874a5-aed9-4191-910e-2d767d35fd0e\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2022-07-30T11:58:01Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.110.200\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zmmjj","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zmmjj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-87-57","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-87-57"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:57:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:58:01Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:58:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2022-07-30T11:57:56Z"}],"hostIP":"172.31.87.57","podIP":"192.168.110.200","podIPs":[{"ip":"192.168.110.200"}],"startTime":"2022-07-30T11:57:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2022-07-30T11:58:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2","imageID":"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3","containerID":"containerd://cc4814bd0265eaef4b974f17ff20ea37708d910ce5a2bd364919bd6d83727eef","started":true}],"qosClass":"BestEffort"}}]}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul 30 11:58:02.878: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-2070" for this suite.

• [SLOW TEST:6.260 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should list and delete a collection of DaemonSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]","total":356,"completed":5,"skipped":118,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces 
  should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:02.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-9320
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[BeforeEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:03.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename disruption-2
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-2-7521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of PodDisruptionBudgets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be processed
STEP: listing a collection of PDBs across all namespaces
STEP: listing a collection of PDBs in namespace disruption-9320
STEP: deleting a collection of PDBs
STEP: Waiting for the PDB collection to be deleted
[AfterEach] Listing PodDisruptionBudgets for all namespaces
  test/e2e/framework/framework.go:188
Jul 30 11:58:05.213: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-2-7521" for this suite.
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul 30 11:58:05.223: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-9320" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]","total":356,"completed":6,"skipped":141,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:05.233: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-7147
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run the lifecycle of PodTemplates [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jul 30 11:58:05.396: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-7147" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]","total":356,"completed":7,"skipped":169,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:05.408: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-8804
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jul 30 11:58:06.238: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 11:58:09.261: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 11:58:09.266: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Creating a v1 custom resource
STEP: Create a v2 custom resource
STEP: List CRs in v1
STEP: List CRs in v2
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 11:58:12.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-8804" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:7.094 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert a non homogeneous list of CRs [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]","total":356,"completed":8,"skipped":204,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:12.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7235
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-b806b7ef-6ca1-4df3-9a6d-fc68afa78031
STEP: Creating a pod to test consume configMaps
Jul 30 11:58:12.704: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001" in namespace "projected-7235" to be "Succeeded or Failed"
Jul 30 11:58:12.707: INFO: Pod "pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001": Phase="Pending", Reason="", readiness=false. Elapsed: 3.109005ms
Jul 30 11:58:14.713: INFO: Pod "pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008940472s
Jul 30 11:58:16.721: INFO: Pod "pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017021359s
STEP: Saw pod success
Jul 30 11:58:16.721: INFO: Pod "pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001" satisfied condition "Succeeded or Failed"
Jul 30 11:58:16.724: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 11:58:16.742: INFO: Waiting for pod pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001 to disappear
Jul 30 11:58:16.745: INFO: Pod pod-projected-configmaps-6eedd004-5a03-4619-a022-18736a92c001 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 11:58:16.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7235" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":9,"skipped":206,"failed":0}
SS
------------------------------
[sig-auth] ServiceAccounts 
  should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:16.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-4580
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount projected service account token [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test service account token: 
Jul 30 11:58:16.898: INFO: Waiting up to 5m0s for pod "test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2" in namespace "svcaccounts-4580" to be "Succeeded or Failed"
Jul 30 11:58:16.901: INFO: Pod "test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2": Phase="Pending", Reason="", readiness=false. Elapsed: 3.374422ms
Jul 30 11:58:18.906: INFO: Pod "test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008704713s
Jul 30 11:58:20.915: INFO: Pod "test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016945741s
STEP: Saw pod success
Jul 30 11:58:20.915: INFO: Pod "test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2" satisfied condition "Succeeded or Failed"
Jul 30 11:58:20.918: INFO: Trying to get logs from node ip-172-31-74-61 pod test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 11:58:20.936: INFO: Waiting for pod test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2 to disappear
Jul 30 11:58:20.939: INFO: Pod test-pod-1c166f9f-4a90-468d-904f-e69fb868bfb2 no longer exists
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul 30 11:58:20.939: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-4580" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount projected service account token [Conformance]","total":356,"completed":10,"skipped":208,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:20.951: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7755
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-d3d4e7ca-b18f-4dec-a13a-1545f9437e37
STEP: Creating a pod to test consume secrets
Jul 30 11:58:21.102: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac" in namespace "projected-7755" to be "Succeeded or Failed"
Jul 30 11:58:21.105: INFO: Pod "pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac": Phase="Pending", Reason="", readiness=false. Elapsed: 3.044125ms
Jul 30 11:58:23.115: INFO: Pod "pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01281711s
Jul 30 11:58:25.124: INFO: Pod "pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021816312s
STEP: Saw pod success
Jul 30 11:58:25.124: INFO: Pod "pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac" satisfied condition "Succeeded or Failed"
Jul 30 11:58:25.127: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul 30 11:58:25.153: INFO: Waiting for pod pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac to disappear
Jul 30 11:58:25.156: INFO: Pod pod-projected-secrets-766c8392-1740-4b47-a484-7b1c5f854aac no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul 30 11:58:25.156: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7755" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":11,"skipped":256,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:25.166: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4090
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 11:58:25.307: INFO: Waiting up to 5m0s for pod "downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050" in namespace "downward-api-4090" to be "Succeeded or Failed"
Jul 30 11:58:25.311: INFO: Pod "downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050": Phase="Pending", Reason="", readiness=false. Elapsed: 3.68264ms
Jul 30 11:58:27.318: INFO: Pod "downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010702013s
Jul 30 11:58:29.327: INFO: Pod "downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019968076s
STEP: Saw pod success
Jul 30 11:58:29.327: INFO: Pod "downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050" satisfied condition "Succeeded or Failed"
Jul 30 11:58:29.331: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050 container client-container: <nil>
STEP: delete the pod
Jul 30 11:58:29.354: INFO: Waiting for pod downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050 to disappear
Jul 30 11:58:29.358: INFO: Pod downwardapi-volume-ef47b125-1c2c-434f-a139-132732286050 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 11:58:29.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4090" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":12,"skipped":308,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation 
  should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:29.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename tables
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in tables-7807
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/apimachinery/table_conversion.go:49
[It] should return a 406 for a backend which does not implement metadata [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-api-machinery] Servers with support for Table transformation
  test/e2e/framework/framework.go:188
Jul 30 11:58:29.509: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "tables-7807" for this suite.
•{"msg":"PASSED [sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]","total":356,"completed":13,"skipped":328,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Lease 
  lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Lease
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:29.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename lease-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in lease-test-4349
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] lease API should be available [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Lease
  test/e2e/framework/framework.go:188
Jul 30 11:58:29.724: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "lease-test-4349" for this suite.
•{"msg":"PASSED [sig-node] Lease lease API should be available [Conformance]","total":356,"completed":14,"skipped":337,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency 
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:29.735: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename svc-latency
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svc-latency-4577
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 11:58:29.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: creating replication controller svc-latency-rc in namespace svc-latency-4577
I0730 11:58:29.876723      23 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4577, replica count: 1
I0730 11:58:30.926939      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0730 11:58:31.927536      23 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 11:58:32.042: INFO: Created: latency-svc-xh9z7
Jul 30 11:58:32.047: INFO: Got endpoints: latency-svc-xh9z7 [18.951185ms]
Jul 30 11:58:32.057: INFO: Created: latency-svc-x4xcv
Jul 30 11:58:32.061: INFO: Got endpoints: latency-svc-x4xcv [14.178788ms]
Jul 30 11:58:32.126: INFO: Created: latency-svc-4zzqn
Jul 30 11:58:32.128: INFO: Created: latency-svc-nqvj5
Jul 30 11:58:32.128: INFO: Created: latency-svc-tkzxc
Jul 30 11:58:32.131: INFO: Created: latency-svc-pdfmn
Jul 30 11:58:32.131: INFO: Created: latency-svc-9wbqj
Jul 30 11:58:32.132: INFO: Created: latency-svc-6nzzw
Jul 30 11:58:32.132: INFO: Created: latency-svc-6dxsb
Jul 30 11:58:32.132: INFO: Created: latency-svc-thdmh
Jul 30 11:58:32.133: INFO: Got endpoints: latency-svc-4zzqn [84.616848ms]
Jul 30 11:58:32.133: INFO: Created: latency-svc-5kw8t
Jul 30 11:58:32.133: INFO: Created: latency-svc-scdd5
Jul 30 11:58:32.136: INFO: Created: latency-svc-hx45w
Jul 30 11:58:32.136: INFO: Created: latency-svc-qt9xg
Jul 30 11:58:32.136: INFO: Created: latency-svc-sbflj
Jul 30 11:58:32.137: INFO: Created: latency-svc-gnsdk
Jul 30 11:58:32.137: INFO: Created: latency-svc-pbqsx
Jul 30 11:58:32.140: INFO: Got endpoints: latency-svc-tkzxc [92.155243ms]
Jul 30 11:58:32.140: INFO: Got endpoints: latency-svc-5kw8t [92.398149ms]
Jul 30 11:58:32.140: INFO: Got endpoints: latency-svc-scdd5 [92.803919ms]
Jul 30 11:58:32.140: INFO: Got endpoints: latency-svc-nqvj5 [93.188318ms]
Jul 30 11:58:32.143: INFO: Got endpoints: latency-svc-qt9xg [95.024413ms]
Jul 30 11:58:32.144: INFO: Got endpoints: latency-svc-9wbqj [96.5396ms]
Jul 30 11:58:32.151: INFO: Created: latency-svc-sx7bh
Jul 30 11:58:32.156: INFO: Got endpoints: latency-svc-sbflj [108.134145ms]
Jul 30 11:58:32.156: INFO: Got endpoints: latency-svc-6nzzw [108.084814ms]
Jul 30 11:58:32.157: INFO: Got endpoints: latency-svc-pdfmn [109.422247ms]
Jul 30 11:58:32.158: INFO: Got endpoints: latency-svc-thdmh [110.526274ms]
Jul 30 11:58:32.161: INFO: Got endpoints: latency-svc-pbqsx [113.979828ms]
Jul 30 11:58:32.161: INFO: Got endpoints: latency-svc-6dxsb [113.6273ms]
Jul 30 11:58:32.163: INFO: Created: latency-svc-xrzlk
Jul 30 11:58:32.164: INFO: Got endpoints: latency-svc-gnsdk [102.534467ms]
Jul 30 11:58:32.165: INFO: Got endpoints: latency-svc-sx7bh [32.163919ms]
Jul 30 11:58:32.165: INFO: Got endpoints: latency-svc-hx45w [117.017433ms]
Jul 30 11:58:32.171: INFO: Got endpoints: latency-svc-xrzlk [31.053082ms]
Jul 30 11:58:32.172: INFO: Created: latency-svc-rzf64
Jul 30 11:58:32.176: INFO: Got endpoints: latency-svc-rzf64 [35.714037ms]
Jul 30 11:58:32.247: INFO: Created: latency-svc-qtfcw
Jul 30 11:58:32.247: INFO: Created: latency-svc-n8vdl
Jul 30 11:58:32.247: INFO: Created: latency-svc-krrgx
Jul 30 11:58:32.247: INFO: Created: latency-svc-76vkf
Jul 30 11:58:32.247: INFO: Created: latency-svc-rwcbp
Jul 30 11:58:32.248: INFO: Created: latency-svc-5sxw7
Jul 30 11:58:32.248: INFO: Created: latency-svc-p4dbs
Jul 30 11:58:32.248: INFO: Created: latency-svc-rrf8z
Jul 30 11:58:32.248: INFO: Created: latency-svc-c8lc5
Jul 30 11:58:32.248: INFO: Created: latency-svc-2nvx4
Jul 30 11:58:32.248: INFO: Created: latency-svc-c5smp
Jul 30 11:58:32.248: INFO: Created: latency-svc-hth7d
Jul 30 11:58:32.248: INFO: Created: latency-svc-fhlkm
Jul 30 11:58:32.249: INFO: Created: latency-svc-6gwnz
Jul 30 11:58:32.250: INFO: Created: latency-svc-qgsdc
Jul 30 11:58:32.257: INFO: Got endpoints: latency-svc-fhlkm [99.688998ms]
Jul 30 11:58:32.257: INFO: Got endpoints: latency-svc-krrgx [80.946318ms]
Jul 30 11:58:32.257: INFO: Got endpoints: latency-svc-qtfcw [95.397423ms]
Jul 30 11:58:32.259: INFO: Got endpoints: latency-svc-c5smp [94.372437ms]
Jul 30 11:58:32.266: INFO: Got endpoints: latency-svc-hth7d [110.406031ms]
Jul 30 11:58:32.268: INFO: Got endpoints: latency-svc-2nvx4 [103.952322ms]
Jul 30 11:58:32.270: INFO: Got endpoints: latency-svc-c8lc5 [129.449938ms]
Jul 30 11:58:32.270: INFO: Got endpoints: latency-svc-rrf8z [108.481974ms]
Jul 30 11:58:32.271: INFO: Got endpoints: latency-svc-6gwnz [130.3286ms]
Jul 30 11:58:32.279: INFO: Got endpoints: latency-svc-76vkf [122.918648ms]
Jul 30 11:58:32.279: INFO: Got endpoints: latency-svc-qgsdc [134.39202ms]
Jul 30 11:58:32.281: INFO: Got endpoints: latency-svc-rwcbp [109.952109ms]
Jul 30 11:58:32.282: INFO: Got endpoints: latency-svc-p4dbs [124.194919ms]
Jul 30 11:58:32.285: INFO: Got endpoints: latency-svc-5sxw7 [120.518609ms]
Jul 30 11:58:32.285: INFO: Created: latency-svc-h8r8q
Jul 30 11:58:32.346: INFO: Got endpoints: latency-svc-h8r8q [88.998765ms]
Jul 30 11:58:32.358: INFO: Got endpoints: latency-svc-n8vdl [215.242215ms]
Jul 30 11:58:32.363: INFO: Created: latency-svc-rxmbm
Jul 30 11:58:32.367: INFO: Created: latency-svc-7kxsg
Jul 30 11:58:32.374: INFO: Created: latency-svc-fh566
Jul 30 11:58:32.378: INFO: Created: latency-svc-mrwr5
Jul 30 11:58:32.383: INFO: Created: latency-svc-kpvq9
Jul 30 11:58:32.389: INFO: Created: latency-svc-lbd8s
Jul 30 11:58:32.394: INFO: Created: latency-svc-drxgv
Jul 30 11:58:32.398: INFO: Got endpoints: latency-svc-rxmbm [140.734616ms]
Jul 30 11:58:32.401: INFO: Created: latency-svc-q27jl
Jul 30 11:58:32.407: INFO: Created: latency-svc-gx5gw
Jul 30 11:58:32.413: INFO: Created: latency-svc-jhztr
Jul 30 11:58:32.417: INFO: Created: latency-svc-p6pkp
Jul 30 11:58:32.423: INFO: Created: latency-svc-r4n4d
Jul 30 11:58:32.428: INFO: Created: latency-svc-kqgsl
Jul 30 11:58:32.434: INFO: Created: latency-svc-d9rpp
Jul 30 11:58:32.440: INFO: Created: latency-svc-ldmsp
Jul 30 11:58:32.445: INFO: Created: latency-svc-dg9dm
Jul 30 11:58:32.447: INFO: Got endpoints: latency-svc-7kxsg [190.21619ms]
Jul 30 11:58:32.456: INFO: Created: latency-svc-4v2pn
Jul 30 11:58:32.495: INFO: Got endpoints: latency-svc-fh566 [235.670856ms]
Jul 30 11:58:32.505: INFO: Created: latency-svc-skrch
Jul 30 11:58:32.546: INFO: Got endpoints: latency-svc-mrwr5 [279.861091ms]
Jul 30 11:58:32.557: INFO: Created: latency-svc-xjf5j
Jul 30 11:58:32.598: INFO: Got endpoints: latency-svc-kpvq9 [329.639084ms]
Jul 30 11:58:32.607: INFO: Created: latency-svc-f52h9
Jul 30 11:58:32.650: INFO: Got endpoints: latency-svc-lbd8s [379.834296ms]
Jul 30 11:58:32.659: INFO: Created: latency-svc-hbrgb
Jul 30 11:58:32.697: INFO: Got endpoints: latency-svc-drxgv [427.325853ms]
Jul 30 11:58:32.708: INFO: Created: latency-svc-kwpqf
Jul 30 11:58:32.745: INFO: Got endpoints: latency-svc-q27jl [474.783448ms]
Jul 30 11:58:32.757: INFO: Created: latency-svc-xllbw
Jul 30 11:58:32.795: INFO: Got endpoints: latency-svc-gx5gw [516.195444ms]
Jul 30 11:58:32.805: INFO: Created: latency-svc-xxkc2
Jul 30 11:58:32.846: INFO: Got endpoints: latency-svc-jhztr [567.586337ms]
Jul 30 11:58:32.857: INFO: Created: latency-svc-sjmsp
Jul 30 11:58:32.896: INFO: Got endpoints: latency-svc-p6pkp [615.042892ms]
Jul 30 11:58:32.906: INFO: Created: latency-svc-w7hmr
Jul 30 11:58:32.945: INFO: Got endpoints: latency-svc-r4n4d [662.555729ms]
Jul 30 11:58:32.955: INFO: Created: latency-svc-s8x98
Jul 30 11:58:32.995: INFO: Got endpoints: latency-svc-kqgsl [710.082535ms]
Jul 30 11:58:33.006: INFO: Created: latency-svc-xpzpr
Jul 30 11:58:33.045: INFO: Got endpoints: latency-svc-d9rpp [698.599044ms]
Jul 30 11:58:33.056: INFO: Created: latency-svc-hhkhp
Jul 30 11:58:33.095: INFO: Got endpoints: latency-svc-ldmsp [737.057019ms]
Jul 30 11:58:33.105: INFO: Created: latency-svc-zfk2t
Jul 30 11:58:33.146: INFO: Got endpoints: latency-svc-dg9dm [748.267344ms]
Jul 30 11:58:33.157: INFO: Created: latency-svc-cqbt6
Jul 30 11:58:33.196: INFO: Got endpoints: latency-svc-4v2pn [748.762457ms]
Jul 30 11:58:33.206: INFO: Created: latency-svc-d5mg7
Jul 30 11:58:33.246: INFO: Got endpoints: latency-svc-skrch [750.974833ms]
Jul 30 11:58:33.255: INFO: Created: latency-svc-svsc8
Jul 30 11:58:33.295: INFO: Got endpoints: latency-svc-xjf5j [749.024684ms]
Jul 30 11:58:33.306: INFO: Created: latency-svc-mvpn6
Jul 30 11:58:33.344: INFO: Got endpoints: latency-svc-f52h9 [746.659606ms]
Jul 30 11:58:33.358: INFO: Created: latency-svc-d2272
Jul 30 11:58:33.395: INFO: Got endpoints: latency-svc-hbrgb [745.224303ms]
Jul 30 11:58:33.406: INFO: Created: latency-svc-4zvk8
Jul 30 11:58:33.447: INFO: Got endpoints: latency-svc-kwpqf [750.153584ms]
Jul 30 11:58:33.458: INFO: Created: latency-svc-bwkbb
Jul 30 11:58:33.497: INFO: Got endpoints: latency-svc-xllbw [751.247081ms]
Jul 30 11:58:33.506: INFO: Created: latency-svc-kq5sc
Jul 30 11:58:33.546: INFO: Got endpoints: latency-svc-xxkc2 [750.837662ms]
Jul 30 11:58:33.556: INFO: Created: latency-svc-rnc8d
Jul 30 11:58:33.596: INFO: Got endpoints: latency-svc-sjmsp [749.754355ms]
Jul 30 11:58:33.607: INFO: Created: latency-svc-2zhqf
Jul 30 11:58:33.647: INFO: Got endpoints: latency-svc-w7hmr [751.14065ms]
Jul 30 11:58:33.657: INFO: Created: latency-svc-7thzg
Jul 30 11:58:33.696: INFO: Got endpoints: latency-svc-s8x98 [751.301154ms]
Jul 30 11:58:33.706: INFO: Created: latency-svc-d9kq5
Jul 30 11:58:33.746: INFO: Got endpoints: latency-svc-xpzpr [750.486336ms]
Jul 30 11:58:33.757: INFO: Created: latency-svc-82rzk
Jul 30 11:58:33.795: INFO: Got endpoints: latency-svc-hhkhp [750.157098ms]
Jul 30 11:58:33.805: INFO: Created: latency-svc-kvrxj
Jul 30 11:58:33.845: INFO: Got endpoints: latency-svc-zfk2t [749.994043ms]
Jul 30 11:58:33.855: INFO: Created: latency-svc-5jspr
Jul 30 11:58:33.898: INFO: Got endpoints: latency-svc-cqbt6 [751.978502ms]
Jul 30 11:58:33.908: INFO: Created: latency-svc-kspqn
Jul 30 11:58:33.948: INFO: Got endpoints: latency-svc-d5mg7 [751.836338ms]
Jul 30 11:58:33.956: INFO: Created: latency-svc-59s2n
Jul 30 11:58:33.996: INFO: Got endpoints: latency-svc-svsc8 [750.26364ms]
Jul 30 11:58:34.006: INFO: Created: latency-svc-d7zbw
Jul 30 11:58:34.047: INFO: Got endpoints: latency-svc-mvpn6 [751.642615ms]
Jul 30 11:58:34.059: INFO: Created: latency-svc-8rgv6
Jul 30 11:58:34.099: INFO: Got endpoints: latency-svc-d2272 [754.530856ms]
Jul 30 11:58:34.108: INFO: Created: latency-svc-mtbvq
Jul 30 11:58:34.151: INFO: Got endpoints: latency-svc-4zvk8 [756.433444ms]
Jul 30 11:58:34.162: INFO: Created: latency-svc-xqkdl
Jul 30 11:58:34.198: INFO: Got endpoints: latency-svc-bwkbb [750.500077ms]
Jul 30 11:58:34.247: INFO: Got endpoints: latency-svc-kq5sc [750.005866ms]
Jul 30 11:58:34.250: INFO: Created: latency-svc-29mtq
Jul 30 11:58:34.259: INFO: Created: latency-svc-4t6vq
Jul 30 11:58:34.297: INFO: Got endpoints: latency-svc-rnc8d [751.329579ms]
Jul 30 11:58:34.309: INFO: Created: latency-svc-w484x
Jul 30 11:58:34.347: INFO: Got endpoints: latency-svc-2zhqf [751.121595ms]
Jul 30 11:58:34.358: INFO: Created: latency-svc-v96jb
Jul 30 11:58:34.400: INFO: Got endpoints: latency-svc-7thzg [752.391946ms]
Jul 30 11:58:34.409: INFO: Created: latency-svc-84gpd
Jul 30 11:58:34.447: INFO: Got endpoints: latency-svc-d9kq5 [750.258044ms]
Jul 30 11:58:34.458: INFO: Created: latency-svc-bqk8c
Jul 30 11:58:34.498: INFO: Got endpoints: latency-svc-82rzk [752.573492ms]
Jul 30 11:58:34.510: INFO: Created: latency-svc-9cq4c
Jul 30 11:58:34.548: INFO: Got endpoints: latency-svc-kvrxj [753.430453ms]
Jul 30 11:58:34.558: INFO: Created: latency-svc-878s5
Jul 30 11:58:34.598: INFO: Got endpoints: latency-svc-5jspr [752.705506ms]
Jul 30 11:58:34.609: INFO: Created: latency-svc-bp2fg
Jul 30 11:58:34.645: INFO: Got endpoints: latency-svc-kspqn [746.72604ms]
Jul 30 11:58:34.656: INFO: Created: latency-svc-khsv9
Jul 30 11:58:34.696: INFO: Got endpoints: latency-svc-59s2n [747.92786ms]
Jul 30 11:58:34.705: INFO: Created: latency-svc-m9vxc
Jul 30 11:58:34.816: INFO: Got endpoints: latency-svc-d7zbw [819.618123ms]
Jul 30 11:58:34.817: INFO: Got endpoints: latency-svc-8rgv6 [769.995383ms]
Jul 30 11:58:34.826: INFO: Created: latency-svc-lsvh8
Jul 30 11:58:34.834: INFO: Created: latency-svc-tt484
Jul 30 11:58:34.846: INFO: Got endpoints: latency-svc-mtbvq [746.820503ms]
Jul 30 11:58:34.855: INFO: Created: latency-svc-w7hpl
Jul 30 11:58:34.895: INFO: Got endpoints: latency-svc-xqkdl [744.063206ms]
Jul 30 11:58:34.906: INFO: Created: latency-svc-2fjvw
Jul 30 11:58:34.947: INFO: Got endpoints: latency-svc-29mtq [748.794922ms]
Jul 30 11:58:34.958: INFO: Created: latency-svc-8tcth
Jul 30 11:58:34.996: INFO: Got endpoints: latency-svc-4t6vq [749.059129ms]
Jul 30 11:58:35.036: INFO: Created: latency-svc-2ssnl
Jul 30 11:58:35.045: INFO: Got endpoints: latency-svc-w484x [748.126226ms]
Jul 30 11:58:35.059: INFO: Created: latency-svc-6wqt5
Jul 30 11:58:35.096: INFO: Got endpoints: latency-svc-v96jb [748.542627ms]
Jul 30 11:58:35.107: INFO: Created: latency-svc-8hxcq
Jul 30 11:58:35.146: INFO: Got endpoints: latency-svc-84gpd [746.090968ms]
Jul 30 11:58:35.155: INFO: Created: latency-svc-v2jw4
Jul 30 11:58:35.197: INFO: Got endpoints: latency-svc-bqk8c [750.206639ms]
Jul 30 11:58:35.262: INFO: Created: latency-svc-vpprl
Jul 30 11:58:35.262: INFO: Got endpoints: latency-svc-9cq4c [764.013079ms]
Jul 30 11:58:35.274: INFO: Created: latency-svc-4cdw7
Jul 30 11:58:35.297: INFO: Got endpoints: latency-svc-878s5 [748.443307ms]
Jul 30 11:58:35.307: INFO: Created: latency-svc-d5lv7
Jul 30 11:58:35.346: INFO: Got endpoints: latency-svc-bp2fg [748.330234ms]
Jul 30 11:58:35.358: INFO: Created: latency-svc-hgnm9
Jul 30 11:58:35.399: INFO: Got endpoints: latency-svc-khsv9 [753.822689ms]
Jul 30 11:58:35.412: INFO: Created: latency-svc-6l5rm
Jul 30 11:58:35.449: INFO: Got endpoints: latency-svc-m9vxc [753.122743ms]
Jul 30 11:58:35.459: INFO: Created: latency-svc-7dzkd
Jul 30 11:58:35.496: INFO: Got endpoints: latency-svc-lsvh8 [680.489928ms]
Jul 30 11:58:35.507: INFO: Created: latency-svc-wccnb
Jul 30 11:58:35.546: INFO: Got endpoints: latency-svc-tt484 [729.788671ms]
Jul 30 11:58:35.559: INFO: Created: latency-svc-2slnv
Jul 30 11:58:35.599: INFO: Got endpoints: latency-svc-w7hpl [753.543795ms]
Jul 30 11:58:35.609: INFO: Created: latency-svc-kxlvj
Jul 30 11:58:35.646: INFO: Got endpoints: latency-svc-2fjvw [750.643084ms]
Jul 30 11:58:35.656: INFO: Created: latency-svc-6n5h2
Jul 30 11:58:35.698: INFO: Got endpoints: latency-svc-8tcth [750.901541ms]
Jul 30 11:58:35.711: INFO: Created: latency-svc-whp49
Jul 30 11:58:35.747: INFO: Got endpoints: latency-svc-2ssnl [751.740942ms]
Jul 30 11:58:35.759: INFO: Created: latency-svc-6f9kr
Jul 30 11:58:35.796: INFO: Got endpoints: latency-svc-6wqt5 [750.325288ms]
Jul 30 11:58:35.806: INFO: Created: latency-svc-hd5cf
Jul 30 11:58:35.848: INFO: Got endpoints: latency-svc-8hxcq [752.092161ms]
Jul 30 11:58:35.860: INFO: Created: latency-svc-4mddt
Jul 30 11:58:35.898: INFO: Got endpoints: latency-svc-v2jw4 [751.837095ms]
Jul 30 11:58:35.906: INFO: Created: latency-svc-kkptk
Jul 30 11:58:35.947: INFO: Got endpoints: latency-svc-vpprl [750.525593ms]
Jul 30 11:58:35.958: INFO: Created: latency-svc-xjggv
Jul 30 11:58:35.996: INFO: Got endpoints: latency-svc-4cdw7 [733.843062ms]
Jul 30 11:58:36.008: INFO: Created: latency-svc-zntbs
Jul 30 11:58:36.049: INFO: Got endpoints: latency-svc-d5lv7 [752.394559ms]
Jul 30 11:58:36.058: INFO: Created: latency-svc-42tx5
Jul 30 11:58:36.097: INFO: Got endpoints: latency-svc-hgnm9 [750.81896ms]
Jul 30 11:58:36.110: INFO: Created: latency-svc-8rbz8
Jul 30 11:58:36.148: INFO: Got endpoints: latency-svc-6l5rm [749.616432ms]
Jul 30 11:58:36.161: INFO: Created: latency-svc-gb5z5
Jul 30 11:58:36.198: INFO: Got endpoints: latency-svc-7dzkd [749.342375ms]
Jul 30 11:58:36.208: INFO: Created: latency-svc-c444v
Jul 30 11:58:36.248: INFO: Got endpoints: latency-svc-wccnb [751.977621ms]
Jul 30 11:58:36.259: INFO: Created: latency-svc-dk6dd
Jul 30 11:58:36.298: INFO: Got endpoints: latency-svc-2slnv [751.450628ms]
Jul 30 11:58:36.310: INFO: Created: latency-svc-fvf2w
Jul 30 11:58:36.348: INFO: Got endpoints: latency-svc-kxlvj [748.726022ms]
Jul 30 11:58:36.357: INFO: Created: latency-svc-tf95g
Jul 30 11:58:36.397: INFO: Got endpoints: latency-svc-6n5h2 [750.723532ms]
Jul 30 11:58:36.409: INFO: Created: latency-svc-6dm9p
Jul 30 11:58:36.448: INFO: Got endpoints: latency-svc-whp49 [749.935813ms]
Jul 30 11:58:36.459: INFO: Created: latency-svc-f4mkg
Jul 30 11:58:36.498: INFO: Got endpoints: latency-svc-6f9kr [750.367733ms]
Jul 30 11:58:36.507: INFO: Created: latency-svc-n6qfd
Jul 30 11:58:36.546: INFO: Got endpoints: latency-svc-hd5cf [750.487868ms]
Jul 30 11:58:36.556: INFO: Created: latency-svc-fm9bm
Jul 30 11:58:36.598: INFO: Got endpoints: latency-svc-4mddt [750.009007ms]
Jul 30 11:58:36.610: INFO: Created: latency-svc-x4qx9
Jul 30 11:58:36.647: INFO: Got endpoints: latency-svc-kkptk [749.445774ms]
Jul 30 11:58:36.656: INFO: Created: latency-svc-6rvn6
Jul 30 11:58:36.696: INFO: Got endpoints: latency-svc-xjggv [748.646394ms]
Jul 30 11:58:36.708: INFO: Created: latency-svc-26zx5
Jul 30 11:58:36.746: INFO: Got endpoints: latency-svc-zntbs [749.486635ms]
Jul 30 11:58:36.757: INFO: Created: latency-svc-6tr6h
Jul 30 11:58:36.798: INFO: Got endpoints: latency-svc-42tx5 [748.575633ms]
Jul 30 11:58:36.807: INFO: Created: latency-svc-4vtwt
Jul 30 11:58:36.847: INFO: Got endpoints: latency-svc-8rbz8 [750.035239ms]
Jul 30 11:58:36.858: INFO: Created: latency-svc-svxqs
Jul 30 11:58:36.896: INFO: Got endpoints: latency-svc-gb5z5 [747.610619ms]
Jul 30 11:58:36.908: INFO: Created: latency-svc-g2ql9
Jul 30 11:58:36.949: INFO: Got endpoints: latency-svc-c444v [750.117541ms]
Jul 30 11:58:36.958: INFO: Created: latency-svc-2vwgn
Jul 30 11:58:36.996: INFO: Got endpoints: latency-svc-dk6dd [747.808984ms]
Jul 30 11:58:37.006: INFO: Created: latency-svc-hgq7r
Jul 30 11:58:37.046: INFO: Got endpoints: latency-svc-fvf2w [748.126142ms]
Jul 30 11:58:37.058: INFO: Created: latency-svc-jnhj8
Jul 30 11:58:37.098: INFO: Got endpoints: latency-svc-tf95g [749.65425ms]
Jul 30 11:58:37.108: INFO: Created: latency-svc-6h694
Jul 30 11:58:37.146: INFO: Got endpoints: latency-svc-6dm9p [748.908133ms]
Jul 30 11:58:37.156: INFO: Created: latency-svc-prlsj
Jul 30 11:58:37.196: INFO: Got endpoints: latency-svc-f4mkg [748.620175ms]
Jul 30 11:58:37.209: INFO: Created: latency-svc-j5rmd
Jul 30 11:58:37.247: INFO: Got endpoints: latency-svc-n6qfd [749.437217ms]
Jul 30 11:58:37.256: INFO: Created: latency-svc-8pfzj
Jul 30 11:58:37.296: INFO: Got endpoints: latency-svc-fm9bm [749.907469ms]
Jul 30 11:58:37.306: INFO: Created: latency-svc-6ffj2
Jul 30 11:58:37.347: INFO: Got endpoints: latency-svc-x4qx9 [748.600337ms]
Jul 30 11:58:37.358: INFO: Created: latency-svc-5wdnm
Jul 30 11:58:37.397: INFO: Got endpoints: latency-svc-6rvn6 [750.061174ms]
Jul 30 11:58:37.406: INFO: Created: latency-svc-rsgmc
Jul 30 11:58:37.446: INFO: Got endpoints: latency-svc-26zx5 [750.136646ms]
Jul 30 11:58:37.457: INFO: Created: latency-svc-24d75
Jul 30 11:58:37.496: INFO: Got endpoints: latency-svc-6tr6h [750.201718ms]
Jul 30 11:58:37.508: INFO: Created: latency-svc-wnndb
Jul 30 11:58:37.547: INFO: Got endpoints: latency-svc-4vtwt [749.535962ms]
Jul 30 11:58:37.556: INFO: Created: latency-svc-t76nc
Jul 30 11:58:37.597: INFO: Got endpoints: latency-svc-svxqs [749.498882ms]
Jul 30 11:58:37.607: INFO: Created: latency-svc-hrt2c
Jul 30 11:58:37.647: INFO: Got endpoints: latency-svc-g2ql9 [750.555038ms]
Jul 30 11:58:37.658: INFO: Created: latency-svc-v5fkl
Jul 30 11:58:37.698: INFO: Got endpoints: latency-svc-2vwgn [749.242317ms]
Jul 30 11:58:37.708: INFO: Created: latency-svc-8t9kd
Jul 30 11:58:37.747: INFO: Got endpoints: latency-svc-hgq7r [750.368264ms]
Jul 30 11:58:37.756: INFO: Created: latency-svc-xf487
Jul 30 11:58:37.796: INFO: Got endpoints: latency-svc-jnhj8 [749.552265ms]
Jul 30 11:58:37.807: INFO: Created: latency-svc-phhmj
Jul 30 11:58:37.847: INFO: Got endpoints: latency-svc-6h694 [748.598081ms]
Jul 30 11:58:37.855: INFO: Created: latency-svc-rd7xn
Jul 30 11:58:37.896: INFO: Got endpoints: latency-svc-prlsj [749.827472ms]
Jul 30 11:58:37.906: INFO: Created: latency-svc-v5hlh
Jul 30 11:58:37.945: INFO: Got endpoints: latency-svc-j5rmd [748.974691ms]
Jul 30 11:58:37.957: INFO: Created: latency-svc-9tq5p
Jul 30 11:58:37.997: INFO: Got endpoints: latency-svc-8pfzj [749.793201ms]
Jul 30 11:58:38.006: INFO: Created: latency-svc-v2q2k
Jul 30 11:58:38.047: INFO: Got endpoints: latency-svc-6ffj2 [750.556579ms]
Jul 30 11:58:38.057: INFO: Created: latency-svc-4tx8g
Jul 30 11:58:38.097: INFO: Got endpoints: latency-svc-5wdnm [750.435427ms]
Jul 30 11:58:38.108: INFO: Created: latency-svc-q8fvs
Jul 30 11:58:38.146: INFO: Got endpoints: latency-svc-rsgmc [748.348416ms]
Jul 30 11:58:38.155: INFO: Created: latency-svc-wfqct
Jul 30 11:58:38.197: INFO: Got endpoints: latency-svc-24d75 [750.669124ms]
Jul 30 11:58:38.207: INFO: Created: latency-svc-kwwmt
Jul 30 11:58:38.248: INFO: Got endpoints: latency-svc-wnndb [751.531205ms]
Jul 30 11:58:38.259: INFO: Created: latency-svc-h44np
Jul 30 11:58:38.298: INFO: Got endpoints: latency-svc-t76nc [750.970192ms]
Jul 30 11:58:38.307: INFO: Created: latency-svc-hw49q
Jul 30 11:58:38.347: INFO: Got endpoints: latency-svc-hrt2c [750.190784ms]
Jul 30 11:58:38.357: INFO: Created: latency-svc-5x92r
Jul 30 11:58:38.396: INFO: Got endpoints: latency-svc-v5fkl [749.265422ms]
Jul 30 11:58:38.409: INFO: Created: latency-svc-4jnns
Jul 30 11:58:38.446: INFO: Got endpoints: latency-svc-8t9kd [748.476732ms]
Jul 30 11:58:38.456: INFO: Created: latency-svc-5ghgk
Jul 30 11:58:38.495: INFO: Got endpoints: latency-svc-xf487 [748.595676ms]
Jul 30 11:58:38.506: INFO: Created: latency-svc-v8btf
Jul 30 11:58:38.547: INFO: Got endpoints: latency-svc-phhmj [751.374055ms]
Jul 30 11:58:38.558: INFO: Created: latency-svc-j46xz
Jul 30 11:58:38.597: INFO: Got endpoints: latency-svc-rd7xn [750.77093ms]
Jul 30 11:58:38.606: INFO: Created: latency-svc-mmzfn
Jul 30 11:58:38.645: INFO: Got endpoints: latency-svc-v5hlh [749.679265ms]
Jul 30 11:58:38.655: INFO: Created: latency-svc-l7snw
Jul 30 11:58:38.696: INFO: Got endpoints: latency-svc-9tq5p [750.727001ms]
Jul 30 11:58:38.706: INFO: Created: latency-svc-sxtcf
Jul 30 11:58:38.748: INFO: Got endpoints: latency-svc-v2q2k [750.65581ms]
Jul 30 11:58:38.757: INFO: Created: latency-svc-prmnq
Jul 30 11:58:38.797: INFO: Got endpoints: latency-svc-4tx8g [750.781234ms]
Jul 30 11:58:38.807: INFO: Created: latency-svc-8pwc7
Jul 30 11:58:38.847: INFO: Got endpoints: latency-svc-q8fvs [750.302571ms]
Jul 30 11:58:38.860: INFO: Created: latency-svc-rz89p
Jul 30 11:58:38.897: INFO: Got endpoints: latency-svc-wfqct [750.889625ms]
Jul 30 11:58:38.906: INFO: Created: latency-svc-lsr42
Jul 30 11:58:38.945: INFO: Got endpoints: latency-svc-kwwmt [748.496836ms]
Jul 30 11:58:38.956: INFO: Created: latency-svc-r825k
Jul 30 11:58:38.997: INFO: Got endpoints: latency-svc-h44np [748.872326ms]
Jul 30 11:58:39.009: INFO: Created: latency-svc-vt288
Jul 30 11:58:39.054: INFO: Got endpoints: latency-svc-hw49q [755.721115ms]
Jul 30 11:58:39.065: INFO: Created: latency-svc-8f5j9
Jul 30 11:58:39.096: INFO: Got endpoints: latency-svc-5x92r [748.496808ms]
Jul 30 11:58:39.106: INFO: Created: latency-svc-55gdr
Jul 30 11:58:39.147: INFO: Got endpoints: latency-svc-4jnns [751.085752ms]
Jul 30 11:58:39.157: INFO: Created: latency-svc-pfcd2
Jul 30 11:58:39.195: INFO: Got endpoints: latency-svc-5ghgk [748.587151ms]
Jul 30 11:58:39.205: INFO: Created: latency-svc-vc69d
Jul 30 11:58:39.245: INFO: Got endpoints: latency-svc-v8btf [749.704059ms]
Jul 30 11:58:39.255: INFO: Created: latency-svc-xfxpl
Jul 30 11:58:39.297: INFO: Got endpoints: latency-svc-j46xz [749.883015ms]
Jul 30 11:58:39.307: INFO: Created: latency-svc-q5wmt
Jul 30 11:58:39.348: INFO: Got endpoints: latency-svc-mmzfn [750.312215ms]
Jul 30 11:58:39.358: INFO: Created: latency-svc-j9b29
Jul 30 11:58:39.396: INFO: Got endpoints: latency-svc-l7snw [750.871549ms]
Jul 30 11:58:39.407: INFO: Created: latency-svc-vqfzz
Jul 30 11:58:39.446: INFO: Got endpoints: latency-svc-sxtcf [749.741262ms]
Jul 30 11:58:39.457: INFO: Created: latency-svc-bb6m5
Jul 30 11:58:39.496: INFO: Got endpoints: latency-svc-prmnq [748.40457ms]
Jul 30 11:58:39.509: INFO: Created: latency-svc-dq8gb
Jul 30 11:58:39.546: INFO: Got endpoints: latency-svc-8pwc7 [748.409441ms]
Jul 30 11:58:39.556: INFO: Created: latency-svc-ml84c
Jul 30 11:58:39.597: INFO: Got endpoints: latency-svc-rz89p [749.970699ms]
Jul 30 11:58:39.607: INFO: Created: latency-svc-b8q6g
Jul 30 11:58:39.645: INFO: Got endpoints: latency-svc-lsr42 [748.266407ms]
Jul 30 11:58:39.655: INFO: Created: latency-svc-j29dx
Jul 30 11:58:39.696: INFO: Got endpoints: latency-svc-r825k [750.152964ms]
Jul 30 11:58:39.706: INFO: Created: latency-svc-gq8lj
Jul 30 11:58:39.746: INFO: Got endpoints: latency-svc-vt288 [749.064119ms]
Jul 30 11:58:39.756: INFO: Created: latency-svc-wrrd7
Jul 30 11:58:39.796: INFO: Got endpoints: latency-svc-8f5j9 [741.526303ms]
Jul 30 11:58:39.805: INFO: Created: latency-svc-ggr4l
Jul 30 11:58:39.845: INFO: Got endpoints: latency-svc-55gdr [749.765166ms]
Jul 30 11:58:39.855: INFO: Created: latency-svc-894fb
Jul 30 11:58:39.896: INFO: Got endpoints: latency-svc-pfcd2 [748.71677ms]
Jul 30 11:58:39.947: INFO: Got endpoints: latency-svc-vc69d [751.614681ms]
Jul 30 11:58:39.997: INFO: Got endpoints: latency-svc-xfxpl [751.879187ms]
Jul 30 11:58:40.046: INFO: Got endpoints: latency-svc-q5wmt [748.474064ms]
Jul 30 11:58:40.096: INFO: Got endpoints: latency-svc-j9b29 [748.783372ms]
Jul 30 11:58:40.145: INFO: Got endpoints: latency-svc-vqfzz [749.036259ms]
Jul 30 11:58:40.198: INFO: Got endpoints: latency-svc-bb6m5 [751.855639ms]
Jul 30 11:58:40.245: INFO: Got endpoints: latency-svc-dq8gb [749.141572ms]
Jul 30 11:58:40.296: INFO: Got endpoints: latency-svc-ml84c [750.282542ms]
Jul 30 11:58:40.345: INFO: Got endpoints: latency-svc-b8q6g [747.317349ms]
Jul 30 11:58:40.398: INFO: Got endpoints: latency-svc-j29dx [753.183935ms]
Jul 30 11:58:40.445: INFO: Got endpoints: latency-svc-gq8lj [749.622917ms]
Jul 30 11:58:40.496: INFO: Got endpoints: latency-svc-wrrd7 [749.974066ms]
Jul 30 11:58:40.546: INFO: Got endpoints: latency-svc-ggr4l [750.226563ms]
Jul 30 11:58:40.596: INFO: Got endpoints: latency-svc-894fb [750.161021ms]
Jul 30 11:58:40.596: INFO: Latencies: [14.178788ms 31.053082ms 32.163919ms 35.714037ms 80.946318ms 84.616848ms 88.998765ms 92.155243ms 92.398149ms 92.803919ms 93.188318ms 94.372437ms 95.024413ms 95.397423ms 96.5396ms 99.688998ms 102.534467ms 103.952322ms 108.084814ms 108.134145ms 108.481974ms 109.422247ms 109.952109ms 110.406031ms 110.526274ms 113.6273ms 113.979828ms 117.017433ms 120.518609ms 122.918648ms 124.194919ms 129.449938ms 130.3286ms 134.39202ms 140.734616ms 190.21619ms 215.242215ms 235.670856ms 279.861091ms 329.639084ms 379.834296ms 427.325853ms 474.783448ms 516.195444ms 567.586337ms 615.042892ms 662.555729ms 680.489928ms 698.599044ms 710.082535ms 729.788671ms 733.843062ms 737.057019ms 741.526303ms 744.063206ms 745.224303ms 746.090968ms 746.659606ms 746.72604ms 746.820503ms 747.317349ms 747.610619ms 747.808984ms 747.92786ms 748.126142ms 748.126226ms 748.266407ms 748.267344ms 748.330234ms 748.348416ms 748.40457ms 748.409441ms 748.443307ms 748.474064ms 748.476732ms 748.496808ms 748.496836ms 748.542627ms 748.575633ms 748.587151ms 748.595676ms 748.598081ms 748.600337ms 748.620175ms 748.646394ms 748.71677ms 748.726022ms 748.762457ms 748.783372ms 748.794922ms 748.872326ms 748.908133ms 748.974691ms 749.024684ms 749.036259ms 749.059129ms 749.064119ms 749.141572ms 749.242317ms 749.265422ms 749.342375ms 749.437217ms 749.445774ms 749.486635ms 749.498882ms 749.535962ms 749.552265ms 749.616432ms 749.622917ms 749.65425ms 749.679265ms 749.704059ms 749.741262ms 749.754355ms 749.765166ms 749.793201ms 749.827472ms 749.883015ms 749.907469ms 749.935813ms 749.970699ms 749.974066ms 749.994043ms 750.005866ms 750.009007ms 750.035239ms 750.061174ms 750.117541ms 750.136646ms 750.152964ms 750.153584ms 750.157098ms 750.161021ms 750.190784ms 750.201718ms 750.206639ms 750.226563ms 750.258044ms 750.26364ms 750.282542ms 750.302571ms 750.312215ms 750.325288ms 750.367733ms 750.368264ms 750.435427ms 750.486336ms 750.487868ms 750.500077ms 750.525593ms 750.555038ms 750.556579ms 750.643084ms 750.65581ms 750.669124ms 750.723532ms 750.727001ms 750.77093ms 750.781234ms 750.81896ms 750.837662ms 750.871549ms 750.889625ms 750.901541ms 750.970192ms 750.974833ms 751.085752ms 751.121595ms 751.14065ms 751.247081ms 751.301154ms 751.329579ms 751.374055ms 751.450628ms 751.531205ms 751.614681ms 751.642615ms 751.740942ms 751.836338ms 751.837095ms 751.855639ms 751.879187ms 751.977621ms 751.978502ms 752.092161ms 752.391946ms 752.394559ms 752.573492ms 752.705506ms 753.122743ms 753.183935ms 753.430453ms 753.543795ms 753.822689ms 754.530856ms 755.721115ms 756.433444ms 764.013079ms 769.995383ms 819.618123ms]
Jul 30 11:58:40.596: INFO: 50 %ile: 749.342375ms
Jul 30 11:58:40.596: INFO: 90 %ile: 751.855639ms
Jul 30 11:58:40.596: INFO: 99 %ile: 769.995383ms
Jul 30 11:58:40.596: INFO: Total sample count: 200
[AfterEach] [sig-network] Service endpoints latency
  test/e2e/framework/framework.go:188
Jul 30 11:58:40.596: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svc-latency-4577" for this suite.

• [SLOW TEST:10.873 seconds]
[sig-network] Service endpoints latency
test/e2e/network/common/framework.go:23
  should not be very high  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Service endpoints latency should not be very high  [Conformance]","total":356,"completed":15,"skipped":353,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:40.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8694
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 11:58:41.229: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 11:58:44.258: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 11:58:44.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1892-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource while v1 is storage version
STEP: Patching Custom Resource Definition to set v2 as storage
STEP: Patching the custom resource while v2 is storage version
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 11:58:47.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8694" for this suite.
STEP: Destroying namespace "webhook-8694-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.856 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with different stored version [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]","total":356,"completed":16,"skipped":365,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath 
  runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:58:47.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-3783
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul 30 11:58:47.610: INFO: Waiting up to 1m0s for all nodes to be ready
Jul 30 11:59:47.627: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 11:59:47.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-8085
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:496
STEP: Finding an available node
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
Jul 30 11:59:49.791: INFO: found a healthy node: ip-172-31-74-61
[It] runs ReplicaSets to verify preemption running path [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 11:59:57.861: INFO: pods created so far: [1 1 1]
Jul 30 11:59:57.861: INFO: length of pods created so far: 3
Jul 30 12:00:01.874: INFO: pods created so far: [2 2 1]
[AfterEach] PreemptionExecutionPath
  test/e2e/framework/framework.go:188
Jul 30 12:00:08.874: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-8085" for this suite.
[AfterEach] PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:470
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:00:08.914: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-3783" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:81.497 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PreemptionExecutionPath
  test/e2e/scheduling/preemption.go:458
    runs ReplicaSets to verify preemption running path [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]","total":356,"completed":17,"skipped":382,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:08.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3008
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-54143343-671f-4816-b52f-fb99e5fcbdb7
STEP: Creating a pod to test consume configMaps
Jul 30 12:00:09.110: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134" in namespace "projected-3008" to be "Succeeded or Failed"
Jul 30 12:00:09.113: INFO: Pod "pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134": Phase="Pending", Reason="", readiness=false. Elapsed: 3.279534ms
Jul 30 12:00:11.120: INFO: Pod "pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01049681s
Jul 30 12:00:13.128: INFO: Pod "pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018459433s
STEP: Saw pod success
Jul 30 12:00:13.128: INFO: Pod "pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134" satisfied condition "Succeeded or Failed"
Jul 30 12:00:13.133: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:00:13.163: INFO: Waiting for pod pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134 to disappear
Jul 30 12:00:13.167: INFO: Pod pod-projected-configmaps-bba2587e-bd55-4bf7-b96d-18dbf0e1e134 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 12:00:13.167: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3008" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":18,"skipped":384,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:13.178: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-9233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:00:13.314: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jul 30 12:00:15.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-9233 --namespace=crd-publish-openapi-9233 create -f -'
Jul 30 12:00:16.024: INFO: stderr: ""
Jul 30 12:00:16.024: INFO: stdout: "e2e-test-crd-publish-openapi-4530-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jul 30 12:00:16.024: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-9233 --namespace=crd-publish-openapi-9233 delete e2e-test-crd-publish-openapi-4530-crds test-cr'
Jul 30 12:00:16.073: INFO: stderr: ""
Jul 30 12:00:16.073: INFO: stdout: "e2e-test-crd-publish-openapi-4530-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
Jul 30 12:00:16.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-9233 --namespace=crd-publish-openapi-9233 apply -f -'
Jul 30 12:00:16.192: INFO: stderr: ""
Jul 30 12:00:16.192: INFO: stdout: "e2e-test-crd-publish-openapi-4530-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
Jul 30 12:00:16.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-9233 --namespace=crd-publish-openapi-9233 delete e2e-test-crd-publish-openapi-4530-crds test-cr'
Jul 30 12:00:16.240: INFO: stderr: ""
Jul 30 12:00:16.240: INFO: stdout: "e2e-test-crd-publish-openapi-4530-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR without validation schema
Jul 30 12:00:16.240: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-9233 explain e2e-test-crd-publish-openapi-4530-crds'
Jul 30 12:00:16.550: INFO: stderr: ""
Jul 30 12:00:16.550: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4530-crd\nVERSION:  crd-publish-openapi-test-empty.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:00:18.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-9233" for this suite.

• [SLOW TEST:5.321 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD without validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]","total":356,"completed":19,"skipped":414,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:18.499: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-9535
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replication controller my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34
Jul 30 12:00:18.630: INFO: Pod name my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34: Found 0 pods out of 1
Jul 30 12:00:23.639: INFO: Pod name my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34: Found 1 pods out of 1
Jul 30 12:00:23.639: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34" are running
Jul 30 12:00:23.642: INFO: Pod "my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34-gtlrc" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:00:18 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:00:19 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:00:19 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:00:18 +0000 UTC Reason: Message:}])
Jul 30 12:00:23.642: INFO: Trying to dial the pod
Jul 30 12:00:28.668: INFO: Controller my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34: Got expected result from replica 1 [my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34-gtlrc]: "my-hostname-basic-6f773850-3d14-43e3-be4e-acae46eacf34-gtlrc", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul 30 12:00:28.668: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-9535" for this suite.

• [SLOW TEST:10.182 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":20,"skipped":472,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:28.682: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7298
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-347d0e58-18d7-4f06-bf3f-f9feb4156456
STEP: Creating a pod to test consume secrets
Jul 30 12:00:28.844: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523" in namespace "projected-7298" to be "Succeeded or Failed"
Jul 30 12:00:28.848: INFO: Pod "pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523": Phase="Pending", Reason="", readiness=false. Elapsed: 3.635133ms
Jul 30 12:00:30.858: INFO: Pod "pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013650212s
Jul 30 12:00:32.865: INFO: Pod "pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021294818s
STEP: Saw pod success
Jul 30 12:00:32.865: INFO: Pod "pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523" satisfied condition "Succeeded or Failed"
Jul 30 12:00:32.869: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:00:32.897: INFO: Waiting for pod pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523 to disappear
Jul 30 12:00:32.900: INFO: Pod pod-projected-secrets-e28741ad-e783-49be-a02a-4d6fedb3e523 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul 30 12:00:32.900: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7298" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":21,"skipped":488,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version 
  should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:32.910: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-3410
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check is all data is printed  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:00:33.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-3410 version'
Jul 30 12:00:33.080: INFO: stderr: "WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.\n"
Jul 30 12:00:33.080: INFO: stdout: "Client Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.3\", GitCommit:\"aef86a93758dc3cb2c658dd9657ab4ad4afc21cb\", GitTreeState:\"clean\", BuildDate:\"2022-07-13T14:30:46Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\nKustomize Version: v4.5.4\nServer Version: version.Info{Major:\"1\", Minor:\"24\", GitVersion:\"v1.24.3\", GitCommit:\"aef86a93758dc3cb2c658dd9657ab4ad4afc21cb\", GitTreeState:\"clean\", BuildDate:\"2022-07-14T02:10:44Z\", GoVersion:\"go1.18.3\", Compiler:\"gc\", Platform:\"linux/amd64\"}\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:00:33.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-3410" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]","total":356,"completed":22,"skipped":498,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:33.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8230
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-8230/configmap-test-c481b814-e8a5-46c3-aa6e-8660b0086b78
STEP: Creating a pod to test consume configMaps
Jul 30 12:00:33.226: INFO: Waiting up to 5m0s for pod "pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a" in namespace "configmap-8230" to be "Succeeded or Failed"
Jul 30 12:00:33.229: INFO: Pod "pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a": Phase="Pending", Reason="", readiness=false. Elapsed: 3.083219ms
Jul 30 12:00:35.234: INFO: Pod "pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008359138s
Jul 30 12:00:37.242: INFO: Pod "pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015775227s
STEP: Saw pod success
Jul 30 12:00:37.242: INFO: Pod "pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a" satisfied condition "Succeeded or Failed"
Jul 30 12:00:37.244: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a container env-test: <nil>
STEP: delete the pod
Jul 30 12:00:37.266: INFO: Waiting for pod pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a to disappear
Jul 30 12:00:37.269: INFO: Pod pod-configmaps-1f5f0a8c-d14e-45ae-9aa3-ff96286d543a no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:00:37.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8230" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":23,"skipped":522,"failed":0}
SSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:37.281: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6081
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-31bd18a0-9835-4b35-9254-badb7b13b20c
STEP: Creating a pod to test consume configMaps
Jul 30 12:00:37.420: INFO: Waiting up to 5m0s for pod "pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b" in namespace "configmap-6081" to be "Succeeded or Failed"
Jul 30 12:00:37.426: INFO: Pod "pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b": Phase="Pending", Reason="", readiness=false. Elapsed: 5.540002ms
Jul 30 12:00:39.446: INFO: Pod "pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.025682267s
Jul 30 12:00:41.456: INFO: Pod "pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03571012s
STEP: Saw pod success
Jul 30 12:00:41.456: INFO: Pod "pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b" satisfied condition "Succeeded or Failed"
Jul 30 12:00:41.461: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:00:41.487: INFO: Waiting for pod pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b to disappear
Jul 30 12:00:41.492: INFO: Pod pod-configmaps-2899911e-a634-4f18-aa70-502a8472a36b no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:00:41.492: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6081" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":24,"skipped":529,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:41.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4038
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:00:41.665: INFO: Waiting up to 5m0s for pod "downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5" in namespace "downward-api-4038" to be "Succeeded or Failed"
Jul 30 12:00:41.669: INFO: Pod "downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.737545ms
Jul 30 12:00:43.679: INFO: Pod "downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.014069365s
Jul 30 12:00:45.687: INFO: Pod "downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021985279s
STEP: Saw pod success
Jul 30 12:00:45.687: INFO: Pod "downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5" satisfied condition "Succeeded or Failed"
Jul 30 12:00:45.691: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5 container client-container: <nil>
STEP: delete the pod
Jul 30 12:00:45.710: INFO: Waiting for pod downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5 to disappear
Jul 30 12:00:45.713: INFO: Pod downwardapi-volume-907e0c25-da86-4ce5-833a-7bf05f010ae5 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 12:00:45.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4038" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":25,"skipped":536,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:00:45.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5428
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5428
[It] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating stateful set ss in namespace statefulset-5428
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-5428
Jul 30 12:00:45.865: INFO: Found 0 stateful pods, waiting for 1
Jul 30 12:00:55.870: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod
Jul 30 12:00:55.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5428 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 12:00:55.998: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 12:00:55.998: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 12:00:55.998: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 12:00:56.002: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jul 30 12:01:06.009: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 12:01:06.009: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:01:06.025: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
Jul 30 12:01:06.025: INFO: ss-0  ip-172-31-74-61  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:00:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:00:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:00:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:00:45 +0000 UTC  }]
Jul 30 12:01:06.025: INFO: 
Jul 30 12:01:06.025: INFO: StatefulSet ss has not reached scale 3, at 1
Jul 30 12:01:07.031: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997275608s
Jul 30 12:01:08.035: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.99182698s
Jul 30 12:01:09.042: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.986329576s
Jul 30 12:01:10.047: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979276735s
Jul 30 12:01:11.052: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.97465059s
Jul 30 12:01:12.058: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.970309208s
Jul 30 12:01:13.082: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.964365788s
Jul 30 12:01:14.100: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.939834941s
Jul 30 12:01:15.108: INFO: Verifying statefulset ss doesn't scale past 3 for another 922.32478ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-5428
Jul 30 12:01:16.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5428 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 12:01:16.251: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul 30 12:01:16.251: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 12:01:16.251: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul 30 12:01:16.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5428 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 12:01:16.397: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jul 30 12:01:16.397: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 12:01:16.397: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul 30 12:01:16.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5428 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 12:01:16.535: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
Jul 30 12:01:16.535: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 12:01:16.535: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul 30 12:01:16.539: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
Jul 30 12:01:26.545: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:01:26.545: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:01:26.545: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Scale down will not halt with unhealthy stateful pod
Jul 30 12:01:26.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5428 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 12:01:26.667: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 12:01:26.667: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 12:01:26.667: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 12:01:26.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5428 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 12:01:26.797: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 12:01:26.797: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 12:01:26.797: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 12:01:26.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5428 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 12:01:26.931: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 12:01:26.931: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 12:01:26.931: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 12:01:26.931: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:01:26.936: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 3
Jul 30 12:01:36.949: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 12:01:36.949: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 12:01:36.949: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 12:01:36.961: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Jul 30 12:01:36.961: INFO: ss-0  ip-172-31-74-61   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:00:45 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:00:45 +0000 UTC  }]
Jul 30 12:01:36.961: INFO: ss-1  ip-172-31-47-213  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:06 +0000 UTC  }]
Jul 30 12:01:36.961: INFO: ss-2  ip-172-31-87-57   Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:06 +0000 UTC  }]
Jul 30 12:01:36.961: INFO: 
Jul 30 12:01:36.961: INFO: StatefulSet ss has not reached scale 0, at 3
Jul 30 12:01:37.966: INFO: POD   NODE              PHASE    GRACE  CONDITIONS
Jul 30 12:01:37.966: INFO: ss-1  ip-172-31-47-213  Running  0s     [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:27 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:01:06 +0000 UTC  }]
Jul 30 12:01:37.966: INFO: 
Jul 30 12:01:37.966: INFO: StatefulSet ss has not reached scale 0, at 1
Jul 30 12:01:38.972: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.990812357s
Jul 30 12:01:39.976: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.985486504s
Jul 30 12:01:40.980: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.981652515s
Jul 30 12:01:41.985: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.978258061s
Jul 30 12:01:43.000: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.972587833s
Jul 30 12:01:44.013: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.957236868s
Jul 30 12:01:45.026: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.945185003s
Jul 30 12:01:46.039: INFO: Verifying statefulset ss doesn't scale past 0 for another 931.354777ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-5428
Jul 30 12:01:47.048: INFO: Scaling statefulset ss to 0
Jul 30 12:01:47.059: INFO: Waiting for statefulset status.replicas updated to 0
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 12:01:47.062: INFO: Deleting all statefulset in ns statefulset-5428
Jul 30 12:01:47.065: INFO: Scaling statefulset ss to 0
Jul 30 12:01:47.075: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:01:47.078: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 12:01:47.090: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5428" for this suite.

• [SLOW TEST:61.378 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]","total":356,"completed":26,"skipped":552,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:01:47.101: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-8363
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:01:47.448: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:01:50.472: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting timeout (1s) shorter than webhook latency (5s)
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s)
STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is longer than webhook latency
STEP: Registering slow webhook via the AdmissionRegistration API
STEP: Having no error when timeout is empty (defaulted to 10s in v1)
STEP: Registering slow webhook via the AdmissionRegistration API
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:02:02.609: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-8363" for this suite.
STEP: Destroying namespace "webhook-8363-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:15.568 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should honor timeout [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]","total":356,"completed":27,"skipped":584,"failed":0}
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:02:02.670: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6358
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Failed
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul 30 12:02:06.842: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul 30 12:02:06.860: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6358" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":28,"skipped":590,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:02:06.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2421
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 in namespace container-probe-2421
Jul 30 12:02:09.016: INFO: Started pod liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 in namespace container-probe-2421
STEP: checking the pod's current state and verifying that restartCount is present
Jul 30 12:02:09.019: INFO: Initial restart count of pod liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 is 0
Jul 30 12:02:29.090: INFO: Restart count of pod container-probe-2421/liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 is now 1 (20.070906844s elapsed)
Jul 30 12:02:49.155: INFO: Restart count of pod container-probe-2421/liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 is now 2 (40.136509494s elapsed)
Jul 30 12:03:09.213: INFO: Restart count of pod container-probe-2421/liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 is now 3 (1m0.194467364s elapsed)
Jul 30 12:03:29.293: INFO: Restart count of pod container-probe-2421/liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 is now 4 (1m20.274344121s elapsed)
Jul 30 12:04:33.514: INFO: Restart count of pod container-probe-2421/liveness-c43f6cb5-4d69-46cf-871b-8b73b7af5542 is now 5 (2m24.495029628s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 12:04:33.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2421" for this suite.

• [SLOW TEST:146.668 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should have monotonically increasing restart count [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]","total":356,"completed":29,"skipped":622,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] 
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:04:33.538: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename taint-single-pod
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-single-pod-665
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/node/taints.go:166
Jul 30 12:04:33.667: INFO: Waiting up to 1m0s for all nodes to be ready
Jul 30 12:05:33.679: INFO: Waiting for terminating namespaces to be deleted...
[It] removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:05:33.682: INFO: Starting informer...
STEP: Starting pod...
Jul 30 12:05:33.897: INFO: Pod is running on ip-172-31-74-61. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting short time to make sure Pod is queued for deletion
Jul 30 12:05:33.907: INFO: Pod wasn't evicted. Proceeding
Jul 30 12:05:33.907: INFO: Removing taint from Node
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting some time to make sure that toleration time passed.
Jul 30 12:06:48.998: INFO: Pod wasn't evicted. Test successful
[AfterEach] [sig-node] NoExecuteTaintManager Single Pod [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:06:48.998: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-single-pod-665" for this suite.

• [SLOW TEST:135.471 seconds]
[sig-node] NoExecuteTaintManager Single Pod [Serial]
test/e2e/node/framework.go:23
  removing taint cancels eviction [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]","total":356,"completed":30,"skipped":642,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run 
  should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:06:49.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-7904
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl can dry-run update Pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul 30 12:06:49.133: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-7904 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jul 30 12:06:49.185: INFO: stderr: ""
Jul 30 12:06:49.185: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: replace the image in the pod with server-side dry-run
Jul 30 12:06:49.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-7904 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "k8s.gcr.io/e2e-test-images/busybox:1.29-2"}]}} --dry-run=server'
Jul 30 12:06:49.339: INFO: stderr: ""
Jul 30 12:06:49.339: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul 30 12:06:49.342: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-7904 delete pods e2e-test-httpd-pod'
Jul 30 12:06:51.495: INFO: stderr: ""
Jul 30 12:06:51.495: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:06:51.495: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-7904" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]","total":356,"completed":31,"skipped":662,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:06:51.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7380
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
Jul 30 12:06:57.679: INFO: 80 pods remaining
Jul 30 12:06:57.680: INFO: 80 pods has nil DeletionTimestamp
Jul 30 12:06:57.680: INFO: 
Jul 30 12:06:58.677: INFO: 71 pods remaining
Jul 30 12:06:58.677: INFO: 71 pods has nil DeletionTimestamp
Jul 30 12:06:58.677: INFO: 
Jul 30 12:06:59.675: INFO: 60 pods remaining
Jul 30 12:06:59.675: INFO: 60 pods has nil DeletionTimestamp
Jul 30 12:06:59.675: INFO: 
Jul 30 12:07:00.671: INFO: 40 pods remaining
Jul 30 12:07:00.671: INFO: 40 pods has nil DeletionTimestamp
Jul 30 12:07:00.671: INFO: 
Jul 30 12:07:01.674: INFO: 31 pods remaining
Jul 30 12:07:01.674: INFO: 31 pods has nil DeletionTimestamp
Jul 30 12:07:01.674: INFO: 
Jul 30 12:07:02.671: INFO: 20 pods remaining
Jul 30 12:07:02.671: INFO: 20 pods has nil DeletionTimestamp
Jul 30 12:07:02.671: INFO: 
STEP: Gathering metrics
W0730 12:07:03.676123      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jul 30 12:07:03.676: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul 30 12:07:03.676: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-7380" for this suite.

• [SLOW TEST:12.181 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]","total":356,"completed":32,"skipped":698,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:07:03.690: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6000
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jul 30 12:07:03.824: INFO: Waiting up to 5m0s for pod "pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a" in namespace "emptydir-6000" to be "Succeeded or Failed"
Jul 30 12:07:03.830: INFO: Pod "pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a": Phase="Pending", Reason="", readiness=false. Elapsed: 5.478327ms
Jul 30 12:07:05.835: INFO: Pod "pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010999368s
Jul 30 12:07:07.841: INFO: Pod "pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a": Phase="Pending", Reason="", readiness=false. Elapsed: 4.017232895s
Jul 30 12:07:09.847: INFO: Pod "pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.023217749s
Jul 30 12:07:11.852: INFO: Pod "pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 8.028210364s
STEP: Saw pod success
Jul 30 12:07:11.853: INFO: Pod "pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a" satisfied condition "Succeeded or Failed"
Jul 30 12:07:11.856: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a container test-container: <nil>
STEP: delete the pod
Jul 30 12:07:11.887: INFO: Waiting for pod pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a to disappear
Jul 30 12:07:11.889: INFO: Pod pod-a1ce7dc4-31d8-4dc6-badb-e7a4b21bcc4a no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 12:07:11.889: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6000" for this suite.

• [SLOW TEST:8.208 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":33,"skipped":718,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:07:11.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8053
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-e171aee6-b7f1-4216-9612-c60fbaac0541
STEP: Creating a pod to test consume secrets
Jul 30 12:07:12.034: INFO: Waiting up to 5m0s for pod "pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996" in namespace "secrets-8053" to be "Succeeded or Failed"
Jul 30 12:07:12.039: INFO: Pod "pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996": Phase="Pending", Reason="", readiness=false. Elapsed: 5.57541ms
Jul 30 12:07:14.046: INFO: Pod "pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01235974s
Jul 30 12:07:16.055: INFO: Pod "pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021768503s
STEP: Saw pod success
Jul 30 12:07:16.056: INFO: Pod "pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996" satisfied condition "Succeeded or Failed"
Jul 30 12:07:16.058: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996 container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:07:16.080: INFO: Waiting for pod pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996 to disappear
Jul 30 12:07:16.083: INFO: Pod pod-secrets-8978f754-ea24-4bbe-8f9b-a1b968d36996 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:07:16.083: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8053" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":34,"skipped":725,"failed":0}
SSSSS
------------------------------
[sig-network] Ingress API 
  should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:07:16.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename ingress
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingress-5347
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support creating Ingress API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul 30 12:07:16.246: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jul 30 12:07:16.249: INFO: starting watch
STEP: patching
STEP: updating
Jul 30 12:07:16.263: INFO: waiting for watch events with expected annotations
Jul 30 12:07:16.263: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] Ingress API
  test/e2e/framework/framework.go:188
Jul 30 12:07:16.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingress-5347" for this suite.
•{"msg":"PASSED [sig-network] Ingress API should support creating Ingress API operations [Conformance]","total":356,"completed":35,"skipped":730,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:07:16.328: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-1764
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should apply changes to a job status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensure pods equal to paralellism count is attached to the job
STEP: patching /status
STEP: updating /status
STEP: get /status
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul 30 12:07:18.502: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-1764" for this suite.
•{"msg":"PASSED [sig-apps] Job should apply changes to a job status [Conformance]","total":356,"completed":36,"skipped":749,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:07:18.522: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2395
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-0b6674eb-61e3-4db7-b02d-cb32103bced4
STEP: Creating a pod to test consume configMaps
Jul 30 12:07:18.667: INFO: Waiting up to 5m0s for pod "pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e" in namespace "configmap-2395" to be "Succeeded or Failed"
Jul 30 12:07:18.670: INFO: Pod "pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.308519ms
Jul 30 12:07:20.675: INFO: Pod "pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00885704s
Jul 30 12:07:22.681: INFO: Pod "pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014174546s
STEP: Saw pod success
Jul 30 12:07:22.681: INFO: Pod "pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e" satisfied condition "Succeeded or Failed"
Jul 30 12:07:22.684: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e container configmap-volume-test: <nil>
STEP: delete the pod
Jul 30 12:07:22.708: INFO: Waiting for pod pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e to disappear
Jul 30 12:07:22.712: INFO: Pod pod-configmaps-4394cd7a-de0f-452b-b2bc-f5945112630e no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:07:22.712: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2395" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]","total":356,"completed":37,"skipped":761,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch 
  watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:07:22.723: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-watch-8059
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] watch on custom resource definition objects [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:07:22.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Creating first CR 
Jul 30 12:07:25.399: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-30T12:07:25Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-30T12:07:25Z]] name:name1 resourceVersion:8897 uid:7fd075c2-9ca5-44f2-9d0a-5288474c30e4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Creating second CR
Jul 30 12:07:35.409: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-30T12:07:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-30T12:07:35Z]] name:name2 resourceVersion:8926 uid:5976d2bc-383a-4024-8140-ea8993c92841] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying first CR
Jul 30 12:07:45.419: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-30T12:07:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-30T12:07:45Z]] name:name1 resourceVersion:8946 uid:7fd075c2-9ca5-44f2-9d0a-5288474c30e4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Modifying second CR
Jul 30 12:07:55.430: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-30T12:07:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-30T12:07:55Z]] name:name2 resourceVersion:8972 uid:5976d2bc-383a-4024-8140-ea8993c92841] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting first CR
Jul 30 12:08:05.440: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-30T12:07:25Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-30T12:07:45Z]] name:name1 resourceVersion:9001 uid:7fd075c2-9ca5-44f2-9d0a-5288474c30e4] num:map[num1:9223372036854775807 num2:1000000]]}
STEP: Deleting second CR
Jul 30 12:08:15.453: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2022-07-30T12:07:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2022-07-30T12:07:55Z]] name:name2 resourceVersion:9020 uid:5976d2bc-383a-4024-8140-ea8993c92841] num:map[num1:9223372036854775807 num2:1000000]]}
[AfterEach] [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:08:25.971: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-watch-8059" for this suite.

• [SLOW TEST:63.259 seconds]
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  CustomResourceDefinition Watch
  test/e2e/apimachinery/crd_watch.go:44
    watch on custom resource definition objects [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]","total":356,"completed":38,"skipped":771,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:08:25.982: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7244
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:08:26.598: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jul 30 12:08:28.610: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 30, 12, 8, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 8, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 8, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 8, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:08:31.636: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:08:31.841: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7244" for this suite.
STEP: Destroying namespace "webhook-7244-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:5.932 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  listing validating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]","total":356,"completed":39,"skipped":778,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:08:31.914: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4377
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:08:32.480: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:08:35.504: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should deny crd creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the crd webhook via the AdmissionRegistration API
STEP: Creating a custom resource definition that should be denied by the webhook
Jul 30 12:08:35.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:08:35.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4377" for this suite.
STEP: Destroying namespace "webhook-4377-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]","total":356,"completed":40,"skipped":785,"failed":0}
SS
------------------------------
[sig-node] Security Context 
  should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:08:35.590: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-4508
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jul 30 12:08:35.727: INFO: Waiting up to 5m0s for pod "security-context-7731a563-7e48-4e9a-8f97-779f109245dc" in namespace "security-context-4508" to be "Succeeded or Failed"
Jul 30 12:08:35.751: INFO: Pod "security-context-7731a563-7e48-4e9a-8f97-779f109245dc": Phase="Pending", Reason="", readiness=false. Elapsed: 24.516925ms
Jul 30 12:08:37.758: INFO: Pod "security-context-7731a563-7e48-4e9a-8f97-779f109245dc": Phase="Pending", Reason="", readiness=false. Elapsed: 2.030749517s
Jul 30 12:08:39.763: INFO: Pod "security-context-7731a563-7e48-4e9a-8f97-779f109245dc": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.036154689s
STEP: Saw pod success
Jul 30 12:08:39.763: INFO: Pod "security-context-7731a563-7e48-4e9a-8f97-779f109245dc" satisfied condition "Succeeded or Failed"
Jul 30 12:08:39.767: INFO: Trying to get logs from node ip-172-31-74-61 pod security-context-7731a563-7e48-4e9a-8f97-779f109245dc container test-container: <nil>
STEP: delete the pod
Jul 30 12:08:39.789: INFO: Waiting for pod security-context-7731a563-7e48-4e9a-8f97-779f109245dc to disappear
Jul 30 12:08:39.792: INFO: Pod security-context-7731a563-7e48-4e9a-8f97-779f109245dc no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul 30 12:08:39.792: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-4508" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":41,"skipped":787,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:08:39.803: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-3448
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Deleting RuntimeClass runtimeclass-3448-delete-me
STEP: Waiting for the RuntimeClass to disappear
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul 30 12:08:39.950: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-3448" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":42,"skipped":811,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:08:39.962: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8874
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
STEP: listing events with field selection filtering on source
STEP: listing events with field selection filtering on reportingController
STEP: getting the test event
STEP: patching the test event
STEP: getting the test event
STEP: updating the test event
STEP: getting the test event
STEP: deleting the test event
STEP: listing events in all namespaces
STEP: listing events in test namespace
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jul 30 12:08:40.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8874" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":43,"skipped":869,"failed":0}
SSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:08:40.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-7001
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:08:42.316: INFO: Deleting pod "var-expansion-e9f03c74-e8fd-408f-a000-4c5c2828b2eb" in namespace "var-expansion-7001"
Jul 30 12:08:42.325: INFO: Wait up to 5m0s for pod "var-expansion-e9f03c74-e8fd-408f-a000-4c5c2828b2eb" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 12:08:44.335: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-7001" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]","total":356,"completed":44,"skipped":877,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:08:44.349: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1460
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-1460
Jul 30 12:08:44.483: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:08:46.488: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jul 30 12:08:46.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jul 30 12:08:46.634: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jul 30 12:08:46.634: INFO: stdout: "iptables"
Jul 30 12:08:46.634: INFO: proxyMode: iptables
Jul 30 12:08:46.648: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jul 30 12:08:46.651: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-nodeport-timeout in namespace services-1460
STEP: creating replication controller affinity-nodeport-timeout in namespace services-1460
I0730 12:08:46.671835      23 runners.go:193] Created replication controller with name: affinity-nodeport-timeout, namespace: services-1460, replica count: 3
I0730 12:08:49.722769      23 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0730 12:08:52.723175      23 runners.go:193] affinity-nodeport-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 12:08:52.737: INFO: Creating new exec pod
Jul 30 12:08:55.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec execpod-affinitylntdv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-timeout 80'
Jul 30 12:08:55.922: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-timeout 80\nConnection to affinity-nodeport-timeout 80 port [tcp/http] succeeded!\n"
Jul 30 12:08:55.922: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:08:55.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec execpod-affinitylntdv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.169 80'
Jul 30 12:08:56.046: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.169 80\nConnection to 10.152.183.169 80 port [tcp/http] succeeded!\n"
Jul 30 12:08:56.046: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:08:56.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec execpod-affinitylntdv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.47.213 31706'
Jul 30 12:08:56.193: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.47.213 31706\nConnection to 172.31.47.213 31706 port [tcp/*] succeeded!\n"
Jul 30 12:08:56.193: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:08:56.193: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec execpod-affinitylntdv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.57 31706'
Jul 30 12:08:56.309: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.57 31706\nConnection to 172.31.87.57 31706 port [tcp/*] succeeded!\n"
Jul 30 12:08:56.309: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:08:56.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec execpod-affinitylntdv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.47.213:31706/ ; done'
Jul 30 12:08:56.538: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n"
Jul 30 12:08:56.538: INFO: stdout: "\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt\naffinity-nodeport-timeout-z2mqt"
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Received response from host: affinity-nodeport-timeout-z2mqt
Jul 30 12:08:56.538: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec execpod-affinitylntdv -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.47.213:31706/'
Jul 30 12:08:56.665: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n"
Jul 30 12:08:56.665: INFO: stdout: "affinity-nodeport-timeout-z2mqt"
Jul 30 12:09:16.667: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1460 exec execpod-affinitylntdv -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://172.31.47.213:31706/'
Jul 30 12:09:16.826: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://172.31.47.213:31706/\n"
Jul 30 12:09:16.826: INFO: stdout: "affinity-nodeport-timeout-8gsh4"
Jul 30 12:09:16.826: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-timeout in namespace services-1460, will wait for the garbage collector to delete the pods
Jul 30 12:09:16.902: INFO: Deleting ReplicationController affinity-nodeport-timeout took: 6.49235ms
Jul 30 12:09:17.003: INFO: Terminating ReplicationController affinity-nodeport-timeout pods took: 100.610064ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:09:19.027: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1460" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:34.688 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":45,"skipped":905,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:09:19.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2198
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-de32c42d-ece2-4b1f-8a22-b17d89a3f425
STEP: Creating a pod to test consume secrets
Jul 30 12:09:19.171: INFO: Waiting up to 5m0s for pod "pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0" in namespace "secrets-2198" to be "Succeeded or Failed"
Jul 30 12:09:19.176: INFO: Pod "pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0": Phase="Pending", Reason="", readiness=false. Elapsed: 5.422308ms
Jul 30 12:09:21.184: INFO: Pod "pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013241999s
Jul 30 12:09:23.190: INFO: Pod "pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019259417s
STEP: Saw pod success
Jul 30 12:09:23.190: INFO: Pod "pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0" satisfied condition "Succeeded or Failed"
Jul 30 12:09:23.193: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0 container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:09:23.214: INFO: Waiting for pod pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0 to disappear
Jul 30 12:09:23.217: INFO: Pod pod-secrets-89607921-e64d-4c95-a1bb-4ccb83828da0 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:09:23.217: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2198" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":46,"skipped":924,"failed":0}
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem 
  should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:09:23.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-4011
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:09:23.357: INFO: Waiting up to 5m0s for pod "busybox-readonly-false-fecb35b7-cc61-4fb5-a9a1-7b0bd0892af8" in namespace "security-context-test-4011" to be "Succeeded or Failed"
Jul 30 12:09:23.359: INFO: Pod "busybox-readonly-false-fecb35b7-cc61-4fb5-a9a1-7b0bd0892af8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.511461ms
Jul 30 12:09:25.365: INFO: Pod "busybox-readonly-false-fecb35b7-cc61-4fb5-a9a1-7b0bd0892af8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008206544s
Jul 30 12:09:27.371: INFO: Pod "busybox-readonly-false-fecb35b7-cc61-4fb5-a9a1-7b0bd0892af8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014484613s
Jul 30 12:09:27.371: INFO: Pod "busybox-readonly-false-fecb35b7-cc61-4fb5-a9a1-7b0bd0892af8" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul 30 12:09:27.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-4011" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]","total":356,"completed":47,"skipped":929,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:09:27.382: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-9851
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:09:29.531: INFO: Deleting pod "var-expansion-b7a235f3-afcc-49e7-9c8e-01381351177e" in namespace "var-expansion-9851"
Jul 30 12:09:29.542: INFO: Wait up to 5m0s for pod "var-expansion-b7a235f3-afcc-49e7-9c8e-01381351177e" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 12:09:31.556: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-9851" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]","total":356,"completed":48,"skipped":941,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:09:31.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-4101
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
STEP: waiting for Deployment to be created
STEP: waiting for all Replicas to be Ready
Jul 30 12:09:31.708: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:31.708: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:31.721: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:31.721: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:31.737: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:31.738: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:31.758: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:31.758: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0 and labels map[test-deployment-static:true]
Jul 30 12:09:32.976: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jul 30 12:09:32.976: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1 and labels map[test-deployment-static:true]
Jul 30 12:09:33.967: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2 and labels map[test-deployment-static:true]
STEP: patching the Deployment
Jul 30 12:09:34.001: INFO: observed event type ADDED
STEP: waiting for Replicas to scale
Jul 30 12:09:34.003: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.003: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.003: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.003: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.003: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 0
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.004: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.086: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.087: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.115: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.115: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:34.126: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:34.126: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:34.146: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:34.146: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:35.997: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:35.997: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:36.034: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
STEP: listing Deployments
Jul 30 12:09:36.043: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
STEP: updating the Deployment
Jul 30 12:09:36.054: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
STEP: fetching the DeploymentStatus
Jul 30 12:09:36.059: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:36.073: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:36.121: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:36.145: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:36.964: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:36.982: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:36.990: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:37.005: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
Jul 30 12:09:37.998: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
STEP: patching the DeploymentStatus
STEP: fetching the DeploymentStatus
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 1
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 2
Jul 30 12:09:38.032: INFO: observed Deployment test-deployment in namespace deployment-4101 with ReadyReplicas 3
STEP: deleting the Deployment
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.042: INFO: observed event type MODIFIED
Jul 30 12:09:38.043: INFO: observed event type MODIFIED
Jul 30 12:09:38.043: INFO: observed event type MODIFIED
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 12:09:38.046: INFO: Log out all the ReplicaSets if there is no deployment created
Jul 30 12:09:38.050: INFO: ReplicaSet "test-deployment-6b48c869b6":
&ReplicaSet{ObjectMeta:{test-deployment-6b48c869b6  deployment-4101  8faeca74-9f0f-4bb6-9da9-00b13f011e92 9810 3 2022-07-30 12:09:31 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment 766e6f18-213e-4d48-9add-2e9637d61082 0xc00358b557 0xc00358b558}] []  [{kube-controller-manager Update apps/v1 2022-07-30 12:09:31 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"766e6f18-213e-4d48-9add-2e9637d61082\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:09:36 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 6b48c869b6,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:6b48c869b6 test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00358b5e0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:3,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jul 30 12:09:38.052: INFO: ReplicaSet "test-deployment-74c6dd549b":
&ReplicaSet{ObjectMeta:{test-deployment-74c6dd549b  deployment-4101  506eb19e-4c94-42ba-bc37-2f66bf566439 9905 2 2022-07-30 12:09:36 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:3] [{apps/v1 Deployment test-deployment 766e6f18-213e-4d48-9add-2e9637d61082 0xc00358b647 0xc00358b648}] []  [{kube-controller-manager Update apps/v1 2022-07-30 12:09:36 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"766e6f18-213e-4d48-9add-2e9637d61082\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:09:36 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 74c6dd549b,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00358b6d0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:2,AvailableReplicas:2,Conditions:[]ReplicaSetCondition{},},}

Jul 30 12:09:38.058: INFO: pod: "test-deployment-74c6dd549b-dhbzt":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-dhbzt test-deployment-74c6dd549b- deployment-4101  9c213c1f-5451-47f8-81b7-6bb47f5e6eec 9904 0 2022-07-30 12:09:36 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 506eb19e-4c94-42ba-bc37-2f66bf566439 0xc00321e657 0xc00321e658}] []  [{kube-controller-manager Update v1 2022-07-30 12:09:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"506eb19e-4c94-42ba-bc37-2f66bf566439\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:09:37 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.223.100\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lsjn2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lsjn2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.47.213,PodIP:192.168.223.100,StartTime:2022-07-30 12:09:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:09:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://021d95d12a03c4522ac8987e9d9cae3e1885c2984e5c68890712f5ad28b919c0,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.223.100,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jul 30 12:09:38.058: INFO: pod: "test-deployment-74c6dd549b-x5l9c":
&Pod{ObjectMeta:{test-deployment-74c6dd549b-x5l9c test-deployment-74c6dd549b- deployment-4101  8868a7b7-d321-44c0-844f-078cc04bd99d 9860 0 2022-07-30 12:09:36 +0000 UTC <nil> <nil> map[pod-template-hash:74c6dd549b test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-74c6dd549b 506eb19e-4c94-42ba-bc37-2f66bf566439 0xc00321e847 0xc00321e848}] []  [{kube-controller-manager Update v1 2022-07-30 12:09:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"506eb19e-4c94-42ba-bc37-2f66bf566439\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:09:36 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.73\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-x749w,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-x749w,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.73,StartTime:2022-07-30 12:09:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:09:36 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://40c8ca54841746818169aa1c767398ca9648336fb49987843d49f5ce308294a7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.73,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jul 30 12:09:38.058: INFO: ReplicaSet "test-deployment-84b949bdfc":
&ReplicaSet{ObjectMeta:{test-deployment-84b949bdfc  deployment-4101  30f81e28-7261-4a20-b4a9-57f4d7c32fe2 9913 4 2022-07-30 12:09:34 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-deployment 766e6f18-213e-4d48-9add-2e9637d61082 0xc00358b737 0xc00358b738}] []  [{kube-controller-manager Update apps/v1 2022-07-30 12:09:34 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"766e6f18-213e-4d48-9add-2e9637d61082\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:09:37 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{pod-template-hash: 84b949bdfc,test-deployment-static: true,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[pod-template-hash:84b949bdfc test-deployment-static:true] map[] [] []  []} {[] [] [{test-deployment k8s.gcr.io/pause:3.7 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00358b7c0 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:4,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}

Jul 30 12:09:38.062: INFO: pod: "test-deployment-84b949bdfc-s54j7":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-s54j7 test-deployment-84b949bdfc- deployment-4101  9066ac62-3c32-4fab-a607-b1e79e14662b 9891 0 2022-07-30 12:09:36 +0000 UTC 2022-07-30 12:09:37 +0000 UTC 0xc00321fc40 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc 30f81e28-7261-4a20-b4a9-57f4d7c32fe2 0xc00321fc77 0xc00321fc78}] []  [{kube-controller-manager Update v1 2022-07-30 12:09:36 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"30f81e28-7261-4a20-b4a9-57f4d7c32fe2\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:09:37 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.110.234\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-225n4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-225n4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-87-57,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:37 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:36 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.87.57,PodIP:192.168.110.234,StartTime:2022-07-30 12:09:36 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:09:37 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://17443c074df2692ca23717f7fed4c3d821ca7dd87b7af5c52364d81183219915,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.110.234,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

Jul 30 12:09:38.062: INFO: pod: "test-deployment-84b949bdfc-sqdvv":
&Pod{ObjectMeta:{test-deployment-84b949bdfc-sqdvv test-deployment-84b949bdfc- deployment-4101  3733a9c9-bfde-4f5a-8049-2db5e7a93582 9909 0 2022-07-30 12:09:34 +0000 UTC 2022-07-30 12:09:38 +0000 UTC 0xc00321fe40 map[pod-template-hash:84b949bdfc test-deployment-static:true] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-84b949bdfc 30f81e28-7261-4a20-b4a9-57f4d7c32fe2 0xc00321fe97 0xc00321fe98}] []  [{kube-controller-manager Update v1 2022-07-30 12:09:34 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:pod-template-hash":{},"f:test-deployment-static":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"30f81e28-7261-4a20-b4a9-57f4d7c32fe2\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"test-deployment\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:09:35 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.72\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-zcwmz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:test-deployment,Image:k8s.gcr.io/pause:3.7,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-zcwmz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*1,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:35 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:09:34 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.72,StartTime:2022-07-30 12:09:34 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:test-deployment,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:09:35 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/pause:3.7,ImageID:k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c,ContainerID:containerd://f9d23e170eb83d752458a563ae3d787fe3e1447931d355c0e03435d67857c908,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.72,},},EphemeralContainerStatuses:[]ContainerStatus{},},}

[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 12:09:38.062: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-4101" for this suite.

• [SLOW TEST:6.509 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  should run the lifecycle of a Deployment [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]","total":356,"completed":49,"skipped":955,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:09:38.076: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support remote command execution over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:09:38.198: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul 30 12:09:38.210: INFO: The status of Pod pod-exec-websocket-6d66d9d9-8c31-440a-add0-ea5d5ccf1c4a is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:09:40.216: INFO: The status of Pod pod-exec-websocket-6d66d9d9-8c31-440a-add0-ea5d5ccf1c4a is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 12:09:40.286: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2779" for this suite.
•{"msg":"PASSED [sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]","total":356,"completed":50,"skipped":987,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:09:40.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-4868
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-4868
[It] should validate Statefulset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-4868
Jul 30 12:09:40.437: INFO: Found 0 stateful pods, waiting for 1
Jul 30 12:09:50.443: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Patch Statefulset to include a label
STEP: Getting /status
Jul 30 12:09:50.463: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
STEP: updating the StatefulSet Status
Jul 30 12:09:50.471: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the statefulset status to be updated
Jul 30 12:09:50.472: INFO: Observed &StatefulSet event: ADDED
Jul 30 12:09:50.472: INFO: Found Statefulset ss in namespace statefulset-4868 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul 30 12:09:50.472: INFO: Statefulset ss has an updated status
STEP: patching the Statefulset Status
Jul 30 12:09:50.472: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jul 30 12:09:50.478: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Statefulset status to be patched
Jul 30 12:09:50.479: INFO: Observed &StatefulSet event: ADDED
Jul 30 12:09:50.479: INFO: Observed Statefulset ss in namespace statefulset-4868 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul 30 12:09:50.479: INFO: Observed &StatefulSet event: MODIFIED
Jul 30 12:09:50.479: INFO: Found Statefulset ss in namespace statefulset-4868 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 12:09:50.479: INFO: Deleting all statefulset in ns statefulset-4868
Jul 30 12:09:50.482: INFO: Scaling statefulset ss to 0
Jul 30 12:10:00.530: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:10:00.535: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 12:10:00.559: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-4868" for this suite.

• [SLOW TEST:20.281 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should validate Statefulset Status endpoints [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]","total":356,"completed":51,"skipped":1035,"failed":0}
SS
------------------------------
[sig-auth] ServiceAccounts 
  should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:00.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-8385
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should guarantee kube-root-ca.crt exist in any namespace [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:10:00.723: INFO: Got root ca configmap in namespace "svcaccounts-8385"
Jul 30 12:10:00.732: INFO: Deleted root ca configmap in namespace "svcaccounts-8385"
STEP: waiting for a new root ca configmap created
Jul 30 12:10:01.241: INFO: Recreated root ca configmap in namespace "svcaccounts-8385"
Jul 30 12:10:01.255: INFO: Updated root ca configmap in namespace "svcaccounts-8385"
STEP: waiting for the root ca configmap reconciled
Jul 30 12:10:01.763: INFO: Reconciled root ca configmap in namespace "svcaccounts-8385"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul 30 12:10:01.763: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-8385" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]","total":356,"completed":52,"skipped":1037,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:01.776: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7549
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should provide secure master service  [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:10:01.917: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7549" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should provide secure master service  [Conformance]","total":356,"completed":53,"skipped":1049,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:01.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-3565
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul 30 12:10:02.097: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:02.097: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:02.101: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:10:02.101: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:10:03.111: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:03.111: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:03.115: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul 30 12:10:03.115: INFO: Node ip-172-31-87-57 is running 0 daemon pod, expected 1
Jul 30 12:10:04.110: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:04.110: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:04.114: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 12:10:04.114: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived.
Jul 30 12:10:04.134: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:04.134: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:10:04.137: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 12:10:04.137: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Wait for the failed daemon pod to be completely deleted.
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3565, will wait for the garbage collector to delete the pods
Jul 30 12:10:05.216: INFO: Deleting DaemonSet.extensions daemon-set took: 7.044085ms
Jul 30 12:10:05.317: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.143959ms
Jul 30 12:10:07.121: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:10:07.121: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul 30 12:10:07.125: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"10278"},"items":null}

Jul 30 12:10:07.128: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"10279"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:10:07.141: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-3565" for this suite.

• [SLOW TEST:5.222 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should retry creating failed daemon pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]","total":356,"completed":54,"skipped":1082,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:07.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-62009493-02f6-4bf4-b183-ea7dda8d36b5
STEP: Creating a pod to test consume configMaps
Jul 30 12:10:07.288: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3" in namespace "projected-2420" to be "Succeeded or Failed"
Jul 30 12:10:07.290: INFO: Pod "pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.549284ms
Jul 30 12:10:09.297: INFO: Pod "pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009191201s
Jul 30 12:10:11.303: INFO: Pod "pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015000816s
STEP: Saw pod success
Jul 30 12:10:11.303: INFO: Pod "pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3" satisfied condition "Succeeded or Failed"
Jul 30 12:10:11.306: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:10:11.327: INFO: Waiting for pod pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3 to disappear
Jul 30 12:10:11.331: INFO: Pod pod-projected-configmaps-b37d5c58-be9b-4524-9f9c-920e4dd2aab3 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 12:10:11.331: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2420" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":55,"skipped":1090,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:11.342: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-7568
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to restart watching from the last resource version observed by the previous watch [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: closing the watch once it receives two notifications
Jul 30 12:10:11.479: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7568  6faa2543-2ae4-4a34-99fe-a0b03febbc58 10322 0 2022-07-30 12:10:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-30 12:10:11 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:10:11.479: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7568  6faa2543-2ae4-4a34-99fe-a0b03febbc58 10323 0 2022-07-30 12:10:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-30 12:10:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time, while the watch is closed
STEP: creating a new watch on configmaps from the last resource version observed by the first watch
STEP: deleting the configmap
STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed
Jul 30 12:10:11.492: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7568  6faa2543-2ae4-4a34-99fe-a0b03febbc58 10324 0 2022-07-30 12:10:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-30 12:10:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:10:11.493: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7568  6faa2543-2ae4-4a34-99fe-a0b03febbc58 10325 0 2022-07-30 12:10:11 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] []  [{e2e.test Update v1 2022-07-30 12:10:11 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul 30 12:10:11.493: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-7568" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]","total":356,"completed":56,"skipped":1104,"failed":0}
S
------------------------------
[sig-node] Pods 
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:11.503: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5446
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:10:11.641: INFO: The status of Pod server-envvars-9f304f79-b102-4cff-931b-f0c98a2db4aa is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:10:13.647: INFO: The status of Pod server-envvars-9f304f79-b102-4cff-931b-f0c98a2db4aa is Running (Ready = true)
Jul 30 12:10:13.671: INFO: Waiting up to 5m0s for pod "client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07" in namespace "pods-5446" to be "Succeeded or Failed"
Jul 30 12:10:13.680: INFO: Pod "client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07": Phase="Pending", Reason="", readiness=false. Elapsed: 8.652388ms
Jul 30 12:10:15.688: INFO: Pod "client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017017866s
Jul 30 12:10:17.694: INFO: Pod "client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023270965s
STEP: Saw pod success
Jul 30 12:10:17.694: INFO: Pod "client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07" satisfied condition "Succeeded or Failed"
Jul 30 12:10:17.698: INFO: Trying to get logs from node ip-172-31-74-61 pod client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07 container env3cont: <nil>
STEP: delete the pod
Jul 30 12:10:17.716: INFO: Waiting for pod client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07 to disappear
Jul 30 12:10:17.719: INFO: Pod client-envvars-e9d72257-e363-4ec5-af02-64428a0b1c07 no longer exists
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 12:10:17.719: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5446" for this suite.

• [SLOW TEST:6.226 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should contain environment variables for services [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]","total":356,"completed":57,"skipped":1105,"failed":0}
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:17.729: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-7545
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul 30 12:10:17.855: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul 30 12:10:17.862: INFO: Waiting for terminating namespaces to be deleted...
Jul 30 12:10:17.866: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-47-213 before test
Jul 30 12:10:17.871: INFO: nginx-ingress-controller-kubernetes-worker-m74xp from ingress-nginx-kubernetes-worker started at 2022-07-30 11:50:58 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.871: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 12:10:17.871: INFO: calico-kube-controllers-5488b65678-bxz55 from kube-system started at 2022-07-30 12:05:33 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.871: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul 30 12:10:17.871: INFO: sonobuoy from sonobuoy started at 2022-07-30 11:56:59 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.871: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jul 30 12:10:17.871: INFO: sonobuoy-e2e-job-e4d2d2eb16ce474e from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:10:17.871: INFO: 	Container e2e ready: true, restart count 0
Jul 30 12:10:17.871: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:10:17.871: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-dxmzm from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:10:17.871: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:10:17.871: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 12:10:17.871: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-74-61 before test
Jul 30 12:10:17.875: INFO: nginx-ingress-controller-kubernetes-worker-xh64j from ingress-nginx-kubernetes-worker started at 2022-07-30 12:05:45 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.875: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 12:10:17.875: INFO: server-envvars-9f304f79-b102-4cff-931b-f0c98a2db4aa from pods-5446 started at 2022-07-30 12:10:11 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.875: INFO: 	Container srv ready: true, restart count 0
Jul 30 12:10:17.875: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-k4bdp from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:10:17.875: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:10:17.875: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 12:10:17.875: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-87-57 before test
Jul 30 12:10:17.880: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sld8q from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.880: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Jul 30 12:10:17.880: INFO: nginx-ingress-controller-kubernetes-worker-g7v8n from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.880: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 12:10:17.880: INFO: coredns-86c98bfcdb-phwp7 from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.880: INFO: 	Container coredns ready: true, restart count 0
Jul 30 12:10:17.880: INFO: kube-state-metrics-5cdbfd47b4-dcb7g from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.881: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jul 30 12:10:17.881: INFO: metrics-server-v0.5.2-6bfd958b56-d28nd from kube-system started at 2022-07-30 11:48:05 +0000 UTC (2 container statuses recorded)
Jul 30 12:10:17.881: INFO: 	Container metrics-server ready: true, restart count 0
Jul 30 12:10:17.881: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Jul 30 12:10:17.881: INFO: dashboard-metrics-scraper-8669b59d4f-8dtvd from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.881: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul 30 12:10:17.881: INFO: kubernetes-dashboard-585fc6bc87-l57jt from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:10:17.881: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jul 30 12:10:17.881: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-bk2gt from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:10:17.881: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:10:17.881: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if not matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to schedule Pod with nonempty NodeSelector.
STEP: Considering event: 
Type = [Warning], Name = [restricted-pod.17069a29fe7b6999], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 5 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.]
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:10:18.906: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-7545" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]","total":356,"completed":58,"skipped":1113,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:18.917: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-891
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod with mountPath of existing file [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-vp5c
STEP: Creating a pod to test atomic-volume-subpath
Jul 30 12:10:19.062: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-vp5c" in namespace "subpath-891" to be "Succeeded or Failed"
Jul 30 12:10:19.066: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.703061ms
Jul 30 12:10:21.072: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 2.010255685s
Jul 30 12:10:23.078: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 4.015382007s
Jul 30 12:10:25.085: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 6.022470905s
Jul 30 12:10:27.089: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 8.027045477s
Jul 30 12:10:29.096: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 10.034224363s
Jul 30 12:10:31.111: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 12.048422504s
Jul 30 12:10:33.119: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 14.057187307s
Jul 30 12:10:35.125: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 16.063090406s
Jul 30 12:10:37.139: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 18.07663172s
Jul 30 12:10:39.147: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=true. Elapsed: 20.084646982s
Jul 30 12:10:41.158: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Running", Reason="", readiness=false. Elapsed: 22.096245991s
Jul 30 12:10:43.165: INFO: Pod "pod-subpath-test-configmap-vp5c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.102955326s
STEP: Saw pod success
Jul 30 12:10:43.165: INFO: Pod "pod-subpath-test-configmap-vp5c" satisfied condition "Succeeded or Failed"
Jul 30 12:10:43.168: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-subpath-test-configmap-vp5c container test-container-subpath-configmap-vp5c: <nil>
STEP: delete the pod
Jul 30 12:10:43.191: INFO: Waiting for pod pod-subpath-test-configmap-vp5c to disappear
Jul 30 12:10:43.194: INFO: Pod pod-subpath-test-configmap-vp5c no longer exists
STEP: Deleting pod pod-subpath-test-configmap-vp5c
Jul 30 12:10:43.194: INFO: Deleting pod "pod-subpath-test-configmap-vp5c" in namespace "subpath-891"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul 30 12:10:43.197: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-891" for this suite.

• [SLOW TEST:24.291 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod with mountPath of existing file [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]","total":356,"completed":59,"skipped":1145,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Services 
  should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:43.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6755
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should delete a collection of services [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a collection of services
Jul 30 12:10:43.333: INFO: Creating e2e-svc-a-v4f6x
Jul 30 12:10:43.346: INFO: Creating e2e-svc-b-xglfb
Jul 30 12:10:43.357: INFO: Creating e2e-svc-c-n9fhb
STEP: deleting service collection
Jul 30 12:10:43.402: INFO: Collection of services has been deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:10:43.402: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6755" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should delete a collection of services [Conformance]","total":356,"completed":60,"skipped":1156,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:10:43.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-5704
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with secret pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-secret-ntjk
STEP: Creating a pod to test atomic-volume-subpath
Jul 30 12:10:43.550: INFO: Waiting up to 5m0s for pod "pod-subpath-test-secret-ntjk" in namespace "subpath-5704" to be "Succeeded or Failed"
Jul 30 12:10:43.553: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Pending", Reason="", readiness=false. Elapsed: 2.524156ms
Jul 30 12:10:45.560: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 2.009900632s
Jul 30 12:10:47.566: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 4.015619308s
Jul 30 12:10:49.571: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 6.020965905s
Jul 30 12:10:51.577: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 8.026566668s
Jul 30 12:10:53.590: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 10.039304438s
Jul 30 12:10:55.596: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 12.045885132s
Jul 30 12:10:57.602: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 14.051250732s
Jul 30 12:10:59.619: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 16.068265585s
Jul 30 12:11:01.627: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 18.076949419s
Jul 30 12:11:03.640: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=true. Elapsed: 20.090088361s
Jul 30 12:11:05.652: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Running", Reason="", readiness=false. Elapsed: 22.101449358s
Jul 30 12:11:07.659: INFO: Pod "pod-subpath-test-secret-ntjk": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.10890347s
STEP: Saw pod success
Jul 30 12:11:07.659: INFO: Pod "pod-subpath-test-secret-ntjk" satisfied condition "Succeeded or Failed"
Jul 30 12:11:07.663: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-subpath-test-secret-ntjk container test-container-subpath-secret-ntjk: <nil>
STEP: delete the pod
Jul 30 12:11:07.685: INFO: Waiting for pod pod-subpath-test-secret-ntjk to disappear
Jul 30 12:11:07.689: INFO: Pod pod-subpath-test-secret-ntjk no longer exists
STEP: Deleting pod pod-subpath-test-secret-ntjk
Jul 30 12:11:07.689: INFO: Deleting pod "pod-subpath-test-secret-ntjk" in namespace "subpath-5704"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul 30 12:11:07.692: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-5704" for this suite.

• [SLOW TEST:24.290 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with secret pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]","total":356,"completed":61,"skipped":1184,"failed":0}
SSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:11:07.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4716
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul 30 12:11:07.836: INFO: Waiting up to 5m0s for pod "downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13" in namespace "downward-api-4716" to be "Succeeded or Failed"
Jul 30 12:11:07.840: INFO: Pod "downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13": Phase="Pending", Reason="", readiness=false. Elapsed: 3.466682ms
Jul 30 12:11:09.847: INFO: Pod "downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010418554s
Jul 30 12:11:11.853: INFO: Pod "downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016923731s
STEP: Saw pod success
Jul 30 12:11:11.853: INFO: Pod "downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13" satisfied condition "Succeeded or Failed"
Jul 30 12:11:11.857: INFO: Trying to get logs from node ip-172-31-74-61 pod downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13 container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:11:11.879: INFO: Waiting for pod downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13 to disappear
Jul 30 12:11:11.882: INFO: Pod downward-api-99e64426-a27d-4e0c-bb82-0e7771f2cc13 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul 30 12:11:11.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4716" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]","total":356,"completed":62,"skipped":1190,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:11:11.892: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-5014
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-5014
[It] should perform rolling updates and roll backs of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jul 30 12:11:12.032: INFO: Found 0 stateful pods, waiting for 3
Jul 30 12:11:22.041: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:11:22.041: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:11:22.041: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:11:22.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5014 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 12:11:22.193: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 12:11:22.193: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 12:11:22.194: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

STEP: Updating StatefulSet template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jul 30 12:11:32.240: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Updating Pods in reverse ordinal order
Jul 30 12:11:42.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5014 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 12:11:42.379: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul 30 12:11:42.379: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 12:11:42.379: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

STEP: Rolling back to a previous revision
Jul 30 12:12:02.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5014 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 12:12:02.550: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 12:12:02.550: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 12:12:02.550: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 12:12:12.589: INFO: Updating stateful set ss2
STEP: Rolling back update in reverse ordinal order
Jul 30 12:12:22.613: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-5014 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 12:12:22.733: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul 30 12:12:22.733: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 12:12:22.733: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 12:12:32.759: INFO: Deleting all statefulset in ns statefulset-5014
Jul 30 12:12:32.762: INFO: Scaling statefulset ss2 to 0
Jul 30 12:12:42.781: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:12:42.784: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 12:12:42.804: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-5014" for this suite.

• [SLOW TEST:90.925 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform rolling updates and roll backs of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]","total":356,"completed":63,"skipped":1224,"failed":0}
S
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation 
  should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:12:42.817: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-1371
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:12:42.953: INFO: Waiting up to 5m0s for pod "alpine-nnp-false-1089e911-3508-4262-baf2-7254f9709421" in namespace "security-context-test-1371" to be "Succeeded or Failed"
Jul 30 12:12:42.956: INFO: Pod "alpine-nnp-false-1089e911-3508-4262-baf2-7254f9709421": Phase="Pending", Reason="", readiness=false. Elapsed: 3.01743ms
Jul 30 12:12:44.964: INFO: Pod "alpine-nnp-false-1089e911-3508-4262-baf2-7254f9709421": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010540412s
Jul 30 12:12:46.969: INFO: Pod "alpine-nnp-false-1089e911-3508-4262-baf2-7254f9709421": Phase="Pending", Reason="", readiness=false. Elapsed: 4.015900806s
Jul 30 12:12:48.975: INFO: Pod "alpine-nnp-false-1089e911-3508-4262-baf2-7254f9709421": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.021631092s
Jul 30 12:12:48.975: INFO: Pod "alpine-nnp-false-1089e911-3508-4262-baf2-7254f9709421" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul 30 12:12:48.993: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-1371" for this suite.

• [SLOW TEST:6.185 seconds]
[sig-node] Security Context
test/e2e/common/node/framework.go:23
  when creating containers with AllowPrivilegeEscalation
  test/e2e/common/node/security_context.go:298
    should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":64,"skipped":1225,"failed":0}
SSSSS
------------------------------
[sig-node] Secrets 
  should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:12:49.003: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-4367
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create secret due to empty secret key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name secret-emptykey-test-ca51b6a3-1fb6-4193-aa0f-8c513e6f9d9f
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:12:49.125: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-4367" for this suite.
•{"msg":"PASSED [sig-node] Secrets should fail to create secret due to empty secret key [Conformance]","total":356,"completed":65,"skipped":1230,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:12:49.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-4340
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:12:49.266: INFO: Waiting up to 5m0s for pod "downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb" in namespace "downward-api-4340" to be "Succeeded or Failed"
Jul 30 12:12:49.271: INFO: Pod "downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb": Phase="Pending", Reason="", readiness=false. Elapsed: 4.600157ms
Jul 30 12:12:51.276: INFO: Pod "downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009508756s
Jul 30 12:12:53.283: INFO: Pod "downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016463876s
STEP: Saw pod success
Jul 30 12:12:53.283: INFO: Pod "downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb" satisfied condition "Succeeded or Failed"
Jul 30 12:12:53.285: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb container client-container: <nil>
STEP: delete the pod
Jul 30 12:12:53.306: INFO: Waiting for pod downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb to disappear
Jul 30 12:12:53.309: INFO: Pod downwardapi-volume-874e3835-e833-4765-a9d4-396959eac5bb no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 12:12:53.309: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-4340" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":66,"skipped":1294,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:12:53.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-6970
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-3130
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a pod in the namespace
STEP: Waiting for the pod to have running status
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-5913
STEP: Verifying there are no pods in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:13:06.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-6970" for this suite.
STEP: Destroying namespace "nsdeletetest-3130" for this suite.
Jul 30 12:13:06.728: INFO: Namespace nsdeletetest-3130 was already deleted
STEP: Destroying namespace "nsdeletetest-5913" for this suite.

• [SLOW TEST:13.418 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all pods are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]","total":356,"completed":67,"skipped":1310,"failed":0}
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:13:06.736: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2716
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:13:06.856: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: kubectl validation (kubectl create and apply) allows request with known and required properties
Jul 30 12:13:08.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 create -f -'
Jul 30 12:13:09.751: INFO: stderr: ""
Jul 30 12:13:09.751: INFO: stdout: "e2e-test-crd-publish-openapi-1585-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jul 30 12:13:09.751: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 delete e2e-test-crd-publish-openapi-1585-crds test-foo'
Jul 30 12:13:09.850: INFO: stderr: ""
Jul 30 12:13:09.850: INFO: stdout: "e2e-test-crd-publish-openapi-1585-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
Jul 30 12:13:09.850: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 apply -f -'
Jul 30 12:13:10.347: INFO: stderr: ""
Jul 30 12:13:10.347: INFO: stdout: "e2e-test-crd-publish-openapi-1585-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
Jul 30 12:13:10.348: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 delete e2e-test-crd-publish-openapi-1585-crds test-foo'
Jul 30 12:13:10.403: INFO: stderr: ""
Jul 30 12:13:10.403: INFO: stdout: "e2e-test-crd-publish-openapi-1585-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values
Jul 30 12:13:10.403: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 create -f -'
Jul 30 12:13:10.512: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema
Jul 30 12:13:10.512: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 create -f -'
Jul 30 12:13:10.614: INFO: rc: 1
Jul 30 12:13:10.614: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 apply -f -'
Jul 30 12:13:10.719: INFO: rc: 1
STEP: kubectl validation (kubectl create and apply) rejects request without required properties
Jul 30 12:13:10.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 create -f -'
Jul 30 12:13:10.822: INFO: rc: 1
Jul 30 12:13:10.822: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 --namespace=crd-publish-openapi-2716 apply -f -'
Jul 30 12:13:10.923: INFO: rc: 1
STEP: kubectl explain works to explain CR properties
Jul 30 12:13:10.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 explain e2e-test-crd-publish-openapi-1585-crds'
Jul 30 12:13:11.029: INFO: stderr: ""
Jul 30 12:13:11.029: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1585-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nDESCRIPTION:\n     Foo CRD for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<Object>\n     Specification of Foo\n\n   status\t<Object>\n     Status of Foo\n\n"
STEP: kubectl explain works to explain CR properties recursively
Jul 30 12:13:11.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 explain e2e-test-crd-publish-openapi-1585-crds.metadata'
Jul 30 12:13:11.134: INFO: stderr: ""
Jul 30 12:13:11.134: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1585-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: metadata <Object>\n\nDESCRIPTION:\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n     ObjectMeta is metadata that all persisted resources must have, which\n     includes all objects users must create.\n\nFIELDS:\n   annotations\t<map[string]string>\n     Annotations is an unstructured key value map stored with a resource that\n     may be set by external tools to store and retrieve arbitrary metadata. They\n     are not queryable and should be preserved when modifying objects. More\n     info: http://kubernetes.io/docs/user-guide/annotations\n\n   clusterName\t<string>\n     Deprecated: ClusterName is a legacy field that was always cleared by the\n     system and never used; it will be removed completely in 1.25.\n\n     The name in the go struct is changed to help clients detect accidental use.\n\n   creationTimestamp\t<string>\n     CreationTimestamp is a timestamp representing the server time when this\n     object was created. It is not guaranteed to be set in happens-before order\n     across separate operations. Clients may not set this value. It is\n     represented in RFC3339 form and is in UTC.\n\n     Populated by the system. Read-only. Null for lists. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   deletionGracePeriodSeconds\t<integer>\n     Number of seconds allowed for this object to gracefully terminate before it\n     will be removed from the system. Only set when deletionTimestamp is also\n     set. May only be shortened. Read-only.\n\n   deletionTimestamp\t<string>\n     DeletionTimestamp is RFC 3339 date and time at which this resource will be\n     deleted. This field is set by the server when a graceful deletion is\n     requested by the user, and is not directly settable by a client. The\n     resource is expected to be deleted (no longer visible from resource lists,\n     and not reachable by name) after the time in this field, once the\n     finalizers list is empty. As long as the finalizers list contains items,\n     deletion is blocked. Once the deletionTimestamp is set, this value may not\n     be unset or be set further into the future, although it may be shortened or\n     the resource may be deleted prior to this time. For example, a user may\n     request that a pod is deleted in 30 seconds. The Kubelet will react by\n     sending a graceful termination signal to the containers in the pod. After\n     that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL)\n     to the container and after cleanup, remove the pod from the API. In the\n     presence of network partitions, this object may still exist after this\n     timestamp, until an administrator or automated process can determine the\n     resource is fully terminated. If not set, graceful deletion of the object\n     has not been requested.\n\n     Populated by the system when a graceful deletion is requested. Read-only.\n     More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   finalizers\t<[]string>\n     Must be empty before the object is deleted from the registry. Each entry is\n     an identifier for the responsible component that will remove the entry from\n     the list. If the deletionTimestamp of the object is non-nil, entries in\n     this list can only be removed. Finalizers may be processed and removed in\n     any order. Order is NOT enforced because it introduces significant risk of\n     stuck finalizers. finalizers is a shared field, any actor with permission\n     can reorder it. If the finalizer list is processed in order, then this can\n     lead to a situation in which the component responsible for the first\n     finalizer in the list is waiting for a signal (field value, external\n     system, or other) produced by a component responsible for a finalizer later\n     in the list, resulting in a deadlock. Without enforced ordering finalizers\n     are free to order amongst themselves and are not vulnerable to ordering\n     changes in the list.\n\n   generateName\t<string>\n     GenerateName is an optional prefix, used by the server, to generate a\n     unique name ONLY IF the Name field has not been provided. If this field is\n     used, the name returned to the client will be different than the name\n     passed. This value will also be combined with a unique suffix. The provided\n     value has the same validation rules as the Name field, and may be truncated\n     by the length of the suffix required to make the value unique on the\n     server.\n\n     If this field is specified and the generated name exists, the server will\n     return a 409.\n\n     Applied only if Name is not specified. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n   generation\t<integer>\n     A sequence number representing a specific generation of the desired state.\n     Populated by the system. Read-only.\n\n   labels\t<map[string]string>\n     Map of string keys and values that can be used to organize and categorize\n     (scope and select) objects. May match selectors of replication controllers\n     and services. More info: http://kubernetes.io/docs/user-guide/labels\n\n   managedFields\t<[]Object>\n     ManagedFields maps workflow-id and version to the set of fields that are\n     managed by that workflow. This is mostly for internal housekeeping, and\n     users typically shouldn't need to set or understand this field. A workflow\n     can be the user's name, a controller's name, or the name of a specific\n     apply path like \"ci-cd\". The set of fields is always in the version that\n     the workflow used when modifying the object.\n\n   name\t<string>\n     Name must be unique within a namespace. Is required when creating\n     resources, although some resources may allow a client to request the\n     generation of an appropriate name automatically. Name is primarily intended\n     for creation idempotence and configuration definition. Cannot be updated.\n     More info: http://kubernetes.io/docs/user-guide/identifiers#names\n\n   namespace\t<string>\n     Namespace defines the space within which each name must be unique. An empty\n     namespace is equivalent to the \"default\" namespace, but \"default\" is the\n     canonical representation. Not all objects are required to be scoped to a\n     namespace - the value of this field for those objects will be empty.\n\n     Must be a DNS_LABEL. Cannot be updated. More info:\n     http://kubernetes.io/docs/user-guide/namespaces\n\n   ownerReferences\t<[]Object>\n     List of objects depended by this object. If ALL objects in the list have\n     been deleted, this object will be garbage collected. If this object is\n     managed by a controller, then an entry in this list will point to this\n     controller, with the controller field set to true. There cannot be more\n     than one managing controller.\n\n   resourceVersion\t<string>\n     An opaque value that represents the internal version of this object that\n     can be used by clients to determine when objects have changed. May be used\n     for optimistic concurrency, change detection, and the watch operation on a\n     resource or set of resources. Clients must treat these values as opaque and\n     passed unmodified back to the server. They may only be valid for a\n     particular resource or set of resources.\n\n     Populated by the system. Read-only. Value must be treated as opaque by\n     clients and . More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n   selfLink\t<string>\n     Deprecated: selfLink is a legacy read-only field that is no longer\n     populated by the system.\n\n   uid\t<string>\n     UID is the unique in time and space value for this object. It is typically\n     generated by the server on successful creation of a resource and is not\n     allowed to change on PUT operations.\n\n     Populated by the system. Read-only. More info:\n     http://kubernetes.io/docs/user-guide/identifiers#uids\n\n"
Jul 30 12:13:11.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 explain e2e-test-crd-publish-openapi-1585-crds.spec'
Jul 30 12:13:11.236: INFO: stderr: ""
Jul 30 12:13:11.237: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1585-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: spec <Object>\n\nDESCRIPTION:\n     Specification of Foo\n\nFIELDS:\n   bars\t<[]Object>\n     List of Bars and their specs.\n\n"
Jul 30 12:13:11.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 explain e2e-test-crd-publish-openapi-1585-crds.spec.bars'
Jul 30 12:13:11.339: INFO: stderr: ""
Jul 30 12:13:11.339: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-1585-crd\nVERSION:  crd-publish-openapi-test-foo.example.com/v1\n\nRESOURCE: bars <[]Object>\n\nDESCRIPTION:\n     List of Bars and their specs.\n\nFIELDS:\n   age\t<string>\n     Age of Bar.\n\n   bazs\t<[]string>\n     List of Bazs.\n\n   feeling\t<string>\n     Whether Bar is feeling great.\n\n   name\t<string> -required-\n     Name of Bar.\n\n"
STEP: kubectl explain works to return error when explain is called on property that doesn't exist
Jul 30 12:13:11.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2716 explain e2e-test-crd-publish-openapi-1585-crds.spec.bars2'
Jul 30 12:13:11.438: INFO: rc: 1
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:13:13.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2716" for this suite.

• [SLOW TEST:6.651 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD with validation schema [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]","total":356,"completed":68,"skipped":1310,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:13:13.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-2409
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul 30 12:13:13.525: INFO: Waiting up to 5m0s for pod "downward-api-420b1358-2469-430a-ad38-2a389d622256" in namespace "downward-api-2409" to be "Succeeded or Failed"
Jul 30 12:13:13.528: INFO: Pod "downward-api-420b1358-2469-430a-ad38-2a389d622256": Phase="Pending", Reason="", readiness=false. Elapsed: 3.553441ms
Jul 30 12:13:15.536: INFO: Pod "downward-api-420b1358-2469-430a-ad38-2a389d622256": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011368292s
Jul 30 12:13:17.541: INFO: Pod "downward-api-420b1358-2469-430a-ad38-2a389d622256": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016817207s
STEP: Saw pod success
Jul 30 12:13:17.542: INFO: Pod "downward-api-420b1358-2469-430a-ad38-2a389d622256" satisfied condition "Succeeded or Failed"
Jul 30 12:13:17.545: INFO: Trying to get logs from node ip-172-31-74-61 pod downward-api-420b1358-2469-430a-ad38-2a389d622256 container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:13:17.566: INFO: Waiting for pod downward-api-420b1358-2469-430a-ad38-2a389d622256 to disappear
Jul 30 12:13:17.569: INFO: Pod downward-api-420b1358-2469-430a-ad38-2a389d622256 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul 30 12:13:17.569: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-2409" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]","total":356,"completed":69,"skipped":1325,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:13:17.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-1462
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for the rc to be deleted
STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods
STEP: Gathering metrics
Jul 30 12:13:57.760: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0730 12:13:57.760569      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jul 30 12:13:57.760: INFO: Deleting pod "simpletest.rc-2jh4g" in namespace "gc-1462"
Jul 30 12:13:57.771: INFO: Deleting pod "simpletest.rc-2pkzj" in namespace "gc-1462"
Jul 30 12:13:57.784: INFO: Deleting pod "simpletest.rc-2wdwm" in namespace "gc-1462"
Jul 30 12:13:57.796: INFO: Deleting pod "simpletest.rc-2zfqz" in namespace "gc-1462"
Jul 30 12:13:57.810: INFO: Deleting pod "simpletest.rc-4d7lh" in namespace "gc-1462"
Jul 30 12:13:57.819: INFO: Deleting pod "simpletest.rc-4hn85" in namespace "gc-1462"
Jul 30 12:13:57.831: INFO: Deleting pod "simpletest.rc-4ksd9" in namespace "gc-1462"
Jul 30 12:13:57.845: INFO: Deleting pod "simpletest.rc-5d4xs" in namespace "gc-1462"
Jul 30 12:13:57.857: INFO: Deleting pod "simpletest.rc-5dmpl" in namespace "gc-1462"
Jul 30 12:13:57.869: INFO: Deleting pod "simpletest.rc-5xhn7" in namespace "gc-1462"
Jul 30 12:13:57.880: INFO: Deleting pod "simpletest.rc-669f7" in namespace "gc-1462"
Jul 30 12:13:57.891: INFO: Deleting pod "simpletest.rc-6ftdb" in namespace "gc-1462"
Jul 30 12:13:57.902: INFO: Deleting pod "simpletest.rc-6rnpq" in namespace "gc-1462"
Jul 30 12:13:57.913: INFO: Deleting pod "simpletest.rc-6tdrz" in namespace "gc-1462"
Jul 30 12:13:57.923: INFO: Deleting pod "simpletest.rc-72bbf" in namespace "gc-1462"
Jul 30 12:13:57.936: INFO: Deleting pod "simpletest.rc-74rq5" in namespace "gc-1462"
Jul 30 12:13:57.949: INFO: Deleting pod "simpletest.rc-7xcr7" in namespace "gc-1462"
Jul 30 12:13:57.959: INFO: Deleting pod "simpletest.rc-7xlpt" in namespace "gc-1462"
Jul 30 12:13:57.972: INFO: Deleting pod "simpletest.rc-82ml5" in namespace "gc-1462"
Jul 30 12:13:57.984: INFO: Deleting pod "simpletest.rc-8t8h4" in namespace "gc-1462"
Jul 30 12:13:57.999: INFO: Deleting pod "simpletest.rc-8wl7s" in namespace "gc-1462"
Jul 30 12:13:58.015: INFO: Deleting pod "simpletest.rc-8z56m" in namespace "gc-1462"
Jul 30 12:13:58.026: INFO: Deleting pod "simpletest.rc-9bq6r" in namespace "gc-1462"
Jul 30 12:13:58.039: INFO: Deleting pod "simpletest.rc-9gb7m" in namespace "gc-1462"
Jul 30 12:13:58.050: INFO: Deleting pod "simpletest.rc-9qtqd" in namespace "gc-1462"
Jul 30 12:13:58.062: INFO: Deleting pod "simpletest.rc-9rwp8" in namespace "gc-1462"
Jul 30 12:13:58.072: INFO: Deleting pod "simpletest.rc-9thvx" in namespace "gc-1462"
Jul 30 12:13:58.085: INFO: Deleting pod "simpletest.rc-9zgn9" in namespace "gc-1462"
Jul 30 12:13:58.099: INFO: Deleting pod "simpletest.rc-bhn6n" in namespace "gc-1462"
Jul 30 12:13:58.115: INFO: Deleting pod "simpletest.rc-bxqcj" in namespace "gc-1462"
Jul 30 12:13:58.126: INFO: Deleting pod "simpletest.rc-bz5m7" in namespace "gc-1462"
Jul 30 12:13:58.136: INFO: Deleting pod "simpletest.rc-c2rhg" in namespace "gc-1462"
Jul 30 12:13:58.147: INFO: Deleting pod "simpletest.rc-ck2cl" in namespace "gc-1462"
Jul 30 12:13:58.159: INFO: Deleting pod "simpletest.rc-dp8dt" in namespace "gc-1462"
Jul 30 12:13:58.173: INFO: Deleting pod "simpletest.rc-fc65t" in namespace "gc-1462"
Jul 30 12:13:58.191: INFO: Deleting pod "simpletest.rc-fdlnp" in namespace "gc-1462"
Jul 30 12:13:58.205: INFO: Deleting pod "simpletest.rc-fg22c" in namespace "gc-1462"
Jul 30 12:13:58.216: INFO: Deleting pod "simpletest.rc-ftt99" in namespace "gc-1462"
Jul 30 12:13:58.226: INFO: Deleting pod "simpletest.rc-g8dl5" in namespace "gc-1462"
Jul 30 12:13:58.242: INFO: Deleting pod "simpletest.rc-gs96g" in namespace "gc-1462"
Jul 30 12:13:58.254: INFO: Deleting pod "simpletest.rc-gvv4w" in namespace "gc-1462"
Jul 30 12:13:58.267: INFO: Deleting pod "simpletest.rc-h5lgk" in namespace "gc-1462"
Jul 30 12:13:58.279: INFO: Deleting pod "simpletest.rc-h5vxk" in namespace "gc-1462"
Jul 30 12:13:58.291: INFO: Deleting pod "simpletest.rc-hghns" in namespace "gc-1462"
Jul 30 12:13:58.305: INFO: Deleting pod "simpletest.rc-hlclq" in namespace "gc-1462"
Jul 30 12:13:58.317: INFO: Deleting pod "simpletest.rc-j5nn5" in namespace "gc-1462"
Jul 30 12:13:58.327: INFO: Deleting pod "simpletest.rc-jn4vh" in namespace "gc-1462"
Jul 30 12:13:58.337: INFO: Deleting pod "simpletest.rc-jq9dw" in namespace "gc-1462"
Jul 30 12:13:58.348: INFO: Deleting pod "simpletest.rc-jsz99" in namespace "gc-1462"
Jul 30 12:13:58.361: INFO: Deleting pod "simpletest.rc-k85jg" in namespace "gc-1462"
Jul 30 12:13:58.374: INFO: Deleting pod "simpletest.rc-ksbqr" in namespace "gc-1462"
Jul 30 12:13:58.383: INFO: Deleting pod "simpletest.rc-kvm2n" in namespace "gc-1462"
Jul 30 12:13:58.395: INFO: Deleting pod "simpletest.rc-lk48j" in namespace "gc-1462"
Jul 30 12:13:58.407: INFO: Deleting pod "simpletest.rc-lws2r" in namespace "gc-1462"
Jul 30 12:13:58.423: INFO: Deleting pod "simpletest.rc-lznz6" in namespace "gc-1462"
Jul 30 12:13:58.436: INFO: Deleting pod "simpletest.rc-m7h2w" in namespace "gc-1462"
Jul 30 12:13:58.451: INFO: Deleting pod "simpletest.rc-m9wl2" in namespace "gc-1462"
Jul 30 12:13:58.464: INFO: Deleting pod "simpletest.rc-mpwkp" in namespace "gc-1462"
Jul 30 12:13:58.480: INFO: Deleting pod "simpletest.rc-mqcsj" in namespace "gc-1462"
Jul 30 12:13:58.493: INFO: Deleting pod "simpletest.rc-mzr4t" in namespace "gc-1462"
Jul 30 12:13:58.506: INFO: Deleting pod "simpletest.rc-n7rkk" in namespace "gc-1462"
Jul 30 12:13:58.517: INFO: Deleting pod "simpletest.rc-n9kbt" in namespace "gc-1462"
Jul 30 12:13:58.527: INFO: Deleting pod "simpletest.rc-nczpk" in namespace "gc-1462"
Jul 30 12:13:58.536: INFO: Deleting pod "simpletest.rc-nxqxq" in namespace "gc-1462"
Jul 30 12:13:58.553: INFO: Deleting pod "simpletest.rc-prwrj" in namespace "gc-1462"
Jul 30 12:13:58.608: INFO: Deleting pod "simpletest.rc-q4bkk" in namespace "gc-1462"
Jul 30 12:13:58.654: INFO: Deleting pod "simpletest.rc-qg9fv" in namespace "gc-1462"
Jul 30 12:13:58.704: INFO: Deleting pod "simpletest.rc-qs9fn" in namespace "gc-1462"
Jul 30 12:13:58.756: INFO: Deleting pod "simpletest.rc-r4qgh" in namespace "gc-1462"
Jul 30 12:13:58.804: INFO: Deleting pod "simpletest.rc-rdwlx" in namespace "gc-1462"
Jul 30 12:13:58.855: INFO: Deleting pod "simpletest.rc-rl8sq" in namespace "gc-1462"
Jul 30 12:13:58.908: INFO: Deleting pod "simpletest.rc-rnz2v" in namespace "gc-1462"
Jul 30 12:13:58.959: INFO: Deleting pod "simpletest.rc-rthns" in namespace "gc-1462"
Jul 30 12:13:59.004: INFO: Deleting pod "simpletest.rc-rzm8w" in namespace "gc-1462"
Jul 30 12:13:59.058: INFO: Deleting pod "simpletest.rc-s5bhk" in namespace "gc-1462"
Jul 30 12:13:59.106: INFO: Deleting pod "simpletest.rc-sg5nb" in namespace "gc-1462"
Jul 30 12:13:59.156: INFO: Deleting pod "simpletest.rc-sghdv" in namespace "gc-1462"
Jul 30 12:13:59.206: INFO: Deleting pod "simpletest.rc-skg9v" in namespace "gc-1462"
Jul 30 12:13:59.262: INFO: Deleting pod "simpletest.rc-snhwq" in namespace "gc-1462"
Jul 30 12:13:59.310: INFO: Deleting pod "simpletest.rc-sp5wj" in namespace "gc-1462"
Jul 30 12:13:59.428: INFO: Deleting pod "simpletest.rc-t4wlc" in namespace "gc-1462"
Jul 30 12:13:59.443: INFO: Deleting pod "simpletest.rc-tbvqm" in namespace "gc-1462"
Jul 30 12:13:59.460: INFO: Deleting pod "simpletest.rc-tch2f" in namespace "gc-1462"
Jul 30 12:13:59.515: INFO: Deleting pod "simpletest.rc-vgrv8" in namespace "gc-1462"
Jul 30 12:13:59.554: INFO: Deleting pod "simpletest.rc-vnfdx" in namespace "gc-1462"
Jul 30 12:13:59.612: INFO: Deleting pod "simpletest.rc-vqkk2" in namespace "gc-1462"
Jul 30 12:13:59.671: INFO: Deleting pod "simpletest.rc-vv5lw" in namespace "gc-1462"
Jul 30 12:13:59.707: INFO: Deleting pod "simpletest.rc-vwtbm" in namespace "gc-1462"
Jul 30 12:13:59.760: INFO: Deleting pod "simpletest.rc-vz6jt" in namespace "gc-1462"
Jul 30 12:13:59.817: INFO: Deleting pod "simpletest.rc-w49gp" in namespace "gc-1462"
Jul 30 12:13:59.872: INFO: Deleting pod "simpletest.rc-w7t52" in namespace "gc-1462"
Jul 30 12:13:59.912: INFO: Deleting pod "simpletest.rc-w8xtb" in namespace "gc-1462"
Jul 30 12:13:59.956: INFO: Deleting pod "simpletest.rc-wt68x" in namespace "gc-1462"
Jul 30 12:14:00.006: INFO: Deleting pod "simpletest.rc-x2qpq" in namespace "gc-1462"
Jul 30 12:14:00.058: INFO: Deleting pod "simpletest.rc-x2zb8" in namespace "gc-1462"
Jul 30 12:14:00.113: INFO: Deleting pod "simpletest.rc-xhzln" in namespace "gc-1462"
Jul 30 12:14:00.160: INFO: Deleting pod "simpletest.rc-xj49h" in namespace "gc-1462"
Jul 30 12:14:00.212: INFO: Deleting pod "simpletest.rc-xkxfc" in namespace "gc-1462"
Jul 30 12:14:00.258: INFO: Deleting pod "simpletest.rc-z4kmw" in namespace "gc-1462"
Jul 30 12:14:00.312: INFO: Deleting pod "simpletest.rc-zbmsl" in namespace "gc-1462"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul 30 12:14:00.356: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-1462" for this suite.

• [SLOW TEST:42.869 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should orphan pods created by rc if delete options say so [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]","total":356,"completed":70,"skipped":1329,"failed":0}
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:14:00.452: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-1196
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul 30 12:14:00.606: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:14:02.612: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:14:04.612: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:14:06.612: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:14:08.613: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:14:10.614: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul 30 12:14:10.629: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:14:12.634: INFO: The status of Pod pod-with-poststart-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:14:14.636: INFO: The status of Pod pod-with-poststart-http-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jul 30 12:14:14.675: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jul 30 12:14:14.678: INFO: Pod pod-with-poststart-http-hook still exists
Jul 30 12:14:16.679: INFO: Waiting for pod pod-with-poststart-http-hook to disappear
Jul 30 12:14:16.685: INFO: Pod pod-with-poststart-http-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul 30 12:14:16.685: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-1196" for this suite.

• [SLOW TEST:16.243 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]","total":356,"completed":71,"skipped":1331,"failed":0}
S
------------------------------
[sig-network] Services 
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:14:16.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7099
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service nodeport-service with the type=NodePort in namespace services-7099
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-7099
STEP: creating replication controller externalsvc in namespace services-7099
I0730 12:14:16.851799      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-7099, replica count: 2
I0730 12:14:19.902886      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the NodePort service to type=ExternalName
Jul 30 12:14:19.927: INFO: Creating new exec pod
Jul 30 12:14:21.939: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7099 exec execpodkxgcb -- /bin/sh -x -c nslookup nodeport-service.services-7099.svc.cluster.local'
Jul 30 12:14:22.149: INFO: stderr: "+ nslookup nodeport-service.services-7099.svc.cluster.local\n"
Jul 30 12:14:22.149: INFO: stdout: "Server:\t\t10.152.183.58\nAddress:\t10.152.183.58#53\n\nnodeport-service.services-7099.svc.cluster.local\tcanonical name = externalsvc.services-7099.svc.cluster.local.\nName:\texternalsvc.services-7099.svc.cluster.local\nAddress: 10.152.183.161\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-7099, will wait for the garbage collector to delete the pods
Jul 30 12:14:22.212: INFO: Deleting ReplicationController externalsvc took: 6.850134ms
Jul 30 12:14:22.312: INFO: Terminating ReplicationController externalsvc pods took: 100.458322ms
Jul 30 12:14:24.134: INFO: Cleaning up the NodePort to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:14:24.145: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7099" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.462 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from NodePort to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]","total":356,"completed":72,"skipped":1332,"failed":0}
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:14:24.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-1963
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:14:24.293: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4" in namespace "projected-1963" to be "Succeeded or Failed"
Jul 30 12:14:24.296: INFO: Pod "downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.624177ms
Jul 30 12:14:26.302: INFO: Pod "downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009068719s
Jul 30 12:14:28.307: INFO: Pod "downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014088571s
STEP: Saw pod success
Jul 30 12:14:28.307: INFO: Pod "downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4" satisfied condition "Succeeded or Failed"
Jul 30 12:14:28.310: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4 container client-container: <nil>
STEP: delete the pod
Jul 30 12:14:28.333: INFO: Waiting for pod downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4 to disappear
Jul 30 12:14:28.336: INFO: Pod downwardapi-volume-4102eed1-121f-4dfe-96e9-1789f69a97b4 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 12:14:28.336: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-1963" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":73,"skipped":1339,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:14:28.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8369
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-bbbf45ac-bbc5-49f0-b8da-163436b30328
STEP: Creating a pod to test consume configMaps
Jul 30 12:14:28.486: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0" in namespace "projected-8369" to be "Succeeded or Failed"
Jul 30 12:14:28.489: INFO: Pod "pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.290139ms
Jul 30 12:14:30.496: INFO: Pod "pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010808255s
Jul 30 12:14:32.504: INFO: Pod "pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018351306s
STEP: Saw pod success
Jul 30 12:14:32.504: INFO: Pod "pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0" satisfied condition "Succeeded or Failed"
Jul 30 12:14:32.507: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:14:32.529: INFO: Waiting for pod pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0 to disappear
Jul 30 12:14:32.531: INFO: Pod pod-projected-configmaps-57948cd9-3f32-47e7-a8ed-cff33498f5e0 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 12:14:32.531: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8369" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]","total":356,"completed":74,"skipped":1344,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints 
  verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:14:32.542: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1125
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul 30 12:14:32.680: INFO: Waiting up to 1m0s for all nodes to be ready
Jul 30 12:15:32.701: INFO: Waiting for terminating namespaces to be deleted...
[BeforeEach] PriorityClass endpoints
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:15:32.705: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-preemption-path
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-path-1306
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:690
[It] verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:15:32.843: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: Value: Forbidden: may not be changed in an update.
Jul 30 12:15:32.847: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: Value: Forbidden: may not be changed in an update.
[AfterEach] PriorityClass endpoints
  test/e2e/framework/framework.go:188
Jul 30 12:15:32.863: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-path-1306" for this suite.
[AfterEach] PriorityClass endpoints
  test/e2e/scheduling/preemption.go:706
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:15:32.884: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1125" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:60.386 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  PriorityClass endpoints
  test/e2e/scheduling/preemption.go:683
    verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]","total":356,"completed":75,"skipped":1402,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:15:32.929: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-8347
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should mount an API token into pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: reading a file in the container
Jul 30 12:15:35.073: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8347 pod-service-account-7b6f75ab-a05f-46d0-bfb9-be9070360f98 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
STEP: reading a file in the container
Jul 30 12:15:35.193: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8347 pod-service-account-7b6f75ab-a05f-46d0-bfb9-be9070360f98 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
STEP: reading a file in the container
Jul 30 12:15:35.318: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8347 pod-service-account-7b6f75ab-a05f-46d0-bfb9-be9070360f98 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
Jul 30 12:15:35.456: INFO: Got root ca configmap in namespace "svcaccounts-8347"
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul 30 12:15:35.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-8347" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]","total":356,"completed":76,"skipped":1416,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:15:35.467: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-9215
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service nodeport-test with type=NodePort in namespace services-9215
STEP: creating replication controller nodeport-test in namespace services-9215
I0730 12:15:35.617358      23 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-9215, replica count: 2
Jul 30 12:15:38.668: INFO: Creating new exec pod
I0730 12:15:38.668269      23 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 12:15:41.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-9215 exec execpod7xxbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
Jul 30 12:15:41.796: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
Jul 30 12:15:41.796: INFO: stdout: "nodeport-test-5lmwt"
Jul 30 12:15:41.796: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-9215 exec execpod7xxbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.147 80'
Jul 30 12:15:41.898: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.147 80\nConnection to 10.152.183.147 80 port [tcp/http] succeeded!\n"
Jul 30 12:15:41.898: INFO: stdout: "nodeport-test-5lmwt"
Jul 30 12:15:41.898: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-9215 exec execpod7xxbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.47.213 32648'
Jul 30 12:15:41.995: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.47.213 32648\nConnection to 172.31.47.213 32648 port [tcp/*] succeeded!\n"
Jul 30 12:15:41.995: INFO: stdout: "nodeport-test-98nsl"
Jul 30 12:15:41.995: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-9215 exec execpod7xxbx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.61 32648'
Jul 30 12:15:42.080: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.74.61 32648\nConnection to 172.31.74.61 32648 port [tcp/*] succeeded!\n"
Jul 30 12:15:42.080: INFO: stdout: "nodeport-test-5lmwt"
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:15:42.080: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-9215" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:6.629 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to create a functioning NodePort service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to create a functioning NodePort service [Conformance]","total":356,"completed":77,"skipped":1432,"failed":0}
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:15:42.096: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-1943
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-caa5a6ba-ceed-490c-9cb5-872ba5caec9b
STEP: Creating a pod to test consume configMaps
Jul 30 12:15:42.236: INFO: Waiting up to 5m0s for pod "pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb" in namespace "configmap-1943" to be "Succeeded or Failed"
Jul 30 12:15:42.242: INFO: Pod "pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb": Phase="Pending", Reason="", readiness=false. Elapsed: 5.399913ms
Jul 30 12:15:44.250: INFO: Pod "pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013621234s
Jul 30 12:15:46.257: INFO: Pod "pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020403045s
STEP: Saw pod success
Jul 30 12:15:46.257: INFO: Pod "pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb" satisfied condition "Succeeded or Failed"
Jul 30 12:15:46.261: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:15:46.283: INFO: Waiting for pod pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb to disappear
Jul 30 12:15:46.287: INFO: Pod pod-configmaps-9a754437-85b6-469d-a7db-f2487656cbdb no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:15:46.287: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-1943" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":78,"skipped":1432,"failed":0}

------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:15:46.298: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5058
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 12:15:53.448: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5058" for this suite.

• [SLOW TEST:7.163 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]","total":356,"completed":79,"skipped":1432,"failed":0}
SSSSSS
------------------------------
[sig-node] Secrets 
  should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:15:53.462: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-6386
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-11cc5a58-6c94-4ee7-b1d7-c2c08599f7bb
STEP: Creating a pod to test consume secrets
Jul 30 12:15:53.607: INFO: Waiting up to 5m0s for pod "pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499" in namespace "secrets-6386" to be "Succeeded or Failed"
Jul 30 12:15:53.610: INFO: Pod "pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499": Phase="Pending", Reason="", readiness=false. Elapsed: 3.419835ms
Jul 30 12:15:55.617: INFO: Pod "pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01052367s
Jul 30 12:15:57.623: INFO: Pod "pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016074692s
STEP: Saw pod success
Jul 30 12:15:57.623: INFO: Pod "pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499" satisfied condition "Succeeded or Failed"
Jul 30 12:15:57.626: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499 container secret-env-test: <nil>
STEP: delete the pod
Jul 30 12:15:57.649: INFO: Waiting for pod pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499 to disappear
Jul 30 12:15:57.652: INFO: Pod pod-secrets-144dde74-9cd5-4822-a676-e47b8ed5d499 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:15:57.652: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-6386" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]","total":356,"completed":80,"skipped":1438,"failed":0}

------------------------------
[sig-apps] Deployment 
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:15:57.661: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9201
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:15:57.784: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
Jul 30 12:15:57.794: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul 30 12:16:02.799: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jul 30 12:16:02.799: INFO: Creating deployment "test-rolling-update-deployment"
Jul 30 12:16:02.802: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
Jul 30 12:16:02.809: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
Jul 30 12:16:04.818: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
Jul 30 12:16:04.822: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 12:16:04.831: INFO: Deployment "test-rolling-update-deployment":
&Deployment{ObjectMeta:{test-rolling-update-deployment  deployment-9201  6795da4c-c0d9-4488-8c76-28eec179917b 14796 1 2022-07-30 12:16:02 +0000 UTC <nil> <nil> map[name:sample-pod] map[deployment.kubernetes.io/revision:3546343826724305833] [] []  [{e2e.test Update apps/v1 2022-07-30 12:16:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:16:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0034f2aa8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-07-30 12:16:02 +0000 UTC,LastTransitionTime:2022-07-30 12:16:02 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rolling-update-deployment-67c8f74c6c" has successfully progressed.,LastUpdateTime:2022-07-30 12:16:04 +0000 UTC,LastTransitionTime:2022-07-30 12:16:02 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul 30 12:16:04.834: INFO: New ReplicaSet "test-rolling-update-deployment-67c8f74c6c" of Deployment "test-rolling-update-deployment":
&ReplicaSet{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c  deployment-9201  c2c3b0c5-ffc7-4c00-b3b6-59a0fa1bd445 14786 1 2022-07-30 12:16:02 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305833] [{apps/v1 Deployment test-rolling-update-deployment 6795da4c-c0d9-4488-8c76-28eec179917b 0xc0034f2f67 0xc0034f2f68}] []  [{kube-controller-manager Update apps/v1 2022-07-30 12:16:02 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6795da4c-c0d9-4488-8c76-28eec179917b\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:16:04 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod-template-hash: 67c8f74c6c,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc0034f3018 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul 30 12:16:04.834: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
Jul 30 12:16:04.834: INFO: &ReplicaSet{ObjectMeta:{test-rolling-update-controller  deployment-9201  ee639913-926a-47ec-a440-e4925a23a0b8 14795 2 2022-07-30 12:15:57 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:3546343826724305832] [{apps/v1 Deployment test-rolling-update-deployment 6795da4c-c0d9-4488-8c76-28eec179917b 0xc0034f2e37 0xc0034f2e38}] []  [{e2e.test Update apps/v1 2022-07-30 12:15:57 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:16:04 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"6795da4c-c0d9-4488-8c76-28eec179917b\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:16:04 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0034f2ef8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul 30 12:16:04.837: INFO: Pod "test-rolling-update-deployment-67c8f74c6c-w2qlm" is available:
&Pod{ObjectMeta:{test-rolling-update-deployment-67c8f74c6c-w2qlm test-rolling-update-deployment-67c8f74c6c- deployment-9201  5f7ed960-6b19-4a51-b824-0e4698fed277 14785 0 2022-07-30 12:16:02 +0000 UTC <nil> <nil> map[name:sample-pod pod-template-hash:67c8f74c6c] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rolling-update-deployment-67c8f74c6c c2c3b0c5-ffc7-4c00-b3b6-59a0fa1bd445 0xc0034f37c7 0xc0034f37c8}] []  [{kube-controller-manager Update v1 2022-07-30 12:16:02 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c2c3b0c5-ffc7-4c00-b3b6-59a0fa1bd445\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:16:04 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.72\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-89zqc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-89zqc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:16:02 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:16:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:16:04 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:16:02 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.72,StartTime:2022-07-30 12:16:02 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:16:03 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://6f8fe915b764a27eca151c4fe3c4c5ee1cb1f8b8ed7ee612607e4fefc765c69e,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.72,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 12:16:04.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9201" for this suite.

• [SLOW TEST:7.187 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  RollingUpdateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":81,"skipped":1438,"failed":0}
SSS
------------------------------
[sig-storage] ConfigMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:16:04.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4264
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-ee3bb5ac-8f4f-474d-8d81-0cbe7c5ba3b4
STEP: Creating the pod
Jul 30 12:16:04.990: INFO: The status of Pod pod-configmaps-fcad23fa-9427-4ae8-9fea-3aa2a4c7fac1 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:16:06.997: INFO: The status of Pod pod-configmaps-fcad23fa-9427-4ae8-9fea-3aa2a4c7fac1 is Running (Ready = true)
STEP: Updating configmap configmap-test-upd-ee3bb5ac-8f4f-474d-8d81-0cbe7c5ba3b4
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:16:09.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4264" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":82,"skipped":1441,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] server version 
  should find the server version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:16:09.038: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename server-version
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in server-version-4555
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should find the server version [Conformance]
  test/e2e/framework/framework.go:652
STEP: Request ServerVersion
STEP: Confirm major version
Jul 30 12:16:09.161: INFO: Major version: 1
STEP: Confirm minor version
Jul 30 12:16:09.161: INFO: cleanMinorVersion: 24
Jul 30 12:16:09.161: INFO: Minor version: 24
[AfterEach] [sig-api-machinery] server version
  test/e2e/framework/framework.go:188
Jul 30 12:16:09.161: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "server-version-4555" for this suite.
•{"msg":"PASSED [sig-api-machinery] server version should find the server version [Conformance]","total":356,"completed":83,"skipped":1447,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:16:09.172: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-9538
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:16:09.313: INFO: Creating daemon "daemon-set" with a node selector
STEP: Initially, daemon pods should not be running on any nodes.
Jul 30 12:16:09.320: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:16:09.320: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Change node label to blue, check that daemon pod is launched.
Jul 30 12:16:09.337: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:16:09.337: INFO: Node ip-172-31-74-61 is running 0 daemon pod, expected 1
Jul 30 12:16:10.340: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul 30 12:16:10.340: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
STEP: Update the node label to green, and wait for daemons to be unscheduled
Jul 30 12:16:10.356: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul 30 12:16:10.356: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
Jul 30 12:16:11.361: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:16:11.361: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate
Jul 30 12:16:11.372: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:16:11.372: INFO: Node ip-172-31-74-61 is running 0 daemon pod, expected 1
Jul 30 12:16:12.378: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:16:12.378: INFO: Node ip-172-31-74-61 is running 0 daemon pod, expected 1
Jul 30 12:16:13.377: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:16:13.377: INFO: Node ip-172-31-74-61 is running 0 daemon pod, expected 1
Jul 30 12:16:14.380: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul 30 12:16:14.380: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9538, will wait for the garbage collector to delete the pods
Jul 30 12:16:14.445: INFO: Deleting DaemonSet.extensions daemon-set took: 6.272752ms
Jul 30 12:16:14.546: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.312869ms
Jul 30 12:16:17.153: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:16:17.153: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul 30 12:16:17.156: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"14971"},"items":null}

Jul 30 12:16:17.159: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"14971"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:16:17.179: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-9538" for this suite.

• [SLOW TEST:8.019 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop complex daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]","total":356,"completed":84,"skipped":1485,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts 
  should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:16:17.191: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in e2e-kubelet-etc-hosts-6724
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Setting up the test
STEP: Creating hostNetwork=false pod
Jul 30 12:16:17.331: INFO: The status of Pod test-pod is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:16:19.336: INFO: The status of Pod test-pod is Running (Ready = true)
STEP: Creating hostNetwork=true pod
Jul 30 12:16:19.347: INFO: The status of Pod test-host-network-pod is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:16:21.365: INFO: The status of Pod test-host-network-pod is Running (Ready = true)
STEP: Running the test
STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false
Jul 30 12:16:21.369: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.369: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.369: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul 30 12:16:21.456: INFO: Exec stderr: ""
Jul 30 12:16:21.456: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.456: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.456: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul 30 12:16:21.559: INFO: Exec stderr: ""
Jul 30 12:16:21.559: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.559: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.560: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.560: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul 30 12:16:21.640: INFO: Exec stderr: ""
Jul 30 12:16:21.640: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.641: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.641: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul 30 12:16:21.691: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount
Jul 30 12:16:21.691: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.691: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.692: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.692: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jul 30 12:16:21.764: INFO: Exec stderr: ""
Jul 30 12:16:21.764: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.764: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.764: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.764: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
Jul 30 12:16:21.802: INFO: Exec stderr: ""
STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true
Jul 30 12:16:21.802: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.802: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.802: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul 30 12:16:21.878: INFO: Exec stderr: ""
Jul 30 12:16:21.878: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.878: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.879: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.879: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
Jul 30 12:16:21.925: INFO: Exec stderr: ""
Jul 30 12:16:21.925: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.925: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.925: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.925: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul 30 12:16:21.974: INFO: Exec stderr: ""
Jul 30 12:16:21.974: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-6724 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:16:21.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:16:21.975: INFO: ExecWithOptions: Clientset creation
Jul 30 12:16:21.975: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-6724/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
Jul 30 12:16:22.023: INFO: Exec stderr: ""
[AfterEach] [sig-node] KubeletManagedEtcHosts
  test/e2e/framework/framework.go:188
Jul 30 12:16:22.023: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "e2e-kubelet-etc-hosts-6724" for this suite.
•{"msg":"PASSED [sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":85,"skipped":1502,"failed":0}
SSSSS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:16:22.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-2859
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod test-webserver-9f7a0c46-3f05-4360-be19-ce0d3b1c28ba in namespace container-probe-2859
Jul 30 12:16:24.224: INFO: Started pod test-webserver-9f7a0c46-3f05-4360-be19-ce0d3b1c28ba in namespace container-probe-2859
STEP: checking the pod's current state and verifying that restartCount is present
Jul 30 12:16:24.230: INFO: Initial restart count of pod test-webserver-9f7a0c46-3f05-4360-be19-ce0d3b1c28ba is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 12:20:25.179: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-2859" for this suite.

• [SLOW TEST:243.155 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":86,"skipped":1507,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:20:25.198: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-3392
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-5911
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Creating a service in the namespace
STEP: Deleting the namespace
STEP: Waiting for the namespace to be removed.
STEP: Recreating the namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nsdeletetest-1710
STEP: Verifying there is no service in the namespace
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:20:31.603: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-3392" for this suite.
STEP: Destroying namespace "nsdeletetest-5911" for this suite.
Jul 30 12:20:31.617: INFO: Namespace nsdeletetest-5911 was already deleted
STEP: Destroying namespace "nsdeletetest-1710" for this suite.

• [SLOW TEST:6.429 seconds]
[sig-api-machinery] Namespaces [Serial]
test/e2e/apimachinery/framework.go:23
  should ensure that all services are removed when a namespace is deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]","total":356,"completed":87,"skipped":1537,"failed":0}
SSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:20:31.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6759
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6759.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6759.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6759.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6759.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6759.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 12:20:39.785: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.789: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.793: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.796: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.801: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.805: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.808: INFO: Unable to read jessie_udp@dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.812: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-6759.svc.cluster.local from pod dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739: the server could not find the requested resource (get pods dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739)
Jul 30 12:20:39.812: INFO: Lookups using dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local wheezy_udp@dns-test-service-2.dns-6759.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6759.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6759.svc.cluster.local jessie_udp@dns-test-service-2.dns-6759.svc.cluster.local jessie_tcp@dns-test-service-2.dns-6759.svc.cluster.local]

Jul 30 12:20:44.844: INFO: DNS probes using dns-6759/dns-test-d4ad0e47-7b68-4281-a7e7-40b455a3f739 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 12:20:44.876: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6759" for this suite.

• [SLOW TEST:13.261 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for pods for Subdomain [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Subdomain [Conformance]","total":356,"completed":88,"skipped":1544,"failed":0}
SS
------------------------------
[sig-network] DNS 
  should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:20:44.888: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-1154
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for pods for Hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1154.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1154.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1154.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1154.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 12:20:47.057: INFO: DNS probes using dns-1154/dns-test-67fed44b-a6e8-4cbd-9788-361c066198c7 succeeded

STEP: deleting the pod
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 12:20:47.087: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-1154" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for pods for Hostname [Conformance]","total":356,"completed":89,"skipped":1546,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:20:47.097: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a Replicaset
STEP: Verify that the required pods have come up.
Jul 30 12:20:47.228: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul 30 12:20:52.240: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Getting /status
Jul 30 12:20:52.244: INFO: Replicaset test-rs has Conditions: []
STEP: updating the Replicaset Status
Jul 30 12:20:52.256: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the ReplicaSet status to be updated
Jul 30 12:20:52.257: INFO: Observed &ReplicaSet event: ADDED
Jul 30 12:20:52.257: INFO: Observed &ReplicaSet event: MODIFIED
Jul 30 12:20:52.257: INFO: Observed &ReplicaSet event: MODIFIED
Jul 30 12:20:52.257: INFO: Observed &ReplicaSet event: MODIFIED
Jul 30 12:20:52.257: INFO: Found replicaset test-rs in namespace replicaset-927 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul 30 12:20:52.257: INFO: Replicaset test-rs has an updated status
STEP: patching the Replicaset Status
Jul 30 12:20:52.257: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jul 30 12:20:52.262: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Replicaset status to be patched
Jul 30 12:20:52.263: INFO: Observed &ReplicaSet event: ADDED
Jul 30 12:20:52.263: INFO: Observed &ReplicaSet event: MODIFIED
Jul 30 12:20:52.263: INFO: Observed &ReplicaSet event: MODIFIED
Jul 30 12:20:52.263: INFO: Observed &ReplicaSet event: MODIFIED
Jul 30 12:20:52.263: INFO: Observed replicaset test-rs in namespace replicaset-927 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul 30 12:20:52.263: INFO: Observed &ReplicaSet event: MODIFIED
Jul 30 12:20:52.263: INFO: Found replicaset test-rs in namespace replicaset-927 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
Jul 30 12:20:52.263: INFO: Replicaset test-rs has a patched status
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul 30 12:20:52.263: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-927" for this suite.

• [SLOW TEST:5.179 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should validate Replicaset Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]","total":356,"completed":90,"skipped":1565,"failed":0}
SSS
------------------------------
[sig-api-machinery] Discovery 
  should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:20:52.276: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename discovery
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in discovery-1402
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Discovery
  test/e2e/apimachinery/discovery.go:43
STEP: Setting up server cert
[It] should validate PreferredVersion for each APIGroup [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:20:52.561: INFO: Checking APIGroup: apiregistration.k8s.io
Jul 30 12:20:52.562: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
Jul 30 12:20:52.562: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
Jul 30 12:20:52.562: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
Jul 30 12:20:52.562: INFO: Checking APIGroup: apps
Jul 30 12:20:52.562: INFO: PreferredVersion.GroupVersion: apps/v1
Jul 30 12:20:52.562: INFO: Versions found [{apps/v1 v1}]
Jul 30 12:20:52.562: INFO: apps/v1 matches apps/v1
Jul 30 12:20:52.562: INFO: Checking APIGroup: events.k8s.io
Jul 30 12:20:52.563: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
Jul 30 12:20:52.563: INFO: Versions found [{events.k8s.io/v1 v1} {events.k8s.io/v1beta1 v1beta1}]
Jul 30 12:20:52.563: INFO: events.k8s.io/v1 matches events.k8s.io/v1
Jul 30 12:20:52.563: INFO: Checking APIGroup: authentication.k8s.io
Jul 30 12:20:52.564: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
Jul 30 12:20:52.564: INFO: Versions found [{authentication.k8s.io/v1 v1}]
Jul 30 12:20:52.564: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
Jul 30 12:20:52.564: INFO: Checking APIGroup: authorization.k8s.io
Jul 30 12:20:52.564: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
Jul 30 12:20:52.564: INFO: Versions found [{authorization.k8s.io/v1 v1}]
Jul 30 12:20:52.564: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
Jul 30 12:20:52.564: INFO: Checking APIGroup: autoscaling
Jul 30 12:20:52.565: INFO: PreferredVersion.GroupVersion: autoscaling/v2
Jul 30 12:20:52.565: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1} {autoscaling/v2beta1 v2beta1} {autoscaling/v2beta2 v2beta2}]
Jul 30 12:20:52.565: INFO: autoscaling/v2 matches autoscaling/v2
Jul 30 12:20:52.565: INFO: Checking APIGroup: batch
Jul 30 12:20:52.565: INFO: PreferredVersion.GroupVersion: batch/v1
Jul 30 12:20:52.565: INFO: Versions found [{batch/v1 v1} {batch/v1beta1 v1beta1}]
Jul 30 12:20:52.565: INFO: batch/v1 matches batch/v1
Jul 30 12:20:52.565: INFO: Checking APIGroup: certificates.k8s.io
Jul 30 12:20:52.566: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
Jul 30 12:20:52.566: INFO: Versions found [{certificates.k8s.io/v1 v1}]
Jul 30 12:20:52.566: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
Jul 30 12:20:52.566: INFO: Checking APIGroup: networking.k8s.io
Jul 30 12:20:52.566: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
Jul 30 12:20:52.566: INFO: Versions found [{networking.k8s.io/v1 v1}]
Jul 30 12:20:52.566: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
Jul 30 12:20:52.566: INFO: Checking APIGroup: policy
Jul 30 12:20:52.567: INFO: PreferredVersion.GroupVersion: policy/v1
Jul 30 12:20:52.567: INFO: Versions found [{policy/v1 v1} {policy/v1beta1 v1beta1}]
Jul 30 12:20:52.567: INFO: policy/v1 matches policy/v1
Jul 30 12:20:52.567: INFO: Checking APIGroup: rbac.authorization.k8s.io
Jul 30 12:20:52.568: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
Jul 30 12:20:52.568: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
Jul 30 12:20:52.568: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
Jul 30 12:20:52.568: INFO: Checking APIGroup: storage.k8s.io
Jul 30 12:20:52.568: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
Jul 30 12:20:52.568: INFO: Versions found [{storage.k8s.io/v1 v1} {storage.k8s.io/v1beta1 v1beta1}]
Jul 30 12:20:52.568: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
Jul 30 12:20:52.568: INFO: Checking APIGroup: admissionregistration.k8s.io
Jul 30 12:20:52.569: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
Jul 30 12:20:52.569: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
Jul 30 12:20:52.569: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
Jul 30 12:20:52.569: INFO: Checking APIGroup: apiextensions.k8s.io
Jul 30 12:20:52.569: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
Jul 30 12:20:52.569: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
Jul 30 12:20:52.569: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
Jul 30 12:20:52.569: INFO: Checking APIGroup: scheduling.k8s.io
Jul 30 12:20:52.570: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
Jul 30 12:20:52.570: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
Jul 30 12:20:52.570: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
Jul 30 12:20:52.570: INFO: Checking APIGroup: coordination.k8s.io
Jul 30 12:20:52.570: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
Jul 30 12:20:52.570: INFO: Versions found [{coordination.k8s.io/v1 v1}]
Jul 30 12:20:52.570: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
Jul 30 12:20:52.570: INFO: Checking APIGroup: node.k8s.io
Jul 30 12:20:52.571: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
Jul 30 12:20:52.571: INFO: Versions found [{node.k8s.io/v1 v1} {node.k8s.io/v1beta1 v1beta1}]
Jul 30 12:20:52.571: INFO: node.k8s.io/v1 matches node.k8s.io/v1
Jul 30 12:20:52.571: INFO: Checking APIGroup: discovery.k8s.io
Jul 30 12:20:52.571: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
Jul 30 12:20:52.571: INFO: Versions found [{discovery.k8s.io/v1 v1} {discovery.k8s.io/v1beta1 v1beta1}]
Jul 30 12:20:52.571: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
Jul 30 12:20:52.571: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
Jul 30 12:20:52.572: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta2
Jul 30 12:20:52.572: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta2 v1beta2} {flowcontrol.apiserver.k8s.io/v1beta1 v1beta1}]
Jul 30 12:20:52.572: INFO: flowcontrol.apiserver.k8s.io/v1beta2 matches flowcontrol.apiserver.k8s.io/v1beta2
Jul 30 12:20:52.572: INFO: Checking APIGroup: metrics.k8s.io
Jul 30 12:20:52.573: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
Jul 30 12:20:52.573: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
Jul 30 12:20:52.573: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
[AfterEach] [sig-api-machinery] Discovery
  test/e2e/framework/framework.go:188
Jul 30 12:20:52.573: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "discovery-1402" for this suite.
•{"msg":"PASSED [sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]","total":356,"completed":91,"skipped":1568,"failed":0}
SSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:20:52.584: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-7507
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:20:52.720: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul 30 12:20:57.744: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: Scaling up "test-rs" replicaset 
Jul 30 12:20:57.756: INFO: Updating replica set "test-rs"
STEP: patching the ReplicaSet
Jul 30 12:20:57.767: INFO: observed ReplicaSet test-rs in namespace replicaset-7507 with ReadyReplicas 1, AvailableReplicas 1
Jul 30 12:20:57.786: INFO: observed ReplicaSet test-rs in namespace replicaset-7507 with ReadyReplicas 1, AvailableReplicas 1
Jul 30 12:20:57.807: INFO: observed ReplicaSet test-rs in namespace replicaset-7507 with ReadyReplicas 1, AvailableReplicas 1
Jul 30 12:20:57.816: INFO: observed ReplicaSet test-rs in namespace replicaset-7507 with ReadyReplicas 1, AvailableReplicas 1
Jul 30 12:20:58.687: INFO: observed ReplicaSet test-rs in namespace replicaset-7507 with ReadyReplicas 2, AvailableReplicas 2
Jul 30 12:20:59.466: INFO: observed Replicaset test-rs in namespace replicaset-7507 with ReadyReplicas 3 found true
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul 30 12:20:59.466: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-7507" for this suite.

• [SLOW TEST:6.900 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replace and Patch tests [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replace and Patch tests [Conformance]","total":356,"completed":92,"skipped":1575,"failed":0}
SS
------------------------------
[sig-apps] DisruptionController 
  should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:20:59.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-9317
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should update/patch PodDisruptionBudget status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Updating PodDisruptionBudget status
STEP: Waiting for all pods to be running
Jul 30 12:21:01.642: INFO: running pods: 0 < 1
STEP: locating a running pod
STEP: Waiting for the pdb to be processed
STEP: Patching PodDisruptionBudget status
STEP: Waiting for the pdb to be processed
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul 30 12:21:03.681: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-9317" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]","total":356,"completed":93,"skipped":1577,"failed":0}
S
------------------------------
[sig-network] Services 
  should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:03.691: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1438
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should find a service from listing all namespaces [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching services
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:21:03.821: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1438" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should find a service from listing all namespaces [Conformance]","total":356,"completed":94,"skipped":1578,"failed":0}
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:03.831: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-4596
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with one valid and two invalid sysctls
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jul 30 12:21:03.956: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-4596" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":95,"skipped":1579,"failed":0}
SSSSSS
------------------------------
[sig-apps] ReplicaSet 
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:03.967: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-2461
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota
Jul 30 12:21:04.096: INFO: Pod name sample-pod: Found 0 pods out of 1
Jul 30 12:21:09.101: INFO: Pod name sample-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the replicaset Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul 30 12:21:09.143: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-2461" for this suite.

• [SLOW TEST:5.191 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  Replicaset should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]","total":356,"completed":96,"skipped":1585,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:09.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-2585
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through the lifecycle of a ServiceAccount [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ServiceAccount
STEP: watching for the ServiceAccount to be added
STEP: patching the ServiceAccount
STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector)
STEP: deleting the ServiceAccount
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul 30 12:21:09.313: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-2585" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]","total":356,"completed":97,"skipped":1598,"failed":0}
SSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:09.324: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5854
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-1039dc9c-e160-480d-b38f-519aee7a57bf
STEP: Creating a pod to test consume configMaps
Jul 30 12:21:09.463: INFO: Waiting up to 5m0s for pod "pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10" in namespace "configmap-5854" to be "Succeeded or Failed"
Jul 30 12:21:09.465: INFO: Pod "pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10": Phase="Pending", Reason="", readiness=false. Elapsed: 2.653068ms
Jul 30 12:21:11.472: INFO: Pod "pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009759246s
Jul 30 12:21:13.477: INFO: Pod "pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014912579s
STEP: Saw pod success
Jul 30 12:21:13.477: INFO: Pod "pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10" satisfied condition "Succeeded or Failed"
Jul 30 12:21:13.481: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:21:13.511: INFO: Waiting for pod pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10 to disappear
Jul 30 12:21:13.514: INFO: Pod pod-configmaps-d81126ba-5b18-4586-9669-64422ea7cb10 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:21:13.514: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5854" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":98,"skipped":1603,"failed":0}

------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:13.523: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-7376
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation
Jul 30 12:21:13.649: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:21:15.626: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:21:23.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-7376" for this suite.

• [SLOW TEST:10.192 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group and version but different kinds [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]","total":356,"completed":99,"skipped":1603,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:23.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-893
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-893;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-893;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-893;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-893;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-893.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-893.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-893.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-893.svc;check="$$(dig +notcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_udp@PTR;check="$$(dig +tcp +noall +answer +search 29.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.29_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 12:21:25.894: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.897: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.901: INFO: Unable to read wheezy_udp@dns-test-service.dns-893 from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.905: INFO: Unable to read wheezy_tcp@dns-test-service.dns-893 from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.909: INFO: Unable to read wheezy_udp@dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.913: INFO: Unable to read wheezy_tcp@dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.917: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.921: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.939: INFO: Unable to read jessie_udp@dns-test-service from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.943: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.947: INFO: Unable to read jessie_udp@dns-test-service.dns-893 from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.951: INFO: Unable to read jessie_tcp@dns-test-service.dns-893 from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.954: INFO: Unable to read jessie_udp@dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.958: INFO: Unable to read jessie_tcp@dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.962: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.965: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-893.svc from pod dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7: the server could not find the requested resource (get pods dns-test-0f7db670-5983-4093-a680-176e33652bc7)
Jul 30 12:21:25.980: INFO: Lookups using dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-893 wheezy_tcp@dns-test-service.dns-893 wheezy_udp@dns-test-service.dns-893.svc wheezy_tcp@dns-test-service.dns-893.svc wheezy_udp@_http._tcp.dns-test-service.dns-893.svc wheezy_tcp@_http._tcp.dns-test-service.dns-893.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-893 jessie_tcp@dns-test-service.dns-893 jessie_udp@dns-test-service.dns-893.svc jessie_tcp@dns-test-service.dns-893.svc jessie_udp@_http._tcp.dns-test-service.dns-893.svc jessie_tcp@_http._tcp.dns-test-service.dns-893.svc]

Jul 30 12:21:31.096: INFO: DNS probes using dns-893/dns-test-0f7db670-5983-4093-a680-176e33652bc7 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 12:21:31.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-893" for this suite.

• [SLOW TEST:7.470 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]","total":356,"completed":100,"skipped":1647,"failed":0}
SSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:31.186: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5159
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jul 30 12:21:31.325: INFO: Waiting up to 5m0s for pod "pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722" in namespace "emptydir-5159" to be "Succeeded or Failed"
Jul 30 12:21:31.329: INFO: Pod "pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722": Phase="Pending", Reason="", readiness=false. Elapsed: 3.586809ms
Jul 30 12:21:33.342: INFO: Pod "pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722": Phase="Pending", Reason="", readiness=false. Elapsed: 2.017381774s
Jul 30 12:21:35.359: INFO: Pod "pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.03376298s
STEP: Saw pod success
Jul 30 12:21:35.359: INFO: Pod "pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722" satisfied condition "Succeeded or Failed"
Jul 30 12:21:35.363: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722 container test-container: <nil>
STEP: delete the pod
Jul 30 12:21:35.389: INFO: Waiting for pod pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722 to disappear
Jul 30 12:21:35.393: INFO: Pod pod-e92e7478-5643-4ca2-8f92-f4ea3d7b6722 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 12:21:35.393: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5159" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":101,"skipped":1652,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:35.405: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4143
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-4143
STEP: changing the ExternalName service to type=NodePort
STEP: creating replication controller externalname-service in namespace services-4143
I0730 12:21:35.576797      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-4143, replica count: 2
I0730 12:21:38.629828      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 12:21:38.629: INFO: Creating new exec pod
Jul 30 12:21:41.653: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4143 exec execpod8g728 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul 30 12:21:41.785: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul 30 12:21:41.785: INFO: stdout: "externalname-service-5bphb"
Jul 30 12:21:41.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4143 exec execpod8g728 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.195 80'
Jul 30 12:21:41.889: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.195 80\nConnection to 10.152.183.195 80 port [tcp/http] succeeded!\n"
Jul 30 12:21:41.889: INFO: stdout: "externalname-service-9b8zp"
Jul 30 12:21:41.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4143 exec execpod8g728 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.74.61 32436'
Jul 30 12:21:41.993: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.74.61 32436\nConnection to 172.31.74.61 32436 port [tcp/*] succeeded!\n"
Jul 30 12:21:41.993: INFO: stdout: "externalname-service-9b8zp"
Jul 30 12:21:41.993: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4143 exec execpod8g728 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.57 32436'
Jul 30 12:21:42.082: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.57 32436\nConnection to 172.31.87.57 32436 port [tcp/*] succeeded!\n"
Jul 30 12:21:42.082: INFO: stdout: "externalname-service-5bphb"
Jul 30 12:21:42.082: INFO: Cleaning up the ExternalName to NodePort test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:21:42.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4143" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:6.715 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to NodePort [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]","total":356,"completed":102,"skipped":1700,"failed":0}
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:42.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3441
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jul 30 12:21:42.252: INFO: Waiting up to 5m0s for pod "pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c" in namespace "emptydir-3441" to be "Succeeded or Failed"
Jul 30 12:21:42.255: INFO: Pod "pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.484245ms
Jul 30 12:21:44.261: INFO: Pod "pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008862435s
Jul 30 12:21:46.270: INFO: Pod "pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018096611s
STEP: Saw pod success
Jul 30 12:21:46.270: INFO: Pod "pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c" satisfied condition "Succeeded or Failed"
Jul 30 12:21:46.274: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c container test-container: <nil>
STEP: delete the pod
Jul 30 12:21:46.301: INFO: Waiting for pod pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c to disappear
Jul 30 12:21:46.304: INFO: Pod pod-0b2af1d4-2e5b-4298-a323-351dcbc8825c no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 12:21:46.304: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3441" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":103,"skipped":1707,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:46.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-2152
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-ac9dda71-3ed1-4b5f-8cb2-a8b1e874ded4
STEP: Creating a pod to test consume secrets
Jul 30 12:21:46.459: INFO: Waiting up to 5m0s for pod "pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7" in namespace "secrets-2152" to be "Succeeded or Failed"
Jul 30 12:21:46.464: INFO: Pod "pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.384587ms
Jul 30 12:21:48.521: INFO: Pod "pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.061650543s
Jul 30 12:21:50.527: INFO: Pod "pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.067934943s
STEP: Saw pod success
Jul 30 12:21:50.527: INFO: Pod "pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7" satisfied condition "Succeeded or Failed"
Jul 30 12:21:50.530: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7 container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:21:50.646: INFO: Waiting for pod pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7 to disappear
Jul 30 12:21:50.650: INFO: Pod pod-secrets-df4d1b39-2a61-4c78-866e-a22f6ac5e3f7 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:21:50.650: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-2152" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":104,"skipped":1727,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:50.810: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-5962
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for the cluster  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 12:21:53.339: INFO: DNS probes using dns-5962/dns-test-4b4fda5b-69d2-4acc-9335-c6314251f308 succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 12:21:53.506: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-5962" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide DNS for the cluster  [Conformance]","total":356,"completed":105,"skipped":1742,"failed":0}
SSS
------------------------------
[sig-apps] CronJob 
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:21:53.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3835
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ForbidConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring no more jobs are scheduled
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul 30 12:27:01.921: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3835" for this suite.

• [SLOW TEST:308.363 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]","total":356,"completed":106,"skipped":1745,"failed":0}
[sig-cli] Kubectl client Proxy server 
  should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:01.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8151
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support proxy with --port 0  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting the proxy server
Jul 30 12:27:02.066: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-8151 proxy -p 0 --disable-filter'
STEP: curling proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:27:02.102: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8151" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]","total":356,"completed":107,"skipped":1745,"failed":0}
SS
------------------------------
[sig-api-machinery] Garbage collector 
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:02.114: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-111
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc1
STEP: create the rc2
STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well
STEP: delete the rc simpletest-rc-to-be-deleted
STEP: wait for the rc to be deleted
Jul 30 12:27:12.586: INFO: 67 pods remaining
Jul 30 12:27:12.586: INFO: 67 pods has nil DeletionTimestamp
Jul 30 12:27:12.586: INFO: 
STEP: Gathering metrics
Jul 30 12:27:17.588: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0730 12:27:17.588668      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
Jul 30 12:27:17.588: INFO: Deleting pod "simpletest-rc-to-be-deleted-28v6j" in namespace "gc-111"
Jul 30 12:27:17.603: INFO: Deleting pod "simpletest-rc-to-be-deleted-2mzqw" in namespace "gc-111"
Jul 30 12:27:17.618: INFO: Deleting pod "simpletest-rc-to-be-deleted-4gdlp" in namespace "gc-111"
Jul 30 12:27:17.635: INFO: Deleting pod "simpletest-rc-to-be-deleted-59qb7" in namespace "gc-111"
Jul 30 12:27:17.648: INFO: Deleting pod "simpletest-rc-to-be-deleted-5m9np" in namespace "gc-111"
Jul 30 12:27:17.661: INFO: Deleting pod "simpletest-rc-to-be-deleted-5mxqm" in namespace "gc-111"
Jul 30 12:27:17.670: INFO: Deleting pod "simpletest-rc-to-be-deleted-5r8jm" in namespace "gc-111"
Jul 30 12:27:17.685: INFO: Deleting pod "simpletest-rc-to-be-deleted-649g4" in namespace "gc-111"
Jul 30 12:27:17.699: INFO: Deleting pod "simpletest-rc-to-be-deleted-6tgbn" in namespace "gc-111"
Jul 30 12:27:17.710: INFO: Deleting pod "simpletest-rc-to-be-deleted-7cjc2" in namespace "gc-111"
Jul 30 12:27:17.722: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tl9p" in namespace "gc-111"
Jul 30 12:27:17.736: INFO: Deleting pod "simpletest-rc-to-be-deleted-8m9p8" in namespace "gc-111"
Jul 30 12:27:17.749: INFO: Deleting pod "simpletest-rc-to-be-deleted-96cqn" in namespace "gc-111"
Jul 30 12:27:17.760: INFO: Deleting pod "simpletest-rc-to-be-deleted-9d2xh" in namespace "gc-111"
Jul 30 12:27:17.774: INFO: Deleting pod "simpletest-rc-to-be-deleted-9hqfv" in namespace "gc-111"
Jul 30 12:27:17.788: INFO: Deleting pod "simpletest-rc-to-be-deleted-b225g" in namespace "gc-111"
Jul 30 12:27:17.799: INFO: Deleting pod "simpletest-rc-to-be-deleted-bbz48" in namespace "gc-111"
Jul 30 12:27:17.811: INFO: Deleting pod "simpletest-rc-to-be-deleted-bpwt5" in namespace "gc-111"
Jul 30 12:27:17.824: INFO: Deleting pod "simpletest-rc-to-be-deleted-bqfsr" in namespace "gc-111"
Jul 30 12:27:17.845: INFO: Deleting pod "simpletest-rc-to-be-deleted-cckz8" in namespace "gc-111"
Jul 30 12:27:17.859: INFO: Deleting pod "simpletest-rc-to-be-deleted-cmhfb" in namespace "gc-111"
Jul 30 12:27:17.870: INFO: Deleting pod "simpletest-rc-to-be-deleted-dgrc7" in namespace "gc-111"
Jul 30 12:27:17.880: INFO: Deleting pod "simpletest-rc-to-be-deleted-dz945" in namespace "gc-111"
Jul 30 12:27:17.890: INFO: Deleting pod "simpletest-rc-to-be-deleted-f5blt" in namespace "gc-111"
Jul 30 12:27:17.904: INFO: Deleting pod "simpletest-rc-to-be-deleted-f87kt" in namespace "gc-111"
Jul 30 12:27:17.917: INFO: Deleting pod "simpletest-rc-to-be-deleted-fptzj" in namespace "gc-111"
Jul 30 12:27:17.933: INFO: Deleting pod "simpletest-rc-to-be-deleted-fv5rz" in namespace "gc-111"
Jul 30 12:27:17.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-glfcd" in namespace "gc-111"
Jul 30 12:27:17.958: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxmfn" in namespace "gc-111"
Jul 30 12:27:17.972: INFO: Deleting pod "simpletest-rc-to-be-deleted-gxpkh" in namespace "gc-111"
Jul 30 12:27:17.986: INFO: Deleting pod "simpletest-rc-to-be-deleted-hwpqb" in namespace "gc-111"
Jul 30 12:27:17.998: INFO: Deleting pod "simpletest-rc-to-be-deleted-hz9zw" in namespace "gc-111"
Jul 30 12:27:18.008: INFO: Deleting pod "simpletest-rc-to-be-deleted-j7nnb" in namespace "gc-111"
Jul 30 12:27:18.022: INFO: Deleting pod "simpletest-rc-to-be-deleted-j9ghb" in namespace "gc-111"
Jul 30 12:27:18.033: INFO: Deleting pod "simpletest-rc-to-be-deleted-jb4fc" in namespace "gc-111"
Jul 30 12:27:18.046: INFO: Deleting pod "simpletest-rc-to-be-deleted-jc94m" in namespace "gc-111"
Jul 30 12:27:18.059: INFO: Deleting pod "simpletest-rc-to-be-deleted-jdpjb" in namespace "gc-111"
Jul 30 12:27:18.071: INFO: Deleting pod "simpletest-rc-to-be-deleted-jfsnk" in namespace "gc-111"
Jul 30 12:27:18.084: INFO: Deleting pod "simpletest-rc-to-be-deleted-jp82v" in namespace "gc-111"
Jul 30 12:27:18.098: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqnhw" in namespace "gc-111"
Jul 30 12:27:18.114: INFO: Deleting pod "simpletest-rc-to-be-deleted-jr92d" in namespace "gc-111"
Jul 30 12:27:18.127: INFO: Deleting pod "simpletest-rc-to-be-deleted-jtqjz" in namespace "gc-111"
Jul 30 12:27:18.144: INFO: Deleting pod "simpletest-rc-to-be-deleted-k8nd7" in namespace "gc-111"
Jul 30 12:27:18.159: INFO: Deleting pod "simpletest-rc-to-be-deleted-kbhcs" in namespace "gc-111"
Jul 30 12:27:18.172: INFO: Deleting pod "simpletest-rc-to-be-deleted-kmn69" in namespace "gc-111"
Jul 30 12:27:18.186: INFO: Deleting pod "simpletest-rc-to-be-deleted-kpqqn" in namespace "gc-111"
Jul 30 12:27:18.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-kxt6b" in namespace "gc-111"
Jul 30 12:27:18.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-lbm7m" in namespace "gc-111"
Jul 30 12:27:18.296: INFO: Deleting pod "simpletest-rc-to-be-deleted-lcw8z" in namespace "gc-111"
Jul 30 12:27:18.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-ldck2" in namespace "gc-111"
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul 30 12:27:18.325: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-111" for this suite.

• [SLOW TEST:16.223 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]","total":356,"completed":108,"skipped":1747,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:18.339: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3658
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:27:19.479: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jul 30 12:27:21.489: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 30, 12, 27, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 27, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 27, 19, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 27, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:27:24.511: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API
STEP: Creating a dummy validating-webhook-configuration object
STEP: Deleting the validating-webhook-configuration, which should be possible to remove
STEP: Creating a dummy mutating-webhook-configuration object
STEP: Deleting the mutating-webhook-configuration, which should be possible to remove
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:27:24.587: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3658" for this suite.
STEP: Destroying namespace "webhook-3658-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.306 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]","total":356,"completed":109,"skipped":1763,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] 
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:24.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-webhook-4420
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:128
STEP: Setting up server cert
STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication
STEP: Deploying the custom resource conversion webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:27:24.945: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:27:27.969: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
[It] should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:27:27.974: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Creating a v1 custom resource
STEP: v2 custom resource should be converted
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:27:31.068: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-webhook-4420" for this suite.
[AfterEach] [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/crd_conversion_webhook.go:139

• [SLOW TEST:6.480 seconds]
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to convert from CR v1 to CR v2 [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]","total":356,"completed":110,"skipped":1788,"failed":0}
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:31.125: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2506
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation
Jul 30 12:27:31.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation
Jul 30 12:27:40.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:27:42.568: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:27:51.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2506" for this suite.

• [SLOW TEST:19.960 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of same group but different versions [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]","total":356,"completed":111,"skipped":1788,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged 
  should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:51.085: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-1792
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:27:51.227: INFO: Waiting up to 5m0s for pod "busybox-privileged-false-052f772b-9cf0-4ae8-94ca-31941928859c" in namespace "security-context-test-1792" to be "Succeeded or Failed"
Jul 30 12:27:51.230: INFO: Pod "busybox-privileged-false-052f772b-9cf0-4ae8-94ca-31941928859c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.224546ms
Jul 30 12:27:53.239: INFO: Pod "busybox-privileged-false-052f772b-9cf0-4ae8-94ca-31941928859c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011481547s
Jul 30 12:27:55.246: INFO: Pod "busybox-privileged-false-052f772b-9cf0-4ae8-94ca-31941928859c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018649062s
Jul 30 12:27:55.246: INFO: Pod "busybox-privileged-false-052f772b-9cf0-4ae8-94ca-31941928859c" satisfied condition "Succeeded or Failed"
Jul 30 12:27:55.272: INFO: Got logs for pod "busybox-privileged-false-052f772b-9cf0-4ae8-94ca-31941928859c": "ip: RTNETLINK answers: Operation not permitted\n"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul 30 12:27:55.272: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-1792" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":112,"skipped":1821,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:55.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-3771
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide /etc/hosts entries for the cluster [Conformance]
  test/e2e/framework/framework.go:652
STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3771.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-3771.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-3771.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-3771.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done

STEP: creating a pod to probe /etc/hosts
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 12:27:59.466: INFO: DNS probes using dns-3771/dns-test-6ca09032-3699-414c-a870-5bc8906ec75a succeeded

STEP: deleting the pod
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 12:27:59.481: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-3771" for this suite.
•{"msg":"PASSED [sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]","total":356,"completed":113,"skipped":1844,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:27:59.493: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-6637
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul 30 12:28:02.672: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul 30 12:28:02.690: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-6637" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]","total":356,"completed":114,"skipped":1918,"failed":0}
S
------------------------------
[sig-network] EndpointSlice 
  should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:28:02.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-4554
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should support creating EndpointSlice API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/discovery.k8s.io
STEP: getting /apis/discovery.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul 30 12:28:02.856: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jul 30 12:28:02.860: INFO: starting watch
STEP: patching
STEP: updating
Jul 30 12:28:02.874: INFO: waiting for watch events with expected annotations
Jul 30 12:28:02.874: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul 30 12:28:02.902: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-4554" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]","total":356,"completed":115,"skipped":1919,"failed":0}
SSSSSS
------------------------------
[sig-node] Pods 
  should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:28:02.912: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:28:03.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul 30 12:28:03.057: INFO: The status of Pod pod-logs-websocket-085885cd-f4cb-4d36-883d-bf47eedafae0 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:28:05.063: INFO: The status of Pod pod-logs-websocket-085885cd-f4cb-4d36-883d-bf47eedafae0 is Running (Ready = true)
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 12:28:05.078: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6736" for this suite.
•{"msg":"PASSED [sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]","total":356,"completed":116,"skipped":1925,"failed":0}

------------------------------
[sig-storage] Projected configMap 
  updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:28:05.089: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3959
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with configMap that has name projected-configmap-test-upd-7123cef0-6faa-4296-a159-be51a38a517b
STEP: Creating the pod
Jul 30 12:28:05.240: INFO: The status of Pod pod-projected-configmaps-bd47ed35-182b-4ca3-aa2f-b62abd0e0040 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:28:07.247: INFO: The status of Pod pod-projected-configmaps-bd47ed35-182b-4ca3-aa2f-b62abd0e0040 is Running (Ready = true)
STEP: Updating configmap projected-configmap-test-upd-7123cef0-6faa-4296-a159-be51a38a517b
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 12:28:09.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3959" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":117,"skipped":1925,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:28:09.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9486
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-48014c34-7ef3-48d7-b6b1-31da2bffe474
STEP: Creating a pod to test consume configMaps
Jul 30 12:28:09.430: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac" in namespace "projected-9486" to be "Succeeded or Failed"
Jul 30 12:28:09.433: INFO: Pod "pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.57108ms
Jul 30 12:28:11.439: INFO: Pod "pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009331647s
Jul 30 12:28:13.448: INFO: Pod "pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017431676s
STEP: Saw pod success
Jul 30 12:28:13.448: INFO: Pod "pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac" satisfied condition "Succeeded or Failed"
Jul 30 12:28:13.452: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:28:13.470: INFO: Waiting for pod pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac to disappear
Jul 30 12:28:13.474: INFO: Pod pod-projected-configmaps-63f4cb29-c6ac-4dba-aadd-1d01a7d92bac no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 12:28:13.474: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9486" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":118,"skipped":1945,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:28:13.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4716
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:28:13.840: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:28:16.872: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a mutating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a mutating webhook configuration
STEP: Updating a mutating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that should not be mutated
STEP: Patching a mutating webhook configuration's rules to include the create operation
STEP: Creating a configMap that should be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:28:16.945: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4716" for this suite.
STEP: Destroying namespace "webhook-4716-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]","total":356,"completed":119,"skipped":1968,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop 
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PreStop
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:28:16.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename prestop
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in prestop-4266
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] PreStop
  test/e2e/node/pre_stop.go:159
[It] should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating server pod server in namespace prestop-4266
STEP: Waiting for pods to come up.
STEP: Creating tester pod tester in namespace prestop-4266
STEP: Deleting pre-stop pod
Jul 30 12:28:26.264: INFO: Saw: {
	"Hostname": "server",
	"Sent": null,
	"Received": {
		"prestop": 1
	},
	"Errors": null,
	"Log": [
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
	],
	"StillContactingPeers": true
}
STEP: Deleting the server pod
[AfterEach] [sig-node] PreStop
  test/e2e/framework/framework.go:188
Jul 30 12:28:26.435: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "prestop-4266" for this suite.

• [SLOW TEST:9.453 seconds]
[sig-node] PreStop
test/e2e/node/framework.go:23
  should call prestop when killing a pod  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] PreStop should call prestop when killing a pod  [Conformance]","total":356,"completed":120,"skipped":1990,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:28:26.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5324
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-6a8aca9c-a84a-4125-a03e-8b38e8fbe706 in namespace container-probe-5324
Jul 30 12:28:28.746: INFO: Started pod busybox-6a8aca9c-a84a-4125-a03e-8b38e8fbe706 in namespace container-probe-5324
STEP: checking the pod's current state and verifying that restartCount is present
Jul 30 12:28:28.750: INFO: Initial restart count of pod busybox-6a8aca9c-a84a-4125-a03e-8b38e8fbe706 is 0
Jul 30 12:29:18.944: INFO: Restart count of pod container-probe-5324/busybox-6a8aca9c-a84a-4125-a03e-8b38e8fbe706 is now 1 (50.194297031s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 12:29:18.970: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5324" for this suite.

• [SLOW TEST:52.535 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":121,"skipped":2005,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:29:18.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2061
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's args [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's args
Jul 30 12:29:19.125: INFO: Waiting up to 5m0s for pod "var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452" in namespace "var-expansion-2061" to be "Succeeded or Failed"
Jul 30 12:29:19.128: INFO: Pod "var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452": Phase="Pending", Reason="", readiness=false. Elapsed: 3.627027ms
Jul 30 12:29:21.136: INFO: Pod "var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011015774s
Jul 30 12:29:23.142: INFO: Pod "var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017568242s
STEP: Saw pod success
Jul 30 12:29:23.142: INFO: Pod "var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452" satisfied condition "Succeeded or Failed"
Jul 30 12:29:23.146: INFO: Trying to get logs from node ip-172-31-74-61 pod var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452 container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:29:23.162: INFO: Waiting for pod var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452 to disappear
Jul 30 12:29:23.165: INFO: Pod var-expansion-be8d7438-6953-4ee0-9b7d-b8a0762e7452 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 12:29:23.165: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2061" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]","total":356,"completed":122,"skipped":2054,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:29:23.175: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-1422
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a suspended cronjob
STEP: Ensuring no jobs are scheduled
STEP: Ensuring no job exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul 30 12:34:23.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1422" for this suite.

• [SLOW TEST:300.194 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should not schedule jobs when suspended [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]","total":356,"completed":123,"skipped":2064,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:23.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-9919
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] creating/deleting custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:34:23.515: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:34:24.537: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-9919" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]","total":356,"completed":124,"skipped":2089,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:24.549: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3532
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-3532
[It] Should recreate evicted statefulset [Conformance]
  test/e2e/framework/framework.go:652
STEP: Looking for a node to schedule stateful set and pod
STEP: Creating pod with conflicting port in namespace statefulset-3532
STEP: Waiting until pod test-pod will start running in namespace statefulset-3532
STEP: Creating statefulset with conflicting port in namespace statefulset-3532
STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3532
Jul 30 12:34:26.739: INFO: Observed stateful pod in namespace: statefulset-3532, name: ss-0, uid: f1c37092-3d72-44f9-82bf-26482dbb600e, status phase: Pending. Waiting for statefulset controller to delete.
Jul 30 12:34:26.753: INFO: Observed stateful pod in namespace: statefulset-3532, name: ss-0, uid: f1c37092-3d72-44f9-82bf-26482dbb600e, status phase: Failed. Waiting for statefulset controller to delete.
Jul 30 12:34:26.775: INFO: Observed stateful pod in namespace: statefulset-3532, name: ss-0, uid: f1c37092-3d72-44f9-82bf-26482dbb600e, status phase: Failed. Waiting for statefulset controller to delete.
Jul 30 12:34:26.879: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3532
STEP: Removing pod with conflicting port in namespace statefulset-3532
STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3532 and will be in running state
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 12:34:28.904: INFO: Deleting all statefulset in ns statefulset-3532
Jul 30 12:34:28.909: INFO: Scaling statefulset ss to 0
Jul 30 12:34:38.928: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:34:38.931: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 12:34:38.944: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3532" for this suite.

• [SLOW TEST:14.404 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Should recreate evicted statefulset [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]","total":356,"completed":125,"skipped":2124,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:38.953: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-2840
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should proxy through a service and a pod  [Conformance]
  test/e2e/framework/framework.go:652
STEP: starting an echo server on multiple ports
STEP: creating replication controller proxy-service-ss26j in namespace proxy-2840
I0730 12:34:39.109173      23 runners.go:193] Created replication controller with name: proxy-service-ss26j, namespace: proxy-2840, replica count: 1
I0730 12:34:40.160265      23 runners.go:193] proxy-service-ss26j Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
I0730 12:34:41.160487      23 runners.go:193] proxy-service-ss26j Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 12:34:41.166: INFO: setup took 2.0760137s, starting test cases
STEP: running 16 cases, 20 attempts per case, 320 total attempts
Jul 30 12:34:41.170: INFO: (0) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 4.328326ms)
Jul 30 12:34:41.171: INFO: (0) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 4.626824ms)
Jul 30 12:34:41.171: INFO: (0) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.847289ms)
Jul 30 12:34:41.171: INFO: (0) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.984942ms)
Jul 30 12:34:41.172: INFO: (0) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 5.558906ms)
Jul 30 12:34:41.172: INFO: (0) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 5.843973ms)
Jul 30 12:34:41.176: INFO: (0) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 9.485822ms)
Jul 30 12:34:41.176: INFO: (0) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 9.914902ms)
Jul 30 12:34:41.176: INFO: (0) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 9.906132ms)
Jul 30 12:34:41.177: INFO: (0) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 10.717752ms)
Jul 30 12:34:41.177: INFO: (0) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 10.593389ms)
Jul 30 12:34:41.177: INFO: (0) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 10.497617ms)
Jul 30 12:34:41.177: INFO: (0) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 10.668731ms)
Jul 30 12:34:41.177: INFO: (0) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 11.105981ms)
Jul 30 12:34:41.178: INFO: (0) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 12.312011ms)
Jul 30 12:34:41.180: INFO: (0) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 13.806187ms)
Jul 30 12:34:41.183: INFO: (1) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.532716ms)
Jul 30 12:34:41.184: INFO: (1) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 4.023478ms)
Jul 30 12:34:41.184: INFO: (1) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 4.007587ms)
Jul 30 12:34:41.184: INFO: (1) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.275755ms)
Jul 30 12:34:41.184: INFO: (1) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.225743ms)
Jul 30 12:34:41.185: INFO: (1) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.966331ms)
Jul 30 12:34:41.185: INFO: (1) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 5.107255ms)
Jul 30 12:34:41.186: INFO: (1) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 6.249463ms)
Jul 30 12:34:41.186: INFO: (1) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 6.473798ms)
Jul 30 12:34:41.186: INFO: (1) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 6.297113ms)
Jul 30 12:34:41.188: INFO: (1) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 7.648716ms)
Jul 30 12:34:41.188: INFO: (1) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 8.086948ms)
Jul 30 12:34:41.189: INFO: (1) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 9.088301ms)
Jul 30 12:34:41.189: INFO: (1) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 9.347878ms)
Jul 30 12:34:41.190: INFO: (1) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 9.84162ms)
Jul 30 12:34:41.191: INFO: (1) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 10.810514ms)
Jul 30 12:34:41.194: INFO: (2) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 3.194979ms)
Jul 30 12:34:41.195: INFO: (2) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 3.615569ms)
Jul 30 12:34:41.195: INFO: (2) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.742281ms)
Jul 30 12:34:41.195: INFO: (2) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 3.854014ms)
Jul 30 12:34:41.196: INFO: (2) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.406088ms)
Jul 30 12:34:41.196: INFO: (2) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.629104ms)
Jul 30 12:34:41.197: INFO: (2) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 5.451843ms)
Jul 30 12:34:41.197: INFO: (2) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 5.515734ms)
Jul 30 12:34:41.198: INFO: (2) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 6.938929ms)
Jul 30 12:34:41.198: INFO: (2) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 6.599672ms)
Jul 30 12:34:41.198: INFO: (2) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 7.046472ms)
Jul 30 12:34:41.199: INFO: (2) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 7.555024ms)
Jul 30 12:34:41.200: INFO: (2) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 8.907928ms)
Jul 30 12:34:41.200: INFO: (2) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 9.263507ms)
Jul 30 12:34:41.201: INFO: (2) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 9.568244ms)
Jul 30 12:34:41.203: INFO: (2) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 12.334381ms)
Jul 30 12:34:41.207: INFO: (3) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 3.801753ms)
Jul 30 12:34:41.207: INFO: (3) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 3.554147ms)
Jul 30 12:34:41.208: INFO: (3) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.193702ms)
Jul 30 12:34:41.208: INFO: (3) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 4.182693ms)
Jul 30 12:34:41.208: INFO: (3) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 4.709545ms)
Jul 30 12:34:41.208: INFO: (3) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 4.823687ms)
Jul 30 12:34:41.209: INFO: (3) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 5.198497ms)
Jul 30 12:34:41.209: INFO: (3) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 5.533225ms)
Jul 30 12:34:41.209: INFO: (3) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 5.981606ms)
Jul 30 12:34:41.210: INFO: (3) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 6.56287ms)
Jul 30 12:34:41.212: INFO: (3) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 9.01377ms)
Jul 30 12:34:41.212: INFO: (3) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 8.98823ms)
Jul 30 12:34:41.213: INFO: (3) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 9.151474ms)
Jul 30 12:34:41.213: INFO: (3) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 9.546413ms)
Jul 30 12:34:41.214: INFO: (3) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 10.132057ms)
Jul 30 12:34:41.215: INFO: (3) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 11.329977ms)
Jul 30 12:34:41.218: INFO: (4) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 3.192118ms)
Jul 30 12:34:41.218: INFO: (4) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 3.570927ms)
Jul 30 12:34:41.219: INFO: (4) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.402408ms)
Jul 30 12:34:41.220: INFO: (4) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.597862ms)
Jul 30 12:34:41.220: INFO: (4) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 5.144565ms)
Jul 30 12:34:41.220: INFO: (4) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 5.477054ms)
Jul 30 12:34:41.220: INFO: (4) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 5.463323ms)
Jul 30 12:34:41.220: INFO: (4) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 5.461483ms)
Jul 30 12:34:41.221: INFO: (4) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 6.501869ms)
Jul 30 12:34:41.222: INFO: (4) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 7.78499ms)
Jul 30 12:34:41.223: INFO: (4) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 8.274172ms)
Jul 30 12:34:41.223: INFO: (4) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 8.460326ms)
Jul 30 12:34:41.224: INFO: (4) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 8.568559ms)
Jul 30 12:34:41.224: INFO: (4) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 8.562689ms)
Jul 30 12:34:41.224: INFO: (4) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 8.433236ms)
Jul 30 12:34:41.225: INFO: (4) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 9.657266ms)
Jul 30 12:34:41.228: INFO: (5) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 3.370303ms)
Jul 30 12:34:41.229: INFO: (5) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.164792ms)
Jul 30 12:34:41.229: INFO: (5) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 4.0837ms)
Jul 30 12:34:41.230: INFO: (5) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.690495ms)
Jul 30 12:34:41.230: INFO: (5) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 5.061594ms)
Jul 30 12:34:41.230: INFO: (5) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.426562ms)
Jul 30 12:34:41.230: INFO: (5) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 5.33107ms)
Jul 30 12:34:41.231: INFO: (5) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 5.869824ms)
Jul 30 12:34:41.232: INFO: (5) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 6.737584ms)
Jul 30 12:34:41.232: INFO: (5) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 6.683353ms)
Jul 30 12:34:41.232: INFO: (5) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 7.331869ms)
Jul 30 12:34:41.233: INFO: (5) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 7.512904ms)
Jul 30 12:34:41.233: INFO: (5) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 7.571225ms)
Jul 30 12:34:41.233: INFO: (5) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 8.023346ms)
Jul 30 12:34:41.234: INFO: (5) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 8.827026ms)
Jul 30 12:34:41.235: INFO: (5) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 10.21736ms)
Jul 30 12:34:41.239: INFO: (6) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 3.143336ms)
Jul 30 12:34:41.239: INFO: (6) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.68853ms)
Jul 30 12:34:41.240: INFO: (6) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.033138ms)
Jul 30 12:34:41.240: INFO: (6) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 4.333166ms)
Jul 30 12:34:41.241: INFO: (6) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.280119ms)
Jul 30 12:34:41.241: INFO: (6) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 5.208167ms)
Jul 30 12:34:41.241: INFO: (6) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 5.364841ms)
Jul 30 12:34:41.241: INFO: (6) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 5.512414ms)
Jul 30 12:34:41.242: INFO: (6) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 6.197981ms)
Jul 30 12:34:41.243: INFO: (6) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 7.024102ms)
Jul 30 12:34:41.243: INFO: (6) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 7.425001ms)
Jul 30 12:34:41.243: INFO: (6) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 7.569565ms)
Jul 30 12:34:41.243: INFO: (6) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 7.652107ms)
Jul 30 12:34:41.245: INFO: (6) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 8.855577ms)
Jul 30 12:34:41.245: INFO: (6) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 8.643011ms)
Jul 30 12:34:41.245: INFO: (6) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 9.924523ms)
Jul 30 12:34:41.249: INFO: (7) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 3.118056ms)
Jul 30 12:34:41.249: INFO: (7) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.67282ms)
Jul 30 12:34:41.250: INFO: (7) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.006478ms)
Jul 30 12:34:41.250: INFO: (7) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 4.197773ms)
Jul 30 12:34:41.250: INFO: (7) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 4.336395ms)
Jul 30 12:34:41.251: INFO: (7) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.750587ms)
Jul 30 12:34:41.251: INFO: (7) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 5.008593ms)
Jul 30 12:34:41.252: INFO: (7) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 6.339075ms)
Jul 30 12:34:41.252: INFO: (7) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 6.265973ms)
Jul 30 12:34:41.253: INFO: (7) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 7.455491ms)
Jul 30 12:34:41.253: INFO: (7) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 7.459302ms)
Jul 30 12:34:41.253: INFO: (7) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 7.687468ms)
Jul 30 12:34:41.253: INFO: (7) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 7.435451ms)
Jul 30 12:34:41.253: INFO: (7) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 7.606476ms)
Jul 30 12:34:41.254: INFO: (7) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 7.965665ms)
Jul 30 12:34:41.255: INFO: (7) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 8.886217ms)
Jul 30 12:34:41.259: INFO: (8) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 4.559392ms)
Jul 30 12:34:41.259: INFO: (8) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.696335ms)
Jul 30 12:34:41.260: INFO: (8) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 5.083014ms)
Jul 30 12:34:41.260: INFO: (8) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 5.002552ms)
Jul 30 12:34:41.260: INFO: (8) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 5.256199ms)
Jul 30 12:34:41.260: INFO: (8) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 5.051313ms)
Jul 30 12:34:41.260: INFO: (8) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 5.161907ms)
Jul 30 12:34:41.260: INFO: (8) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 5.461563ms)
Jul 30 12:34:41.260: INFO: (8) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 5.837363ms)
Jul 30 12:34:41.262: INFO: (8) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 6.92923ms)
Jul 30 12:34:41.263: INFO: (8) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 8.148749ms)
Jul 30 12:34:41.263: INFO: (8) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 8.5698ms)
Jul 30 12:34:41.264: INFO: (8) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 9.0187ms)
Jul 30 12:34:41.264: INFO: (8) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 9.065442ms)
Jul 30 12:34:41.264: INFO: (8) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 9.273927ms)
Jul 30 12:34:41.265: INFO: (8) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 10.572029ms)
Jul 30 12:34:41.269: INFO: (9) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 3.175328ms)
Jul 30 12:34:41.269: INFO: (9) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 3.961176ms)
Jul 30 12:34:41.270: INFO: (9) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 4.293384ms)
Jul 30 12:34:41.270: INFO: (9) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.377317ms)
Jul 30 12:34:41.270: INFO: (9) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.90202ms)
Jul 30 12:34:41.270: INFO: (9) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.940651ms)
Jul 30 12:34:41.271: INFO: (9) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 5.132295ms)
Jul 30 12:34:41.271: INFO: (9) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 5.125196ms)
Jul 30 12:34:41.272: INFO: (9) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 6.452708ms)
Jul 30 12:34:41.272: INFO: (9) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 6.575371ms)
Jul 30 12:34:41.272: INFO: (9) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 6.99357ms)
Jul 30 12:34:41.273: INFO: (9) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 7.400581ms)
Jul 30 12:34:41.273: INFO: (9) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 7.513163ms)
Jul 30 12:34:41.273: INFO: (9) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 7.890072ms)
Jul 30 12:34:41.274: INFO: (9) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 8.426316ms)
Jul 30 12:34:41.275: INFO: (9) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 9.42925ms)
Jul 30 12:34:41.278: INFO: (10) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 3.309831ms)
Jul 30 12:34:41.279: INFO: (10) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 3.616818ms)
Jul 30 12:34:41.279: INFO: (10) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 4.436389ms)
Jul 30 12:34:41.279: INFO: (10) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 4.549301ms)
Jul 30 12:34:41.280: INFO: (10) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 5.078794ms)
Jul 30 12:34:41.280: INFO: (10) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.168797ms)
Jul 30 12:34:41.280: INFO: (10) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 5.139285ms)
Jul 30 12:34:41.280: INFO: (10) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 5.394942ms)
Jul 30 12:34:41.280: INFO: (10) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 5.539245ms)
Jul 30 12:34:41.281: INFO: (10) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 6.350315ms)
Jul 30 12:34:41.282: INFO: (10) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 7.113284ms)
Jul 30 12:34:41.282: INFO: (10) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 7.274608ms)
Jul 30 12:34:41.282: INFO: (10) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 7.269537ms)
Jul 30 12:34:41.283: INFO: (10) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 8.16017ms)
Jul 30 12:34:41.283: INFO: (10) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 8.513718ms)
Jul 30 12:34:41.283: INFO: (10) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 8.625231ms)
Jul 30 12:34:41.288: INFO: (11) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.277655ms)
Jul 30 12:34:41.288: INFO: (11) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.448359ms)
Jul 30 12:34:41.288: INFO: (11) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 4.738366ms)
Jul 30 12:34:41.289: INFO: (11) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.055033ms)
Jul 30 12:34:41.289: INFO: (11) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 5.285ms)
Jul 30 12:34:41.289: INFO: (11) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 5.416343ms)
Jul 30 12:34:41.289: INFO: (11) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 5.555456ms)
Jul 30 12:34:41.289: INFO: (11) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 5.608787ms)
Jul 30 12:34:41.290: INFO: (11) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 6.457928ms)
Jul 30 12:34:41.290: INFO: (11) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 6.309165ms)
Jul 30 12:34:41.290: INFO: (11) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 6.660093ms)
Jul 30 12:34:41.291: INFO: (11) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 6.846428ms)
Jul 30 12:34:41.291: INFO: (11) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 7.273089ms)
Jul 30 12:34:41.291: INFO: (11) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 7.627217ms)
Jul 30 12:34:41.291: INFO: (11) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 7.747479ms)
Jul 30 12:34:41.293: INFO: (11) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 9.821181ms)
Jul 30 12:34:41.297: INFO: (12) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.433434ms)
Jul 30 12:34:41.298: INFO: (12) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 3.885864ms)
Jul 30 12:34:41.298: INFO: (12) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.836634ms)
Jul 30 12:34:41.299: INFO: (12) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 5.224048ms)
Jul 30 12:34:41.299: INFO: (12) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 5.32697ms)
Jul 30 12:34:41.299: INFO: (12) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 5.452364ms)
Jul 30 12:34:41.299: INFO: (12) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.784282ms)
Jul 30 12:34:41.300: INFO: (12) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 6.339775ms)
Jul 30 12:34:41.300: INFO: (12) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 6.276934ms)
Jul 30 12:34:41.300: INFO: (12) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 6.53545ms)
Jul 30 12:34:41.301: INFO: (12) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 6.755385ms)
Jul 30 12:34:41.301: INFO: (12) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 7.030472ms)
Jul 30 12:34:41.301: INFO: (12) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 7.285328ms)
Jul 30 12:34:41.301: INFO: (12) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 7.676118ms)
Jul 30 12:34:41.302: INFO: (12) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 7.970544ms)
Jul 30 12:34:41.302: INFO: (12) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 8.466037ms)
Jul 30 12:34:41.305: INFO: (13) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 3.165117ms)
Jul 30 12:34:41.306: INFO: (13) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 3.515076ms)
Jul 30 12:34:41.307: INFO: (13) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.983467ms)
Jul 30 12:34:41.307: INFO: (13) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 4.191793ms)
Jul 30 12:34:41.308: INFO: (13) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 5.33425ms)
Jul 30 12:34:41.308: INFO: (13) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.403842ms)
Jul 30 12:34:41.308: INFO: (13) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 5.615068ms)
Jul 30 12:34:41.308: INFO: (13) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 5.651298ms)
Jul 30 12:34:41.308: INFO: (13) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 5.71838ms)
Jul 30 12:34:41.309: INFO: (13) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 6.493338ms)
Jul 30 12:34:41.309: INFO: (13) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 6.590181ms)
Jul 30 12:34:41.309: INFO: (13) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 6.584761ms)
Jul 30 12:34:41.310: INFO: (13) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 7.319749ms)
Jul 30 12:34:41.310: INFO: (13) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 7.880372ms)
Jul 30 12:34:41.310: INFO: (13) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 7.866952ms)
Jul 30 12:34:41.311: INFO: (13) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 9.187934ms)
Jul 30 12:34:41.315: INFO: (14) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.513996ms)
Jul 30 12:34:41.315: INFO: (14) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 3.67934ms)
Jul 30 12:34:41.316: INFO: (14) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.981957ms)
Jul 30 12:34:41.316: INFO: (14) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 4.11818ms)
Jul 30 12:34:41.316: INFO: (14) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.751686ms)
Jul 30 12:34:41.317: INFO: (14) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 4.718995ms)
Jul 30 12:34:41.317: INFO: (14) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 4.834868ms)
Jul 30 12:34:41.317: INFO: (14) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 5.208117ms)
Jul 30 12:34:41.318: INFO: (14) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 6.036687ms)
Jul 30 12:34:41.319: INFO: (14) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 6.792935ms)
Jul 30 12:34:41.319: INFO: (14) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 7.271438ms)
Jul 30 12:34:41.319: INFO: (14) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 7.062112ms)
Jul 30 12:34:41.319: INFO: (14) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 7.152284ms)
Jul 30 12:34:41.320: INFO: (14) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 7.875642ms)
Jul 30 12:34:41.320: INFO: (14) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 8.394835ms)
Jul 30 12:34:41.321: INFO: (14) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 9.80583ms)
Jul 30 12:34:41.325: INFO: (15) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.182558ms)
Jul 30 12:34:41.325: INFO: (15) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 3.882775ms)
Jul 30 12:34:41.326: INFO: (15) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 3.889495ms)
Jul 30 12:34:41.326: INFO: (15) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 3.969417ms)
Jul 30 12:34:41.326: INFO: (15) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 4.48091ms)
Jul 30 12:34:41.326: INFO: (15) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.90277ms)
Jul 30 12:34:41.326: INFO: (15) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 4.523851ms)
Jul 30 12:34:41.326: INFO: (15) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 4.865459ms)
Jul 30 12:34:41.327: INFO: (15) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 5.081935ms)
Jul 30 12:34:41.328: INFO: (15) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 5.874554ms)
Jul 30 12:34:41.328: INFO: (15) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 6.064008ms)
Jul 30 12:34:41.328: INFO: (15) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 6.410707ms)
Jul 30 12:34:41.328: INFO: (15) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 6.381556ms)
Jul 30 12:34:41.330: INFO: (15) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 8.707402ms)
Jul 30 12:34:41.330: INFO: (15) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 8.138439ms)
Jul 30 12:34:41.331: INFO: (15) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 9.358699ms)
Jul 30 12:34:41.335: INFO: (16) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 3.368293ms)
Jul 30 12:34:41.335: INFO: (16) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 3.730581ms)
Jul 30 12:34:41.336: INFO: (16) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.403128ms)
Jul 30 12:34:41.336: INFO: (16) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 4.801038ms)
Jul 30 12:34:41.337: INFO: (16) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.999493ms)
Jul 30 12:34:41.337: INFO: (16) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 5.627077ms)
Jul 30 12:34:41.337: INFO: (16) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 5.563486ms)
Jul 30 12:34:41.339: INFO: (16) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 7.113974ms)
Jul 30 12:34:41.339: INFO: (16) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 7.247217ms)
Jul 30 12:34:41.339: INFO: (16) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 7.580656ms)
Jul 30 12:34:41.339: INFO: (16) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 7.505223ms)
Jul 30 12:34:41.339: INFO: (16) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 7.733378ms)
Jul 30 12:34:41.339: INFO: (16) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 7.866223ms)
Jul 30 12:34:41.340: INFO: (16) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 8.078948ms)
Jul 30 12:34:41.340: INFO: (16) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 8.543118ms)
Jul 30 12:34:41.341: INFO: (16) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 10.133557ms)
Jul 30 12:34:41.345: INFO: (17) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 3.668259ms)
Jul 30 12:34:41.346: INFO: (17) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 4.130601ms)
Jul 30 12:34:41.347: INFO: (17) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 4.92191ms)
Jul 30 12:34:41.347: INFO: (17) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.511955ms)
Jul 30 12:34:41.347: INFO: (17) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 5.682628ms)
Jul 30 12:34:41.348: INFO: (17) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 6.325934ms)
Jul 30 12:34:41.348: INFO: (17) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 6.586051ms)
Jul 30 12:34:41.348: INFO: (17) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 6.377196ms)
Jul 30 12:34:41.349: INFO: (17) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 7.055012ms)
Jul 30 12:34:41.349: INFO: (17) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 7.503913ms)
Jul 30 12:34:41.349: INFO: (17) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 7.585856ms)
Jul 30 12:34:41.349: INFO: (17) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 7.825931ms)
Jul 30 12:34:41.349: INFO: (17) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 7.839741ms)
Jul 30 12:34:41.351: INFO: (17) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 9.8475ms)
Jul 30 12:34:41.352: INFO: (17) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 10.255521ms)
Jul 30 12:34:41.353: INFO: (17) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 11.798608ms)
Jul 30 12:34:41.358: INFO: (18) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 4.083309ms)
Jul 30 12:34:41.358: INFO: (18) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 4.274914ms)
Jul 30 12:34:41.359: INFO: (18) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 5.063764ms)
Jul 30 12:34:41.359: INFO: (18) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 5.004912ms)
Jul 30 12:34:41.359: INFO: (18) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 5.520135ms)
Jul 30 12:34:41.360: INFO: (18) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 6.101859ms)
Jul 30 12:34:41.360: INFO: (18) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 6.257643ms)
Jul 30 12:34:41.360: INFO: (18) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 6.682793ms)
Jul 30 12:34:41.360: INFO: (18) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 6.801046ms)
Jul 30 12:34:41.360: INFO: (18) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 6.764355ms)
Jul 30 12:34:41.360: INFO: (18) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 7.044383ms)
Jul 30 12:34:41.361: INFO: (18) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 7.232446ms)
Jul 30 12:34:41.361: INFO: (18) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 7.536354ms)
Jul 30 12:34:41.361: INFO: (18) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 7.824751ms)
Jul 30 12:34:41.362: INFO: (18) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 8.295042ms)
Jul 30 12:34:41.363: INFO: (18) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 9.073332ms)
Jul 30 12:34:41.366: INFO: (19) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">test<... (200; 3.371913ms)
Jul 30 12:34:41.367: INFO: (19) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:443/proxy/tlsrewritem... (200; 3.765371ms)
Jul 30 12:34:41.367: INFO: (19) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.364877ms)
Jul 30 12:34:41.367: INFO: (19) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:160/proxy/: foo (200; 4.462189ms)
Jul 30 12:34:41.367: INFO: (19) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:1080/proxy/rewriteme">... (200; 4.794577ms)
Jul 30 12:34:41.368: INFO: (19) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:460/proxy/: tls baz (200; 5.258598ms)
Jul 30 12:34:41.368: INFO: (19) /api/v1/namespaces/proxy-2840/pods/https:proxy-service-ss26j-jrkrz:462/proxy/: tls qux (200; 5.32806ms)
Jul 30 12:34:41.368: INFO: (19) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/: <a href="/api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz/proxy/rewriteme">test</a> (200; 5.262208ms)
Jul 30 12:34:41.368: INFO: (19) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname2/proxy/: bar (200; 5.691469ms)
Jul 30 12:34:41.369: INFO: (19) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname2/proxy/: tls qux (200; 6.178421ms)
Jul 30 12:34:41.369: INFO: (19) /api/v1/namespaces/proxy-2840/pods/http:proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 6.583111ms)
Jul 30 12:34:41.369: INFO: (19) /api/v1/namespaces/proxy-2840/pods/proxy-service-ss26j-jrkrz:162/proxy/: bar (200; 6.729285ms)
Jul 30 12:34:41.371: INFO: (19) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname1/proxy/: foo (200; 7.841812ms)
Jul 30 12:34:41.371: INFO: (19) /api/v1/namespaces/proxy-2840/services/https:proxy-service-ss26j:tlsportname1/proxy/: tls baz (200; 8.056317ms)
Jul 30 12:34:41.371: INFO: (19) /api/v1/namespaces/proxy-2840/services/http:proxy-service-ss26j:portname2/proxy/: bar (200; 8.121639ms)
Jul 30 12:34:41.372: INFO: (19) /api/v1/namespaces/proxy-2840/services/proxy-service-ss26j:portname1/proxy/: foo (200; 9.057431ms)
STEP: deleting ReplicationController proxy-service-ss26j in namespace proxy-2840, will wait for the garbage collector to delete the pods
Jul 30 12:34:41.436: INFO: Deleting ReplicationController proxy-service-ss26j took: 9.434791ms
Jul 30 12:34:41.536: INFO: Terminating ReplicationController proxy-service-ss26j pods took: 100.128015ms
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jul 30 12:34:44.337: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-2840" for this suite.

• [SLOW TEST:5.395 seconds]
[sig-network] Proxy
test/e2e/network/common/framework.go:23
  version v1
  test/e2e/network/proxy.go:74
    should proxy through a service and a pod  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]","total":356,"completed":126,"skipped":2172,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:44.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5309
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5309
STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service
STEP: creating service externalsvc in namespace services-5309
STEP: creating replication controller externalsvc in namespace services-5309
I0730 12:34:44.508458      23 runners.go:193] Created replication controller with name: externalsvc, namespace: services-5309, replica count: 2
I0730 12:34:47.559465      23 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
STEP: changing the ClusterIP service to type=ExternalName
Jul 30 12:34:47.578: INFO: Creating new exec pod
Jul 30 12:34:49.597: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-5309 exec execpodvvn8x -- /bin/sh -x -c nslookup clusterip-service.services-5309.svc.cluster.local'
Jul 30 12:34:49.749: INFO: stderr: "+ nslookup clusterip-service.services-5309.svc.cluster.local\n"
Jul 30 12:34:49.749: INFO: stdout: "Server:\t\t10.152.183.58\nAddress:\t10.152.183.58#53\n\nclusterip-service.services-5309.svc.cluster.local\tcanonical name = externalsvc.services-5309.svc.cluster.local.\nName:\texternalsvc.services-5309.svc.cluster.local\nAddress: 10.152.183.162\n\n"
STEP: deleting ReplicationController externalsvc in namespace services-5309, will wait for the garbage collector to delete the pods
Jul 30 12:34:49.811: INFO: Deleting ReplicationController externalsvc took: 7.720808ms
Jul 30 12:34:49.912: INFO: Terminating ReplicationController externalsvc pods took: 100.705881ms
Jul 30 12:34:52.027: INFO: Cleaning up the ClusterIP to ExternalName test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:34:52.037: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5309" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:7.701 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ClusterIP to ExternalName [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]","total":356,"completed":127,"skipped":2177,"failed":0}
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server 
  should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:52.050: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4023
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should support --unix-socket=/path  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Starting the proxy
Jul 30 12:34:52.178: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4023 proxy --unix-socket=/tmp/kubectl-proxy-unix2144505186/test'
STEP: retrieving proxy /api/ output
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:34:52.209: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4023" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]","total":356,"completed":128,"skipped":2185,"failed":0}
SSS
------------------------------
[sig-architecture] Conformance Tests 
  should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:52.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename conformance-tests
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in conformance-tests-5025
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should have at least two untainted nodes [Conformance]
  test/e2e/framework/framework.go:652
STEP: Getting node addresses
Jul 30 12:34:52.353: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
[AfterEach] [sig-architecture] Conformance Tests
  test/e2e/framework/framework.go:188
Jul 30 12:34:52.358: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "conformance-tests-5025" for this suite.
•{"msg":"PASSED [sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]","total":356,"completed":129,"skipped":2188,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:52.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-5880
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul 30 12:34:52.524: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:34:52.524: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:34:52.528: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:34:52.528: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:34:53.534: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:34:53.534: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:34:53.537: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:34:53.537: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:34:54.533: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:34:54.533: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:34:54.537: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 12:34:54.537: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Getting /status
Jul 30 12:34:54.544: INFO: Daemon Set daemon-set has Conditions: []
STEP: updating the DaemonSet Status
Jul 30 12:34:54.554: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the daemon set status to be updated
Jul 30 12:34:54.556: INFO: Observed &DaemonSet event: ADDED
Jul 30 12:34:54.556: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.556: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.556: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.556: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.556: INFO: Found daemon set daemon-set in namespace daemonsets-5880 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul 30 12:34:54.556: INFO: Daemon set daemon-set has an updated status
STEP: patching the DaemonSet Status
STEP: watching for the daemon set status to be patched
Jul 30 12:34:54.563: INFO: Observed &DaemonSet event: ADDED
Jul 30 12:34:54.563: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.563: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.563: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.563: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.563: INFO: Observed daemon set daemon-set in namespace daemonsets-5880 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul 30 12:34:54.563: INFO: Observed &DaemonSet event: MODIFIED
Jul 30 12:34:54.563: INFO: Found daemon set daemon-set in namespace daemonsets-5880 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
Jul 30 12:34:54.563: INFO: Daemon set daemon-set has a patched status
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5880, will wait for the garbage collector to delete the pods
Jul 30 12:34:54.628: INFO: Deleting DaemonSet.extensions daemon-set took: 6.174681ms
Jul 30 12:34:54.729: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.05121ms
Jul 30 12:34:57.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:34:57.438: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul 30 12:34:57.441: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"21239"},"items":null}

Jul 30 12:34:57.444: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"21239"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:34:57.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-5880" for this suite.

• [SLOW TEST:5.098 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should verify changes to a daemon set status [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]","total":356,"completed":130,"skipped":2218,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:34:57.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-3196
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:34:57.954: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:35:00.978: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should include webhook resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/admissionregistration.k8s.io discovery document
STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document
STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document
STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:35:00.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-3196" for this suite.
STEP: Destroying namespace "webhook-3196-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]","total":356,"completed":131,"skipped":2251,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:01.037: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-267
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:35:01.417: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:35:04.443: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should unconditionally reject operations on fail closed webhook [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API
Jul 30 12:35:04.465: INFO: Waiting for webhook configuration to be ready...
STEP: create a namespace for the webhook
STEP: create a configmap should be unconditionally rejected by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:35:04.631: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-267" for this suite.
STEP: Destroying namespace "webhook-267-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]","total":356,"completed":132,"skipped":2262,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:04.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-5028
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul 30 12:35:07.866: INFO: Expected: &{OK} to match Container's Termination Message: OK --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul 30 12:35:07.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-5028" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":133,"skipped":2273,"failed":0}
SSSSS
------------------------------
[sig-apps] ReplicationController 
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:07.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-1470
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a ReplicationController is created
STEP: When the matched label of one of its pods change
Jul 30 12:35:08.046: INFO: Pod name pod-release: Found 0 pods out of 1
Jul 30 12:35:13.056: INFO: Pod name pod-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul 30 12:35:14.077: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-1470" for this suite.

• [SLOW TEST:6.191 seconds]
[sig-apps] ReplicationController
test/e2e/apps/framework.go:23
  should release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicationController should release no longer matching pods [Conformance]","total":356,"completed":134,"skipped":2278,"failed":0}
SSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:14.086: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5903
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-map-51adc354-ce0f-439e-91f5-c1d78dedeac4
STEP: Creating a pod to test consume secrets
Jul 30 12:35:14.227: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781" in namespace "projected-5903" to be "Succeeded or Failed"
Jul 30 12:35:14.232: INFO: Pod "pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781": Phase="Pending", Reason="", readiness=false. Elapsed: 4.562272ms
Jul 30 12:35:16.240: INFO: Pod "pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012430194s
Jul 30 12:35:18.247: INFO: Pod "pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019861681s
STEP: Saw pod success
Jul 30 12:35:18.247: INFO: Pod "pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781" satisfied condition "Succeeded or Failed"
Jul 30 12:35:18.251: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:35:18.276: INFO: Waiting for pod pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781 to disappear
Jul 30 12:35:18.279: INFO: Pod pod-projected-secrets-c9d00387-d3d9-4d98-8ec8-e82f5d17b781 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul 30 12:35:18.279: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5903" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]","total":356,"completed":135,"skipped":2284,"failed":0}
S
------------------------------
[sig-api-machinery] Watchers 
  should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:18.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-9559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to start watching from a specific resource version [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: modifying the configmap a second time
STEP: deleting the configmap
STEP: creating a watch on configmaps from the resource version returned by the first update
STEP: Expecting to observe notifications for all changes to the configmap after the first update
Jul 30 12:35:18.446: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9559  c78d191b-356e-4ba0-8870-f902ed9763b2 21588 0 2022-07-30 12:35:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-07-30 12:35:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:35:18.446: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9559  c78d191b-356e-4ba0-8870-f902ed9763b2 21589 0 2022-07-30 12:35:18 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] []  [{e2e.test Update v1 2022-07-30 12:35:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul 30 12:35:18.446: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-9559" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]","total":356,"completed":136,"skipped":2285,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:18.457: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-6051
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:35:18.622: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-6051" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]","total":356,"completed":137,"skipped":2325,"failed":0}
SSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:18.631: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7251
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:35:18.768: INFO: Waiting up to 5m0s for pod "downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954" in namespace "projected-7251" to be "Succeeded or Failed"
Jul 30 12:35:18.771: INFO: Pod "downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954": Phase="Pending", Reason="", readiness=false. Elapsed: 2.85404ms
Jul 30 12:35:20.779: INFO: Pod "downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010401596s
Jul 30 12:35:22.785: INFO: Pod "downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016757536s
STEP: Saw pod success
Jul 30 12:35:22.785: INFO: Pod "downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954" satisfied condition "Succeeded or Failed"
Jul 30 12:35:22.789: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954 container client-container: <nil>
STEP: delete the pod
Jul 30 12:35:22.811: INFO: Waiting for pod downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954 to disappear
Jul 30 12:35:22.813: INFO: Pod downwardapi-volume-333dd848-b8b1-473e-b257-b65d5e2e4954 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 12:35:22.813: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7251" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]","total":356,"completed":138,"skipped":2330,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:22.823: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4454
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:35:22.967: INFO: Waiting up to 5m0s for pod "downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee" in namespace "projected-4454" to be "Succeeded or Failed"
Jul 30 12:35:22.970: INFO: Pod "downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee": Phase="Pending", Reason="", readiness=false. Elapsed: 3.136507ms
Jul 30 12:35:24.976: INFO: Pod "downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009475982s
Jul 30 12:35:26.981: INFO: Pod "downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014239804s
STEP: Saw pod success
Jul 30 12:35:26.981: INFO: Pod "downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee" satisfied condition "Succeeded or Failed"
Jul 30 12:35:26.984: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee container client-container: <nil>
STEP: delete the pod
Jul 30 12:35:27.004: INFO: Waiting for pod downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee to disappear
Jul 30 12:35:27.006: INFO: Pod downwardapi-volume-202a4129-18f4-4add-a5a9-cb6416b017ee no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 12:35:27.006: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4454" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]","total":356,"completed":139,"skipped":2345,"failed":0}
S
------------------------------
[sig-cli] Kubectl client Kubectl replace 
  should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:27.015: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6372
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1574
[It] should update a single-container pod's image  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul 30 12:35:27.146: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6372 run e2e-test-httpd-pod --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
Jul 30 12:35:27.194: INFO: stderr: ""
Jul 30 12:35:27.194: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod is running
STEP: verifying the pod e2e-test-httpd-pod was created
Jul 30 12:35:32.245: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6372 get pod e2e-test-httpd-pod -o json'
Jul 30 12:35:32.294: INFO: stderr: ""
Jul 30 12:35:32.294: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"kubernetes.io/psp\": \"e2e-test-privileged-psp\"\n        },\n        \"creationTimestamp\": \"2022-07-30T12:35:27Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6372\",\n        \"resourceVersion\": \"21751\",\n        \"uid\": \"3c578786-132d-40f7-8d13-094857e62c06\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-7p8lc\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-74-61\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-7p8lc\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-30T12:35:27Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-30T12:35:28Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-30T12:35:28Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2022-07-30T12:35:27Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://47581d019ac2b406bb47e62b2b8613d884044920a3398a5fa80e3b4210631419\",\n                \"image\": \"k8s.gcr.io/e2e-test-images/httpd:2.4.38-2\",\n                \"imageID\": \"k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2022-07-30T12:35:27Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.74.61\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.81.86\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.81.86\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2022-07-30T12:35:27Z\"\n    }\n}\n"
STEP: replace the image in the pod
Jul 30 12:35:32.294: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6372 replace -f -'
Jul 30 12:35:32.461: INFO: stderr: ""
Jul 30 12:35:32.461: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
STEP: verifying the pod e2e-test-httpd-pod has the right image k8s.gcr.io/e2e-test-images/busybox:1.29-2
[AfterEach] Kubectl replace
  test/e2e/kubectl/kubectl.go:1578
Jul 30 12:35:32.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6372 delete pods e2e-test-httpd-pod'
Jul 30 12:35:34.488: INFO: stderr: ""
Jul 30 12:35:34.488: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:35:34.488: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6372" for this suite.

• [SLOW TEST:7.483 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl replace
  test/e2e/kubectl/kubectl.go:1571
    should update a single-container pod's image  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]","total":356,"completed":140,"skipped":2346,"failed":0}
SSSSSS
------------------------------
[sig-network] Services 
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:34.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-1671
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service multi-endpoint-test in namespace services-1671
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1671 to expose endpoints map[]
Jul 30 12:35:34.650: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
Jul 30 12:35:35.660: INFO: successfully validated that service multi-endpoint-test in namespace services-1671 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-1671
Jul 30 12:35:35.675: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:35:37.683: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1671 to expose endpoints map[pod1:[100]]
Jul 30 12:35:37.697: INFO: successfully validated that service multi-endpoint-test in namespace services-1671 exposes endpoints map[pod1:[100]]
STEP: Creating pod pod2 in namespace services-1671
Jul 30 12:35:37.709: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:35:39.714: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1671 to expose endpoints map[pod1:[100] pod2:[101]]
Jul 30 12:35:39.733: INFO: successfully validated that service multi-endpoint-test in namespace services-1671 exposes endpoints map[pod1:[100] pod2:[101]]
STEP: Checking if the Service forwards traffic to pods
Jul 30 12:35:39.733: INFO: Creating new exec pod
Jul 30 12:35:42.753: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1671 exec execpodm7dm2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
Jul 30 12:35:42.877: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
Jul 30 12:35:42.877: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:35:42.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1671 exec execpodm7dm2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 80'
Jul 30 12:35:43.013: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.63 80\nConnection to 10.152.183.63 80 port [tcp/http] succeeded!\n"
Jul 30 12:35:43.013: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:35:43.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1671 exec execpodm7dm2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
Jul 30 12:35:43.131: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
Jul 30 12:35:43.131: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:35:43.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-1671 exec execpodm7dm2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.63 81'
Jul 30 12:35:43.222: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.63 81\nConnection to 10.152.183.63 81 port [tcp/*] succeeded!\n"
Jul 30 12:35:43.222: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-1671
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1671 to expose endpoints map[pod2:[101]]
Jul 30 12:35:43.249: INFO: successfully validated that service multi-endpoint-test in namespace services-1671 exposes endpoints map[pod2:[101]]
STEP: Deleting pod pod2 in namespace services-1671
STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1671 to expose endpoints map[]
Jul 30 12:35:43.273: INFO: successfully validated that service multi-endpoint-test in namespace services-1671 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:35:43.289: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-1671" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:8.801 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve multiport endpoints from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve multiport endpoints from pods  [Conformance]","total":356,"completed":141,"skipped":2352,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions 
  should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:43.300: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-2475
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if v1 is in available api versions  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating api versions
Jul 30 12:35:43.433: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-2475 api-versions'
Jul 30 12:35:43.477: INFO: stderr: ""
Jul 30 12:35:43.477: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nautoscaling/v2beta1\nautoscaling/v2beta2\nbatch/v1\nbatch/v1beta1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\ndiscovery.k8s.io/v1beta1\nevents.k8s.io/v1\nevents.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta1\nflowcontrol.apiserver.k8s.io/v1beta2\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\nnode.k8s.io/v1beta1\npolicy/v1\npolicy/v1beta1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nstorage.k8s.io/v1beta1\nv1\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:35:43.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-2475" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]","total":356,"completed":142,"skipped":2430,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity 
   should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:43.486: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename csistoragecapacity
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in csistoragecapacity-6562
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support CSIStorageCapacities API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/storage.k8s.io
STEP: getting /apis/storage.k8s.io/v1
STEP: creating
STEP: watching
Jul 30 12:35:43.636: INFO: starting watch
STEP: getting
STEP: listing in namespace
STEP: listing across namespaces
STEP: patching
STEP: updating
Jul 30 12:35:43.661: INFO: waiting for watch events with expected annotations in namespace
Jul 30 12:35:43.661: INFO: waiting for watch events with expected annotations across namespace
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-storage] CSIStorageCapacity
  test/e2e/framework/framework.go:188
Jul 30 12:35:43.688: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "csistoragecapacity-6562" for this suite.
•{"msg":"PASSED [sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]","total":356,"completed":143,"skipped":2443,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod 
  should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:43.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5115
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should print the output to logs [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:35:43.839: INFO: The status of Pod busybox-scheduling-fe9e0cba-6d94-4b6e-9671-fe2fbd422e87 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:35:45.844: INFO: The status of Pod busybox-scheduling-fe9e0cba-6d94-4b6e-9671-fe2fbd422e87 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul 30 12:35:45.855: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5115" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]","total":356,"completed":144,"skipped":2455,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:35:45.865: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-6850
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul 30 12:35:45.994: INFO: PodSpec: initContainers in spec.initContainers
Jul 30 12:36:32.567: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-cecf0eb7-61ac-4020-8733-b190a77ed150", GenerateName:"", Namespace:"init-container-6850", SelfLink:"", UID:"e14eac97-0192-43f9-9e47-ed4cc09b11d9", ResourceVersion:"22114", Generation:0, CreationTimestamp:time.Date(2022, time.July, 30, 12, 35, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"994423040"}, Annotations:map[string]string{"kubernetes.io/psp":"e2e-test-privileged-psp"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ZZZ_DeprecatedClusterName:"", ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.July, 30, 12, 35, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039ea150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2022, time.July, 30, 12, 35, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0039ea180), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-d6ct4", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc002dc2cc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d6ct4", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil)}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d6ct4", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"k8s.gcr.io/pause:3.7", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}}, VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-d6ct4", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00597ff08), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-74-61", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00283a700), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00597ff90)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00597ffb0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00597ffb8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00597ffbc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001575980), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 30, 12, 35, 45, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 30, 12, 35, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 30, 12, 35, 45, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2022, time.July, 30, 12, 35, 45, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.74.61", PodIP:"192.168.81.113", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.81.113"}}, StartTime:time.Date(2022, time.July, 30, 12, 35, 45, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00283a7e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00283a850)}, Ready:false, RestartCount:3, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"k8s.gcr.io/e2e-test-images/busybox@sha256:c318242786b139d18676b1c09a0ad7f15fc17f8f16a5b2e625cd0dc8c9703daf", ContainerID:"containerd://04346a663d11a54189c0aafbe2908d089bfbec31f0d173658d594c11a0b34c6d", Started:(*bool)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc002dc2d40), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/e2e-test-images/busybox:1.29-2", ImageID:"", ContainerID:"", Started:(*bool)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc002dc2d20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"k8s.gcr.io/pause:3.7", ImageID:"", ContainerID:"", Started:(*bool)(0xc003aa00df)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil)}}
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul 30 12:36:32.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-6850" for this suite.

• [SLOW TEST:46.713 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should not start app containers if init containers fail on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]","total":356,"completed":145,"skipped":2479,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:36:32.578: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4300
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a volume subpath [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in volume subpath
Jul 30 12:36:32.725: INFO: Waiting up to 5m0s for pod "var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10" in namespace "var-expansion-4300" to be "Succeeded or Failed"
Jul 30 12:36:32.729: INFO: Pod "var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10": Phase="Pending", Reason="", readiness=false. Elapsed: 4.126731ms
Jul 30 12:36:34.734: INFO: Pod "var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008707426s
Jul 30 12:36:36.742: INFO: Pod "var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017091849s
STEP: Saw pod success
Jul 30 12:36:36.742: INFO: Pod "var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10" satisfied condition "Succeeded or Failed"
Jul 30 12:36:36.745: INFO: Trying to get logs from node ip-172-31-74-61 pod var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10 container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:36:36.770: INFO: Waiting for pod var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10 to disappear
Jul 30 12:36:36.773: INFO: Pod var-expansion-b134e4f4-d8e3-4fe4-872f-96c3cf40ea10 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 12:36:36.773: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4300" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]","total":356,"completed":146,"skipped":2504,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:36:36.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-5907
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul 30 12:36:36.917: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul 30 12:36:42.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-5907" for this suite.

• [SLOW TEST:5.846 seconds]
[sig-node] InitContainer [NodeConformance]
test/e2e/common/node/framework.go:23
  should invoke init containers on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]","total":356,"completed":147,"skipped":2513,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:36:42.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2898
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:36:43.153: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:36:46.177: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:36:46.183: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8908-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:36:49.270: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2898" for this suite.
STEP: Destroying namespace "webhook-2898-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.697 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]","total":356,"completed":148,"skipped":2536,"failed":0}
SS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:36:49.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9437
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:36:49.469: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3" in namespace "downward-api-9437" to be "Succeeded or Failed"
Jul 30 12:36:49.473: INFO: Pod "downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3": Phase="Pending", Reason="", readiness=false. Elapsed: 3.299891ms
Jul 30 12:36:51.479: INFO: Pod "downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009422188s
Jul 30 12:36:53.487: INFO: Pod "downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017840955s
STEP: Saw pod success
Jul 30 12:36:53.487: INFO: Pod "downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3" satisfied condition "Succeeded or Failed"
Jul 30 12:36:53.490: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3 container client-container: <nil>
STEP: delete the pod
Jul 30 12:36:53.512: INFO: Waiting for pod downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3 to disappear
Jul 30 12:36:53.515: INFO: Pod downwardapi-volume-8d9ad835-98b1-4294-ac31-2cba1a2827c3 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 12:36:53.515: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9437" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":149,"skipped":2538,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:36:53.526: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6186
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:36:53.665: INFO: Waiting up to 5m0s for pod "downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0" in namespace "projected-6186" to be "Succeeded or Failed"
Jul 30 12:36:53.668: INFO: Pod "downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.235579ms
Jul 30 12:36:55.675: INFO: Pod "downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009963089s
Jul 30 12:36:57.682: INFO: Pod "downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016461497s
STEP: Saw pod success
Jul 30 12:36:57.682: INFO: Pod "downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0" satisfied condition "Succeeded or Failed"
Jul 30 12:36:57.685: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0 container client-container: <nil>
STEP: delete the pod
Jul 30 12:36:57.703: INFO: Waiting for pod downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0 to disappear
Jul 30 12:36:57.706: INFO: Pod downwardapi-volume-8ae6f433-2386-42e9-8a12-f89e054d0fe0 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 12:36:57.706: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6186" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":150,"skipped":2577,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:36:57.715: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-1137
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:36:57.855: INFO: Waiting up to 5m0s for pod "downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c" in namespace "downward-api-1137" to be "Succeeded or Failed"
Jul 30 12:36:57.858: INFO: Pod "downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c": Phase="Pending", Reason="", readiness=false. Elapsed: 3.331361ms
Jul 30 12:36:59.864: INFO: Pod "downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c": Phase="Running", Reason="", readiness=false. Elapsed: 2.009355512s
Jul 30 12:37:01.874: INFO: Pod "downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019919718s
STEP: Saw pod success
Jul 30 12:37:01.874: INFO: Pod "downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c" satisfied condition "Succeeded or Failed"
Jul 30 12:37:01.878: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c container client-container: <nil>
STEP: delete the pod
Jul 30 12:37:01.897: INFO: Waiting for pod downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c to disappear
Jul 30 12:37:01.899: INFO: Pod downwardapi-volume-9cbbef49-7568-4a00-a304-47c13d27ae9c no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 12:37:01.899: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-1137" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":151,"skipped":2587,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:37:01.908: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-9404
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with label A
STEP: creating a watch on configmaps with label B
STEP: creating a watch on configmaps with label A or B
STEP: creating a configmap with label A and ensuring the correct watchers observe the notification
Jul 30 12:37:02.074: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22453 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:37:02.074: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22453 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A and ensuring the correct watchers observe the notification
Jul 30 12:37:02.081: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22454 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:37:02.082: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22454 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying configmap A again and ensuring the correct watchers observe the notification
Jul 30 12:37:02.089: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22455 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:37:02.089: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22455 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap A and ensuring the correct watchers observe the notification
Jul 30 12:37:02.097: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22456 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:37:02.097: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9404  7a0885fb-70db-4c4e-91fd-d77570a59812 22456 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: creating a configmap with label B and ensuring the correct watchers observe the notification
Jul 30 12:37:02.103: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9404  8316772b-b26e-473e-aaaa-a619d7e81c54 22457 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:37:02.103: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9404  8316772b-b26e-473e-aaaa-a619d7e81c54 22457 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: deleting configmap B and ensuring the correct watchers observe the notification
Jul 30 12:37:12.117: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9404  8316772b-b26e-473e-aaaa-a619d7e81c54 22498 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:37:12.117: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9404  8316772b-b26e-473e-aaaa-a619d7e81c54 22498 0 2022-07-30 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] []  [{e2e.test Update v1 2022-07-30 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul 30 12:37:22.119: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-9404" for this suite.

• [SLOW TEST:20.225 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe add, update, and delete watch notifications on configmaps [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]","total":356,"completed":152,"skipped":2618,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:37:22.134: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-588
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be immutable if `immutable` field is set [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:37:22.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-588" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]","total":356,"completed":153,"skipped":2630,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose 
  should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:37:22.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-8987
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create services for rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jul 30 12:37:22.442: INFO: namespace kubectl-8987
Jul 30 12:37:22.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-8987 create -f -'
Jul 30 12:37:22.919: INFO: stderr: ""
Jul 30 12:37:22.919: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jul 30 12:37:23.925: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 12:37:23.925: INFO: Found 1 / 1
Jul 30 12:37:23.925: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jul 30 12:37:23.928: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 12:37:23.928: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jul 30 12:37:23.928: INFO: wait on agnhost-primary startup in kubectl-8987 
Jul 30 12:37:23.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-8987 logs agnhost-primary-l5hk2 agnhost-primary'
Jul 30 12:37:23.978: INFO: stderr: ""
Jul 30 12:37:23.978: INFO: stdout: "Paused\n"
STEP: exposing RC
Jul 30 12:37:23.978: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-8987 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
Jul 30 12:37:24.032: INFO: stderr: ""
Jul 30 12:37:24.032: INFO: stdout: "service/rm2 exposed\n"
Jul 30 12:37:24.036: INFO: Service rm2 in namespace kubectl-8987 found.
STEP: exposing service
Jul 30 12:37:26.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-8987 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
Jul 30 12:37:26.103: INFO: stderr: ""
Jul 30 12:37:26.103: INFO: stdout: "service/rm3 exposed\n"
Jul 30 12:37:26.110: INFO: Service rm3 in namespace kubectl-8987 found.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:37:28.120: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-8987" for this suite.

• [SLOW TEST:5.818 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl expose
  test/e2e/kubectl/kubectl.go:1249
    should create services for rc  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]","total":356,"completed":154,"skipped":2666,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring 
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:37:28.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename endpointslicemirroring
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslicemirroring-8009
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSliceMirroring
  test/e2e/network/endpointslicemirroring.go:41
[It] should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
STEP: mirroring a new custom Endpoint
Jul 30 12:37:28.279: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
STEP: mirroring an update to a custom Endpoint
Jul 30 12:37:30.297: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
STEP: mirroring deletion of a custom Endpoint
Jul 30 12:37:32.312: INFO: Waiting for 0 EndpointSlices to exist, got 1
[AfterEach] [sig-network] EndpointSliceMirroring
  test/e2e/framework/framework.go:188
Jul 30 12:37:34.316: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslicemirroring-8009" for this suite.

• [SLOW TEST:6.197 seconds]
[sig-network] EndpointSliceMirroring
test/e2e/network/common/framework.go:23
  should mirror a custom Endpoints resource through create update and delete [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]","total":356,"completed":155,"skipped":2707,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:37:34.327: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-9594
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul 30 12:37:34.458: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul 30 12:37:34.465: INFO: Waiting for terminating namespaces to be deleted...
Jul 30 12:37:34.468: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-47-213 before test
Jul 30 12:37:34.473: INFO: nginx-ingress-controller-kubernetes-worker-m74xp from ingress-nginx-kubernetes-worker started at 2022-07-30 11:50:58 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.473: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 12:37:34.473: INFO: calico-kube-controllers-5488b65678-bxz55 from kube-system started at 2022-07-30 12:05:33 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.473: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul 30 12:37:34.473: INFO: sonobuoy from sonobuoy started at 2022-07-30 11:56:59 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.473: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jul 30 12:37:34.473: INFO: sonobuoy-e2e-job-e4d2d2eb16ce474e from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:37:34.473: INFO: 	Container e2e ready: true, restart count 0
Jul 30 12:37:34.473: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:37:34.473: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-dxmzm from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:37:34.473: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:37:34.473: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 12:37:34.473: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-74-61 before test
Jul 30 12:37:34.477: INFO: nginx-ingress-controller-kubernetes-worker-xh64j from ingress-nginx-kubernetes-worker started at 2022-07-30 12:05:45 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.477: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 12:37:34.477: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-k4bdp from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:37:34.477: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:37:34.477: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 12:37:34.477: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-87-57 before test
Jul 30 12:37:34.482: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sld8q from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Jul 30 12:37:34.482: INFO: nginx-ingress-controller-kubernetes-worker-g7v8n from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 12:37:34.482: INFO: coredns-86c98bfcdb-phwp7 from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container coredns ready: true, restart count 0
Jul 30 12:37:34.482: INFO: kube-state-metrics-5cdbfd47b4-dcb7g from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jul 30 12:37:34.482: INFO: metrics-server-v0.5.2-6bfd958b56-d28nd from kube-system started at 2022-07-30 11:48:05 +0000 UTC (2 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container metrics-server ready: true, restart count 0
Jul 30 12:37:34.482: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Jul 30 12:37:34.482: INFO: dashboard-metrics-scraper-8669b59d4f-8dtvd from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul 30 12:37:34.482: INFO: kubernetes-dashboard-585fc6bc87-l57jt from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jul 30 12:37:34.482: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-bk2gt from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 12:37:34.482: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 12:37:34.482: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-b29af355-0e1a-4bd3-b68e-a3d64c7c7448 95
STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled
STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.74.61 on the node which pod4 resides and expect not scheduled
STEP: removing the label kubernetes.io/e2e-b29af355-0e1a-4bd3-b68e-a3d64c7c7448 off the node ip-172-31-74-61
STEP: verifying the node doesn't have the label kubernetes.io/e2e-b29af355-0e1a-4bd3-b68e-a3d64c7c7448
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:42:40.587: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-9594" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83

• [SLOW TEST:306.270 seconds]
[sig-scheduling] SchedulerPredicates [Serial]
test/e2e/scheduling/framework.go:40
  validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]","total":356,"completed":156,"skipped":2720,"failed":0}
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:42:40.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6525
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:42:41.070: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:42:44.094: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate pod and apply defaults after mutation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating pod webhook via the AdmissionRegistration API
STEP: create a pod that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:42:44.135: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6525" for this suite.
STEP: Destroying namespace "webhook-6525-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]","total":356,"completed":157,"skipped":2722,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:42:44.197: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-5694
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
STEP: referencing a single matching pod
STEP: referencing matching pods with named port
STEP: creating empty Endpoints and EndpointSlices for no matching Pods
STEP: recreating EndpointSlices after they've been deleted
Jul 30 12:43:04.444: INFO: EndpointSlice for Service endpointslice-5694/example-named-port not found
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul 30 12:43:14.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-5694" for this suite.

• [SLOW TEST:30.273 seconds]
[sig-network] EndpointSlice
test/e2e/network/common/framework.go:23
  should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]","total":356,"completed":158,"skipped":2757,"failed":0}
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:43:14.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7887
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7887
[It] should list, patch and delete a collection of StatefulSets [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:43:14.618: INFO: Found 0 stateful pods, waiting for 1
Jul 30 12:43:24.623: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: patching the StatefulSet
Jul 30 12:43:24.649: INFO: Found 1 stateful pods, waiting for 2
Jul 30 12:43:34.655: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:43:34.655: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
STEP: Listing all StatefulSets
STEP: Delete all of the StatefulSets
STEP: Verify that StatefulSets have been deleted
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 12:43:34.679: INFO: Deleting all statefulset in ns statefulset-7887
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 12:43:34.689: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7887" for this suite.

• [SLOW TEST:20.236 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should list, patch and delete a collection of StatefulSets [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]","total":356,"completed":159,"skipped":2757,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:43:34.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5214
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:43:34.846: INFO: Waiting up to 5m0s for pod "downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92" in namespace "projected-5214" to be "Succeeded or Failed"
Jul 30 12:43:34.849: INFO: Pod "downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92": Phase="Pending", Reason="", readiness=false. Elapsed: 3.164362ms
Jul 30 12:43:36.855: INFO: Pod "downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009380594s
Jul 30 12:43:38.860: INFO: Pod "downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014245194s
STEP: Saw pod success
Jul 30 12:43:38.860: INFO: Pod "downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92" satisfied condition "Succeeded or Failed"
Jul 30 12:43:38.863: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92 container client-container: <nil>
STEP: delete the pod
Jul 30 12:43:38.891: INFO: Waiting for pod downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92 to disappear
Jul 30 12:43:38.893: INFO: Pod downwardapi-volume-d7bda59b-d035-45f0-9182-84f1c245bf92 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 12:43:38.893: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5214" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]","total":356,"completed":160,"skipped":2814,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:43:38.903: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-5928
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should adopt matching pods on creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption is created
Jul 30 12:43:39.045: INFO: The status of Pod pod-adoption is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:43:41.053: INFO: The status of Pod pod-adoption is Running (Ready = true)
STEP: When a replication controller with a matching selector is created
STEP: Then the orphan pod is adopted
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul 30 12:43:42.071: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-5928" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should adopt matching pods on creation [Conformance]","total":356,"completed":161,"skipped":2822,"failed":0}
SSSSSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:43:42.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-5636
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-5636
STEP: creating service affinity-nodeport-transition in namespace services-5636
STEP: creating replication controller affinity-nodeport-transition in namespace services-5636
I0730 12:43:42.237069      23 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-5636, replica count: 3
I0730 12:43:45.288275      23 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 12:43:45.300: INFO: Creating new exec pod
Jul 30 12:43:48.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-5636 exec execpod-affinityx6qwg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
Jul 30 12:43:48.456: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
Jul 30 12:43:48.456: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:43:48.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-5636 exec execpod-affinityx6qwg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.67 80'
Jul 30 12:43:48.550: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.67 80\nConnection to 10.152.183.67 80 port [tcp/http] succeeded!\n"
Jul 30 12:43:48.550: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:43:48.550: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-5636 exec execpod-affinityx6qwg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.47.213 30766'
Jul 30 12:43:48.685: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.47.213 30766\nConnection to 172.31.47.213 30766 port [tcp/*] succeeded!\n"
Jul 30 12:43:48.685: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:43:48.685: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-5636 exec execpod-affinityx6qwg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.57 30766'
Jul 30 12:43:48.783: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.57 30766\nConnection to 172.31.87.57 30766 port [tcp/*] succeeded!\n"
Jul 30 12:43:48.783: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:43:48.792: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-5636 exec execpod-affinityx6qwg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.47.213:30766/ ; done'
Jul 30 12:43:48.964: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n"
Jul 30 12:43:48.964: INFO: stdout: "\naffinity-nodeport-transition-49zv6\naffinity-nodeport-transition-gm7hn\naffinity-nodeport-transition-49zv6\naffinity-nodeport-transition-49zv6\naffinity-nodeport-transition-49zv6\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-gm7hn\naffinity-nodeport-transition-gm7hn\naffinity-nodeport-transition-gm7hn\naffinity-nodeport-transition-49zv6\naffinity-nodeport-transition-49zv6\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-gm7hn\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-gm7hn"
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-49zv6
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-gm7hn
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-49zv6
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-49zv6
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-49zv6
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-gm7hn
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-gm7hn
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-gm7hn
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-49zv6
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-49zv6
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-gm7hn
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:48.964: INFO: Received response from host: affinity-nodeport-transition-gm7hn
Jul 30 12:43:48.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-5636 exec execpod-affinityx6qwg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.47.213:30766/ ; done'
Jul 30 12:43:49.162: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:30766/\n"
Jul 30 12:43:49.162: INFO: stdout: "\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z\naffinity-nodeport-transition-87t9z"
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Received response from host: affinity-nodeport-transition-87t9z
Jul 30 12:43:49.162: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5636, will wait for the garbage collector to delete the pods
Jul 30 12:43:49.234: INFO: Deleting ReplicationController affinity-nodeport-transition took: 6.640477ms
Jul 30 12:43:49.334: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.408688ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:43:51.459: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-5636" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.386 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":162,"skipped":2832,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:43:51.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-5224
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should use the image defaults if command and args are blank [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul 30 12:43:53.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-5224" for this suite.
•{"msg":"PASSED [sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]","total":356,"completed":163,"skipped":2845,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:43:53.692: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-8574
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul 30 12:43:53.836: INFO: The status of Pod labelsupdateebd96e33-7974-48e5-8ada-0221c188c0a1 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:43:55.843: INFO: The status of Pod labelsupdateebd96e33-7974-48e5-8ada-0221c188c0a1 is Running (Ready = true)
Jul 30 12:43:56.367: INFO: Successfully updated pod "labelsupdateebd96e33-7974-48e5-8ada-0221c188c0a1"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 12:43:58.381: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-8574" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":164,"skipped":2900,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:43:58.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-8311
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul 30 12:43:58.551: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:44:00.558: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute poststart exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul 30 12:44:00.571: INFO: The status of Pod pod-with-poststart-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:44:02.578: INFO: The status of Pod pod-with-poststart-exec-hook is Running (Ready = true)
STEP: check poststart hook
STEP: delete the pod with lifecycle hook
Jul 30 12:44:02.607: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jul 30 12:44:02.611: INFO: Pod pod-with-poststart-exec-hook still exists
Jul 30 12:44:04.612: INFO: Waiting for pod pod-with-poststart-exec-hook to disappear
Jul 30 12:44:04.616: INFO: Pod pod-with-poststart-exec-hook no longer exists
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul 30 12:44:04.616: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-8311" for this suite.

• [SLOW TEST:6.231 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute poststart exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]","total":356,"completed":165,"skipped":2909,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:04.627: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9659
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 12:44:04.765: INFO: Waiting up to 5m0s for pod "downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9" in namespace "downward-api-9659" to be "Succeeded or Failed"
Jul 30 12:44:04.769: INFO: Pod "downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.865318ms
Jul 30 12:44:06.776: INFO: Pod "downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011024201s
Jul 30 12:44:08.784: INFO: Pod "downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018971353s
STEP: Saw pod success
Jul 30 12:44:08.784: INFO: Pod "downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9" satisfied condition "Succeeded or Failed"
Jul 30 12:44:08.787: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9 container client-container: <nil>
STEP: delete the pod
Jul 30 12:44:08.812: INFO: Waiting for pod downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9 to disappear
Jul 30 12:44:08.815: INFO: Pod downwardapi-volume-5124dbc9-1578-4985-9dc0-959d6d8eccc9 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 12:44:08.815: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9659" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":166,"skipped":2921,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap 
  should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:08.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5260
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should fail to create ConfigMap with empty key [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap that has name configmap-test-emptyKey-e2bcd576-c77d-4f1a-8133-673d012c93d0
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:44:08.965: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5260" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]","total":356,"completed":167,"skipped":2938,"failed":0}
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:08.978: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-2105
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should invoke init containers on a RestartAlways pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul 30 12:44:09.114: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul 30 12:44:13.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-2105" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]","total":356,"completed":168,"skipped":2945,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:13.452: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-7326
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of pod templates [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pod templates
Jul 30 12:44:13.594: INFO: created test-podtemplate-1
Jul 30 12:44:13.598: INFO: created test-podtemplate-2
Jul 30 12:44:13.603: INFO: created test-podtemplate-3
STEP: get a list of pod templates with a label in the current namespace
STEP: delete collection of pod templates
Jul 30 12:44:13.606: INFO: requesting DeleteCollection of pod templates
STEP: check that the list of pod templates matches the requested quantity
Jul 30 12:44:13.623: INFO: requesting list of pod templates to confirm quantity
[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jul 30 12:44:13.627: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-7326" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should delete a collection of pod templates [Conformance]","total":356,"completed":169,"skipped":3014,"failed":0}
SSSSSS
------------------------------
[sig-node] Secrets 
  should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:13.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3534
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a secret [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a secret
STEP: listing secrets in all namespaces to ensure that there are more than zero
STEP: patching the secret
STEP: deleting the secret using a LabelSelector
STEP: listing secrets in all namespaces, searching for label name and value in patch
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:44:13.796: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3534" for this suite.
•{"msg":"PASSED [sig-node] Secrets should patch a secret [Conformance]","total":356,"completed":170,"skipped":3020,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:13.807: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3338
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jul 30 12:44:13.948: INFO: Waiting up to 5m0s for pod "pod-b8530f65-8563-4367-b3cc-a8de48502024" in namespace "emptydir-3338" to be "Succeeded or Failed"
Jul 30 12:44:13.951: INFO: Pod "pod-b8530f65-8563-4367-b3cc-a8de48502024": Phase="Pending", Reason="", readiness=false. Elapsed: 3.117656ms
Jul 30 12:44:15.958: INFO: Pod "pod-b8530f65-8563-4367-b3cc-a8de48502024": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010198839s
Jul 30 12:44:17.965: INFO: Pod "pod-b8530f65-8563-4367-b3cc-a8de48502024": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017129375s
STEP: Saw pod success
Jul 30 12:44:17.965: INFO: Pod "pod-b8530f65-8563-4367-b3cc-a8de48502024" satisfied condition "Succeeded or Failed"
Jul 30 12:44:17.969: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-b8530f65-8563-4367-b3cc-a8de48502024 container test-container: <nil>
STEP: delete the pod
Jul 30 12:44:17.985: INFO: Waiting for pod pod-b8530f65-8563-4367-b3cc-a8de48502024 to disappear
Jul 30 12:44:17.988: INFO: Pod pod-b8530f65-8563-4367-b3cc-a8de48502024 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 12:44:17.988: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3338" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":171,"skipped":3040,"failed":0}
SSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class 
  should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:17.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-3977
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Pods Set QOS Class
  test/e2e/node/pods.go:152
[It] should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
STEP: verifying QOS class is set on the pod
[AfterEach] [sig-node] Pods Extended
  test/e2e/framework/framework.go:188
Jul 30 12:44:18.142: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-3977" for this suite.
•{"msg":"PASSED [sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]","total":356,"completed":172,"skipped":3049,"failed":0}
SSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:18.152: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-6497
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should test the lifecycle of a ReplicationController [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ReplicationController
STEP: waiting for RC to be added
STEP: waiting for available Replicas
STEP: patching ReplicationController
STEP: waiting for RC to be modified
STEP: patching ReplicationController status
STEP: waiting for RC to be modified
STEP: waiting for available Replicas
STEP: fetching ReplicationController status
STEP: patching ReplicationController scale
STEP: waiting for RC to be modified
STEP: waiting for ReplicationController's scale to be the max amount
STEP: fetching ReplicationController; ensuring that it's patched
STEP: updating ReplicationController status
STEP: waiting for RC to be modified
STEP: listing all ReplicationControllers
STEP: checking that ReplicationController has expected values
STEP: deleting ReplicationControllers by collection
STEP: waiting for ReplicationController to have a DELETED watchEvent
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul 30 12:44:20.949: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-6497" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]","total":356,"completed":173,"skipped":3059,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:20.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-8636
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jul 30 12:44:21.098: INFO: Waiting up to 5m0s for pod "pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b" in namespace "emptydir-8636" to be "Succeeded or Failed"
Jul 30 12:44:21.101: INFO: Pod "pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.820404ms
Jul 30 12:44:23.108: INFO: Pod "pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009488824s
Jul 30 12:44:25.114: INFO: Pod "pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01551315s
STEP: Saw pod success
Jul 30 12:44:25.114: INFO: Pod "pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b" satisfied condition "Succeeded or Failed"
Jul 30 12:44:25.117: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b container test-container: <nil>
STEP: delete the pod
Jul 30 12:44:25.136: INFO: Waiting for pod pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b to disappear
Jul 30 12:44:25.139: INFO: Pod pod-0b8b3062-8a0a-4b92-83c0-f3e5239f430b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 12:44:25.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-8636" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":174,"skipped":3063,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers 
  should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:25.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-3684
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should receive events on concurrent watches in same order [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting a starting resourceVersion
STEP: starting a background goroutine to produce watch events
STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul 30 12:44:28.057: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-3684" for this suite.
•{"msg":"PASSED [sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]","total":356,"completed":175,"skipped":3146,"failed":0}
SS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:44:28.161: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6917
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod busybox-a03aa4e6-3666-4a1a-84d5-03d2cd749289 in namespace container-probe-6917
Jul 30 12:44:30.314: INFO: Started pod busybox-a03aa4e6-3666-4a1a-84d5-03d2cd749289 in namespace container-probe-6917
STEP: checking the pod's current state and verifying that restartCount is present
Jul 30 12:44:30.317: INFO: Initial restart count of pod busybox-a03aa4e6-3666-4a1a-84d5-03d2cd749289 is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 12:48:31.336: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6917" for this suite.

• [SLOW TEST:243.235 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a exec \"cat /tmp/health\" liveness probe [NodeConformance] [Conformance]","total":356,"completed":176,"skipped":3148,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:48:31.396: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-5948
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:48:31.679: INFO: Creating ReplicaSet my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315
Jul 30 12:48:31.740: INFO: Pod name my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315: Found 0 pods out of 1
Jul 30 12:48:36.749: INFO: Pod name my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315: Found 1 pods out of 1
Jul 30 12:48:36.749: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315" is running
Jul 30 12:48:36.752: INFO: Pod "my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315-j4l6g" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:48:31 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:48:32 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:48:32 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2022-07-30 12:48:31 +0000 UTC Reason: Message:}])
Jul 30 12:48:36.752: INFO: Trying to dial the pod
Jul 30 12:48:41.771: INFO: Controller my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315: Got expected result from replica 1 [my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315-j4l6g]: "my-hostname-basic-f845be7c-deee-4d94-8029-f71b68363315-j4l6g", 1 of 1 required successes so far
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul 30 12:48:41.771: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-5948" for this suite.

• [SLOW TEST:10.387 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should serve a basic image on each replica with a public image  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]","total":356,"completed":177,"skipped":3156,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:48:41.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2424
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Pod that fits quota
STEP: Ensuring ResourceQuota status captures the pod usage
STEP: Not allowing a pod to be created that exceeds remaining quota
STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources)
STEP: Ensuring a pod cannot update its resource requirements
STEP: Ensuring attempts to update pod resource requirements did not change quota usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 12:48:54.999: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2424" for this suite.

• [SLOW TEST:13.227 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a pod. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]","total":356,"completed":178,"skipped":3199,"failed":0}
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits 
  should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:48:55.010: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-9705
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run with the expected status [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpa': should get the expected 'State'
STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpof': should get the expected 'State'
STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance]
STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase'
STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition
STEP: Container 'terminate-cmd-rpn': should get the expected 'State'
STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance]
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul 30 12:49:24.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-9705" for this suite.

• [SLOW TEST:29.419 seconds]
[sig-node] Container Runtime
test/e2e/common/node/framework.go:23
  blackbox test
  test/e2e/common/node/runtime.go:43
    when starting a container that exits
    test/e2e/common/node/runtime.go:44
      should run with the expected status [NodeConformance] [Conformance]
      test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]","total":356,"completed":179,"skipped":3204,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:49:24.430: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-5969
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring job reaches completions
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul 30 12:49:34.586: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-5969" for this suite.

• [SLOW TEST:10.169 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]","total":356,"completed":180,"skipped":3216,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet 
  should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:49:34.599: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3930
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching pods on creation and release no longer matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Given a Pod with a 'name' label pod-adoption-release is created
Jul 30 12:49:34.740: INFO: The status of Pod pod-adoption-release is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:49:36.747: INFO: The status of Pod pod-adoption-release is Running (Ready = true)
STEP: When a replicaset with a matching selector is created
STEP: Then the orphan pod is adopted
STEP: When the matched label of one of its pods change
Jul 30 12:49:37.768: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
STEP: Then the pod is released
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul 30 12:49:38.788: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3930" for this suite.
•{"msg":"PASSED [sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]","total":356,"completed":181,"skipped":3307,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:49:38.797: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-8607
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul 30 12:49:42.978: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-8607" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]","total":356,"completed":182,"skipped":3321,"failed":0}

------------------------------
[sig-api-machinery] Garbage collector 
  should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:49:42.988: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-7739
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs
STEP: Gathering metrics
Jul 30 12:49:44.166: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul 30 12:49:44.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
W0730 12:49:44.166864      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
STEP: Destroying namespace "gc-7739" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]","total":356,"completed":183,"skipped":3321,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:49:44.176: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-215
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:49:44.315: INFO: created pod
Jul 30 12:49:44.315: INFO: Waiting up to 5m0s for pod "oidc-discovery-validator" in namespace "svcaccounts-215" to be "Succeeded or Failed"
Jul 30 12:49:44.319: INFO: Pod "oidc-discovery-validator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.215202ms
Jul 30 12:49:46.324: INFO: Pod "oidc-discovery-validator": Phase="Running", Reason="", readiness=false. Elapsed: 2.008729395s
Jul 30 12:49:48.331: INFO: Pod "oidc-discovery-validator": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01594929s
STEP: Saw pod success
Jul 30 12:49:48.331: INFO: Pod "oidc-discovery-validator" satisfied condition "Succeeded or Failed"
Jul 30 12:50:18.335: INFO: polling logs
Jul 30 12:50:18.355: INFO: Pod logs: 
I0730 12:49:44.963146       1 log.go:195] OK: Got token
I0730 12:49:44.963168       1 log.go:195] validating with in-cluster discovery
I0730 12:49:44.963382       1 log.go:195] OK: got issuer https://kubernetes.default.svc
I0730 12:49:44.963403       1 log.go:195] Full, not-validated claims: 
openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-215:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1659185984, NotBefore:1659185384, IssuedAt:1659185384, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-215", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a79aef62-ef3f-4cff-9b3c-b5b4cfc90d03"}}}
I0730 12:49:44.972318       1 log.go:195] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
I0730 12:49:44.977791       1 log.go:195] OK: Validated signature on JWT
I0730 12:49:44.977852       1 log.go:195] OK: Got valid claims from token!
I0730 12:49:44.977883       1 log.go:195] Full, validated claims: 
&openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-215:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:1659185984, NotBefore:1659185384, IssuedAt:1659185384, ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-215", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"a79aef62-ef3f-4cff-9b3c-b5b4cfc90d03"}}}

Jul 30 12:50:18.355: INFO: completed pod
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul 30 12:50:18.363: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-215" for this suite.

• [SLOW TEST:34.197 seconds]
[sig-auth] ServiceAccounts
test/e2e/auth/framework.go:23
  ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]","total":356,"completed":184,"skipped":3392,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:18.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6273
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:50:18.758: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:50:21.781: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:50:21.786: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9314-crds.webhook.example.com via the AdmissionRegistration API
STEP: Creating a custom resource that should be mutated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:50:24.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6273" for this suite.
STEP: Destroying namespace "webhook-6273-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.571 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should mutate custom resource with pruning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]","total":356,"completed":185,"skipped":3399,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS 
  should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:24.945: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-6375
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support configurable pod DNS nameservers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with dnsPolicy=None and customized dnsConfig...
Jul 30 12:50:25.090: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6375  2e2f68e3-399a-43e7-8d11-e00a8f1389db 25885 0 2022-07-30 12:50:25 +0000 UTC <nil> <nil> map[] map[kubernetes.io/psp:e2e-test-privileged-psp] [] []  [{e2e.test Update v1 2022-07-30 12:50:25 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f5lq7,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f5lq7,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 12:50:25.094: INFO: The status of Pod test-dns-nameservers is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:50:27.103: INFO: The status of Pod test-dns-nameservers is Running (Ready = true)
STEP: Verifying customized DNS suffix list is configured on pod...
Jul 30 12:50:27.103: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6375 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:50:27.103: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:50:27.104: INFO: ExecWithOptions: Clientset creation
Jul 30 12:50:27.105: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6375/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
STEP: Verifying customized DNS server is configured on pod...
Jul 30 12:50:27.200: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6375 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:50:27.200: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:50:27.202: INFO: ExecWithOptions: Clientset creation
Jul 30 12:50:27.202: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-6375/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul 30 12:50:27.259: INFO: Deleting pod test-dns-nameservers...
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 12:50:27.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-6375" for this suite.
•{"msg":"PASSED [sig-network] DNS should support configurable pod DNS nameservers [Conformance]","total":356,"completed":186,"skipped":3418,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:27.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2706
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:50:27.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jul 30 12:50:29.644: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2706 --namespace=crd-publish-openapi-2706 create -f -'
Jul 30 12:50:30.160: INFO: stderr: ""
Jul 30 12:50:30.160: INFO: stdout: "e2e-test-crd-publish-openapi-4323-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jul 30 12:50:30.160: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2706 --namespace=crd-publish-openapi-2706 delete e2e-test-crd-publish-openapi-4323-crds test-cr'
Jul 30 12:50:30.232: INFO: stderr: ""
Jul 30 12:50:30.232: INFO: stdout: "e2e-test-crd-publish-openapi-4323-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
Jul 30 12:50:30.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2706 --namespace=crd-publish-openapi-2706 apply -f -'
Jul 30 12:50:30.585: INFO: stderr: ""
Jul 30 12:50:30.585: INFO: stdout: "e2e-test-crd-publish-openapi-4323-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
Jul 30 12:50:30.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2706 --namespace=crd-publish-openapi-2706 delete e2e-test-crd-publish-openapi-4323-crds test-cr'
Jul 30 12:50:30.634: INFO: stderr: ""
Jul 30 12:50:30.634: INFO: stdout: "e2e-test-crd-publish-openapi-4323-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jul 30 12:50:30.634: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2706 explain e2e-test-crd-publish-openapi-4323-crds'
Jul 30 12:50:30.727: INFO: stderr: ""
Jul 30 12:50:30.727: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-4323-crd\nVERSION:  crd-publish-openapi-test-unknown-in-nested.example.com/v1\n\nDESCRIPTION:\n     preserve-unknown-properties in nested field for Testing\n\nFIELDS:\n   apiVersion\t<string>\n     APIVersion defines the versioned schema of this representation of an\n     object. Servers should convert recognized schemas to the latest internal\n     value, and may reject unrecognized values. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n   kind\t<string>\n     Kind is a string value representing the REST resource this object\n     represents. Servers may infer this from the endpoint the client submits\n     requests to. Cannot be updated. In CamelCase. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n   metadata\t<Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n   spec\t<>\n     Specification of Waldo\n\n   status\t<Object>\n     Status of Waldo\n\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:50:32.987: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2706" for this suite.

• [SLOW TEST:5.715 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields in an embedded object [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]","total":356,"completed":187,"skipped":3436,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:33.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9254
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:50:33.135: INFO: Pod name cleanup-pod: Found 0 pods out of 1
Jul 30 12:50:38.143: INFO: Pod name cleanup-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jul 30 12:50:38.143: INFO: Creating deployment test-cleanup-deployment
STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 12:50:38.160: INFO: Deployment "test-cleanup-deployment":
&Deployment{ObjectMeta:{test-cleanup-deployment  deployment-9254  65e993b5-065c-4a05-8a3a-a36de9db0d4e 26003 1 2022-07-30 12:50:38 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  [{e2e.test Update apps/v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} }]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00315ae18 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*0,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:0,Replicas:0,UpdatedReplicas:0,AvailableReplicas:0,UnavailableReplicas:0,Conditions:[]DeploymentCondition{},ReadyReplicas:0,CollisionCount:nil,},}

Jul 30 12:50:38.164: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
Jul 30 12:50:38.164: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
Jul 30 12:50:38.164: INFO: &ReplicaSet{ObjectMeta:{test-cleanup-controller  deployment-9254  78e6136e-a83c-4179-8aa4-676102fa260b 26004 1 2022-07-30 12:50:33 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [{apps/v1 Deployment test-cleanup-deployment 65e993b5-065c-4a05-8a3a-a36de9db0d4e 0xc0030ef377 0xc0030ef378}] []  [{e2e.test Update apps/v1 2022-07-30 12:50:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:50:34 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status} {kube-controller-manager Update apps/v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:metadata":{"f:ownerReferences":{".":{},"k:{\"uid\":\"65e993b5-065c-4a05-8a3a-a36de9db0d4e\"}":{}}}} }]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: cleanup-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc0030ef4c8 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul 30 12:50:38.168: INFO: Pod "test-cleanup-controller-4qmfn" is available:
&Pod{ObjectMeta:{test-cleanup-controller-4qmfn test-cleanup-controller- deployment-9254  b391e190-7278-40cc-ad39-0b859625a26a 25989 0 2022-07-30 12:50:33 +0000 UTC <nil> <nil> map[name:cleanup-pod pod:httpd] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-cleanup-controller 78e6136e-a83c-4179-8aa4-676102fa260b 0xc0030ef877 0xc0030ef878}] []  [{kube-controller-manager Update v1 2022-07-30 12:50:33 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"78e6136e-a83c-4179-8aa4-676102fa260b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:50:34 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.72\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jx5tv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jx5tv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:50:33 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:50:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:50:34 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:50:33 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.72,StartTime:2022-07-30 12:50:33 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:50:33 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://b3315f039a341768d25ecb5ef53d664bc0002f573a553c2aa698f86bf69dbb6c,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.72,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 12:50:38.168: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9254" for this suite.

• [SLOW TEST:5.181 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should delete old replica sets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should delete old replica sets [Conformance]","total":356,"completed":188,"skipped":3457,"failed":0}
S
------------------------------
[sig-api-machinery] Watchers 
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:38.182: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename watch
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in watch-5265
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a watch on configmaps with a certain label
STEP: creating a new configmap
STEP: modifying the configmap once
STEP: changing the label value of the configmap
STEP: Expecting to observe a delete notification for the watched object
Jul 30 12:50:38.326: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5265  6111e96e-03fb-4459-b365-3fa445544bea 26026 0 2022-07-30 12:50:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:50:38.326: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5265  6111e96e-03fb-4459-b365-3fa445544bea 26027 0 2022-07-30 12:50:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:50:38.327: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5265  6111e96e-03fb-4459-b365-3fa445544bea 26028 0 2022-07-30 12:50:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
STEP: modifying the configmap a second time
STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements
STEP: changing the label value of the configmap back
STEP: modifying the configmap a third time
STEP: deleting the configmap
STEP: Expecting to observe an add notification for the watched object when the label value was restored
Jul 30 12:50:48.360: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5265  6111e96e-03fb-4459-b365-3fa445544bea 26078 0 2022-07-30 12:50:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:50:48.360: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5265  6111e96e-03fb-4459-b365-3fa445544bea 26079 0 2022-07-30 12:50:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
Jul 30 12:50:48.360: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5265  6111e96e-03fb-4459-b365-3fa445544bea 26080 0 2022-07-30 12:50:38 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] []  [{e2e.test Update v1 2022-07-30 12:50:38 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
[AfterEach] [sig-api-machinery] Watchers
  test/e2e/framework/framework.go:188
Jul 30 12:50:48.360: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "watch-5265" for this suite.

• [SLOW TEST:10.188 seconds]
[sig-api-machinery] Watchers
test/e2e/apimachinery/framework.go:23
  should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]","total":356,"completed":189,"skipped":3458,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:48.371: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-702
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide pod UID as env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul 30 12:50:48.503: INFO: Waiting up to 5m0s for pod "downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c" in namespace "downward-api-702" to be "Succeeded or Failed"
Jul 30 12:50:48.509: INFO: Pod "downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c": Phase="Pending", Reason="", readiness=false. Elapsed: 5.769291ms
Jul 30 12:50:50.516: INFO: Pod "downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012546025s
Jul 30 12:50:52.524: INFO: Pod "downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020191672s
STEP: Saw pod success
Jul 30 12:50:52.524: INFO: Pod "downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c" satisfied condition "Succeeded or Failed"
Jul 30 12:50:52.527: INFO: Trying to get logs from node ip-172-31-74-61 pod downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:50:52.559: INFO: Waiting for pod downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c to disappear
Jul 30 12:50:52.562: INFO: Pod downward-api-f671c5ec-5ac0-49f7-9bb8-de7a2d96025c no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul 30 12:50:52.562: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-702" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]","total":356,"completed":190,"skipped":3480,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:52.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8953
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-aaf6aa05-65c2-41fe-b411-c69c224fbe8c
STEP: Creating a pod to test consume secrets
Jul 30 12:50:52.720: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1" in namespace "projected-8953" to be "Succeeded or Failed"
Jul 30 12:50:52.725: INFO: Pod "pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1": Phase="Pending", Reason="", readiness=false. Elapsed: 5.100312ms
Jul 30 12:50:54.733: INFO: Pod "pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01301881s
Jul 30 12:50:56.739: INFO: Pod "pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01966542s
STEP: Saw pod success
Jul 30 12:50:56.739: INFO: Pod "pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1" satisfied condition "Succeeded or Failed"
Jul 30 12:50:56.743: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1 container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:50:56.764: INFO: Waiting for pod pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1 to disappear
Jul 30 12:50:56.768: INFO: Pod pod-projected-secrets-5ea0ffb0-9190-49cd-bc8c-69ce1e9d15b1 no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul 30 12:50:56.768: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8953" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":191,"skipped":3533,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox Pod with hostAliases 
  should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:56.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-9968
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:50:56.917: INFO: The status of Pod busybox-host-aliasesc2eb808d-423f-42f7-8a7e-f9f5a1a5a09b is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:50:58.924: INFO: The status of Pod busybox-host-aliasesc2eb808d-423f-42f7-8a7e-f9f5a1a5a09b is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul 30 12:50:58.935: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-9968" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":192,"skipped":3567,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:50:58.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-397
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 12:50:59.452: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 12:51:02.478: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:51:02.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Registering the custom resource webhook via the AdmissionRegistration API
STEP: Creating a custom resource that should be denied by the webhook
STEP: Creating a custom resource whose deletion would be denied by the webhook
STEP: Updating the custom resource with disallowed data should be denied
STEP: Deleting the custom resource should be denied
STEP: Remove the offending key and value from the custom resource data
STEP: Deleting the updated custom resource should be successful
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:51:05.646: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-397" for this suite.
STEP: Destroying namespace "webhook-397-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:6.756 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny custom resource creation, update and deletion [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]","total":356,"completed":193,"skipped":3579,"failed":0}
SSS
------------------------------
[sig-storage] Downward API volume 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:05.703: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7084
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul 30 12:51:05.838: INFO: The status of Pod annotationupdateecf38a4d-7d99-40ae-af41-83135c2610f8 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:51:07.845: INFO: The status of Pod annotationupdateecf38a4d-7d99-40ae-af41-83135c2610f8 is Running (Ready = true)
Jul 30 12:51:08.373: INFO: Successfully updated pod "annotationupdateecf38a4d-7d99-40ae-af41-83135c2610f8"
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 12:51:12.399: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7084" for this suite.

• [SLOW TEST:6.709 seconds]
[sig-storage] Downward API volume
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":194,"skipped":3582,"failed":0}
SS
------------------------------
[sig-node] Secrets 
  should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:12.412: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-1686
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via the environment [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating secret secrets-1686/secret-test-e3c1bb36-25be-4515-94a1-914b2fec9fb7
STEP: Creating a pod to test consume secrets
Jul 30 12:51:12.551: INFO: Waiting up to 5m0s for pod "pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7" in namespace "secrets-1686" to be "Succeeded or Failed"
Jul 30 12:51:12.555: INFO: Pod "pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7": Phase="Pending", Reason="", readiness=false. Elapsed: 4.724888ms
Jul 30 12:51:14.566: INFO: Pod "pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015257811s
Jul 30 12:51:16.574: INFO: Pod "pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.023636992s
STEP: Saw pod success
Jul 30 12:51:16.574: INFO: Pod "pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7" satisfied condition "Succeeded or Failed"
Jul 30 12:51:16.578: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7 container env-test: <nil>
STEP: delete the pod
Jul 30 12:51:16.598: INFO: Waiting for pod pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7 to disappear
Jul 30 12:51:16.602: INFO: Pod pod-configmaps-609b9209-755b-49e9-908d-e0badf68d4f7 no longer exists
[AfterEach] [sig-node] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:51:16.602: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-1686" for this suite.
•{"msg":"PASSED [sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]","total":356,"completed":195,"skipped":3584,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:16.613: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-5356
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on node default medium
Jul 30 12:51:16.750: INFO: Waiting up to 5m0s for pod "pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8" in namespace "emptydir-5356" to be "Succeeded or Failed"
Jul 30 12:51:16.753: INFO: Pod "pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8": Phase="Pending", Reason="", readiness=false. Elapsed: 3.156745ms
Jul 30 12:51:18.758: INFO: Pod "pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008843421s
Jul 30 12:51:20.769: INFO: Pod "pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019651768s
STEP: Saw pod success
Jul 30 12:51:20.769: INFO: Pod "pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8" satisfied condition "Succeeded or Failed"
Jul 30 12:51:20.773: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8 container test-container: <nil>
STEP: delete the pod
Jul 30 12:51:20.798: INFO: Waiting for pod pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8 to disappear
Jul 30 12:51:20.802: INFO: Pod pod-8feac3f4-f556-41eb-bbfc-ad139d4054e8 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 12:51:20.802: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-5356" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":196,"skipped":3606,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:20.813: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2727
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service endpoint-test2 in namespace services-2727
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2727 to expose endpoints map[]
Jul 30 12:51:20.968: INFO: successfully validated that service endpoint-test2 in namespace services-2727 exposes endpoints map[]
STEP: Creating pod pod1 in namespace services-2727
Jul 30 12:51:20.980: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:51:22.987: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2727 to expose endpoints map[pod1:[80]]
Jul 30 12:51:22.999: INFO: successfully validated that service endpoint-test2 in namespace services-2727 exposes endpoints map[pod1:[80]]
STEP: Checking if the Service forwards traffic to pod1
Jul 30 12:51:22.999: INFO: Creating new exec pod
Jul 30 12:51:26.013: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-2727 exec execpodb7kz7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jul 30 12:51:26.141: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jul 30 12:51:26.141: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:51:26.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-2727 exec execpodb7kz7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.148 80'
Jul 30 12:51:26.234: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.148 80\nConnection to 10.152.183.148 80 port [tcp/http] succeeded!\n"
Jul 30 12:51:26.234: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Creating pod pod2 in namespace services-2727
Jul 30 12:51:26.243: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:51:28.249: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2727 to expose endpoints map[pod1:[80] pod2:[80]]
Jul 30 12:51:28.265: INFO: successfully validated that service endpoint-test2 in namespace services-2727 exposes endpoints map[pod1:[80] pod2:[80]]
STEP: Checking if the Service forwards traffic to pod1 and pod2
Jul 30 12:51:29.266: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-2727 exec execpodb7kz7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jul 30 12:51:29.392: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jul 30 12:51:29.392: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:51:29.392: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-2727 exec execpodb7kz7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.148 80'
Jul 30 12:51:29.509: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.148 80\nConnection to 10.152.183.148 80 port [tcp/http] succeeded!\n"
Jul 30 12:51:29.509: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod1 in namespace services-2727
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2727 to expose endpoints map[pod2:[80]]
Jul 30 12:51:30.564: INFO: successfully validated that service endpoint-test2 in namespace services-2727 exposes endpoints map[pod2:[80]]
STEP: Checking if the Service forwards traffic to pod2
Jul 30 12:51:31.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-2727 exec execpodb7kz7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
Jul 30 12:51:31.689: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
Jul 30 12:51:31.689: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 12:51:31.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-2727 exec execpodb7kz7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.148 80'
Jul 30 12:51:31.812: INFO: stderr: "+ + echonc hostName\n -v -t -w 2 10.152.183.148 80\nConnection to 10.152.183.148 80 port [tcp/http] succeeded!\n"
Jul 30 12:51:31.812: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
STEP: Deleting pod pod2 in namespace services-2727
STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-2727 to expose endpoints map[]
Jul 30 12:51:32.846: INFO: successfully validated that service endpoint-test2 in namespace services-2727 exposes endpoints map[]
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 12:51:32.864: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2727" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:12.063 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should serve a basic endpoint from pods  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should serve a basic endpoint from pods  [Conformance]","total":356,"completed":197,"skipped":3633,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label 
  should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:32.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-6877
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1334
STEP: creating the pod
Jul 30 12:51:33.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 create -f -'
Jul 30 12:51:33.750: INFO: stderr: ""
Jul 30 12:51:33.750: INFO: stdout: "pod/pause created\n"
Jul 30 12:51:33.750: INFO: Waiting up to 5m0s for 1 pods to be running and ready: [pause]
Jul 30 12:51:33.750: INFO: Waiting up to 5m0s for pod "pause" in namespace "kubectl-6877" to be "running and ready"
Jul 30 12:51:33.754: INFO: Pod "pause": Phase="Pending", Reason="", readiness=false. Elapsed: 4.110311ms
Jul 30 12:51:35.760: INFO: Pod "pause": Phase="Running", Reason="", readiness=true. Elapsed: 2.010052402s
Jul 30 12:51:35.760: INFO: Pod "pause" satisfied condition "running and ready"
Jul 30 12:51:35.760: INFO: Wanted all 1 pods to be running and ready. Result: true. Pods: [pause]
[It] should update the label on a resource  [Conformance]
  test/e2e/framework/framework.go:652
STEP: adding the label testing-label with value testing-label-value to a pod
Jul 30 12:51:35.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 label pods pause testing-label=testing-label-value'
Jul 30 12:51:35.840: INFO: stderr: ""
Jul 30 12:51:35.840: INFO: stdout: "pod/pause labeled\n"
STEP: verifying the pod has the label testing-label with the value testing-label-value
Jul 30 12:51:35.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 get pod pause -L testing-label'
Jul 30 12:51:35.927: INFO: stderr: ""
Jul 30 12:51:35.927: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
STEP: removing the label testing-label of a pod
Jul 30 12:51:35.927: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 label pods pause testing-label-'
Jul 30 12:51:36.021: INFO: stderr: ""
Jul 30 12:51:36.021: INFO: stdout: "pod/pause unlabeled\n"
STEP: verifying the pod doesn't have the label testing-label
Jul 30 12:51:36.022: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 get pod pause -L testing-label'
Jul 30 12:51:36.107: INFO: stderr: ""
Jul 30 12:51:36.107: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
[AfterEach] Kubectl label
  test/e2e/kubectl/kubectl.go:1340
STEP: using delete to clean up resources
Jul 30 12:51:36.107: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 delete --grace-period=0 --force -f -'
Jul 30 12:51:36.200: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 12:51:36.200: INFO: stdout: "pod \"pause\" force deleted\n"
Jul 30 12:51:36.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 get rc,svc -l name=pause --no-headers'
Jul 30 12:51:36.290: INFO: stderr: "No resources found in kubectl-6877 namespace.\n"
Jul 30 12:51:36.290: INFO: stdout: ""
Jul 30 12:51:36.290: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-6877 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jul 30 12:51:36.371: INFO: stderr: ""
Jul 30 12:51:36.371: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:51:36.371: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-6877" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]","total":356,"completed":198,"skipped":3648,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:36.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4730
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow substituting values in a container's command [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test substitution in container's command
Jul 30 12:51:36.522: INFO: Waiting up to 5m0s for pod "var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5" in namespace "var-expansion-4730" to be "Succeeded or Failed"
Jul 30 12:51:36.526: INFO: Pod "var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5": Phase="Pending", Reason="", readiness=false. Elapsed: 3.783196ms
Jul 30 12:51:38.533: INFO: Pod "var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010022938s
Jul 30 12:51:40.538: INFO: Pod "var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015457434s
STEP: Saw pod success
Jul 30 12:51:40.538: INFO: Pod "var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5" satisfied condition "Succeeded or Failed"
Jul 30 12:51:40.542: INFO: Trying to get logs from node ip-172-31-74-61 pod var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5 container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:51:40.559: INFO: Waiting for pod var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5 to disappear
Jul 30 12:51:40.563: INFO: Pod var-expansion-65084b9a-e944-4c35-8f7a-fb90a65a75c5 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 12:51:40.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4730" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]","total":356,"completed":199,"skipped":3672,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:40.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-7090
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of pods
Jul 30 12:51:40.707: INFO: created test-pod-1
Jul 30 12:51:40.715: INFO: created test-pod-2
Jul 30 12:51:40.720: INFO: created test-pod-3
STEP: waiting for all 3 pods to be running
Jul 30 12:51:40.720: INFO: Waiting up to 5m0s for all pods (need at least 3) in namespace 'pods-7090' to be running and ready
Jul 30 12:51:40.728: INFO: The status of Pod test-pod-1 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jul 30 12:51:40.728: INFO: The status of Pod test-pod-2 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jul 30 12:51:40.728: INFO: The status of Pod test-pod-3 is Pending (Ready = false), waiting for it to be either Running (with Ready = true) or Failed
Jul 30 12:51:40.728: INFO: 0 / 3 pods in namespace 'pods-7090' are running and ready (0 seconds elapsed)
Jul 30 12:51:40.728: INFO: expected 0 pod replicas in namespace 'pods-7090', 0 are Running and Ready.
Jul 30 12:51:40.728: INFO: POD         NODE             PHASE    GRACE  CONDITIONS
Jul 30 12:51:40.728: INFO: test-pod-1  ip-172-31-74-61  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:40 +0000 UTC  }]
Jul 30 12:51:40.728: INFO: test-pod-2  ip-172-31-74-61  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:40 +0000 UTC  }]
Jul 30 12:51:40.728: INFO: test-pod-3  ip-172-31-74-61  Pending         [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:40 +0000 UTC  }]
Jul 30 12:51:40.728: INFO: 
Jul 30 12:51:42.741: INFO: 3 / 3 pods in namespace 'pods-7090' are running and ready (2 seconds elapsed)
Jul 30 12:51:42.741: INFO: expected 0 pod replicas in namespace 'pods-7090', 0 are Running and Ready.
STEP: waiting for all pods to be deleted
Jul 30 12:51:42.765: INFO: Pod quantity 3 is different from expected quantity 0
Jul 30 12:51:43.772: INFO: Pod quantity 3 is different from expected quantity 0
Jul 30 12:51:44.771: INFO: Pod quantity 3 is different from expected quantity 0
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 12:51:45.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-7090" for this suite.

• [SLOW TEST:5.205 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should delete a collection of pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should delete a collection of pods [Conformance]","total":356,"completed":200,"skipped":3713,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API 
   should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:45.779: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename ingressclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in ingressclass-5694
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] IngressClass API
  test/e2e/network/ingressclass.go:188
[It]  should support creating IngressClass API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/networking.k8s.io
STEP: getting /apis/networking.k8s.iov1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul 30 12:51:45.924: INFO: starting watch
STEP: patching
STEP: updating
Jul 30 12:51:45.934: INFO: waiting for watch events with expected annotations
Jul 30 12:51:45.934: INFO: saw patched and updated annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-network] IngressClass API
  test/e2e/framework/framework.go:188
Jul 30 12:51:45.962: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "ingressclass-5694" for this suite.
•{"msg":"PASSED [sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]","total":356,"completed":201,"skipped":3735,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod 
  should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:45.971: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9066
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1540
[It] should create a pod from an image when restart is Never  [Conformance]
  test/e2e/framework/framework.go:652
STEP: running the image k8s.gcr.io/e2e-test-images/httpd:2.4.38-2
Jul 30 12:51:46.097: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9066 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=k8s.gcr.io/e2e-test-images/httpd:2.4.38-2'
Jul 30 12:51:46.153: INFO: stderr: ""
Jul 30 12:51:46.153: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
STEP: verifying the pod e2e-test-httpd-pod was created
[AfterEach] Kubectl run pod
  test/e2e/kubectl/kubectl.go:1544
Jul 30 12:51:46.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9066 delete pods e2e-test-httpd-pod'
Jul 30 12:51:48.352: INFO: stderr: ""
Jul 30 12:51:48.352: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:51:48.352: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9066" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]","total":356,"completed":202,"skipped":3747,"failed":0}
SSS
------------------------------
[sig-node] Pods 
  should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:48.365: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5385
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should run through the lifecycle of Pods and PodStatus [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Pod with a static label
STEP: watching for Pod to be ready
Jul 30 12:51:48.507: INFO: observed Pod pod-test in namespace pods-5385 in phase Pending with labels: map[test-pod-static:true] & conditions []
Jul 30 12:51:48.510: INFO: observed Pod pod-test in namespace pods-5385 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:48 +0000 UTC  }]
Jul 30 12:51:48.524: INFO: observed Pod pod-test in namespace pods-5385 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:48 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:48 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:48 +0000 UTC  }]
Jul 30 12:51:49.334: INFO: Found Pod pod-test in namespace pods-5385 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:48 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:49 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:49 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2022-07-30 12:51:48 +0000 UTC  }]
STEP: patching the Pod with a new Label and updated data
STEP: getting the Pod and ensuring that it's patched
STEP: replacing the Pod's status Ready condition to False
STEP: check the Pod again to ensure its Ready conditions are False
STEP: deleting the Pod via a Collection with a LabelSelector
STEP: watching for the Pod to be deleted
Jul 30 12:51:49.369: INFO: observed event type MODIFIED
Jul 30 12:51:51.343: INFO: observed event type MODIFIED
Jul 30 12:51:52.343: INFO: observed event type MODIFIED
Jul 30 12:51:52.353: INFO: observed event type MODIFIED
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 12:51:52.359: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5385" for this suite.
•{"msg":"PASSED [sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]","total":356,"completed":203,"skipped":3750,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:52.369: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-7368
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul 30 12:51:52.504: INFO: Waiting up to 5m0s for pod "downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5" in namespace "downward-api-7368" to be "Succeeded or Failed"
Jul 30 12:51:52.506: INFO: Pod "downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.67906ms
Jul 30 12:51:54.515: INFO: Pod "downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011154592s
Jul 30 12:51:56.521: INFO: Pod "downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017607268s
STEP: Saw pod success
Jul 30 12:51:56.521: INFO: Pod "downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5" satisfied condition "Succeeded or Failed"
Jul 30 12:51:56.524: INFO: Trying to get logs from node ip-172-31-74-61 pod downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5 container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:51:56.550: INFO: Waiting for pod downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5 to disappear
Jul 30 12:51:56.553: INFO: Pod downward-api-6742751d-ba2c-46a7-8b1c-9e5f344f8ea5 no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul 30 12:51:56.553: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-7368" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]","total":356,"completed":204,"skipped":3779,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not conflict [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:56.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-9937
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not conflict [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:51:56.717: INFO: The status of Pod pod-secrets-b3742276-4a23-40a5-adda-9da2e0b72ed5 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:51:58.722: INFO: The status of Pod pod-secrets-b3742276-4a23-40a5-adda-9da2e0b72ed5 is Running (Ready = true)
STEP: Cleaning up the secret
STEP: Cleaning up the configmap
STEP: Cleaning up the pod
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jul 30 12:51:58.757: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-9937" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]","total":356,"completed":205,"skipped":3811,"failed":0}
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:51:58.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-3642
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-3642
[It] should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating statefulset ss in namespace statefulset-3642
Jul 30 12:51:58.906: INFO: Found 0 stateful pods, waiting for 1
Jul 30 12:52:08.914: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
STEP: Patch a scale subresource
STEP: verifying the statefulset Spec.Replicas was modified
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 12:52:08.941: INFO: Deleting all statefulset in ns statefulset-3642
Jul 30 12:52:08.944: INFO: Scaling statefulset ss to 0
Jul 30 12:52:18.965: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:52:18.968: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 12:52:18.980: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-3642" for this suite.

• [SLOW TEST:20.224 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should have a working scale subresource [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]","total":356,"completed":206,"skipped":3813,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:52:18.990: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:52:19.120: INFO: Pod name rollover-pod: Found 0 pods out of 1
Jul 30 12:52:24.125: INFO: Pod name rollover-pod: Found 1 pods out of 1
STEP: ensuring each pod is running
Jul 30 12:52:24.125: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
Jul 30 12:52:26.130: INFO: Creating deployment "test-rollover-deployment"
Jul 30 12:52:26.138: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
Jul 30 12:52:28.146: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
Jul 30 12:52:28.152: INFO: Ensure that both replica sets have 1 created replica
Jul 30 12:52:28.159: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
Jul 30 12:52:28.168: INFO: Updating deployment test-rollover-deployment
Jul 30 12:52:28.168: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
Jul 30 12:52:30.178: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
Jul 30 12:52:30.184: INFO: Make sure deployment "test-rollover-deployment" is complete
Jul 30 12:52:30.190: INFO: all replica sets need to contain the pod-template-hash label
Jul 30 12:52:30.190: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 29, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 12:52:32.200: INFO: all replica sets need to contain the pod-template-hash label
Jul 30 12:52:32.200: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 29, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 12:52:34.202: INFO: all replica sets need to contain the pod-template-hash label
Jul 30 12:52:34.202: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 29, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 12:52:36.201: INFO: all replica sets need to contain the pod-template-hash label
Jul 30 12:52:36.201: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 29, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 12:52:38.201: INFO: all replica sets need to contain the pod-template-hash label
Jul 30 12:52:38.201: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 12, 52, 29, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 12, 52, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-779c67f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 12:52:40.199: INFO: 
Jul 30 12:52:40.199: INFO: Ensure that both old replica sets have no replicas
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 12:52:40.210: INFO: Deployment "test-rollover-deployment":
&Deployment{ObjectMeta:{test-rollover-deployment  deployment-9521  2cc42a30-43f4-45f0-add9-41c7f1a37678 27234 2 2022-07-30 12:52:26 +0000 UTC <nil> <nil> map[name:rollover-pod] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-07-30 12:52:28 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:minReadySeconds":{},"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:52:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc004244658 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:0,MaxSurge:1,},},MinReadySeconds:10,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-07-30 12:52:26 +0000 UTC,LastTransitionTime:2022-07-30 12:52:26 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-rollover-deployment-779c67f4f8" has successfully progressed.,LastUpdateTime:2022-07-30 12:52:39 +0000 UTC,LastTransitionTime:2022-07-30 12:52:26 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul 30 12:52:40.215: INFO: New ReplicaSet "test-rollover-deployment-779c67f4f8" of Deployment "test-rollover-deployment":
&ReplicaSet{ObjectMeta:{test-rollover-deployment-779c67f4f8  deployment-9521  def44d75-28de-4e3b-917c-10a84fb07da1 27223 2 2022-07-30 12:52:28 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-rollover-deployment 2cc42a30-43f4-45f0-add9-41c7f1a37678 0xc00421c1d7 0xc00421c1d8}] []  [{kube-controller-manager Update apps/v1 2022-07-30 12:52:28 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2cc42a30-43f4-45f0-add9-41c7f1a37678\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:52:39 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 779c67f4f8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00421c288 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul 30 12:52:40.215: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
Jul 30 12:52:40.215: INFO: &ReplicaSet{ObjectMeta:{test-rollover-controller  deployment-9521  755ce051-5793-432f-a9f5-04f68535de45 27233 2 2022-07-30 12:52:19 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2] [{apps/v1 Deployment test-rollover-deployment 2cc42a30-43f4-45f0-add9-41c7f1a37678 0xc00421c0a7 0xc00421c0a8}] []  [{e2e.test Update apps/v1 2022-07-30 12:52:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:52:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2cc42a30-43f4-45f0-add9-41c7f1a37678\"}":{}}},"f:spec":{"f:replicas":{}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:52:39 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent nil false false false}] [] Always 0xc00421c168 <nil> ClusterFirst map[]   <nil>  false false false <nil> PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul 30 12:52:40.216: INFO: &ReplicaSet{ObjectMeta:{test-rollover-deployment-87f8f6dcf  deployment-9521  79f1ee59-dc40-4c0c-9294-91bdbb853d27 27184 2 2022-07-30 12:52:26 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-rollover-deployment 2cc42a30-43f4-45f0-add9-41c7f1a37678 0xc00421c2f0 0xc00421c2f1}] []  [{kube-controller-manager Update apps/v1 2022-07-30 12:52:26 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"2cc42a30-43f4-45f0-add9-41c7f1a37678\"}":{}}},"f:spec":{"f:minReadySeconds":{},"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"redis-slave\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:52:28 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: rollover-pod,pod-template-hash: 87f8f6dcf,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:87f8f6dcf] map[] [] []  []} {[] [] [{redis-slave gcr.io/google_samples/gb-redisslave:nonexistent [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00421c398 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:10,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul 30 12:52:40.219: INFO: Pod "test-rollover-deployment-779c67f4f8-pcjdt" is available:
&Pod{ObjectMeta:{test-rollover-deployment-779c67f4f8-pcjdt test-rollover-deployment-779c67f4f8- deployment-9521  a587d745-ef50-4d79-a9f3-cf957d6454b7 27202 0 2022-07-30 12:52:28 +0000 UTC <nil> <nil> map[name:rollover-pod pod-template-hash:779c67f4f8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-rollover-deployment-779c67f4f8 def44d75-28de-4e3b-917c-10a84fb07da1 0xc00421c9f7 0xc00421c9f8}] []  [{kube-controller-manager Update v1 2022-07-30 12:52:28 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"def44d75-28de-4e3b-917c-10a84fb07da1\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:52:29 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.113\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t8gf4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t8gf4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:52:28 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:52:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:52:29 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:52:28 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.113,StartTime:2022-07-30 12:52:28 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:agnhost,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:52:28 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/agnhost:2.39,ImageID:k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e,ContainerID:containerd://27e895b3db9c979a1134674986ac6455a3ec0a67a49dd1f123260116e5456fcf,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.113,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 12:52:40.219: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9521" for this suite.

• [SLOW TEST:21.241 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support rollover [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support rollover [Conformance]","total":356,"completed":207,"skipped":3848,"failed":0}
[sig-node] RuntimeClass 
   should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:52:40.231: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-1449
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It]  should support RuntimeClasses API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/node.k8s.io
STEP: getting /apis/node.k8s.io/v1
STEP: creating
STEP: watching
Jul 30 12:52:40.384: INFO: starting watch
STEP: getting
STEP: listing
STEP: patching
STEP: updating
Jul 30 12:52:40.405: INFO: waiting for watch events with expected annotations
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul 30 12:52:40.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-1449" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]","total":356,"completed":208,"skipped":3848,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff 
  should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:52:40.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-449
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl diff finds a difference for Deployments [Conformance]
  test/e2e/framework/framework.go:652
STEP: create deployment with httpd image
Jul 30 12:52:40.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-449 create -f -'
Jul 30 12:52:40.766: INFO: stderr: ""
Jul 30 12:52:40.766: INFO: stdout: "deployment.apps/httpd-deployment created\n"
STEP: verify diff finds difference between live and declared image
Jul 30 12:52:40.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-449 diff -f -'
Jul 30 12:52:41.298: INFO: rc: 1
Jul 30 12:52:41.298: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-449 delete -f -'
Jul 30 12:52:41.369: INFO: stderr: ""
Jul 30 12:52:41.369: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 12:52:41.369: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-449" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]","total":356,"completed":209,"skipped":3869,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:52:41.381: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-6228
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with configmap pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-configmap-m5j6
STEP: Creating a pod to test atomic-volume-subpath
Jul 30 12:52:41.524: INFO: Waiting up to 5m0s for pod "pod-subpath-test-configmap-m5j6" in namespace "subpath-6228" to be "Succeeded or Failed"
Jul 30 12:52:41.527: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.587667ms
Jul 30 12:52:43.532: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 2.008729374s
Jul 30 12:52:45.537: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 4.013242242s
Jul 30 12:52:47.542: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 6.018550479s
Jul 30 12:52:49.554: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 8.029937022s
Jul 30 12:52:51.562: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 10.038468377s
Jul 30 12:52:53.576: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 12.052475777s
Jul 30 12:52:55.582: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 14.057832468s
Jul 30 12:52:57.589: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 16.064992606s
Jul 30 12:52:59.598: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 18.073754077s
Jul 30 12:53:01.604: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=true. Elapsed: 20.080556875s
Jul 30 12:53:03.613: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Running", Reason="", readiness=false. Elapsed: 22.088839984s
Jul 30 12:53:05.619: INFO: Pod "pod-subpath-test-configmap-m5j6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.094843914s
STEP: Saw pod success
Jul 30 12:53:05.619: INFO: Pod "pod-subpath-test-configmap-m5j6" satisfied condition "Succeeded or Failed"
Jul 30 12:53:05.623: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-subpath-test-configmap-m5j6 container test-container-subpath-configmap-m5j6: <nil>
STEP: delete the pod
Jul 30 12:53:05.641: INFO: Waiting for pod pod-subpath-test-configmap-m5j6 to disappear
Jul 30 12:53:05.644: INFO: Pod pod-subpath-test-configmap-m5j6 no longer exists
STEP: Deleting pod pod-subpath-test-configmap-m5j6
Jul 30 12:53:05.644: INFO: Deleting pod "pod-subpath-test-configmap-m5j6" in namespace "subpath-6228"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul 30 12:53:05.648: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-6228" for this suite.

• [SLOW TEST:24.279 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with configmap pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]","total":356,"completed":210,"skipped":3879,"failed":0}
SS
------------------------------
[sig-storage] Secrets 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:05.659: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-8029
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-6a0b1ea5-e1b7-485d-a91b-b305fc89622f
STEP: Creating secret with name s-test-opt-upd-d7d1a04f-9de5-4f36-ad20-c2791ee9740c
STEP: Creating the pod
Jul 30 12:53:05.809: INFO: The status of Pod pod-secrets-1b91a0cd-6144-433c-ba59-44481b6bfcfc is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:53:07.815: INFO: The status of Pod pod-secrets-1b91a0cd-6144-433c-ba59-44481b6bfcfc is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-6a0b1ea5-e1b7-485d-a91b-b305fc89622f
STEP: Updating secret s-test-opt-upd-d7d1a04f-9de5-4f36-ad20-c2791ee9740c
STEP: Creating secret with name s-test-opt-create-3a7feefb-4bc0-4e09-ab26-906c71b7a072
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:53:11.892: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-8029" for this suite.

• [SLOW TEST:6.245 seconds]
[sig-storage] Secrets
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":211,"skipped":3881,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:11.904: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-4237
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pdb that targets all three pods in a test replica set
STEP: Waiting for the pdb to be processed
STEP: First trying to evict a pod which shouldn't be evictable
STEP: Waiting for all pods to be running
Jul 30 12:53:14.056: INFO: pods: 0 < 3
STEP: locating a running pod
STEP: Updating the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
STEP: Waiting for the pdb to observed all healthy pods
STEP: Patching the pdb to disallow a pod to be evicted
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
STEP: locating a running pod
STEP: Deleting the pdb to allow a pod to be evicted
STEP: Waiting for the pdb to be deleted
STEP: Trying to evict the same pod we tried earlier which should now be evictable
STEP: Waiting for all pods to be running
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul 30 12:53:20.172: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-4237" for this suite.

• [SLOW TEST:8.277 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should block an eviction until the PDB is updated to allow it [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]","total":356,"completed":212,"skipped":3898,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container 
  should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:20.181: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-7996
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[It] should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:53:20.320: INFO: The status of Pod busybox-readonly-fsd1a586eb-3650-41d3-9ceb-5d7210d5f0d0 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:53:22.345: INFO: The status of Pod busybox-readonly-fsd1a586eb-3650-41d3-9ceb-5d7210d5f0d0 is Running (Ready = true)
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul 30 12:53:22.361: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-7996" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":213,"skipped":3912,"failed":0}
SSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:22.375: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-3114
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul 30 12:53:24.554: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-3114" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]","total":356,"completed":214,"skipped":3916,"failed":0}
S
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:24.566: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-8054
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-8054
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul 30 12:53:24.703: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul 30 12:53:24.743: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:53:26.750: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:53:28.749: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:53:30.750: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:53:32.747: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:53:34.750: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:53:36.749: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul 30 12:53:36.758: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jul 30 12:53:36.765: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jul 30 12:53:38.812: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jul 30 12:53:38.812: INFO: Going to poll 192.168.223.125 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jul 30 12:53:38.816: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.223.125 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8054 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:53:38.816: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:53:38.816: INFO: ExecWithOptions: Clientset creation
Jul 30 12:53:38.816: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8054/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.223.125+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul 30 12:53:39.898: INFO: Found all 1 expected endpoints: [netserver-0]
Jul 30 12:53:39.898: INFO: Going to poll 192.168.81.109 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jul 30 12:53:39.902: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.81.109 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8054 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:53:39.902: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:53:39.903: INFO: ExecWithOptions: Clientset creation
Jul 30 12:53:39.903: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8054/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.81.109+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul 30 12:53:40.987: INFO: Found all 1 expected endpoints: [netserver-1]
Jul 30 12:53:40.987: INFO: Going to poll 192.168.110.245 on port 8081 at least 0 times, with a maximum of 39 tries before failing
Jul 30 12:53:40.993: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.110.245 8081 | grep -v '^\s*$'] Namespace:pod-network-test-8054 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:53:40.993: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:53:40.994: INFO: ExecWithOptions: Clientset creation
Jul 30 12:53:40.994: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8054/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.110.245+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul 30 12:53:42.079: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul 30 12:53:42.079: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-8054" for this suite.

• [SLOW TEST:17.525 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":215,"skipped":3917,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:42.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8923
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating simple DaemonSet "daemon-set"
STEP: Check that daemon pods launch on every node of the cluster.
Jul 30 12:53:42.242: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:42.242: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:42.244: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:53:42.244: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:53:43.251: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:43.251: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:43.254: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:53:43.254: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:53:44.250: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:44.250: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:44.253: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 12:53:44.253: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Stop a daemon pod, check that the daemon pod is revived.
Jul 30 12:53:44.271: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:44.271: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:44.274: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul 30 12:53:44.274: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:53:45.280: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:45.280: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:45.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul 30 12:53:45.283: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:53:46.280: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:46.280: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:46.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul 30 12:53:46.283: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:53:47.283: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:47.283: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:47.286: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul 30 12:53:47.286: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 12:53:48.279: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:48.279: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 12:53:48.283: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 12:53:48.283: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8923, will wait for the garbage collector to delete the pods
Jul 30 12:53:48.347: INFO: Deleting DaemonSet.extensions daemon-set took: 7.043376ms
Jul 30 12:53:48.448: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.809607ms
Jul 30 12:53:50.854: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 12:53:50.854: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul 30 12:53:50.857: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28000"},"items":null}

Jul 30 12:53:50.860: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28000"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:53:50.872: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8923" for this suite.

• [SLOW TEST:8.790 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should run and stop simple daemon [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]","total":356,"completed":216,"skipped":3935,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment 
  Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:50.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-9615
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] Deployment should have a working scale subresource [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:53:51.002: INFO: Creating simple deployment test-new-deployment
Jul 30 12:53:51.014: INFO: deployment "test-new-deployment" doesn't have the required revision set
STEP: getting scale subresource
STEP: updating a scale subresource
STEP: verifying the deployment Spec.Replicas was modified
STEP: Patch a scale subresource
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 12:53:53.062: INFO: Deployment "test-new-deployment":
&Deployment{ObjectMeta:{test-new-deployment  deployment-9615  f6042174-ca1c-44a8-81ba-260813809725 28040 3 2022-07-30 12:53:50 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 <nil> FieldsV1 {"f:spec":{"f:replicas":{}}} scale} {e2e.test Update apps/v1 2022-07-30 12:53:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:53:52 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*4,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003aa0c58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:True,Reason:MinimumReplicasAvailable,Message:Deployment has minimum availability.,LastUpdateTime:2022-07-30 12:53:52 +0000 UTC,LastTransitionTime:2022-07-30 12:53:52 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:NewReplicaSetAvailable,Message:ReplicaSet "test-new-deployment-55df494869" has successfully progressed.,LastUpdateTime:2022-07-30 12:53:52 +0000 UTC,LastTransitionTime:2022-07-30 12:53:51 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul 30 12:53:53.068: INFO: New ReplicaSet "test-new-deployment-55df494869" of Deployment "test-new-deployment":
&ReplicaSet{ObjectMeta:{test-new-deployment-55df494869  deployment-9615  15931114-c219-4ad4-af12-2395aad965ad 28047 2 2022-07-30 12:53:50 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:2 deployment.kubernetes.io/max-replicas:3 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-new-deployment f6042174-ca1c-44a8-81ba-260813809725 0xc003aa1247 0xc003aa1248}] []  [{kube-controller-manager Update apps/v1 2022-07-30 12:53:50 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f6042174-ca1c-44a8-81ba-260813809725\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 12:53:52 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*2,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003aa1308 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:2,FullyLabeledReplicas:2,ObservedGeneration:2,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul 30 12:53:53.072: INFO: Pod "test-new-deployment-55df494869-cvgp5" is not available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-cvgp5 test-new-deployment-55df494869- deployment-9615  6645986a-59da-47a2-bbac-f5c84d17cdf1 28043 0 2022-07-30 12:53:53 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 15931114-c219-4ad4-af12-2395aad965ad 0xc003aa1907 0xc003aa1908}] []  [{kube-controller-manager Update v1 2022-07-30 12:53:53 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"15931114-c219-4ad4-af12-2395aad965ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-47r4z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-47r4z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:53:53 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 12:53:53.072: INFO: Pod "test-new-deployment-55df494869-ncvs7" is available:
&Pod{ObjectMeta:{test-new-deployment-55df494869-ncvs7 test-new-deployment-55df494869- deployment-9615  0c042867-fbd8-4b35-9140-c1495d99103c 28032 0 2022-07-30 12:53:51 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-new-deployment-55df494869 15931114-c219-4ad4-af12-2395aad965ad 0xc003aa1a70 0xc003aa1a71}] []  [{kube-controller-manager Update v1 2022-07-30 12:53:51 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"15931114-c219-4ad4-af12-2395aad965ad\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 12:53:52 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.102\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jpfkm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jpfkm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:53:51 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:53:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:53:52 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 12:53:51 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.102,StartTime:2022-07-30 12:53:51 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 12:53:52 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://45f9b9de39eebecf0bf447081c96322f48e70acbe271ca05134fb713a4ae8993,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.102,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 12:53:53.072: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-9615" for this suite.
•{"msg":"PASSED [sig-apps] Deployment Deployment should have a working scale subresource [Conformance]","total":356,"completed":217,"skipped":3962,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates 
  should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:53.088: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename podtemplate
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in podtemplate-5516
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace a pod template [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a pod template
STEP: Replace a pod template
Jul 30 12:53:53.238: INFO: Found updated podtemplate annotation: "true"

[AfterEach] [sig-node] PodTemplates
  test/e2e/framework/framework.go:188
Jul 30 12:53:53.238: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "podtemplate-5516" for this suite.
•{"msg":"PASSED [sig-node] PodTemplates should replace a pod template [Conformance]","total":356,"completed":218,"skipped":3988,"failed":0}
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:53:53.250: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-8712
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation
Jul 30 12:53:53.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:53:55.762: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 12:54:06.410: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-8712" for this suite.

• [SLOW TEST:13.172 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for multiple CRDs of different groups [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]","total":356,"completed":219,"skipped":3995,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:54:06.423: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-2038
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul 30 12:54:06.557: INFO: Waiting up to 1m0s for all nodes to be ready
Jul 30 12:55:06.577: INFO: Waiting for terminating namespaces to be deleted...
[It] validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jul 30 12:55:06.602: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jul 30 12:55:06.608: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jul 30 12:55:06.623: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jul 30 12:55:06.628: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jul 30 12:55:06.645: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jul 30 12:55:06.654: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a critical pod that use same resources as that of a lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul 30 12:55:18.769: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-2038" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:72.388 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates lower priority pod preemption by critical pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]","total":356,"completed":220,"skipped":4015,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:55:18.811: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-9243
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name s-test-opt-del-d76f370c-5680-4344-9dbe-6b856591dd99
STEP: Creating secret with name s-test-opt-upd-3d86f300-e312-4ebf-9928-c715472e71a1
STEP: Creating the pod
Jul 30 12:55:18.962: INFO: The status of Pod pod-projected-secrets-e84da3b2-6821-4bcd-8d4f-d5ed6b363aa9 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:55:20.969: INFO: The status of Pod pod-projected-secrets-e84da3b2-6821-4bcd-8d4f-d5ed6b363aa9 is Running (Ready = true)
STEP: Deleting secret s-test-opt-del-d76f370c-5680-4344-9dbe-6b856591dd99
STEP: Updating secret s-test-opt-upd-3d86f300-e312-4ebf-9928-c715472e71a1
STEP: Creating secret with name s-test-opt-create-95182430-601a-4cc7-979e-6f0af6a8dd8e
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul 30 12:55:25.060: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-9243" for this suite.

• [SLOW TEST:6.260 seconds]
[sig-storage] Projected secret
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":221,"skipped":4033,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:55:25.072: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2177
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicaSet
STEP: Ensuring resource quota status captures replicaset creation
STEP: Deleting a ReplicaSet
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 12:55:36.239: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2177" for this suite.

• [SLOW TEST:11.178 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replica set. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]","total":356,"completed":222,"skipped":4044,"failed":0}
SSS
------------------------------
[sig-node] Variable Expansion 
  should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:55:36.249: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-4122
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow composing env vars into new env vars [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test env composition
Jul 30 12:55:36.385: INFO: Waiting up to 5m0s for pod "var-expansion-3721056e-627d-45ae-a903-450217434de0" in namespace "var-expansion-4122" to be "Succeeded or Failed"
Jul 30 12:55:36.388: INFO: Pod "var-expansion-3721056e-627d-45ae-a903-450217434de0": Phase="Pending", Reason="", readiness=false. Elapsed: 3.229036ms
Jul 30 12:55:38.395: INFO: Pod "var-expansion-3721056e-627d-45ae-a903-450217434de0": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010535828s
Jul 30 12:55:40.400: INFO: Pod "var-expansion-3721056e-627d-45ae-a903-450217434de0": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014861061s
STEP: Saw pod success
Jul 30 12:55:40.400: INFO: Pod "var-expansion-3721056e-627d-45ae-a903-450217434de0" satisfied condition "Succeeded or Failed"
Jul 30 12:55:40.403: INFO: Trying to get logs from node ip-172-31-74-61 pod var-expansion-3721056e-627d-45ae-a903-450217434de0 container dapi-container: <nil>
STEP: delete the pod
Jul 30 12:55:40.421: INFO: Waiting for pod var-expansion-3721056e-627d-45ae-a903-450217434de0 to disappear
Jul 30 12:55:40.425: INFO: Pod var-expansion-3721056e-627d-45ae-a903-450217434de0 no longer exists
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 12:55:40.425: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-4122" for this suite.
•{"msg":"PASSED [sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]","total":356,"completed":223,"skipped":4047,"failed":0}
SSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:55:40.434: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7500
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-38ec9f3a-5a2c-4bb3-b51f-6c5022b0a404
STEP: Creating a pod to test consume secrets
Jul 30 12:55:40.577: INFO: Waiting up to 5m0s for pod "pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206" in namespace "secrets-7500" to be "Succeeded or Failed"
Jul 30 12:55:40.580: INFO: Pod "pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206": Phase="Pending", Reason="", readiness=false. Elapsed: 3.141505ms
Jul 30 12:55:42.587: INFO: Pod "pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009877038s
Jul 30 12:55:44.593: INFO: Pod "pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015906643s
STEP: Saw pod success
Jul 30 12:55:44.593: INFO: Pod "pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206" satisfied condition "Succeeded or Failed"
Jul 30 12:55:44.596: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206 container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:55:44.615: INFO: Waiting for pod pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206 to disappear
Jul 30 12:55:44.617: INFO: Pod pod-secrets-4ca1158b-61aa-4e2c-96ab-2270e245d206 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:55:44.617: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7500" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":224,"skipped":4056,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:55:44.629: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-8708
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul 30 12:55:44.762: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-8708" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]","total":356,"completed":225,"skipped":4067,"failed":0}
SSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:55:44.773: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-86
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-93959474-9ab5-4f30-86fa-c207e307b5aa
STEP: Creating a pod to test consume configMaps
Jul 30 12:55:44.908: INFO: Waiting up to 5m0s for pod "pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6" in namespace "configmap-86" to be "Succeeded or Failed"
Jul 30 12:55:44.913: INFO: Pod "pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.685669ms
Jul 30 12:55:46.919: INFO: Pod "pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011277986s
Jul 30 12:55:48.929: INFO: Pod "pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.021175383s
STEP: Saw pod success
Jul 30 12:55:48.929: INFO: Pod "pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6" satisfied condition "Succeeded or Failed"
Jul 30 12:55:48.932: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:55:48.952: INFO: Waiting for pod pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6 to disappear
Jul 30 12:55:48.954: INFO: Pod pod-configmaps-45129204-b3e5-4cd9-8c10-61bc380ba0b6 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 12:55:48.954: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-86" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":226,"skipped":4071,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:55:48.966: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-915
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:55:49.101: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:55:51.107: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:55:53.106: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:55:55.120: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:55:57.110: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:55:59.106: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:56:01.107: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:56:03.105: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:56:05.106: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:56:07.106: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:56:09.108: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = false)
Jul 30 12:56:11.106: INFO: The status of Pod test-webserver-98bc2113-9c04-4cb7-98a5-80a829c529e7 is Running (Ready = true)
Jul 30 12:56:11.109: INFO: Container started at 2022-07-30 12:55:49 +0000 UTC, pod became ready at 2022-07-30 12:56:09 +0000 UTC
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 12:56:11.109: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-915" for this suite.

• [SLOW TEST:22.152 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]","total":356,"completed":227,"skipped":4087,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] 
  should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:56:11.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename init-container
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in init-container-3448
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/common/node/init_container.go:164
[It] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
Jul 30 12:56:11.243: INFO: PodSpec: initContainers in spec.initContainers
[AfterEach] [sig-node] InitContainer [NodeConformance]
  test/e2e/framework/framework.go:188
Jul 30 12:56:15.911: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "init-container-3448" for this suite.
•{"msg":"PASSED [sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]","total":356,"completed":228,"skipped":4123,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:56:15.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-9055
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-9055
[It] should perform canary updates and phased rolling updates of template modifications [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a new StatefulSet
Jul 30 12:56:16.084: INFO: Found 0 stateful pods, waiting for 3
Jul 30 12:56:26.090: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:56:26.090: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:56:26.090: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Updating stateful set template: update image from k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 to k8s.gcr.io/e2e-test-images/httpd:2.4.39-2
Jul 30 12:56:26.120: INFO: Updating stateful set ss2
STEP: Creating a new revision
STEP: Not applying an update when the partition is greater than the number of replicas
STEP: Performing a canary update
Jul 30 12:56:36.154: INFO: Updating stateful set ss2
Jul 30 12:56:36.161: INFO: Waiting for Pod statefulset-9055/ss2-2 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
STEP: Restoring Pods to the correct revision when they are deleted
Jul 30 12:56:46.223: INFO: Found 2 stateful pods, waiting for 3
Jul 30 12:56:56.231: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:56:56.231: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 12:56:56.231: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Performing a phased rolling update
Jul 30 12:56:56.258: INFO: Updating stateful set ss2
Jul 30 12:56:56.267: INFO: Waiting for Pod statefulset-9055/ss2-1 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
Jul 30 12:57:06.297: INFO: Updating stateful set ss2
Jul 30 12:57:06.302: INFO: Waiting for StatefulSet statefulset-9055/ss2 to complete update
Jul 30 12:57:06.303: INFO: Waiting for Pod statefulset-9055/ss2-0 to have revision ss2-5f8764d585 update revision ss2-57bbdd95cb
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 12:57:16.313: INFO: Deleting all statefulset in ns statefulset-9055
Jul 30 12:57:16.316: INFO: Scaling statefulset ss2 to 0
Jul 30 12:57:26.334: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 12:57:26.338: INFO: Deleting statefulset ss2
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 12:57:26.354: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-9055" for this suite.

• [SLOW TEST:70.432 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    should perform canary updates and phased rolling updates of template modifications [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]","total":356,"completed":229,"skipped":4153,"failed":0}
SSSSS
------------------------------
[sig-storage] Secrets 
  should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:57:26.367: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-5290
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secret-namespace-832
STEP: Creating secret with name secret-test-91d6d83f-aa89-4c4d-a4b4-64e47851c142
STEP: Creating a pod to test consume secrets
Jul 30 12:57:26.636: INFO: Waiting up to 5m0s for pod "pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220" in namespace "secrets-5290" to be "Succeeded or Failed"
Jul 30 12:57:26.639: INFO: Pod "pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220": Phase="Pending", Reason="", readiness=false. Elapsed: 2.727109ms
Jul 30 12:57:28.646: INFO: Pod "pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010078322s
Jul 30 12:57:30.658: INFO: Pod "pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.022017408s
STEP: Saw pod success
Jul 30 12:57:30.658: INFO: Pod "pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220" satisfied condition "Succeeded or Failed"
Jul 30 12:57:30.664: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220 container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 12:57:30.707: INFO: Waiting for pod pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220 to disappear
Jul 30 12:57:30.713: INFO: Pod pod-secrets-416b3ebf-f577-457d-95c7-aecad33d9220 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 12:57:30.713: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-5290" for this suite.
STEP: Destroying namespace "secret-namespace-832" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]","total":356,"completed":230,"skipped":4158,"failed":0}

------------------------------
[sig-node] Pods 
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:57:30.741: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-5422
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul 30 12:57:30.902: INFO: The status of Pod pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:57:32.911: INFO: The status of Pod pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jul 30 12:57:33.437: INFO: Successfully updated pod "pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88"
Jul 30 12:57:33.437: INFO: Waiting up to 5m0s for pod "pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88" in namespace "pods-5422" to be "terminated due to deadline exceeded"
Jul 30 12:57:33.441: INFO: Pod "pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88": Phase="Running", Reason="", readiness=true. Elapsed: 3.647037ms
Jul 30 12:57:35.448: INFO: Pod "pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88": Phase="Running", Reason="", readiness=true. Elapsed: 2.011041136s
Jul 30 12:57:37.455: INFO: Pod "pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88": Phase="Failed", Reason="DeadlineExceeded", readiness=false. Elapsed: 4.017589036s
Jul 30 12:57:37.455: INFO: Pod "pod-update-activedeadlineseconds-533b58bc-628c-4592-b3fc-88d872068c88" satisfied condition "terminated due to deadline exceeded"
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 12:57:37.455: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-5422" for this suite.

• [SLOW TEST:6.725 seconds]
[sig-node] Pods
test/e2e/common/node/framework.go:23
  should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]","total":356,"completed":231,"skipped":4158,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser 
  should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:57:37.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename security-context-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-test-6170
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Security Context
  test/e2e/common/node/security_context.go:48
[It] should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:57:37.596: INFO: Waiting up to 5m0s for pod "busybox-user-65534-04fa6562-c1fc-4ec2-9321-b305f0107e6f" in namespace "security-context-test-6170" to be "Succeeded or Failed"
Jul 30 12:57:37.599: INFO: Pod "busybox-user-65534-04fa6562-c1fc-4ec2-9321-b305f0107e6f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.060036ms
Jul 30 12:57:39.606: INFO: Pod "busybox-user-65534-04fa6562-c1fc-4ec2-9321-b305f0107e6f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010173766s
Jul 30 12:57:41.613: INFO: Pod "busybox-user-65534-04fa6562-c1fc-4ec2-9321-b305f0107e6f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016985539s
Jul 30 12:57:41.613: INFO: Pod "busybox-user-65534-04fa6562-c1fc-4ec2-9321-b305f0107e6f" satisfied condition "Succeeded or Failed"
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul 30 12:57:41.613: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-test-6170" for this suite.
•{"msg":"PASSED [sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":232,"skipped":4179,"failed":0}
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:57:41.623: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-8432
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a test event
STEP: listing all events in all namespaces
STEP: patching the test event
STEP: fetching the test event
STEP: deleting the test event
STEP: listing all events in all namespaces
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jul 30 12:57:41.787: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-8432" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should ensure that an event can be fetched, patched, deleted, and listed [Conformance]","total":356,"completed":233,"skipped":4189,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:57:41.798: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name projected-configmap-test-volume-map-12550140-2620-402a-911d-077a24f11168
STEP: Creating a pod to test consume configMaps
Jul 30 12:57:41.938: INFO: Waiting up to 5m0s for pod "pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68" in namespace "projected-4348" to be "Succeeded or Failed"
Jul 30 12:57:41.941: INFO: Pod "pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68": Phase="Pending", Reason="", readiness=false. Elapsed: 2.971625ms
Jul 30 12:57:43.947: INFO: Pod "pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009210508s
Jul 30 12:57:45.953: INFO: Pod "pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014866248s
STEP: Saw pod success
Jul 30 12:57:45.953: INFO: Pod "pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68" satisfied condition "Succeeded or Failed"
Jul 30 12:57:45.956: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 12:57:45.973: INFO: Waiting for pod pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68 to disappear
Jul 30 12:57:45.976: INFO: Pod pod-projected-configmaps-efa8b841-2ea2-4461-97ea-2f229102de68 no longer exists
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 12:57:45.976: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4348" for this suite.
•{"msg":"PASSED [sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":234,"skipped":4203,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:57:45.984: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-9378
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: Ensuring more than one job is running at a time
STEP: Ensuring at least two running jobs exists by listing jobs explicitly
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul 30 12:59:02.132: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-9378" for this suite.

• [SLOW TEST:76.159 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should schedule multiple jobs concurrently [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]","total":356,"completed":235,"skipped":4222,"failed":0}
SS
------------------------------
[sig-node] Probing container 
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:59:02.143: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-5515
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-b1ac868c-f969-4675-8490-f58dcc4b8ed8 in namespace container-probe-5515
Jul 30 12:59:04.285: INFO: Started pod liveness-b1ac868c-f969-4675-8490-f58dcc4b8ed8 in namespace container-probe-5515
STEP: checking the pod's current state and verifying that restartCount is present
Jul 30 12:59:04.289: INFO: Initial restart count of pod liveness-b1ac868c-f969-4675-8490-f58dcc4b8ed8 is 0
Jul 30 12:59:24.374: INFO: Restart count of pod container-probe-5515/liveness-b1ac868c-f969-4675-8490-f58dcc4b8ed8 is now 1 (20.08547258s elapsed)
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 12:59:24.389: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-5515" for this suite.

• [SLOW TEST:22.257 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]","total":356,"completed":236,"skipped":4224,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:59:24.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-455
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 12:59:24.522: INFO: Creating pod...
Jul 30 12:59:26.540: INFO: Creating service...
Jul 30 12:59:26.550: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/pods/agnhost/proxy/some/path/with/DELETE
Jul 30 12:59:26.556: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul 30 12:59:26.556: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/pods/agnhost/proxy/some/path/with/GET
Jul 30 12:59:26.561: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jul 30 12:59:26.561: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/pods/agnhost/proxy/some/path/with/HEAD
Jul 30 12:59:26.566: INFO: http.Client request:HEAD | StatusCode:200
Jul 30 12:59:26.566: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/pods/agnhost/proxy/some/path/with/OPTIONS
Jul 30 12:59:26.570: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul 30 12:59:26.570: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/pods/agnhost/proxy/some/path/with/PATCH
Jul 30 12:59:26.573: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul 30 12:59:26.573: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/pods/agnhost/proxy/some/path/with/POST
Jul 30 12:59:26.578: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul 30 12:59:26.578: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/pods/agnhost/proxy/some/path/with/PUT
Jul 30 12:59:26.581: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jul 30 12:59:26.582: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/services/test-service/proxy/some/path/with/DELETE
Jul 30 12:59:26.588: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul 30 12:59:26.588: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/services/test-service/proxy/some/path/with/GET
Jul 30 12:59:26.594: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
Jul 30 12:59:26.594: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/services/test-service/proxy/some/path/with/HEAD
Jul 30 12:59:26.600: INFO: http.Client request:HEAD | StatusCode:200
Jul 30 12:59:26.600: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/services/test-service/proxy/some/path/with/OPTIONS
Jul 30 12:59:26.606: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul 30 12:59:26.606: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/services/test-service/proxy/some/path/with/PATCH
Jul 30 12:59:26.612: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul 30 12:59:26.612: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/services/test-service/proxy/some/path/with/POST
Jul 30 12:59:26.618: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul 30 12:59:26.618: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-455/services/test-service/proxy/some/path/with/PUT
Jul 30 12:59:26.624: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jul 30 12:59:26.624: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-455" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]","total":356,"completed":237,"skipped":4239,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:59:26.635: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-5970
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: udp [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-5970
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul 30 12:59:26.758: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul 30 12:59:26.792: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 12:59:28.799: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:59:30.800: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:59:32.800: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:59:34.812: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:59:36.799: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 12:59:38.800: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul 30 12:59:38.807: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jul 30 12:59:38.813: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jul 30 12:59:40.833: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jul 30 12:59:40.833: INFO: Breadth first check of 192.168.223.89 on host 172.31.47.213...
Jul 30 12:59:40.836: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.107:9080/dial?request=hostname&protocol=udp&host=192.168.223.89&port=8081&tries=1'] Namespace:pod-network-test-5970 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:59:40.836: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:59:40.837: INFO: ExecWithOptions: Clientset creation
Jul 30 12:59:40.837: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5970/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.223.89%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul 30 12:59:40.926: INFO: Waiting for responses: map[]
Jul 30 12:59:40.926: INFO: reached 192.168.223.89 after 0/1 tries
Jul 30 12:59:40.926: INFO: Breadth first check of 192.168.81.108 on host 172.31.74.61...
Jul 30 12:59:40.930: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.107:9080/dial?request=hostname&protocol=udp&host=192.168.81.108&port=8081&tries=1'] Namespace:pod-network-test-5970 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:59:40.930: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:59:40.931: INFO: ExecWithOptions: Clientset creation
Jul 30 12:59:40.931: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5970/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.81.108%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul 30 12:59:40.969: INFO: Waiting for responses: map[]
Jul 30 12:59:40.969: INFO: reached 192.168.81.108 after 0/1 tries
Jul 30 12:59:40.969: INFO: Breadth first check of 192.168.110.228 on host 172.31.87.57...
Jul 30 12:59:40.973: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.107:9080/dial?request=hostname&protocol=udp&host=192.168.110.228&port=8081&tries=1'] Namespace:pod-network-test-5970 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 12:59:40.973: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 12:59:40.974: INFO: ExecWithOptions: Clientset creation
Jul 30 12:59:40.974: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5970/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.107%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.110.228%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul 30 12:59:41.045: INFO: Waiting for responses: map[]
Jul 30 12:59:41.045: INFO: reached 192.168.110.228 after 0/1 tries
Jul 30 12:59:41.045: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul 30 12:59:41.045: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-5970" for this suite.

• [SLOW TEST:14.422 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: udp [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]","total":356,"completed":238,"skipped":4250,"failed":0}
SS
------------------------------
[sig-node] Probing container 
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 12:59:41.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-7409
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod liveness-b4ac93c2-7d81-4344-ab30-86ac7700d76b in namespace container-probe-7409
Jul 30 12:59:43.203: INFO: Started pod liveness-b4ac93c2-7d81-4344-ab30-86ac7700d76b in namespace container-probe-7409
STEP: checking the pod's current state and verifying that restartCount is present
Jul 30 12:59:43.206: INFO: Initial restart count of pod liveness-b4ac93c2-7d81-4344-ab30-86ac7700d76b is 0
STEP: deleting the pod
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 13:03:44.055: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-7409" for this suite.

• [SLOW TEST:243.010 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]","total":356,"completed":239,"skipped":4252,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:03:44.068: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-3851
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-2bd4e6b9-7cdb-44ff-8c21-1f563ceb214b
STEP: Creating a pod to test consume secrets
Jul 30 13:03:44.225: INFO: Waiting up to 5m0s for pod "pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e" in namespace "secrets-3851" to be "Succeeded or Failed"
Jul 30 13:03:44.234: INFO: Pod "pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e": Phase="Pending", Reason="", readiness=false. Elapsed: 9.568622ms
Jul 30 13:03:46.239: INFO: Pod "pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013934042s
Jul 30 13:03:48.243: INFO: Pod "pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018656854s
STEP: Saw pod success
Jul 30 13:03:48.243: INFO: Pod "pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e" satisfied condition "Succeeded or Failed"
Jul 30 13:03:48.247: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 13:03:48.279: INFO: Waiting for pod pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e to disappear
Jul 30 13:03:48.282: INFO: Pod pod-secrets-8d578aa1-43d9-46cd-957d-ec4367fa1e9e no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 13:03:48.282: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-3851" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":240,"skipped":4305,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:03:48.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-6191
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should get a host IP [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating pod
Jul 30 13:03:48.429: INFO: The status of Pod pod-hostip-2a292d86-3ac7-47ad-8e05-67f7381b2a93 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:03:50.434: INFO: The status of Pod pod-hostip-2a292d86-3ac7-47ad-8e05-67f7381b2a93 is Running (Ready = true)
Jul 30 13:03:50.440: INFO: Pod pod-hostip-2a292d86-3ac7-47ad-8e05-67f7381b2a93 has hostIP: 172.31.74.61
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 13:03:50.440: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-6191" for this suite.
•{"msg":"PASSED [sig-node] Pods should get a host IP [NodeConformance] [Conformance]","total":356,"completed":241,"skipped":4316,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:03:50.451: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-2985
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir volume type on tmpfs
Jul 30 13:03:50.583: INFO: Waiting up to 5m0s for pod "pod-0635762a-87f2-48ee-9553-4494601f70f7" in namespace "emptydir-2985" to be "Succeeded or Failed"
Jul 30 13:03:50.586: INFO: Pod "pod-0635762a-87f2-48ee-9553-4494601f70f7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.114693ms
Jul 30 13:03:52.592: INFO: Pod "pod-0635762a-87f2-48ee-9553-4494601f70f7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009087506s
Jul 30 13:03:54.598: INFO: Pod "pod-0635762a-87f2-48ee-9553-4494601f70f7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015144445s
STEP: Saw pod success
Jul 30 13:03:54.598: INFO: Pod "pod-0635762a-87f2-48ee-9553-4494601f70f7" satisfied condition "Succeeded or Failed"
Jul 30 13:03:54.601: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-0635762a-87f2-48ee-9553-4494601f70f7 container test-container: <nil>
STEP: delete the pod
Jul 30 13:03:54.622: INFO: Waiting for pod pod-0635762a-87f2-48ee-9553-4494601f70f7 to disappear
Jul 30 13:03:54.625: INFO: Pod pod-0635762a-87f2-48ee-9553-4494601f70f7 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:03:54.625: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-2985" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":242,"skipped":4341,"failed":0}
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application 
  should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:03:54.635: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9680
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should create and stop a working application  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating all guestbook components
Jul 30 13:03:54.759: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-replica
  labels:
    app: agnhost
    role: replica
    tier: backend
spec:
  ports:
  - port: 6379
  selector:
    app: agnhost
    role: replica
    tier: backend

Jul 30 13:03:54.759: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 create -f -'
Jul 30 13:03:55.066: INFO: stderr: ""
Jul 30 13:03:55.066: INFO: stdout: "service/agnhost-replica created\n"
Jul 30 13:03:55.066: INFO: apiVersion: v1
kind: Service
metadata:
  name: agnhost-primary
  labels:
    app: agnhost
    role: primary
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: agnhost
    role: primary
    tier: backend

Jul 30 13:03:55.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 create -f -'
Jul 30 13:03:55.191: INFO: stderr: ""
Jul 30 13:03:55.191: INFO: stdout: "service/agnhost-primary created\n"
Jul 30 13:03:55.191: INFO: apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: guestbook
    tier: frontend
spec:
  # if your cluster supports it, uncomment the following to automatically create
  # an external load-balanced IP for the frontend service.
  # type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: guestbook
    tier: frontend

Jul 30 13:03:55.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 create -f -'
Jul 30 13:03:55.297: INFO: stderr: ""
Jul 30 13:03:55.297: INFO: stdout: "service/frontend created\n"
Jul 30 13:03:55.297: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guestbook
      tier: frontend
  template:
    metadata:
      labels:
        app: guestbook
        tier: frontend
    spec:
      containers:
      - name: guestbook-frontend
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--backend-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 80

Jul 30 13:03:55.297: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 create -f -'
Jul 30 13:03:55.395: INFO: stderr: ""
Jul 30 13:03:55.395: INFO: stdout: "deployment.apps/frontend created\n"
Jul 30 13:03:55.395: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-primary
spec:
  replicas: 1
  selector:
    matchLabels:
      app: agnhost
      role: primary
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: primary
        tier: backend
    spec:
      containers:
      - name: primary
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jul 30 13:03:55.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 create -f -'
Jul 30 13:03:55.496: INFO: stderr: ""
Jul 30 13:03:55.496: INFO: stdout: "deployment.apps/agnhost-primary created\n"
Jul 30 13:03:55.496: INFO: apiVersion: apps/v1
kind: Deployment
metadata:
  name: agnhost-replica
spec:
  replicas: 2
  selector:
    matchLabels:
      app: agnhost
      role: replica
      tier: backend
  template:
    metadata:
      labels:
        app: agnhost
        role: replica
        tier: backend
    spec:
      containers:
      - name: replica
        image: k8s.gcr.io/e2e-test-images/agnhost:2.39
        args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 6379

Jul 30 13:03:55.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 create -f -'
Jul 30 13:03:55.596: INFO: stderr: ""
Jul 30 13:03:55.596: INFO: stdout: "deployment.apps/agnhost-replica created\n"
STEP: validating guestbook app
Jul 30 13:03:55.596: INFO: Waiting for all frontend pods to be Running.
Jul 30 13:04:00.647: INFO: Waiting for frontend to serve content.
Jul 30 13:04:00.659: INFO: Trying to add a new entry to the guestbook.
Jul 30 13:04:00.671: INFO: Verifying that added entry can be retrieved.
STEP: using delete to clean up resources
Jul 30 13:04:00.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 delete --grace-period=0 --force -f -'
Jul 30 13:04:00.739: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:04:00.739: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
STEP: using delete to clean up resources
Jul 30 13:04:00.739: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 delete --grace-period=0 --force -f -'
Jul 30 13:04:00.801: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:04:00.801: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jul 30 13:04:00.801: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 delete --grace-period=0 --force -f -'
Jul 30 13:04:00.858: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:04:00.858: INFO: stdout: "service \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jul 30 13:04:00.858: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 delete --grace-period=0 --force -f -'
Jul 30 13:04:00.903: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:04:00.903: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
STEP: using delete to clean up resources
Jul 30 13:04:00.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 delete --grace-period=0 --force -f -'
Jul 30 13:04:00.951: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:04:00.951: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
STEP: using delete to clean up resources
Jul 30 13:04:00.951: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9680 delete --grace-period=0 --force -f -'
Jul 30 13:04:01.004: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:04:01.004: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 13:04:01.004: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9680" for this suite.

• [SLOW TEST:6.386 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Guestbook application
  test/e2e/kubectl/kubectl.go:340
    should create and stop a working application  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]","total":356,"completed":243,"skipped":4344,"failed":0}
S
------------------------------
[sig-network] DNS 
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:04:01.021: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-889
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test headless service
STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 247.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.247_udp@PTR;check="$$(dig +tcp +noall +answer +search 247.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.247_tcp@PTR;sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-889.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-889.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-889.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 247.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.247_udp@PTR;check="$$(dig +tcp +noall +answer +search 247.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.247_tcp@PTR;sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 13:04:03.206: INFO: Unable to read wheezy_udp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.210: INFO: Unable to read wheezy_tcp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.214: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.219: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.240: INFO: Unable to read jessie_udp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.245: INFO: Unable to read jessie_tcp@dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.249: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.253: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local from pod dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593: the server could not find the requested resource (get pods dns-test-87e730b0-6ec5-4130-848d-87411c9b6593)
Jul 30 13:04:03.270: INFO: Lookups using dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593 failed for: [wheezy_udp@dns-test-service.dns-889.svc.cluster.local wheezy_tcp@dns-test-service.dns-889.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local jessie_udp@dns-test-service.dns-889.svc.cluster.local jessie_tcp@dns-test-service.dns-889.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-889.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-889.svc.cluster.local]

Jul 30 13:04:08.334: INFO: DNS probes using dns-889/dns-test-87e730b0-6ec5-4130-848d-87411c9b6593 succeeded

STEP: deleting the pod
STEP: deleting the test service
STEP: deleting the test headless service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 13:04:08.445: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-889" for this suite.

• [SLOW TEST:7.435 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for services  [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for services  [Conformance]","total":356,"completed":244,"skipped":4345,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:04:08.456: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jul 30 13:04:08.589: INFO: Waiting up to 5m0s for pod "pod-e4748642-61bf-4450-a28a-d9fe538243c6" in namespace "emptydir-339" to be "Succeeded or Failed"
Jul 30 13:04:08.592: INFO: Pod "pod-e4748642-61bf-4450-a28a-d9fe538243c6": Phase="Pending", Reason="", readiness=false. Elapsed: 3.41787ms
Jul 30 13:04:10.599: INFO: Pod "pod-e4748642-61bf-4450-a28a-d9fe538243c6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010557983s
Jul 30 13:04:12.607: INFO: Pod "pod-e4748642-61bf-4450-a28a-d9fe538243c6": Phase="Pending", Reason="", readiness=false. Elapsed: 4.018064958s
Jul 30 13:04:14.613: INFO: Pod "pod-e4748642-61bf-4450-a28a-d9fe538243c6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 6.023709138s
STEP: Saw pod success
Jul 30 13:04:14.613: INFO: Pod "pod-e4748642-61bf-4450-a28a-d9fe538243c6" satisfied condition "Succeeded or Failed"
Jul 30 13:04:14.615: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-e4748642-61bf-4450-a28a-d9fe538243c6 container test-container: <nil>
STEP: delete the pod
Jul 30 13:04:14.640: INFO: Waiting for pod pod-e4748642-61bf-4450-a28a-d9fe538243c6 to disappear
Jul 30 13:04:14.643: INFO: Pod pod-e4748642-61bf-4450-a28a-d9fe538243c6 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:04:14.643: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-339" for this suite.

• [SLOW TEST:6.199 seconds]
[sig-storage] EmptyDir volumes
test/e2e/common/storage/framework.go:23
  should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":245,"skipped":4349,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:04:14.655: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-7575
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 13:04:14.790: INFO: Waiting up to 5m0s for pod "downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9" in namespace "projected-7575" to be "Succeeded or Failed"
Jul 30 13:04:14.794: INFO: Pod "downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9": Phase="Pending", Reason="", readiness=false. Elapsed: 3.346117ms
Jul 30 13:04:16.801: INFO: Pod "downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010294278s
Jul 30 13:04:18.807: INFO: Pod "downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016768311s
STEP: Saw pod success
Jul 30 13:04:18.807: INFO: Pod "downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9" satisfied condition "Succeeded or Failed"
Jul 30 13:04:18.811: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9 container client-container: <nil>
STEP: delete the pod
Jul 30 13:04:18.834: INFO: Waiting for pod downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9 to disappear
Jul 30 13:04:18.837: INFO: Pod downwardapi-volume-63244529-c38d-4c3e-8963-434dc8bf79b9 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 13:04:18.837: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-7575" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":246,"skipped":4408,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:04:18.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-2443
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be updated [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: submitting the pod to kubernetes
Jul 30 13:04:19.004: INFO: The status of Pod pod-update-927278d0-9a01-47b4-8f32-24dd385befa3 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:04:21.015: INFO: The status of Pod pod-update-927278d0-9a01-47b4-8f32-24dd385befa3 is Running (Ready = true)
STEP: verifying the pod is in kubernetes
STEP: updating the pod
Jul 30 13:04:21.536: INFO: Successfully updated pod "pod-update-927278d0-9a01-47b4-8f32-24dd385befa3"
STEP: verifying the updated pod is in kubernetes
Jul 30 13:04:21.545: INFO: Pod update OK
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 13:04:21.545: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-2443" for this suite.
•{"msg":"PASSED [sig-node] Pods should be updated [NodeConformance] [Conformance]","total":356,"completed":247,"skipped":4451,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:04:21.555: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-3028
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ReplaceConcurrent cronjob
STEP: Ensuring a job is scheduled
STEP: Ensuring exactly one is scheduled
STEP: Ensuring exactly one running job exists by listing jobs explicitly
STEP: Ensuring the job is replaced with a new one
STEP: Removing cronjob
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul 30 13:06:01.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-3028" for this suite.

• [SLOW TEST:100.171 seconds]
[sig-apps] CronJob
test/e2e/apps/framework.go:23
  should replace jobs when ReplaceConcurrent [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]","total":356,"completed":248,"skipped":4475,"failed":0}
SSSSSSS
------------------------------
[sig-apps] DisruptionController 
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:06:01.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-3789
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pdb
STEP: Waiting for the pdb to be processed
STEP: updating the pdb
STEP: Waiting for the pdb to be processed
STEP: patching the pdb
STEP: Waiting for the pdb to be processed
STEP: Waiting for the pdb to be deleted
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul 30 13:06:07.922: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-3789" for this suite.

• [SLOW TEST:6.206 seconds]
[sig-apps] DisruptionController
test/e2e/apps/framework.go:23
  should create a PodDisruptionBudget [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]","total":356,"completed":249,"skipped":4482,"failed":0}
SSSSS
------------------------------
[sig-node] ConfigMap 
  should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:06:07.932: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-5944
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable via environment variable [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap configmap-5944/configmap-test-b6c95dc3-3130-4e44-ba00-a766e223286e
STEP: Creating a pod to test consume configMaps
Jul 30 13:06:08.070: INFO: Waiting up to 5m0s for pod "pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30" in namespace "configmap-5944" to be "Succeeded or Failed"
Jul 30 13:06:08.073: INFO: Pod "pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30": Phase="Pending", Reason="", readiness=false. Elapsed: 2.626023ms
Jul 30 13:06:10.079: INFO: Pod "pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30": Phase="Pending", Reason="", readiness=false. Elapsed: 2.00889113s
Jul 30 13:06:12.085: INFO: Pod "pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014648595s
STEP: Saw pod success
Jul 30 13:06:12.085: INFO: Pod "pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30" satisfied condition "Succeeded or Failed"
Jul 30 13:06:12.088: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30 container env-test: <nil>
STEP: delete the pod
Jul 30 13:06:12.112: INFO: Waiting for pod pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30 to disappear
Jul 30 13:06:12.115: INFO: Pod pod-configmaps-fef40fcc-aaac-4daf-909f-fd72fc0c8c30 no longer exists
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 13:06:12.115: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-5944" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]","total":356,"completed":250,"skipped":4487,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:06:12.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-8805
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command and arguments [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override all
Jul 30 13:06:12.256: INFO: Waiting up to 5m0s for pod "client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461" in namespace "containers-8805" to be "Succeeded or Failed"
Jul 30 13:06:12.261: INFO: Pod "client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461": Phase="Pending", Reason="", readiness=false. Elapsed: 5.275379ms
Jul 30 13:06:14.268: INFO: Pod "client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01223135s
Jul 30 13:06:16.273: INFO: Pod "client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017261862s
STEP: Saw pod success
Jul 30 13:06:16.273: INFO: Pod "client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461" satisfied condition "Succeeded or Failed"
Jul 30 13:06:16.277: INFO: Trying to get logs from node ip-172-31-74-61 pod client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 13:06:16.298: INFO: Waiting for pod client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461 to disappear
Jul 30 13:06:16.301: INFO: Pod client-containers-7f234e0c-75ba-4ccb-8bf8-026c6771d461 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul 30 13:06:16.301: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-8805" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]","total":356,"completed":251,"skipped":4508,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:06:16.312: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5171
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul 30 13:06:16.447: INFO: The status of Pod annotationupdatef730ff0e-f5f0-4ea9-a3d0-168192eda45a is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:06:18.451: INFO: The status of Pod annotationupdatef730ff0e-f5f0-4ea9-a3d0-168192eda45a is Running (Ready = true)
Jul 30 13:06:18.981: INFO: Successfully updated pod "annotationupdatef730ff0e-f5f0-4ea9-a3d0-168192eda45a"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 13:06:23.021: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5171" for this suite.

• [SLOW TEST:6.733 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update annotations on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]","total":356,"completed":252,"skipped":4519,"failed":0}
SSSSSSS
------------------------------
[sig-apps] Deployment 
  RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:06:23.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-5796
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] RecreateDeployment should delete old pods and create new ones [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:06:23.172: INFO: Creating deployment "test-recreate-deployment"
Jul 30 13:06:23.177: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
Jul 30 13:06:23.183: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
Jul 30 13:06:25.198: INFO: Waiting deployment "test-recreate-deployment" to complete
Jul 30 13:06:25.203: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
Jul 30 13:06:25.214: INFO: Updating deployment test-recreate-deployment
Jul 30 13:06:25.214: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 13:06:25.314: INFO: Deployment "test-recreate-deployment":
&Deployment{ObjectMeta:{test-recreate-deployment  deployment-5796  0437719e-63a3-404f-98c1-5559584541db 31673 2 2022-07-30 13:06:23 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-07-30 13:06:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 13:06:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002d51dc8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:Recreate,RollingUpdate:nil,},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:2,Replicas:1,UpdatedReplicas:1,AvailableReplicas:0,UnavailableReplicas:1,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-07-30 13:06:25 +0000 UTC,LastTransitionTime:2022-07-30 13:06:25 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "test-recreate-deployment-cd8586fc7" is progressing.,LastUpdateTime:2022-07-30 13:06:25 +0000 UTC,LastTransitionTime:2022-07-30 13:06:23 +0000 UTC,},},ReadyReplicas:0,CollisionCount:nil,},}

Jul 30 13:06:25.320: INFO: New ReplicaSet "test-recreate-deployment-cd8586fc7" of Deployment "test-recreate-deployment":
&ReplicaSet{ObjectMeta:{test-recreate-deployment-cd8586fc7  deployment-5796  9e445318-b1fe-4cd1-adfa-76e17dac3061 31668 1 2022-07-30 13:06:25 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment test-recreate-deployment 0437719e-63a3-404f-98c1-5559584541db 0xc0024469c0 0xc0024469c1}] []  [{kube-controller-manager Update apps/v1 2022-07-30 13:06:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0437719e-63a3-404f-98c1-5559584541db\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 13:06:25 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: cd8586fc7,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002446a58 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul 30 13:06:25.320: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
Jul 30 13:06:25.320: INFO: &ReplicaSet{ObjectMeta:{test-recreate-deployment-845d658455  deployment-5796  460b977b-fab9-46f5-ab35-6a52eba07e2a 31660 2 2022-07-30 13:06:23 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:1 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-recreate-deployment 0437719e-63a3-404f-98c1-5559584541db 0xc0024467c7 0xc0024467c8}] []  [{kube-controller-manager Update apps/v1 2022-07-30 13:06:23 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"0437719e-63a3-404f-98c1-5559584541db\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"agnhost\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 13:06:25 +0000 UTC FieldsV1 {"f:status":{"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*0,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: sample-pod-3,pod-template-hash: 845d658455,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:845d658455] map[] [] []  []} {[] [] [{agnhost k8s.gcr.io/e2e-test-images/agnhost:2.39 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002446948 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:0,FullyLabeledReplicas:0,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul 30 13:06:25.323: INFO: Pod "test-recreate-deployment-cd8586fc7-82l6g" is not available:
&Pod{ObjectMeta:{test-recreate-deployment-cd8586fc7-82l6g test-recreate-deployment-cd8586fc7- deployment-5796  d40e8d74-3bb3-4c66-b46e-c1b0d1717d9c 31671 0 2022-07-30 13:06:25 +0000 UTC <nil> <nil> map[name:sample-pod-3 pod-template-hash:cd8586fc7] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-recreate-deployment-cd8586fc7 9e445318-b1fe-4cd1-adfa-76e17dac3061 0xc002446e90 0xc002446e91}] []  [{kube-controller-manager Update v1 2022-07-30 13:06:25 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"9e445318-b1fe-4cd1-adfa-76e17dac3061\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:06:25 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-tdkmk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-tdkmk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:06:25 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:06:25 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:06:25 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:06:25 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:,StartTime:2022-07-30 13:06:25 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 13:06:25.323: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-5796" for this suite.
•{"msg":"PASSED [sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]","total":356,"completed":253,"skipped":4526,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:06:25.335: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-6408
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 13:06:25.483: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282" in namespace "downward-api-6408" to be "Succeeded or Failed"
Jul 30 13:06:25.489: INFO: Pod "downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282": Phase="Pending", Reason="", readiness=false. Elapsed: 6.076425ms
Jul 30 13:06:27.494: INFO: Pod "downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011283676s
Jul 30 13:06:29.500: INFO: Pod "downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017051908s
STEP: Saw pod success
Jul 30 13:06:29.500: INFO: Pod "downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282" satisfied condition "Succeeded or Failed"
Jul 30 13:06:29.504: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282 container client-container: <nil>
STEP: delete the pod
Jul 30 13:06:29.520: INFO: Waiting for pod downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282 to disappear
Jul 30 13:06:29.523: INFO: Pod downwardapi-volume-b0a04f49-1af5-4b91-b926-28a128445282 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 13:06:29.523: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-6408" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":254,"skipped":4576,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container 
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Probing container
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:06:29.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-probe
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-probe-6519
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Probing container
  test/e2e/common/node/container_probe.go:61
[It] with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Probing container
  test/e2e/framework/framework.go:188
Jul 30 13:07:29.669: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-probe-6519" for this suite.

• [SLOW TEST:60.146 seconds]
[sig-node] Probing container
test/e2e/common/node/framework.go:23
  with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]","total":356,"completed":255,"skipped":4621,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:07:29.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-3147
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu request [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 13:07:29.810: INFO: Waiting up to 5m0s for pod "downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f" in namespace "projected-3147" to be "Succeeded or Failed"
Jul 30 13:07:29.814: INFO: Pod "downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.935022ms
Jul 30 13:07:31.821: INFO: Pod "downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011413594s
Jul 30 13:07:33.828: INFO: Pod "downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017985096s
STEP: Saw pod success
Jul 30 13:07:33.828: INFO: Pod "downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f" satisfied condition "Succeeded or Failed"
Jul 30 13:07:33.831: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f container client-container: <nil>
STEP: delete the pod
Jul 30 13:07:33.850: INFO: Waiting for pod downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f to disappear
Jul 30 13:07:33.853: INFO: Pod downwardapi-volume-a7cd6714-a363-434d-9f1e-2c6a4bb30c1f no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 13:07:33.853: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-3147" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]","total":356,"completed":256,"skipped":4632,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:07:33.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-835
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota with best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a ResourceQuota with not best effort scope
STEP: Ensuring ResourceQuota status is calculated
STEP: Creating a best-effort pod
STEP: Ensuring resource quota with best effort scope captures the pod usage
STEP: Ensuring resource quota with not best effort ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
STEP: Creating a not best-effort pod
STEP: Ensuring resource quota with not best effort scope captures the pod usage
STEP: Ensuring resource quota with best effort scope ignored the pod usage
STEP: Deleting the pod
STEP: Ensuring resource quota status released the pod usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 13:07:50.101: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-835" for this suite.

• [SLOW TEST:16.250 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should verify ResourceQuota with best effort scope. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]","total":356,"completed":257,"skipped":4661,"failed":0}
SSS
------------------------------
[sig-network] HostPort 
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] HostPort
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:07:50.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename hostport
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in hostport-2050
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] HostPort
  test/e2e/network/hostport.go:49
[It] validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled
Jul 30 13:07:50.247: INFO: The status of Pod pod1 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:07:52.254: INFO: The status of Pod pod1 is Running (Ready = true)
STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.47.213 on the node which pod1 resides and expect scheduled
Jul 30 13:07:52.264: INFO: The status of Pod pod2 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:07:54.271: INFO: The status of Pod pod2 is Running (Ready = true)
STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.47.213 but use UDP protocol on the node which pod2 resides
Jul 30 13:07:54.287: INFO: The status of Pod pod3 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:07:56.300: INFO: The status of Pod pod3 is Running (Ready = true)
Jul 30 13:07:56.313: INFO: The status of Pod e2e-host-exec is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:07:58.319: INFO: The status of Pod e2e-host-exec is Running (Ready = true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323
Jul 30 13:07:58.322: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.47.213 http://127.0.0.1:54323/hostname] Namespace:hostport-2050 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:07:58.322: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:07:58.323: INFO: ExecWithOptions: Clientset creation
Jul 30 13:07:58.323: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2050/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.47.213+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.47.213, port: 54323
Jul 30 13:07:58.404: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.47.213:54323/hostname] Namespace:hostport-2050 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:07:58.404: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:07:58.405: INFO: ExecWithOptions: Clientset creation
Jul 30 13:07:58.405: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2050/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.47.213%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.47.213, port: 54323 UDP
Jul 30 13:07:58.437: INFO: ExecWithOptions {Command:[/bin/sh -c nc -vuz -w 5 172.31.47.213 54323] Namespace:hostport-2050 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:07:58.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:07:58.438: INFO: ExecWithOptions: Clientset creation
Jul 30 13:07:58.438: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-2050/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=nc+-vuz+-w+5+172.31.47.213+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
[AfterEach] [sig-network] HostPort
  test/e2e/framework/framework.go:188
Jul 30 13:08:03.535: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "hostport-2050" for this suite.

• [SLOW TEST:13.440 seconds]
[sig-network] HostPort
test/e2e/network/common/framework.go:23
  validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]","total":356,"completed":258,"skipped":4664,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Deployment 
  should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:08:03.552: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-7303
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] should validate Deployment Status endpoints [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Deployment
Jul 30 13:08:03.775: INFO: Creating simple deployment test-deployment-z7xb9
Jul 30 13:08:03.788: INFO: deployment "test-deployment-z7xb9" doesn't have the required revision set
STEP: Getting /status
Jul 30 13:08:05.809: INFO: Deployment test-deployment-z7xb9 has Conditions: [{Available True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7xb9-688c4d6789" has successfully progressed.}]
STEP: updating Deployment Status
Jul 30 13:08:05.817: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 13, 8, 5, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 8, 5, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 13, 8, 5, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 8, 3, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-z7xb9-688c4d6789\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Deployment status to be updated
Jul 30 13:08:05.819: INFO: Observed &Deployment event: ADDED
Jul 30 13:08:05.819: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7xb9-688c4d6789"}
Jul 30 13:08:05.819: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.819: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7xb9-688c4d6789"}
Jul 30 13:08:05.819: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul 30 13:08:05.819: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.819: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul 30 13:08:05.819: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z7xb9-688c4d6789" is progressing.}
Jul 30 13:08:05.820: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.820: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul 30 13:08:05.820: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7xb9-688c4d6789" has successfully progressed.}
Jul 30 13:08:05.820: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.820: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul 30 13:08:05.820: INFO: Observed Deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7xb9-688c4d6789" has successfully progressed.}
Jul 30 13:08:05.820: INFO: Found Deployment test-deployment-z7xb9 in namespace deployment-7303 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul 30 13:08:05.820: INFO: Deployment test-deployment-z7xb9 has an updated status
STEP: patching the Statefulset Status
Jul 30 13:08:05.820: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
Jul 30 13:08:05.826: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
STEP: watching for the Deployment status to be patched
Jul 30 13:08:05.828: INFO: Observed &Deployment event: ADDED
Jul 30 13:08:05.828: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7xb9-688c4d6789"}
Jul 30 13:08:05.828: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.828: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-z7xb9-688c4d6789"}
Jul 30 13:08:05.828: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul 30 13:08:05.828: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.828: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
Jul 30 13:08:05.828: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:03 +0000 UTC 2022-07-30 13:08:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-z7xb9-688c4d6789" is progressing.}
Jul 30 13:08:05.829: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.829: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul 30 13:08:05.829: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7xb9-688c4d6789" has successfully progressed.}
Jul 30 13:08:05.829: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.829: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:05 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
Jul 30 13:08:05.829: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2022-07-30 13:08:05 +0000 UTC 2022-07-30 13:08:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-z7xb9-688c4d6789" has successfully progressed.}
Jul 30 13:08:05.829: INFO: Observed deployment test-deployment-z7xb9 in namespace deployment-7303 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
Jul 30 13:08:05.829: INFO: Observed &Deployment event: MODIFIED
Jul 30 13:08:05.829: INFO: Found deployment test-deployment-z7xb9 in namespace deployment-7303 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
Jul 30 13:08:05.829: INFO: Deployment test-deployment-z7xb9 has a patched status
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 13:08:05.833: INFO: Deployment "test-deployment-z7xb9":
&Deployment{ObjectMeta:{test-deployment-z7xb9  deployment-7303  16ccaaec-fc42-4051-a5e7-25326d06908e 32151 1 2022-07-30 13:08:03 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[deployment.kubernetes.io/revision:1] [] []  [{e2e.test Update apps/v1 2022-07-30 13:08:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {e2e.test Update apps/v1 2022-07-30 13:08:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"StatusPatched\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:status":{},"f:type":{}}}}} status} {kube-controller-manager Update apps/v1 2022-07-30 13:08:05 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc002447658 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:25%!,(MISSING)MaxSurge:25%!,(MISSING)},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:1,Replicas:1,UpdatedReplicas:1,AvailableReplicas:1,UnavailableReplicas:0,Conditions:[]DeploymentCondition{DeploymentCondition{Type:StatusPatched,Status:True,Reason:,Message:,LastUpdateTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:0001-01-01 00:00:00 +0000 UTC,},DeploymentCondition{Type:Progressing,Status:True,Reason:FoundNewReplicaSet,Message:Found new replica set "test-deployment-z7xb9-688c4d6789",LastUpdateTime:2022-07-30 13:08:05 +0000 UTC,LastTransitionTime:2022-07-30 13:08:05 +0000 UTC,},},ReadyReplicas:1,CollisionCount:nil,},}

Jul 30 13:08:05.836: INFO: New ReplicaSet "test-deployment-z7xb9-688c4d6789" of Deployment "test-deployment-z7xb9":
&ReplicaSet{ObjectMeta:{test-deployment-z7xb9-688c4d6789  deployment-7303  ecd7ef36-cf47-430a-a076-a435cbd85706 32147 1 2022-07-30 13:08:03 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[deployment.kubernetes.io/desired-replicas:1 deployment.kubernetes.io/max-replicas:2 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment test-deployment-z7xb9 16ccaaec-fc42-4051-a5e7-25326d06908e 0xc0034518d0 0xc0034518d1}] []  [{kube-controller-manager Update apps/v1 2022-07-30 13:08:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"16ccaaec-fc42-4051-a5e7-25326d06908e\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 13:08:05 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*1,Selector:&v1.LabelSelector{MatchLabels:map[string]string{e2e: testing,name: httpd,pod-template-hash: 688c4d6789,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc003451978 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:1,FullyLabeledReplicas:1,ObservedGeneration:1,ReadyReplicas:1,AvailableReplicas:1,Conditions:[]ReplicaSetCondition{},},}
Jul 30 13:08:05.839: INFO: Pod "test-deployment-z7xb9-688c4d6789-dkc25" is available:
&Pod{ObjectMeta:{test-deployment-z7xb9-688c4d6789-dkc25 test-deployment-z7xb9-688c4d6789- deployment-7303  89e3cb49-f9d2-432e-b706-a0814025cc68 32146 0 2022-07-30 13:08:03 +0000 UTC <nil> <nil> map[e2e:testing name:httpd pod-template-hash:688c4d6789] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet test-deployment-z7xb9-688c4d6789 ecd7ef36-cf47-430a-a076-a435cbd85706 0xc0038f3370 0xc0038f3371}] []  [{kube-controller-manager Update v1 2022-07-30 13:08:03 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:e2e":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ecd7ef36-cf47-430a-a076-a435cbd85706\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:08:05 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.79\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-t5wjx,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-t5wjx,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:08:03 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:08:05 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:08:05 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:08:03 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.79,StartTime:2022-07-30 13:08:03 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:08:04 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://bc6fdc8a18eb5b6ece33581b20b89d918ee91e9e9a7f8e03946c1e60beba221b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.79,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 13:08:05.839: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-7303" for this suite.
•{"msg":"PASSED [sig-apps] Deployment should validate Deployment Status endpoints [Conformance]","total":356,"completed":259,"skipped":4672,"failed":0}
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:08:05.851: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-1893
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-1893
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul 30 13:08:05.974: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul 30 13:08:06.014: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:08:08.019: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:08:10.020: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:08:12.019: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:08:14.020: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:08:16.019: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:08:18.019: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul 30 13:08:18.025: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jul 30 13:08:18.031: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jul 30 13:08:20.069: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jul 30 13:08:20.069: INFO: Going to poll 192.168.223.76 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jul 30 13:08:20.072: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.223.76:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:08:20.072: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:08:20.072: INFO: ExecWithOptions: Clientset creation
Jul 30 13:08:20.072: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.223.76%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul 30 13:08:20.169: INFO: Found all 1 expected endpoints: [netserver-0]
Jul 30 13:08:20.169: INFO: Going to poll 192.168.81.83 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jul 30 13:08:20.172: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.81.83:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:08:20.173: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:08:20.173: INFO: ExecWithOptions: Clientset creation
Jul 30 13:08:20.173: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.81.83%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul 30 13:08:20.242: INFO: Found all 1 expected endpoints: [netserver-1]
Jul 30 13:08:20.242: INFO: Going to poll 192.168.110.253 on port 8083 at least 0 times, with a maximum of 39 tries before failing
Jul 30 13:08:20.246: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.110.253:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-1893 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:08:20.246: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:08:20.246: INFO: ExecWithOptions: Clientset creation
Jul 30 13:08:20.246: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-1893/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.110.253%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
Jul 30 13:08:20.319: INFO: Found all 1 expected endpoints: [netserver-2]
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul 30 13:08:20.319: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-1893" for this suite.

• [SLOW TEST:14.480 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":260,"skipped":4676,"failed":0}
S
------------------------------
[sig-node] Containers 
  should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:08:20.331: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-9235
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override command
Jul 30 13:08:20.464: INFO: Waiting up to 5m0s for pod "client-containers-29ba729a-682e-4db6-90c6-ae364cf16569" in namespace "containers-9235" to be "Succeeded or Failed"
Jul 30 13:08:20.468: INFO: Pod "client-containers-29ba729a-682e-4db6-90c6-ae364cf16569": Phase="Pending", Reason="", readiness=false. Elapsed: 4.737128ms
Jul 30 13:08:22.474: INFO: Pod "client-containers-29ba729a-682e-4db6-90c6-ae364cf16569": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01037296s
Jul 30 13:08:24.479: INFO: Pod "client-containers-29ba729a-682e-4db6-90c6-ae364cf16569": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.014877126s
STEP: Saw pod success
Jul 30 13:08:24.479: INFO: Pod "client-containers-29ba729a-682e-4db6-90c6-ae364cf16569" satisfied condition "Succeeded or Failed"
Jul 30 13:08:24.482: INFO: Trying to get logs from node ip-172-31-74-61 pod client-containers-29ba729a-682e-4db6-90c6-ae364cf16569 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 13:08:24.504: INFO: Waiting for pod client-containers-29ba729a-682e-4db6-90c6-ae364cf16569 to disappear
Jul 30 13:08:24.507: INFO: Pod client-containers-29ba729a-682e-4db6-90c6-ae364cf16569 no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul 30 13:08:24.507: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-9235" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]","total":356,"completed":261,"skipped":4677,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:08:24.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-9933
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Indexed job
STEP: Ensuring job reaches completions
STEP: Ensuring pods with index for job exist
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul 30 13:08:34.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-9933" for this suite.

• [SLOW TEST:10.143 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]","total":356,"completed":262,"skipped":4718,"failed":0}
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes 
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:08:34.660: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir-wrapper
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-wrapper-1226
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating 50 configmaps
STEP: Creating RC which spawns configmap-volume pods
Jul 30 13:08:35.125: INFO: Pod name wrapped-volume-race-6c192a67-df6c-45c7-b2bd-6e2ec3b7a562: Found 3 pods out of 5
Jul 30 13:08:40.134: INFO: Pod name wrapped-volume-race-6c192a67-df6c-45c7-b2bd-6e2ec3b7a562: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-6c192a67-df6c-45c7-b2bd-6e2ec3b7a562 in namespace emptydir-wrapper-1226, will wait for the garbage collector to delete the pods
Jul 30 13:08:50.217: INFO: Deleting ReplicationController wrapped-volume-race-6c192a67-df6c-45c7-b2bd-6e2ec3b7a562 took: 6.898204ms
Jul 30 13:08:50.318: INFO: Terminating ReplicationController wrapped-volume-race-6c192a67-df6c-45c7-b2bd-6e2ec3b7a562 pods took: 100.744663ms
STEP: Creating RC which spawns configmap-volume pods
Jul 30 13:08:53.437: INFO: Pod name wrapped-volume-race-5a1a7c9e-1756-4ebc-a8da-59f184be2aed: Found 0 pods out of 5
Jul 30 13:08:58.445: INFO: Pod name wrapped-volume-race-5a1a7c9e-1756-4ebc-a8da-59f184be2aed: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-5a1a7c9e-1756-4ebc-a8da-59f184be2aed in namespace emptydir-wrapper-1226, will wait for the garbage collector to delete the pods
Jul 30 13:09:08.540: INFO: Deleting ReplicationController wrapped-volume-race-5a1a7c9e-1756-4ebc-a8da-59f184be2aed took: 7.112879ms
Jul 30 13:09:08.640: INFO: Terminating ReplicationController wrapped-volume-race-5a1a7c9e-1756-4ebc-a8da-59f184be2aed pods took: 100.44901ms
STEP: Creating RC which spawns configmap-volume pods
Jul 30 13:09:11.763: INFO: Pod name wrapped-volume-race-824ce904-31d8-4854-97c5-abc96c7a4dd6: Found 0 pods out of 5
Jul 30 13:09:16.777: INFO: Pod name wrapped-volume-race-824ce904-31d8-4854-97c5-abc96c7a4dd6: Found 5 pods out of 5
STEP: Ensuring each pod is running
STEP: deleting ReplicationController wrapped-volume-race-824ce904-31d8-4854-97c5-abc96c7a4dd6 in namespace emptydir-wrapper-1226, will wait for the garbage collector to delete the pods
Jul 30 13:09:26.867: INFO: Deleting ReplicationController wrapped-volume-race-824ce904-31d8-4854-97c5-abc96c7a4dd6 took: 7.1654ms
Jul 30 13:09:26.968: INFO: Terminating ReplicationController wrapped-volume-race-824ce904-31d8-4854-97c5-abc96c7a4dd6 pods took: 100.949004ms
STEP: Cleaning up the configMaps
[AfterEach] [sig-storage] EmptyDir wrapper volumes
  test/e2e/framework/framework.go:188
Jul 30 13:09:30.563: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-wrapper-1226" for this suite.

• [SLOW TEST:55.915 seconds]
[sig-storage] EmptyDir wrapper volumes
test/e2e/storage/utils/framework.go:23
  should not cause race condition when used for configmaps [Serial] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]","total":356,"completed":263,"skipped":4724,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:09:30.576: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-8988
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to update and delete ResourceQuota. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a ResourceQuota
STEP: Getting a ResourceQuota
STEP: Updating a ResourceQuota
STEP: Verifying a ResourceQuota was modified
STEP: Deleting a ResourceQuota
STEP: Verifying the deleted ResourceQuota
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 13:09:30.744: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-8988" for this suite.
•{"msg":"PASSED [sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]","total":356,"completed":264,"skipped":4761,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods 
  should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Pods
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:09:30.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pods-131
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Pods
  test/e2e/common/node/pods.go:191
[It] should be submitted and removed [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: setting up watch
STEP: submitting the pod to kubernetes
Jul 30 13:09:30.890: INFO: observed the pod list
STEP: verifying the pod is in kubernetes
STEP: verifying pod creation was observed
STEP: deleting the pod gracefully
STEP: verifying pod deletion was observed
[AfterEach] [sig-node] Pods
  test/e2e/framework/framework.go:188
Jul 30 13:09:35.530: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pods-131" for this suite.
•{"msg":"PASSED [sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]","total":356,"completed":265,"skipped":4786,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:09:35.541: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-9332
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should create and stop a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jul 30 13:09:35.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 create -f -'
Jul 30 13:09:35.767: INFO: stderr: ""
Jul 30 13:09:35.767: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul 30 13:09:35.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:09:35.809: INFO: stderr: ""
Jul 30 13:09:35.809: INFO: stdout: "update-demo-nautilus-24xtb update-demo-nautilus-6bns5 "
Jul 30 13:09:35.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods update-demo-nautilus-24xtb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:09:35.850: INFO: stderr: ""
Jul 30 13:09:35.850: INFO: stdout: ""
Jul 30 13:09:35.850: INFO: update-demo-nautilus-24xtb is created but not running
Jul 30 13:09:40.851: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:09:40.896: INFO: stderr: ""
Jul 30 13:09:40.896: INFO: stdout: "update-demo-nautilus-24xtb update-demo-nautilus-6bns5 "
Jul 30 13:09:40.896: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods update-demo-nautilus-24xtb -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:09:40.935: INFO: stderr: ""
Jul 30 13:09:40.935: INFO: stdout: "true"
Jul 30 13:09:40.935: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods update-demo-nautilus-24xtb -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul 30 13:09:40.975: INFO: stderr: ""
Jul 30 13:09:40.975: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul 30 13:09:40.975: INFO: validating pod update-demo-nautilus-24xtb
Jul 30 13:09:40.980: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul 30 13:09:40.981: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul 30 13:09:40.981: INFO: update-demo-nautilus-24xtb is verified up and running
Jul 30 13:09:40.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods update-demo-nautilus-6bns5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:09:41.020: INFO: stderr: ""
Jul 30 13:09:41.020: INFO: stdout: "true"
Jul 30 13:09:41.020: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods update-demo-nautilus-6bns5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul 30 13:09:41.060: INFO: stderr: ""
Jul 30 13:09:41.060: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul 30 13:09:41.060: INFO: validating pod update-demo-nautilus-6bns5
Jul 30 13:09:41.064: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul 30 13:09:41.064: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul 30 13:09:41.064: INFO: update-demo-nautilus-6bns5 is verified up and running
STEP: using delete to clean up resources
Jul 30 13:09:41.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 delete --grace-period=0 --force -f -'
Jul 30 13:09:41.111: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:09:41.111: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jul 30 13:09:41.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get rc,svc -l name=update-demo --no-headers'
Jul 30 13:09:41.156: INFO: stderr: "No resources found in kubectl-9332 namespace.\n"
Jul 30 13:09:41.156: INFO: stdout: ""
Jul 30 13:09:41.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-9332 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jul 30 13:09:41.197: INFO: stderr: ""
Jul 30 13:09:41.197: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 13:09:41.197: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-9332" for this suite.

• [SLOW TEST:5.666 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should create and stop a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]","total":356,"completed":266,"skipped":4811,"failed":0}
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:09:41.207: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-7518
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ReplicationController
STEP: Ensuring resource quota status captures replication controller creation
STEP: Deleting a ReplicationController
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 13:09:52.377: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-7518" for this suite.

• [SLOW TEST:11.180 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a replication controller. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]","total":356,"completed":267,"skipped":4817,"failed":0}
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret 
  should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:09:52.388: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-8079
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name projected-secret-test-7b1230ec-45f3-4c79-9d98-ce18a58292cc
STEP: Creating a pod to test consume secrets
Jul 30 13:09:52.584: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a" in namespace "projected-8079" to be "Succeeded or Failed"
Jul 30 13:09:52.590: INFO: Pod "pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a": Phase="Pending", Reason="", readiness=false. Elapsed: 6.316823ms
Jul 30 13:09:54.598: INFO: Pod "pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013889243s
Jul 30 13:09:56.604: INFO: Pod "pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019903588s
STEP: Saw pod success
Jul 30 13:09:56.604: INFO: Pod "pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a" satisfied condition "Succeeded or Failed"
Jul 30 13:09:56.607: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 13:09:56.641: INFO: Waiting for pod pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a to disappear
Jul 30 13:09:56.644: INFO: Pod pod-projected-secrets-a7e9ae2f-5cff-47b4-b60d-6225fea52a3a no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul 30 13:09:56.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-8079" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]","total":356,"completed":268,"skipped":4827,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:09:56.653: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-2233
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-map-06cf4ea8-2981-4b49-95fe-6d7f7ed816a7
STEP: Creating a pod to test consume configMaps
Jul 30 13:09:56.793: INFO: Waiting up to 5m0s for pod "pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77" in namespace "configmap-2233" to be "Succeeded or Failed"
Jul 30 13:09:56.799: INFO: Pod "pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77": Phase="Pending", Reason="", readiness=false. Elapsed: 5.841392ms
Jul 30 13:09:58.806: INFO: Pod "pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012245372s
Jul 30 13:10:00.812: INFO: Pod "pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019034384s
STEP: Saw pod success
Jul 30 13:10:00.813: INFO: Pod "pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77" satisfied condition "Succeeded or Failed"
Jul 30 13:10:00.816: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 13:10:00.833: INFO: Waiting for pod pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77 to disappear
Jul 30 13:10:00.836: INFO: Pod pod-configmaps-bde44f33-7939-40ff-b840-3ed974d70d77 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 13:10:00.836: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-2233" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]","total":356,"completed":269,"skipped":4861,"failed":0}
SSSSSSS
------------------------------
[sig-network] Services 
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:10:00.845: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7293
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7293
STEP: creating service affinity-clusterip-transition in namespace services-7293
STEP: creating replication controller affinity-clusterip-transition in namespace services-7293
I0730 13:10:00.983801      23 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7293, replica count: 3
I0730 13:10:04.035223      23 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 13:10:04.061: INFO: Creating new exec pod
Jul 30 13:10:07.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7293 exec execpod-affinityfrjkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
Jul 30 13:10:07.419: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
Jul 30 13:10:07.419: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:10:07.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7293 exec execpod-affinityfrjkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.130 80'
Jul 30 13:10:07.660: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.130 80\nConnection to 10.152.183.130 80 port [tcp/http] succeeded!\n"
Jul 30 13:10:07.660: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:10:07.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7293 exec execpod-affinityfrjkb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.130:80/ ; done'
Jul 30 13:10:08.054: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n"
Jul 30 13:10:08.054: INFO: stdout: "\naffinity-clusterip-transition-xr9dz\naffinity-clusterip-transition-cc5x9\naffinity-clusterip-transition-cc5x9\naffinity-clusterip-transition-xr9dz\naffinity-clusterip-transition-cc5x9\naffinity-clusterip-transition-xr9dz\naffinity-clusterip-transition-cc5x9\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-xr9dz\naffinity-clusterip-transition-cc5x9\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-xr9dz\naffinity-clusterip-transition-cc5x9\naffinity-clusterip-transition-cc5x9"
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-xr9dz
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-cc5x9
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-cc5x9
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-xr9dz
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-cc5x9
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-xr9dz
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-cc5x9
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-xr9dz
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-cc5x9
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-xr9dz
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-cc5x9
Jul 30 13:10:08.054: INFO: Received response from host: affinity-clusterip-transition-cc5x9
Jul 30 13:10:08.067: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7293 exec execpod-affinityfrjkb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.130:80/ ; done'
Jul 30 13:10:08.446: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.130:80/\n"
Jul 30 13:10:08.446: INFO: stdout: "\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7\naffinity-clusterip-transition-889z7"
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Received response from host: affinity-clusterip-transition-889z7
Jul 30 13:10:08.446: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7293, will wait for the garbage collector to delete the pods
Jul 30 13:10:08.524: INFO: Deleting ReplicationController affinity-clusterip-transition took: 7.036787ms
Jul 30 13:10:08.624: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.41542ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 13:10:10.644: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7293" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.807 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":270,"skipped":4868,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:10:10.653: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3253
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] pod should support shared volumes between containers [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating Pod
STEP: Reading file content from the nginx-container
Jul 30 13:10:12.794: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3253 PodName:pod-sharedvolume-200d7b0e-57a5-4138-9a74-13487e69ca56 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:10:12.794: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:10:12.794: INFO: ExecWithOptions: Clientset creation
Jul 30 13:10:12.794: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-3253/pods/pod-sharedvolume-200d7b0e-57a5-4138-9a74-13487e69ca56/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
Jul 30 13:10:12.869: INFO: Exec stderr: ""
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:10:12.869: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3253" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]","total":356,"completed":271,"skipped":4882,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:10:12.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4916
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 13:10:13.380: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 13:10:16.405: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should mutate configmap [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the mutating configmap webhook via the AdmissionRegistration API
STEP: create a configmap that should be updated by the webhook
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:10:16.443: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4916" for this suite.
STEP: Destroying namespace "webhook-4916-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]","total":356,"completed":272,"skipped":4912,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice 
  should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:10:16.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename endpointslice
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in endpointslice-7955
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] EndpointSlice
  test/e2e/network/endpointslice.go:51
[It] should have Endpoints and EndpointSlices pointing to API Server [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:10:16.629: INFO: Endpoints addresses: [172.31.0.48 172.31.39.218] , ports: [6443]
Jul 30 13:10:16.629: INFO: EndpointSlices addresses: [172.31.0.48 172.31.39.218] , ports: [6443]
[AfterEach] [sig-network] EndpointSlice
  test/e2e/framework/framework.go:188
Jul 30 13:10:16.630: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "endpointslice-7955" for this suite.
•{"msg":"PASSED [sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]","total":356,"completed":273,"skipped":4926,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:10:16.639: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-8900
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:10:16.779: INFO: Creating simple daemon set daemon-set
STEP: Check that daemon pods launch on every node of the cluster.
Jul 30 13:10:16.787: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:16.787: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:16.791: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 13:10:16.791: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 13:10:17.797: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:17.797: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:17.800: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul 30 13:10:17.800: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 13:10:18.798: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:18.798: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:18.802: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 13:10:18.802: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
STEP: Update daemon pods image.
STEP: Check that daemon pods images are updated.
Jul 30 13:10:18.826: INFO: Wrong image for pod: daemon-set-4krqs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:18.826: INFO: Wrong image for pod: daemon-set-cbst4. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:18.826: INFO: Wrong image for pod: daemon-set-rj5fs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:18.829: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:18.829: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:19.833: INFO: Wrong image for pod: daemon-set-4krqs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:19.833: INFO: Wrong image for pod: daemon-set-rj5fs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:19.837: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:19.837: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:20.834: INFO: Wrong image for pod: daemon-set-4krqs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:20.834: INFO: Wrong image for pod: daemon-set-rj5fs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:20.837: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:20.837: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:21.834: INFO: Wrong image for pod: daemon-set-4krqs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:21.834: INFO: Pod daemon-set-6qs2p is not available
Jul 30 13:10:21.834: INFO: Wrong image for pod: daemon-set-rj5fs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:21.838: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:21.838: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:22.834: INFO: Wrong image for pod: daemon-set-rj5fs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:22.838: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:22.838: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:23.835: INFO: Wrong image for pod: daemon-set-rj5fs. Expected: k8s.gcr.io/e2e-test-images/agnhost:2.39, got: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2.
Jul 30 13:10:23.835: INFO: Pod daemon-set-wgcv5 is not available
Jul 30 13:10:23.838: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:23.838: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:24.838: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:24.838: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:25.835: INFO: Pod daemon-set-rxt2q is not available
Jul 30 13:10:25.839: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:25.839: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
STEP: Check that daemon pods are still running on every node of the cluster.
Jul 30 13:10:25.842: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:25.842: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:25.846: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
Jul 30 13:10:25.846: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 13:10:26.852: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:26.852: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:10:26.857: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 13:10:26.857: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8900, will wait for the garbage collector to delete the pods
Jul 30 13:10:26.943: INFO: Deleting DaemonSet.extensions daemon-set took: 7.582539ms
Jul 30 13:10:27.044: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.79595ms
Jul 30 13:10:29.550: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 13:10:29.550: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul 30 13:10:29.552: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34342"},"items":null}

Jul 30 13:10:29.555: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34342"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul 30 13:10:29.568: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-8900" for this suite.

• [SLOW TEST:12.940 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]","total":356,"completed":274,"skipped":4978,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:10:29.579: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-8652
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a job [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: delete a job
STEP: deleting Job.batch foo in namespace job-8652, will wait for the garbage collector to delete the pods
Jul 30 13:10:31.776: INFO: Deleting Job.batch foo took: 9.864687ms
Jul 30 13:10:31.877: INFO: Terminating Job.batch foo pods took: 100.408104ms
STEP: Ensuring job was deleted
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul 30 13:11:03.901: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-8652" for this suite.

• [SLOW TEST:34.339 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should delete a job [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should delete a job [Conformance]","total":356,"completed":275,"skipped":4990,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets 
  should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:03.918: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename secrets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in secrets-7332
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating secret with name secret-test-map-094bb144-41d1-4381-8018-985af3d0f91f
STEP: Creating a pod to test consume secrets
Jul 30 13:11:04.077: INFO: Waiting up to 5m0s for pod "pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6" in namespace "secrets-7332" to be "Succeeded or Failed"
Jul 30 13:11:04.082: INFO: Pod "pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6": Phase="Pending", Reason="", readiness=false. Elapsed: 5.469265ms
Jul 30 13:11:06.094: INFO: Pod "pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6": Phase="Pending", Reason="", readiness=false. Elapsed: 2.01713785s
Jul 30 13:11:08.099: INFO: Pod "pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.0222099s
STEP: Saw pod success
Jul 30 13:11:08.099: INFO: Pod "pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6" satisfied condition "Succeeded or Failed"
Jul 30 13:11:08.102: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6 container secret-volume-test: <nil>
STEP: delete the pod
Jul 30 13:11:08.120: INFO: Waiting for pod pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6 to disappear
Jul 30 13:11:08.123: INFO: Pod pod-secrets-395a6805-e24e-48e8-b420-940eebf52ed6 no longer exists
[AfterEach] [sig-storage] Secrets
  test/e2e/framework/framework.go:188
Jul 30 13:11:08.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "secrets-7332" for this suite.
•{"msg":"PASSED [sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":276,"skipped":5016,"failed":0}
SS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:08.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-1692
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on node default medium
Jul 30 13:11:08.267: INFO: Waiting up to 5m0s for pod "pod-862ca388-480c-42d5-b4dc-52f728831f20" in namespace "emptydir-1692" to be "Succeeded or Failed"
Jul 30 13:11:08.269: INFO: Pod "pod-862ca388-480c-42d5-b4dc-52f728831f20": Phase="Pending", Reason="", readiness=false. Elapsed: 2.505073ms
Jul 30 13:11:10.275: INFO: Pod "pod-862ca388-480c-42d5-b4dc-52f728831f20": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008595182s
Jul 30 13:11:12.279: INFO: Pod "pod-862ca388-480c-42d5-b4dc-52f728831f20": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.012178834s
STEP: Saw pod success
Jul 30 13:11:12.279: INFO: Pod "pod-862ca388-480c-42d5-b4dc-52f728831f20" satisfied condition "Succeeded or Failed"
Jul 30 13:11:12.282: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-862ca388-480c-42d5-b4dc-52f728831f20 container test-container: <nil>
STEP: delete the pod
Jul 30 13:11:12.305: INFO: Waiting for pod pod-862ca388-480c-42d5-b4dc-52f728831f20 to disappear
Jul 30 13:11:12.308: INFO: Pod pod-862ca388-480c-42d5-b4dc-52f728831f20 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:11:12.308: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-1692" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":277,"skipped":5018,"failed":0}
SSSSSS
------------------------------
[sig-network] Services 
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:12.317: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8979
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a service externalname-service with the type=ExternalName in namespace services-8979
STEP: changing the ExternalName service to type=ClusterIP
STEP: creating replication controller externalname-service in namespace services-8979
I0730 13:11:12.471740      23 runners.go:193] Created replication controller with name: externalname-service, namespace: services-8979, replica count: 2
I0730 13:11:15.523169      23 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 13:11:15.523: INFO: Creating new exec pod
Jul 30 13:11:18.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul 30 13:11:18.662: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:18.662: INFO: stdout: ""
Jul 30 13:11:19.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul 30 13:11:19.781: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:19.781: INFO: stdout: ""
Jul 30 13:11:20.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul 30 13:11:20.756: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:20.756: INFO: stdout: ""
Jul 30 13:11:21.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul 30 13:11:21.795: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:21.795: INFO: stdout: ""
Jul 30 13:11:22.662: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
Jul 30 13:11:22.788: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:22.788: INFO: stdout: "externalname-service-ps676"
Jul 30 13:11:22.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
Jul 30 13:11:22.882: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:22.882: INFO: stdout: ""
Jul 30 13:11:23.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
Jul 30 13:11:23.998: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:23.998: INFO: stdout: ""
Jul 30 13:11:24.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8979 exec execpod57lvr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.80 80'
Jul 30 13:11:25.004: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.80 80\nConnection to 10.152.183.80 80 port [tcp/http] succeeded!\n"
Jul 30 13:11:25.004: INFO: stdout: "externalname-service-ps676"
Jul 30 13:11:25.004: INFO: Cleaning up the ExternalName to ClusterIP test service
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 13:11:25.031: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8979" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:12.725 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should be able to change the type from ExternalName to ClusterIP [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]","total":356,"completed":278,"skipped":5024,"failed":0}
SS
------------------------------
[sig-cli] Kubectl client Kubectl logs 
  should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:25.042: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-4078
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1412
STEP: creating an pod
Jul 30 13:11:25.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 run logs-generator --image=k8s.gcr.io/e2e-test-images/agnhost:2.39 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
Jul 30 13:11:25.212: INFO: stderr: ""
Jul 30 13:11:25.212: INFO: stdout: "pod/logs-generator created\n"
[It] should be able to retrieve and filter logs  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for log generator to start.
Jul 30 13:11:25.212: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
Jul 30 13:11:25.212: INFO: Waiting up to 5m0s for pod "logs-generator" in namespace "kubectl-4078" to be "running and ready, or succeeded"
Jul 30 13:11:25.215: INFO: Pod "logs-generator": Phase="Pending", Reason="", readiness=false. Elapsed: 3.238248ms
Jul 30 13:11:27.219: INFO: Pod "logs-generator": Phase="Running", Reason="", readiness=true. Elapsed: 2.007335911s
Jul 30 13:11:27.219: INFO: Pod "logs-generator" satisfied condition "running and ready, or succeeded"
Jul 30 13:11:27.219: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
STEP: checking for a matching strings
Jul 30 13:11:27.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 logs logs-generator logs-generator'
Jul 30 13:11:27.274: INFO: stderr: ""
Jul 30 13:11:27.274: INFO: stdout: "I0730 13:11:25.867209       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/4zq9 555\nI0730 13:11:26.067326       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/2vj 479\nI0730 13:11:26.267731       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/rfzb 248\nI0730 13:11:26.468037       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/xszl 377\nI0730 13:11:26.667286       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/h2s6 477\nI0730 13:11:26.867586       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/h8x 220\nI0730 13:11:27.067723       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/pmsd 274\n"
STEP: limiting log lines
Jul 30 13:11:27.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 logs logs-generator logs-generator --tail=1'
Jul 30 13:11:27.323: INFO: stderr: ""
Jul 30 13:11:27.323: INFO: stdout: "I0730 13:11:27.268020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/qs5m 534\n"
Jul 30 13:11:27.323: INFO: got output "I0730 13:11:27.268020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/qs5m 534\n"
STEP: limiting log bytes
Jul 30 13:11:27.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 logs logs-generator logs-generator --limit-bytes=1'
Jul 30 13:11:27.368: INFO: stderr: ""
Jul 30 13:11:27.368: INFO: stdout: "I"
Jul 30 13:11:27.368: INFO: got output "I"
STEP: exposing timestamps
Jul 30 13:11:27.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 logs logs-generator logs-generator --tail=1 --timestamps'
Jul 30 13:11:27.411: INFO: stderr: ""
Jul 30 13:11:27.411: INFO: stdout: "2022-07-30T13:11:27.268094959Z I0730 13:11:27.268020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/qs5m 534\n"
Jul 30 13:11:27.411: INFO: got output "2022-07-30T13:11:27.268094959Z I0730 13:11:27.268020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/qs5m 534\n"
STEP: restricting to a time range
Jul 30 13:11:29.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 logs logs-generator logs-generator --since=1s'
Jul 30 13:11:29.974: INFO: stderr: ""
Jul 30 13:11:29.974: INFO: stdout: "I0730 13:11:29.067272       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/2js 204\nI0730 13:11:29.267574       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/mph 259\nI0730 13:11:29.467729       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/jqk5 388\nI0730 13:11:29.668034       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/r77z 340\nI0730 13:11:29.867278       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/dwg 377\n"
Jul 30 13:11:29.974: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 logs logs-generator logs-generator --since=24h'
Jul 30 13:11:30.025: INFO: stderr: ""
Jul 30 13:11:30.025: INFO: stdout: "I0730 13:11:25.867209       1 logs_generator.go:76] 0 POST /api/v1/namespaces/ns/pods/4zq9 555\nI0730 13:11:26.067326       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/2vj 479\nI0730 13:11:26.267731       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/rfzb 248\nI0730 13:11:26.468037       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/xszl 377\nI0730 13:11:26.667286       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/h2s6 477\nI0730 13:11:26.867586       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/h8x 220\nI0730 13:11:27.067723       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/pmsd 274\nI0730 13:11:27.268020       1 logs_generator.go:76] 7 GET /api/v1/namespaces/default/pods/qs5m 534\nI0730 13:11:27.467259       1 logs_generator.go:76] 8 GET /api/v1/namespaces/ns/pods/zj6f 538\nI0730 13:11:27.667560       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/f6bg 200\nI0730 13:11:27.867863       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/pnsb 407\nI0730 13:11:28.068190       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/8cs 241\nI0730 13:11:28.267311       1 logs_generator.go:76] 12 POST /api/v1/namespaces/ns/pods/64xn 594\nI0730 13:11:28.467601       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/jp5 497\nI0730 13:11:28.667723       1 logs_generator.go:76] 14 GET /api/v1/namespaces/default/pods/ctr7 467\nI0730 13:11:28.868024       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/default/pods/2g4n 407\nI0730 13:11:29.067272       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/2js 204\nI0730 13:11:29.267574       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/mph 259\nI0730 13:11:29.467729       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/jqk5 388\nI0730 13:11:29.668034       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/r77z 340\nI0730 13:11:29.867278       1 logs_generator.go:76] 20 GET /api/v1/namespaces/ns/pods/dwg 377\n"
[AfterEach] Kubectl logs
  test/e2e/kubectl/kubectl.go:1417
Jul 30 13:11:30.025: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-4078 delete pod logs-generator'
Jul 30 13:11:30.794: INFO: stderr: ""
Jul 30 13:11:30.794: INFO: stdout: "pod \"logs-generator\" deleted\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 13:11:30.794: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-4078" for this suite.

• [SLOW TEST:5.764 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Kubectl logs
  test/e2e/kubectl/kubectl.go:1409
    should be able to retrieve and filter logs  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Kubectl logs should be able to retrieve and filter logs  [Conformance]","total":356,"completed":279,"skipped":5026,"failed":0}
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:30.806: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-2123
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul 30 13:11:30.926: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul 30 13:11:30.934: INFO: Waiting for terminating namespaces to be deleted...
Jul 30 13:11:30.937: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-47-213 before test
Jul 30 13:11:30.942: INFO: nginx-ingress-controller-kubernetes-worker-m74xp from ingress-nginx-kubernetes-worker started at 2022-07-30 11:50:58 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.942: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 13:11:30.942: INFO: calico-kube-controllers-5488b65678-bxz55 from kube-system started at 2022-07-30 12:05:33 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.942: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul 30 13:11:30.942: INFO: externalname-service-ps676 from services-8979 started at 2022-07-30 13:11:12 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.942: INFO: 	Container externalname-service ready: true, restart count 0
Jul 30 13:11:30.942: INFO: sonobuoy from sonobuoy started at 2022-07-30 11:56:59 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.942: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jul 30 13:11:30.942: INFO: sonobuoy-e2e-job-e4d2d2eb16ce474e from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:30.942: INFO: 	Container e2e ready: true, restart count 0
Jul 30 13:11:30.942: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:30.942: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-dxmzm from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:30.942: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:30.942: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 13:11:30.942: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-74-61 before test
Jul 30 13:11:30.947: INFO: nginx-ingress-controller-kubernetes-worker-xh64j from ingress-nginx-kubernetes-worker started at 2022-07-30 12:05:45 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.947: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 13:11:30.947: INFO: externalname-service-pzv4z from services-8979 started at 2022-07-30 13:11:12 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.947: INFO: 	Container externalname-service ready: true, restart count 0
Jul 30 13:11:30.947: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-k4bdp from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:30.947: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:30.947: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 13:11:30.947: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-87-57 before test
Jul 30 13:11:30.952: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sld8q from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Jul 30 13:11:30.952: INFO: nginx-ingress-controller-kubernetes-worker-g7v8n from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 13:11:30.952: INFO: coredns-86c98bfcdb-phwp7 from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container coredns ready: true, restart count 0
Jul 30 13:11:30.952: INFO: kube-state-metrics-5cdbfd47b4-dcb7g from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jul 30 13:11:30.952: INFO: metrics-server-v0.5.2-6bfd958b56-d28nd from kube-system started at 2022-07-30 11:48:05 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container metrics-server ready: true, restart count 0
Jul 30 13:11:30.952: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Jul 30 13:11:30.952: INFO: dashboard-metrics-scraper-8669b59d4f-8dtvd from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul 30 13:11:30.952: INFO: kubernetes-dashboard-585fc6bc87-l57jt from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jul 30 13:11:30.952: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-bk2gt from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:30.952: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:30.952: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates that NodeSelector is respected if matching  [Conformance]
  test/e2e/framework/framework.go:652
STEP: Trying to launch a pod without a label to get a node which can launch it.
STEP: Explicitly delete pod here to free the resource it takes.
STEP: Trying to apply a random label on the found node.
STEP: verifying the node has the label kubernetes.io/e2e-d4890e28-1e99-4ce2-9c9b-007f10467c89 42
STEP: Trying to relaunch the pod, now with labels.
STEP: removing the label kubernetes.io/e2e-d4890e28-1e99-4ce2-9c9b-007f10467c89 off the node ip-172-31-74-61
STEP: verifying the node doesn't have the label kubernetes.io/e2e-d4890e28-1e99-4ce2-9c9b-007f10467c89
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul 30 13:11:35.032: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-2123" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]","total":356,"completed":280,"skipped":5036,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container 
  should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:35.046: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-runtime
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-runtime-8203
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the container
STEP: wait for the container to reach Succeeded
STEP: get the container status
STEP: the container should be terminated
STEP: the termination message should be set
Jul 30 13:11:39.214: INFO: Expected: &{} to match Container's Termination Message:  --
STEP: delete the container
[AfterEach] [sig-node] Container Runtime
  test/e2e/framework/framework.go:188
Jul 30 13:11:39.232: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-runtime-8203" for this suite.
•{"msg":"PASSED [sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]","total":356,"completed":281,"skipped":5061,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:39.241: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-4734
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 13:11:39.772: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 13:11:42.796: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] patching/updating a validating webhook should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a validating webhook configuration
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Updating a validating webhook configuration's rules to not include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
STEP: Patching a validating webhook configuration's rules to include the create operation
STEP: Creating a configMap that does not comply to the validation webhook rules
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:11:42.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-4734" for this suite.
STEP: Destroying namespace "webhook-4734-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]","total":356,"completed":282,"skipped":5074,"failed":0}

------------------------------
[sig-scheduling] SchedulerPredicates [Serial] 
  validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:42.934: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-pred
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-pred-6879
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:92
Jul 30 13:11:43.063: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
Jul 30 13:11:43.070: INFO: Waiting for terminating namespaces to be deleted...
Jul 30 13:11:43.073: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-47-213 before test
Jul 30 13:11:43.077: INFO: nginx-ingress-controller-kubernetes-worker-m74xp from ingress-nginx-kubernetes-worker started at 2022-07-30 11:50:58 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.077: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 13:11:43.077: INFO: calico-kube-controllers-5488b65678-bxz55 from kube-system started at 2022-07-30 12:05:33 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.077: INFO: 	Container calico-kube-controllers ready: true, restart count 0
Jul 30 13:11:43.077: INFO: sonobuoy from sonobuoy started at 2022-07-30 11:56:59 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.077: INFO: 	Container kube-sonobuoy ready: true, restart count 0
Jul 30 13:11:43.077: INFO: sonobuoy-e2e-job-e4d2d2eb16ce474e from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:43.077: INFO: 	Container e2e ready: true, restart count 0
Jul 30 13:11:43.077: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:43.077: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-dxmzm from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:43.077: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:43.077: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 13:11:43.077: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-74-61 before test
Jul 30 13:11:43.081: INFO: nginx-ingress-controller-kubernetes-worker-xh64j from ingress-nginx-kubernetes-worker started at 2022-07-30 12:05:45 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.081: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 13:11:43.081: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-k4bdp from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:43.081: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:43.081: INFO: 	Container systemd-logs ready: true, restart count 0
Jul 30 13:11:43.081: INFO: 
Logging pods the apiserver thinks is on node ip-172-31-87-57 before test
Jul 30 13:11:43.086: INFO: default-http-backend-kubernetes-worker-6c59687bf6-sld8q from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
Jul 30 13:11:43.086: INFO: nginx-ingress-controller-kubernetes-worker-g7v8n from ingress-nginx-kubernetes-worker started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
Jul 30 13:11:43.086: INFO: coredns-86c98bfcdb-phwp7 from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container coredns ready: true, restart count 0
Jul 30 13:11:43.086: INFO: kube-state-metrics-5cdbfd47b4-dcb7g from kube-system started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container kube-state-metrics ready: true, restart count 0
Jul 30 13:11:43.086: INFO: metrics-server-v0.5.2-6bfd958b56-d28nd from kube-system started at 2022-07-30 11:48:05 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container metrics-server ready: true, restart count 0
Jul 30 13:11:43.086: INFO: 	Container metrics-server-nanny ready: true, restart count 0
Jul 30 13:11:43.086: INFO: dashboard-metrics-scraper-8669b59d4f-8dtvd from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
Jul 30 13:11:43.086: INFO: kubernetes-dashboard-585fc6bc87-l57jt from kubernetes-dashboard started at 2022-07-30 11:48:05 +0000 UTC (1 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
Jul 30 13:11:43.086: INFO: sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-bk2gt from sonobuoy started at 2022-07-30 11:57:01 +0000 UTC (2 container statuses recorded)
Jul 30 13:11:43.086: INFO: 	Container sonobuoy-worker ready: true, restart count 0
Jul 30 13:11:43.086: INFO: 	Container systemd-logs ready: true, restart count 0
[It] validates resource limits of pods that are allowed to run  [Conformance]
  test/e2e/framework/framework.go:652
STEP: verifying the node has the label node ip-172-31-47-213
STEP: verifying the node has the label node ip-172-31-74-61
STEP: verifying the node has the label node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod default-http-backend-kubernetes-worker-6c59687bf6-sld8q requesting resource cpu=10m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod nginx-ingress-controller-kubernetes-worker-g7v8n requesting resource cpu=0m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod nginx-ingress-controller-kubernetes-worker-m74xp requesting resource cpu=0m on Node ip-172-31-47-213
Jul 30 13:11:43.129: INFO: Pod nginx-ingress-controller-kubernetes-worker-xh64j requesting resource cpu=0m on Node ip-172-31-74-61
Jul 30 13:11:43.129: INFO: Pod calico-kube-controllers-5488b65678-bxz55 requesting resource cpu=0m on Node ip-172-31-47-213
Jul 30 13:11:43.129: INFO: Pod coredns-86c98bfcdb-phwp7 requesting resource cpu=100m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod kube-state-metrics-5cdbfd47b4-dcb7g requesting resource cpu=0m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod metrics-server-v0.5.2-6bfd958b56-d28nd requesting resource cpu=5m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod dashboard-metrics-scraper-8669b59d4f-8dtvd requesting resource cpu=0m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod kubernetes-dashboard-585fc6bc87-l57jt requesting resource cpu=0m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-47-213
Jul 30 13:11:43.129: INFO: Pod sonobuoy-e2e-job-e4d2d2eb16ce474e requesting resource cpu=0m on Node ip-172-31-47-213
Jul 30 13:11:43.129: INFO: Pod sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-bk2gt requesting resource cpu=0m on Node ip-172-31-87-57
Jul 30 13:11:43.129: INFO: Pod sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-dxmzm requesting resource cpu=0m on Node ip-172-31-47-213
Jul 30 13:11:43.129: INFO: Pod sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-k4bdp requesting resource cpu=0m on Node ip-172-31-74-61
STEP: Starting Pods to consume most of the cluster CPU.
Jul 30 13:11:43.129: INFO: Creating a pod which consumes cpu=2800m on Node ip-172-31-47-213
Jul 30 13:11:43.138: INFO: Creating a pod which consumes cpu=2800m on Node ip-172-31-74-61
Jul 30 13:11:43.145: INFO: Creating a pod which consumes cpu=2719m on Node ip-172-31-87-57
STEP: Creating another pod that requires unavailable amount of CPU.
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8373609f-8d17-4d8e-ba5b-1d21251b24c3.17069d840951340a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6879/filler-pod-8373609f-8d17-4d8e-ba5b-1d21251b24c3 to ip-172-31-87-57]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8373609f-8d17-4d8e-ba5b-1d21251b24c3.17069d842df70c38], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8373609f-8d17-4d8e-ba5b-1d21251b24c3.17069d84307a2948], Reason = [Created], Message = [Created container filler-pod-8373609f-8d17-4d8e-ba5b-1d21251b24c3]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-8373609f-8d17-4d8e-ba5b-1d21251b24c3.17069d84339bb997], Reason = [Started], Message = [Started container filler-pod-8373609f-8d17-4d8e-ba5b-1d21251b24c3]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-afbf95a7-1a5b-4953-a1bb-e218620bae1b.17069d8408e2436c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6879/filler-pod-afbf95a7-1a5b-4953-a1bb-e218620bae1b to ip-172-31-74-61]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-afbf95a7-1a5b-4953-a1bb-e218620bae1b.17069d8436adcb90], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-afbf95a7-1a5b-4953-a1bb-e218620bae1b.17069d8438fee5ae], Reason = [Created], Message = [Created container filler-pod-afbf95a7-1a5b-4953-a1bb-e218620bae1b]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-afbf95a7-1a5b-4953-a1bb-e218620bae1b.17069d843e9bd94f], Reason = [Started], Message = [Started container filler-pod-afbf95a7-1a5b-4953-a1bb-e218620bae1b]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b788ee4c-b975-4290-9b36-987ce25f04ef.17069d84087d5245], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6879/filler-pod-b788ee4c-b975-4290-9b36-987ce25f04ef to ip-172-31-47-213]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b788ee4c-b975-4290-9b36-987ce25f04ef.17069d842fc8ffe2], Reason = [Pulled], Message = [Container image "k8s.gcr.io/pause:3.7" already present on machine]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b788ee4c-b975-4290-9b36-987ce25f04ef.17069d8432a88d40], Reason = [Created], Message = [Created container filler-pod-b788ee4c-b975-4290-9b36-987ce25f04ef]
STEP: Considering event: 
Type = [Normal], Name = [filler-pod-b788ee4c-b975-4290-9b36-987ce25f04ef.17069d8435a40860], Reason = [Started], Message = [Started container filler-pod-b788ee4c-b975-4290-9b36-987ce25f04ef]
STEP: Considering event: 
Type = [Warning], Name = [additional-pod.17069d8481f6eeca], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {juju.is/kubernetes-control-plane: true}, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.]
STEP: removing the label node off the node ip-172-31-47-213
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-74-61
STEP: verifying the node doesn't have the label node
STEP: removing the label node off the node ip-172-31-87-57
STEP: verifying the node doesn't have the label node
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/framework/framework.go:188
Jul 30 13:11:46.242: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-pred-6879" for this suite.
[AfterEach] [sig-scheduling] SchedulerPredicates [Serial]
  test/e2e/scheduling/predicates.go:83
•{"msg":"PASSED [sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]","total":356,"completed":283,"skipped":5074,"failed":0}
S
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:46.253: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-9431
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0666 on tmpfs
Jul 30 13:11:46.386: INFO: Waiting up to 5m0s for pod "pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88" in namespace "emptydir-9431" to be "Succeeded or Failed"
Jul 30 13:11:46.392: INFO: Pod "pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88": Phase="Pending", Reason="", readiness=false. Elapsed: 6.081269ms
Jul 30 13:11:48.397: INFO: Pod "pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010743281s
Jul 30 13:11:50.402: INFO: Pod "pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016313936s
STEP: Saw pod success
Jul 30 13:11:50.402: INFO: Pod "pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88" satisfied condition "Succeeded or Failed"
Jul 30 13:11:50.406: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88 container test-container: <nil>
STEP: delete the pod
Jul 30 13:11:50.427: INFO: Waiting for pod pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88 to disappear
Jul 30 13:11:50.430: INFO: Pod pod-ef2a75f8-d3a6-4fe1-9357-7996ae108c88 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:11:50.430: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-9431" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":284,"skipped":5075,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] 
  Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:11:50.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename statefulset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in statefulset-7302
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] StatefulSet
  test/e2e/apps/statefulset.go:96
[BeforeEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:111
STEP: Creating service test in namespace statefulset-7302
[It] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Initializing watcher for selector baz=blah,foo=bar
STEP: Creating stateful set ss in namespace statefulset-7302
STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7302
Jul 30 13:11:50.583: INFO: Found 0 stateful pods, waiting for 1
Jul 30 13:12:00.589: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod
Jul 30 13:12:00.592: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 13:12:00.709: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 13:12:00.709: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 13:12:00.709: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 13:12:00.713: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
Jul 30 13:12:10.721: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 13:12:10.721: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 13:12:10.737: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999979s
Jul 30 13:12:11.741: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996161597s
Jul 30 13:12:12.747: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.990711859s
Jul 30 13:12:13.753: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.985073186s
Jul 30 13:12:14.759: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.979254226s
Jul 30 13:12:15.766: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.973265393s
Jul 30 13:12:16.771: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.96733544s
Jul 30 13:12:17.777: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.96120002s
Jul 30 13:12:18.782: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.956430539s
Jul 30 13:12:19.836: INFO: Verifying statefulset ss doesn't scale past 1 for another 950.341529ms
STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7302
Jul 30 13:12:20.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 13:12:21.102: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul 30 13:12:21.102: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 13:12:21.102: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul 30 13:12:21.105: INFO: Found 1 stateful pods, waiting for 3
Jul 30 13:12:31.123: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 13:12:31.123: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
Jul 30 13:12:31.123: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
STEP: Verifying that stateful set ss was scaled up in order
STEP: Scale down will halt with unhealthy stateful pod
Jul 30 13:12:31.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 13:12:31.255: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 13:12:31.255: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 13:12:31.255: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 13:12:31.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 13:12:31.378: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 13:12:31.378: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 13:12:31.378: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 13:12:31.378: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
Jul 30 13:12:31.664: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
Jul 30 13:12:31.664: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
Jul 30 13:12:31.664: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

Jul 30 13:12:31.664: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 13:12:31.668: INFO: Waiting for stateful set status.readyReplicas to become 0, currently 2
Jul 30 13:12:41.688: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 13:12:41.688: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 13:12:41.688: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
Jul 30 13:12:41.704: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999729s
Jul 30 13:12:42.711: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995781591s
Jul 30 13:12:43.719: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.98819711s
Jul 30 13:12:44.724: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.981253171s
Jul 30 13:12:45.731: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.975353634s
Jul 30 13:12:46.739: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.968204839s
Jul 30 13:12:47.745: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.960195864s
Jul 30 13:12:48.751: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.954843015s
Jul 30 13:12:49.755: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.948546694s
Jul 30 13:12:50.762: INFO: Verifying statefulset ss doesn't scale past 3 for another 944.195573ms
STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7302
Jul 30 13:12:51.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 13:12:51.892: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul 30 13:12:51.892: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 13:12:51.892: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul 30 13:12:51.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 13:12:52.055: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul 30 13:12:52.055: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 13:12:52.055: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul 30 13:12:52.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=statefulset-7302 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
Jul 30 13:12:52.189: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
Jul 30 13:12:52.189: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
Jul 30 13:12:52.189: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

Jul 30 13:12:52.189: INFO: Scaling statefulset ss to 0
STEP: Verifying that stateful set ss was scaled down in reverse order
[AfterEach] Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:122
Jul 30 13:13:02.209: INFO: Deleting all statefulset in ns statefulset-7302
Jul 30 13:13:02.212: INFO: Scaling statefulset ss to 0
Jul 30 13:13:02.222: INFO: Waiting for statefulset status.replicas updated to 0
Jul 30 13:13:02.225: INFO: Deleting statefulset ss
[AfterEach] [sig-apps] StatefulSet
  test/e2e/framework/framework.go:188
Jul 30 13:13:02.240: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "statefulset-7302" for this suite.

• [SLOW TEST:71.811 seconds]
[sig-apps] StatefulSet
test/e2e/apps/framework.go:23
  Basic StatefulSet functionality [StatefulSetBasic]
  test/e2e/apps/statefulset.go:101
    Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]","total":356,"completed":285,"skipped":5083,"failed":0}
S
------------------------------
[sig-api-machinery] Garbage collector 
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:13:02.249: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-2394
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the rc
STEP: delete the rc
STEP: wait for all pods to be garbage collected
STEP: Gathering metrics
Jul 30 13:13:12.415: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0730 13:13:12.415059      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul 30 13:13:12.415: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-2394" for this suite.

• [SLOW TEST:10.177 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should delete pods created by rc when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]","total":356,"completed":286,"skipped":5084,"failed":0}
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:13:12.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2521
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a ConfigMap
STEP: Ensuring resource quota status captures configMap creation
STEP: Deleting a ConfigMap
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 13:13:40.723: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2521" for this suite.

• [SLOW TEST:28.307 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a configMap. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]","total":356,"completed":287,"skipped":5084,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:13:40.734: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-1977
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
STEP: set up a multi version CRD
Jul 30 13:13:40.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: mark a version not serverd
STEP: check the unserved version gets removed
STEP: check the other version is not changed
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:13:52.253: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-1977" for this suite.

• [SLOW TEST:11.536 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  removes definition from spec when one version gets changed to not be served [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]","total":356,"completed":288,"skipped":5130,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:13:52.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-0
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:13:52.428: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"22682264-74bb-470c-8695-0e994e978bba", Controller:(*bool)(0xc00545877e), BlockOwnerDeletion:(*bool)(0xc00545877f)}}
Jul 30 13:13:52.434: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"24c300ce-d630-4726-9f37-784290c66812", Controller:(*bool)(0xc005458a6e), BlockOwnerDeletion:(*bool)(0xc005458a6f)}}
Jul 30 13:13:52.440: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ead38359-7be8-45bb-a2c9-0c3c99411991", Controller:(*bool)(0xc005458d0e), BlockOwnerDeletion:(*bool)(0xc005458d0f)}}
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul 30 13:13:57.454: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-0" for this suite.

• [SLOW TEST:5.196 seconds]
[sig-api-machinery] Garbage collector
test/e2e/apimachinery/framework.go:23
  should not be blocked by dependency circle [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]","total":356,"completed":289,"skipped":5183,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts 
  should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:13:57.466: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename svcaccounts
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in svcaccounts-330
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should allow opting out of API token automount  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:13:57.620: INFO: created pod pod-service-account-defaultsa
Jul 30 13:13:57.620: INFO: pod pod-service-account-defaultsa service account token volume mount: true
Jul 30 13:13:57.628: INFO: created pod pod-service-account-mountsa
Jul 30 13:13:57.628: INFO: pod pod-service-account-mountsa service account token volume mount: true
Jul 30 13:13:57.635: INFO: created pod pod-service-account-nomountsa
Jul 30 13:13:57.635: INFO: pod pod-service-account-nomountsa service account token volume mount: false
Jul 30 13:13:57.641: INFO: created pod pod-service-account-defaultsa-mountspec
Jul 30 13:13:57.641: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
Jul 30 13:13:57.648: INFO: created pod pod-service-account-mountsa-mountspec
Jul 30 13:13:57.648: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
Jul 30 13:13:57.653: INFO: created pod pod-service-account-nomountsa-mountspec
Jul 30 13:13:57.653: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
Jul 30 13:13:57.660: INFO: created pod pod-service-account-defaultsa-nomountspec
Jul 30 13:13:57.660: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
Jul 30 13:13:57.667: INFO: created pod pod-service-account-mountsa-nomountspec
Jul 30 13:13:57.667: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
Jul 30 13:13:57.673: INFO: created pod pod-service-account-nomountsa-nomountspec
Jul 30 13:13:57.673: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
[AfterEach] [sig-auth] ServiceAccounts
  test/e2e/framework/framework.go:188
Jul 30 13:13:57.673: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "svcaccounts-330" for this suite.
•{"msg":"PASSED [sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]","total":356,"completed":290,"skipped":5208,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:13:57.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-2429
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Service
STEP: Creating a NodePort Service
STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota
STEP: Ensuring resource quota status captures service creation
STEP: Deleting Services
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 13:14:09.039: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-2429" for this suite.

• [SLOW TEST:11.348 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a service. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]","total":356,"completed":291,"skipped":5320,"failed":0}
SSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 
  A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] version v1
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:14:09.049: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename proxy
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in proxy-1792
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] A set of valid responses are returned for both pod and service Proxy [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:14:09.180: INFO: Creating pod...
Jul 30 13:14:11.196: INFO: Creating service...
Jul 30 13:14:11.210: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/pods/agnhost/proxy?method=DELETE
Jul 30 13:14:11.215: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul 30 13:14:11.215: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/pods/agnhost/proxy?method=OPTIONS
Jul 30 13:14:11.219: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul 30 13:14:11.219: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/pods/agnhost/proxy?method=PATCH
Jul 30 13:14:11.222: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul 30 13:14:11.222: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/pods/agnhost/proxy?method=POST
Jul 30 13:14:11.226: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul 30 13:14:11.226: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/pods/agnhost/proxy?method=PUT
Jul 30 13:14:11.230: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jul 30 13:14:11.230: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/services/e2e-proxy-test-service/proxy?method=DELETE
Jul 30 13:14:11.235: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
Jul 30 13:14:11.236: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/services/e2e-proxy-test-service/proxy?method=OPTIONS
Jul 30 13:14:11.241: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
Jul 30 13:14:11.241: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/services/e2e-proxy-test-service/proxy?method=PATCH
Jul 30 13:14:11.246: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
Jul 30 13:14:11.246: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/services/e2e-proxy-test-service/proxy?method=POST
Jul 30 13:14:11.251: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
Jul 30 13:14:11.251: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/services/e2e-proxy-test-service/proxy?method=PUT
Jul 30 13:14:11.257: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
Jul 30 13:14:11.257: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/pods/agnhost/proxy?method=GET
Jul 30 13:14:11.260: INFO: http.Client request:GET StatusCode:301
Jul 30 13:14:11.260: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/services/e2e-proxy-test-service/proxy?method=GET
Jul 30 13:14:11.265: INFO: http.Client request:GET StatusCode:301
Jul 30 13:14:11.265: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/pods/agnhost/proxy?method=HEAD
Jul 30 13:14:11.270: INFO: http.Client request:HEAD StatusCode:301
Jul 30 13:14:11.270: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1792/services/e2e-proxy-test-service/proxy?method=HEAD
Jul 30 13:14:11.275: INFO: http.Client request:HEAD StatusCode:301
[AfterEach] version v1
  test/e2e/framework/framework.go:188
Jul 30 13:14:11.275: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "proxy-1792" for this suite.
•{"msg":"PASSED [sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]","total":356,"completed":292,"skipped":5332,"failed":0}
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo 
  should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:14:11.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-667
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[BeforeEach] Update Demo
  test/e2e/kubectl/kubectl.go:297
[It] should scale a replication controller  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a replication controller
Jul 30 13:14:11.415: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 create -f -'
Jul 30 13:14:11.724: INFO: stderr: ""
Jul 30 13:14:11.724: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul 30 13:14:11.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:14:11.768: INFO: stderr: ""
Jul 30 13:14:11.768: INFO: stdout: "update-demo-nautilus-bkj6f update-demo-nautilus-wngnc "
Jul 30 13:14:11.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-bkj6f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:11.809: INFO: stderr: ""
Jul 30 13:14:11.809: INFO: stdout: ""
Jul 30 13:14:11.809: INFO: update-demo-nautilus-bkj6f is created but not running
Jul 30 13:14:16.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:14:16.860: INFO: stderr: ""
Jul 30 13:14:16.860: INFO: stdout: "update-demo-nautilus-bkj6f update-demo-nautilus-wngnc "
Jul 30 13:14:16.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-bkj6f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:16.904: INFO: stderr: ""
Jul 30 13:14:16.904: INFO: stdout: ""
Jul 30 13:14:16.904: INFO: update-demo-nautilus-bkj6f is created but not running
Jul 30 13:14:21.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:14:21.952: INFO: stderr: ""
Jul 30 13:14:21.952: INFO: stdout: "update-demo-nautilus-bkj6f update-demo-nautilus-wngnc "
Jul 30 13:14:21.952: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-bkj6f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:21.997: INFO: stderr: ""
Jul 30 13:14:21.997: INFO: stdout: "true"
Jul 30 13:14:21.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-bkj6f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul 30 13:14:22.036: INFO: stderr: ""
Jul 30 13:14:22.036: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul 30 13:14:22.036: INFO: validating pod update-demo-nautilus-bkj6f
Jul 30 13:14:22.042: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul 30 13:14:22.042: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul 30 13:14:22.042: INFO: update-demo-nautilus-bkj6f is verified up and running
Jul 30 13:14:22.042: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-wngnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:22.082: INFO: stderr: ""
Jul 30 13:14:22.082: INFO: stdout: "true"
Jul 30 13:14:22.082: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-wngnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul 30 13:14:22.121: INFO: stderr: ""
Jul 30 13:14:22.121: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul 30 13:14:22.121: INFO: validating pod update-demo-nautilus-wngnc
Jul 30 13:14:22.126: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul 30 13:14:22.126: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul 30 13:14:22.126: INFO: update-demo-nautilus-wngnc is verified up and running
STEP: scaling down the replication controller
Jul 30 13:14:22.127: INFO: scanned /root for discovery docs: <nil>
Jul 30 13:14:22.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
Jul 30 13:14:23.183: INFO: stderr: ""
Jul 30 13:14:23.183: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul 30 13:14:23.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:14:23.227: INFO: stderr: ""
Jul 30 13:14:23.227: INFO: stdout: "update-demo-nautilus-wngnc "
Jul 30 13:14:23.227: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-wngnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:23.267: INFO: stderr: ""
Jul 30 13:14:23.267: INFO: stdout: "true"
Jul 30 13:14:23.267: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-wngnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul 30 13:14:23.314: INFO: stderr: ""
Jul 30 13:14:23.314: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul 30 13:14:23.314: INFO: validating pod update-demo-nautilus-wngnc
Jul 30 13:14:23.319: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul 30 13:14:23.319: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul 30 13:14:23.319: INFO: update-demo-nautilus-wngnc is verified up and running
STEP: scaling up the replication controller
Jul 30 13:14:23.321: INFO: scanned /root for discovery docs: <nil>
Jul 30 13:14:23.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
Jul 30 13:14:24.421: INFO: stderr: ""
Jul 30 13:14:24.421: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
STEP: waiting for all containers in name=update-demo pods to come up.
Jul 30 13:14:24.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:14:24.484: INFO: stderr: ""
Jul 30 13:14:24.484: INFO: stdout: "update-demo-nautilus-r68ns update-demo-nautilus-wngnc "
Jul 30 13:14:24.484: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-r68ns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:24.539: INFO: stderr: ""
Jul 30 13:14:24.539: INFO: stdout: ""
Jul 30 13:14:24.539: INFO: update-demo-nautilus-r68ns is created but not running
Jul 30 13:14:29.540: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
Jul 30 13:14:29.587: INFO: stderr: ""
Jul 30 13:14:29.587: INFO: stdout: "update-demo-nautilus-r68ns update-demo-nautilus-wngnc "
Jul 30 13:14:29.587: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-r68ns -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:29.630: INFO: stderr: ""
Jul 30 13:14:29.630: INFO: stdout: "true"
Jul 30 13:14:29.630: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-r68ns -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul 30 13:14:29.673: INFO: stderr: ""
Jul 30 13:14:29.673: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul 30 13:14:29.673: INFO: validating pod update-demo-nautilus-r68ns
Jul 30 13:14:29.682: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul 30 13:14:29.682: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul 30 13:14:29.682: INFO: update-demo-nautilus-r68ns is verified up and running
Jul 30 13:14:29.682: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-wngnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
Jul 30 13:14:29.724: INFO: stderr: ""
Jul 30 13:14:29.724: INFO: stdout: "true"
Jul 30 13:14:29.724: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods update-demo-nautilus-wngnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
Jul 30 13:14:29.764: INFO: stderr: ""
Jul 30 13:14:29.765: INFO: stdout: "k8s.gcr.io/e2e-test-images/nautilus:1.5"
Jul 30 13:14:29.765: INFO: validating pod update-demo-nautilus-wngnc
Jul 30 13:14:29.769: INFO: got data: {
  "image": "nautilus.jpg"
}

Jul 30 13:14:29.769: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
Jul 30 13:14:29.769: INFO: update-demo-nautilus-wngnc is verified up and running
STEP: using delete to clean up resources
Jul 30 13:14:29.769: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 delete --grace-period=0 --force -f -'
Jul 30 13:14:29.814: INFO: stderr: "warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
Jul 30 13:14:29.814: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
Jul 30 13:14:29.815: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get rc,svc -l name=update-demo --no-headers'
Jul 30 13:14:29.864: INFO: stderr: "No resources found in kubectl-667 namespace.\n"
Jul 30 13:14:29.864: INFO: stdout: ""
Jul 30 13:14:29.864: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-667 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
Jul 30 13:14:29.910: INFO: stderr: ""
Jul 30 13:14:29.910: INFO: stdout: ""
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 13:14:29.910: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-667" for this suite.

• [SLOW TEST:18.635 seconds]
[sig-cli] Kubectl client
test/e2e/kubectl/framework.go:23
  Update Demo
  test/e2e/kubectl/kubectl.go:295
    should scale a replication controller  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]","total":356,"completed":293,"skipped":5354,"failed":0}
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] 
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:14:29.920: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename crd-publish-openapi
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in crd-publish-openapi-2306
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:14:30.048: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties
Jul 30 13:14:32.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2306 --namespace=crd-publish-openapi-2306 create -f -'
Jul 30 13:14:32.921: INFO: stderr: ""
Jul 30 13:14:32.921: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jul 30 13:14:32.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2306 --namespace=crd-publish-openapi-2306 delete e2e-test-crd-publish-openapi-7940-crds test-cr'
Jul 30 13:14:32.985: INFO: stderr: ""
Jul 30 13:14:32.985: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
Jul 30 13:14:32.985: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2306 --namespace=crd-publish-openapi-2306 apply -f -'
Jul 30 13:14:33.122: INFO: stderr: ""
Jul 30 13:14:33.122: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
Jul 30 13:14:33.122: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2306 --namespace=crd-publish-openapi-2306 delete e2e-test-crd-publish-openapi-7940-crds test-cr'
Jul 30 13:14:33.203: INFO: stderr: ""
Jul 30 13:14:33.203: INFO: stdout: "e2e-test-crd-publish-openapi-7940-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
STEP: kubectl explain works to explain CR
Jul 30 13:14:33.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=crd-publish-openapi-2306 explain e2e-test-crd-publish-openapi-7940-crds'
Jul 30 13:14:33.349: INFO: stderr: ""
Jul 30 13:14:33.349: INFO: stdout: "KIND:     e2e-test-crd-publish-openapi-7940-crd\nVERSION:  crd-publish-openapi-test-unknown-at-root.example.com/v1\n\nDESCRIPTION:\n     <empty>\n"
[AfterEach] [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:14:35.895: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "crd-publish-openapi-2306" for this suite.

• [SLOW TEST:5.993 seconds]
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  works for CRD preserving unknown fields at the schema root [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]","total":356,"completed":294,"skipped":5354,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe 
  should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:14:35.913: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-519
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if kubectl describe prints relevant information for rc and pods  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:14:36.041: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-519 create -f -'
Jul 30 13:14:36.548: INFO: stderr: ""
Jul 30 13:14:36.548: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
Jul 30 13:14:36.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-519 create -f -'
Jul 30 13:14:37.043: INFO: stderr: ""
Jul 30 13:14:37.043: INFO: stdout: "service/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jul 30 13:14:38.052: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 13:14:38.052: INFO: Found 0 / 1
Jul 30 13:14:39.051: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 13:14:39.051: INFO: Found 1 / 1
Jul 30 13:14:39.051: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
Jul 30 13:14:39.054: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 13:14:39.054: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jul 30 13:14:39.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-519 describe pod agnhost-primary-nsnqt'
Jul 30 13:14:39.128: INFO: stderr: ""
Jul 30 13:14:39.128: INFO: stdout: "Name:         agnhost-primary-nsnqt\nNamespace:    kubectl-519\nPriority:     0\nNode:         ip-172-31-74-61/172.31.74.61\nStart Time:   Sat, 30 Jul 2022 13:14:36 +0000\nLabels:       app=agnhost\n              role=primary\nAnnotations:  kubernetes.io/psp: e2e-test-privileged-psp\nStatus:       Running\nIP:           192.168.81.65\nIPs:\n  IP:           192.168.81.65\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://4307c2c892e73f5783e1327983f22bc6eb4c8cf4e37e3b52e064afc92f0e429a\n    Image:          k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Image ID:       k8s.gcr.io/e2e-test-images/agnhost@sha256:7e8bdd271312fd25fc5ff5a8f04727be84044eb3d7d8d03611972a6752e2e11e\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 30 Jul 2022 13:14:37 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-hd6qj (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-hd6qj:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-519/agnhost-primary-nsnqt to ip-172-31-74-61\n  Normal  Pulled     2s    kubelet            Container image \"k8s.gcr.io/e2e-test-images/agnhost:2.39\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
Jul 30 13:14:39.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-519 describe rc agnhost-primary'
Jul 30 13:14:39.195: INFO: stderr: ""
Jul 30 13:14:39.195: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-519\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        k8s.gcr.io/e2e-test-images/agnhost:2.39\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-nsnqt\n"
Jul 30 13:14:39.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-519 describe service agnhost-primary'
Jul 30 13:14:39.261: INFO: stderr: ""
Jul 30 13:14:39.261: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-519\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.166\nIPs:               10.152.183.166\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.81.65:6379\nSession Affinity:  None\nEvents:            <none>\n"
Jul 30 13:14:39.265: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-519 describe node ip-172-31-0-48'
Jul 30 13:14:39.354: INFO: stderr: ""
Jul 30 13:14:39.354: INFO: stdout: "Name:               ip-172-31-0-48\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-0-48\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 30 Jul 2022 11:47:35 +0000\nTaints:             juju.is/kubernetes-control-plane=true:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-0-48\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 30 Jul 2022 13:14:35 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Sat, 30 Jul 2022 13:14:01 +0000   Sat, 30 Jul 2022 11:47:35 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Sat, 30 Jul 2022 13:14:01 +0000   Sat, 30 Jul 2022 11:47:35 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Sat, 30 Jul 2022 13:14:01 +0000   Sat, 30 Jul 2022 11:47:35 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Sat, 30 Jul 2022 13:14:01 +0000   Sat, 30 Jul 2022 11:47:45 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.0.48\n  Hostname:    ip-172-31-0-48\nCapacity:\n  cpu:                4\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7951584Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7849184Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec22b53ae5a177a30f1c3cc0b2aba976\n  System UUID:                ec22b53a-e5a1-77a3-0f1c-3cc0b2aba976\n  Boot ID:                    47694cc8-63e9-4bbe-a752-eb39605cb49e\n  Kernel Version:             5.15.0-1015-aws\n  OS Image:                   Ubuntu 20.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.5.9\n  Kubelet Version:            v1.24.3\n  Kube-Proxy Version:         v1.24.3\nNon-terminated Pods:          (1 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-90b1b33c87bb4558-nl76l    0 (0%)        0 (0%)      0 (0%)           0 (0%)         77m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-1Gi      0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:              <none>\n"
Jul 30 13:14:39.354: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-519 describe namespace kubectl-519'
Jul 30 13:14:39.418: INFO: stderr: ""
Jul 30 13:14:39.418: INFO: stdout: "Name:         kubectl-519\nLabels:       e2e-framework=kubectl\n              e2e-run=84174732-125f-4a9b-a5b4-e015d7ee76fe\n              kubernetes.io/metadata.name=kubectl-519\n              pod-security.kubernetes.io/enforce=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 13:14:39.418: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-519" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]","total":356,"completed":295,"skipped":5388,"failed":0}
SSSSSSSS
------------------------------
[sig-apps] Deployment 
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:14:39.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename deployment
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in deployment-2927
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:91
[It] deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:14:39.558: INFO: Creating deployment "webserver-deployment"
Jul 30 13:14:39.562: INFO: Waiting for observed generation 1
Jul 30 13:14:41.573: INFO: Waiting for all required pods to come up
Jul 30 13:14:41.576: INFO: Pod name httpd: Found 10 pods out of 10
STEP: ensuring each pod is running
Jul 30 13:14:43.589: INFO: Waiting for deployment "webserver-deployment" to complete
Jul 30 13:14:43.596: INFO: Updating deployment "webserver-deployment" with a non-existent image
Jul 30 13:14:43.609: INFO: Updating deployment webserver-deployment
Jul 30 13:14:43.609: INFO: Waiting for observed generation 2
Jul 30 13:14:45.617: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
Jul 30 13:14:45.621: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
Jul 30 13:14:45.625: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jul 30 13:14:45.634: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
Jul 30 13:14:45.634: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
Jul 30 13:14:45.637: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
Jul 30 13:14:45.644: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
Jul 30 13:14:45.644: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
Jul 30 13:14:45.654: INFO: Updating deployment webserver-deployment
Jul 30 13:14:45.654: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
Jul 30 13:14:45.663: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
Jul 30 13:14:45.670: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
[AfterEach] [sig-apps] Deployment
  test/e2e/apps/deployment.go:84
Jul 30 13:14:45.687: INFO: Deployment "webserver-deployment":
&Deployment{ObjectMeta:{webserver-deployment  deployment-2927  25690b8d-4eb8-4726-b93d-5c4ed6599422 36528 3 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd] map[deployment.kubernetes.io/revision:2] [] []  [{e2e.test Update apps/v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:progressDeadlineSeconds":{},"f:replicas":{},"f:revisionHistoryLimit":{},"f:selector":{},"f:strategy":{"f:rollingUpdate":{".":{},"f:maxSurge":{},"f:maxUnavailable":{}},"f:type":{}},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/revision":{}}},"f:status":{"f:availableReplicas":{},"f:conditions":{".":{},"k:{\"type\":\"Available\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Progressing\"}":{".":{},"f:lastTransitionTime":{},"f:lastUpdateTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{},"f:unavailableReplicas":{},"f:updatedReplicas":{}}} status}]},Spec:DeploymentSpec{Replicas:*30,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00428d578 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},Strategy:DeploymentStrategy{Type:RollingUpdate,RollingUpdate:&RollingUpdateDeployment{MaxUnavailable:2,MaxSurge:3,},},MinReadySeconds:0,RevisionHistoryLimit:*10,Paused:false,ProgressDeadlineSeconds:*600,},Status:DeploymentStatus{ObservedGeneration:3,Replicas:13,UpdatedReplicas:5,AvailableReplicas:8,UnavailableReplicas:5,Conditions:[]DeploymentCondition{DeploymentCondition{Type:Progressing,Status:True,Reason:ReplicaSetUpdated,Message:ReplicaSet "webserver-deployment-57ccb67bb8" is progressing.,LastUpdateTime:2022-07-30 13:14:43 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,},DeploymentCondition{Type:Available,Status:False,Reason:MinimumReplicasUnavailable,Message:Deployment does not have minimum availability.,LastUpdateTime:2022-07-30 13:14:45 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,},},ReadyReplicas:8,CollisionCount:nil,},}

Jul 30 13:14:45.698: INFO: New ReplicaSet "webserver-deployment-57ccb67bb8" of Deployment "webserver-deployment":
&ReplicaSet{ObjectMeta:{webserver-deployment-57ccb67bb8  deployment-2927  f591540a-65db-49f0-bff9-cbc3f05288e0 36522 3 2022-07-30 13:14:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:2] [{apps/v1 Deployment webserver-deployment 25690b8d-4eb8-4726-b93d-5c4ed6599422 0xc00428db17 0xc00428db18}] []  [{kube-controller-manager Update apps/v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"25690b8d-4eb8-4726-b93d-5c4ed6599422\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:status":{"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*13,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 57ccb67bb8,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[] [] []  []} {[] [] [{httpd webserver:404 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00428dbb8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:5,FullyLabeledReplicas:5,ObservedGeneration:2,ReadyReplicas:0,AvailableReplicas:0,Conditions:[]ReplicaSetCondition{},},}
Jul 30 13:14:45.698: INFO: All old ReplicaSets of Deployment "webserver-deployment":
Jul 30 13:14:45.698: INFO: &ReplicaSet{ObjectMeta:{webserver-deployment-55df494869  deployment-2927  c640ebfa-5c89-4725-b086-44c32b35aa8b 36520 3 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[deployment.kubernetes.io/desired-replicas:30 deployment.kubernetes.io/max-replicas:33 deployment.kubernetes.io/revision:1] [{apps/v1 Deployment webserver-deployment 25690b8d-4eb8-4726-b93d-5c4ed6599422 0xc00428da27 0xc00428da28}] []  [{kube-controller-manager Update apps/v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:deployment.kubernetes.io/desired-replicas":{},"f:deployment.kubernetes.io/max-replicas":{},"f:deployment.kubernetes.io/revision":{}},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"25690b8d-4eb8-4726-b93d-5c4ed6599422\"}":{}}},"f:spec":{"f:replicas":{},"f:selector":{},"f:template":{"f:metadata":{"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}}}} } {kube-controller-manager Update apps/v1 2022-07-30 13:14:40 +0000 UTC FieldsV1 {"f:status":{"f:availableReplicas":{},"f:fullyLabeledReplicas":{},"f:observedGeneration":{},"f:readyReplicas":{},"f:replicas":{}}} status}]},Spec:ReplicaSetSpec{Replicas:*20,Selector:&v1.LabelSelector{MatchLabels:map[string]string{name: httpd,pod-template-hash: 55df494869,},MatchExpressions:[]LabelSelectorRequirement{},},Template:{{      0 0001-01-01 00:00:00 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[] [] []  []} {[] [] [{httpd k8s.gcr.io/e2e-test-images/httpd:2.4.38-2 [] []  [] [] [] {map[] map[]} [] [] nil nil nil nil /dev/termination-log File IfNotPresent SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,} false false false}] [] Always 0xc00428dab8 <nil> ClusterFirst map[]   <nil>  false false false <nil> &PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,} []   nil default-scheduler [] []  <nil> nil [] <nil> <nil> <nil> map[] [] <nil> nil}},MinReadySeconds:0,},Status:ReplicaSetStatus{Replicas:8,FullyLabeledReplicas:8,ObservedGeneration:2,ReadyReplicas:8,AvailableReplicas:8,Conditions:[]ReplicaSetCondition{},},}
Jul 30 13:14:45.713: INFO: Pod "webserver-deployment-55df494869-2f4c9" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-2f4c9 webserver-deployment-55df494869- deployment-2927  6e671fb8-5ea3-48fa-9588-791bd940eac1 36355 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc0043221d7 0xc0043221d8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:40 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.110.210\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s2b7c,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s2b7c,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-87-57,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.87.57,PodIP:192.168.110.210,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://9670c346e43d052024e88c005910b32661f00d0198c28487895517433bca2413,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.110.210,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.713: INFO: Pod "webserver-deployment-55df494869-44rqb" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-44rqb webserver-deployment-55df494869- deployment-2927  973ff19c-dca7-4392-bc5c-7fc3ae9c66cc 36382 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004322497 0xc004322498}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.223.114\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-pdqzm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-pdqzm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.47.213,PodIP:192.168.223.114,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://d4bfab0d4559b37121fa1b039dcb2e9725ed978afb567ecbfc5751fd886be9b7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.223.114,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.713: INFO: Pod "webserver-deployment-55df494869-6ng8w" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-6ng8w webserver-deployment-55df494869- deployment-2927  808e6e3e-4f0b-401e-ba16-36acd20f8fe1 36546 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc0043226d7 0xc0043226d8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gwjrg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gwjrg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.713: INFO: Pod "webserver-deployment-55df494869-7dwp6" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-7dwp6 webserver-deployment-55df494869- deployment-2927  0ff1202c-d47b-4249-bcb4-32788df37b99 36539 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004322870 0xc004322871}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-hvbcd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-hvbcd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.713: INFO: Pod "webserver-deployment-55df494869-9b5fw" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-9b5fw webserver-deployment-55df494869- deployment-2927  d03b3e5e-9448-4585-b9d9-e066871b5bb6 36531 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc0043229d7 0xc0043229d8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qljp4,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qljp4,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.713: INFO: Pod "webserver-deployment-55df494869-bbhrz" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-bbhrz webserver-deployment-55df494869- deployment-2927  b32083f5-3b66-4bf1-a2ec-4785452fc365 36536 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004322b90 0xc004322b91}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-lg9xp,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-lg9xp,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.714: INFO: Pod "webserver-deployment-55df494869-bk5gm" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-bk5gm webserver-deployment-55df494869- deployment-2927  7b724da5-266f-470d-a982-42b830464bc8 36385 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004322cd7 0xc004322cd8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.223.78\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wxsnm,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wxsnm,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.47.213,PodIP:192.168.223.78,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://69d7820a622f8439e7e2acbe627dae810947e3700d1d641770d639c81c9c52a7,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.223.78,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.714: INFO: Pod "webserver-deployment-55df494869-ckb2q" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-ckb2q webserver-deployment-55df494869- deployment-2927  72b450be-0e0a-4fe4-95da-36a77b1c89e3 36374 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004322ec7 0xc004322ec8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.70\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-wspld,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-wspld,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.70,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://56204e9a8aec7137a3608b33b9eeeabf83a0e064efec52b0c1046465363a96af,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.70,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.714: INFO: Pod "webserver-deployment-55df494869-cppl7" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-cppl7 webserver-deployment-55df494869- deployment-2927  5c1a63f7-5385-4e23-95e0-3ba217d1d39a 36533 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc0043230b7 0xc0043230b8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5x626,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5x626,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-87-57,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.714: INFO: Pod "webserver-deployment-55df494869-fp5tj" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-fp5tj webserver-deployment-55df494869- deployment-2927  711cf3e1-bf85-4d59-a6c0-f191f1d55610 36547 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004323220 0xc004323221}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-w7lqh,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-w7lqh,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.714: INFO: Pod "webserver-deployment-55df494869-gj5lz" is not available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-gj5lz webserver-deployment-55df494869- deployment-2927  1450e875-5482-4e15-8249-2db6c84ab1d7 36542 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004323410 0xc004323411}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g7ddd,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g7ddd,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:,StartTime:2022-07-30 13:14:45 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ContainerCreating,Message:,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.714: INFO: Pod "webserver-deployment-55df494869-jk2v2" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jk2v2 webserver-deployment-55df494869- deployment-2927  70c557d6-e1eb-4f74-8abb-88752a58f53b 36357 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc0043235e7 0xc0043235e8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:40 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.223.80\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-l2jhr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-l2jhr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.47.213,PodIP:192.168.223.80,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://4da9f14dd41b63ed08dfc4e0c8fbcf0bfb96cc488b1cafb2104ee4a7e4e1d16b,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.223.80,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.714: INFO: Pod "webserver-deployment-55df494869-jvgc9" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jvgc9 webserver-deployment-55df494869- deployment-2927  1b118fd6-477b-4335-8d82-4e5912ec0392 36378 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004323807 0xc004323808}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.69\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-z5gn6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-z5gn6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:41 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.69,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://4e0bff5947e94d723f976b7edda89b064ba728f5620c324a2ae11309d452aff6,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.69,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.715: INFO: Pod "webserver-deployment-55df494869-jzr2f" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-jzr2f webserver-deployment-55df494869- deployment-2927  75e95fe2-0f54-42c3-90fd-52002e072bdb 36359 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004323a87 0xc004323a88}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:41 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.110.242\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-s6447,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-s6447,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-87-57,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.87.57,PodIP:192.168.110.242,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://97d94fd87c2a21bfbeaac7a9937feca61b55aa4a804707e068891659859a5f70,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.110.242,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.715: INFO: Pod "webserver-deployment-55df494869-z4hgh" is available:
&Pod{ObjectMeta:{webserver-deployment-55df494869-z4hgh webserver-deployment-55df494869- deployment-2927  ecee32ed-7239-4808-abf1-d37a2cc79494 36352 0 2022-07-30 13:14:39 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:55df494869] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-55df494869 c640ebfa-5c89-4725-b086-44c32b35aa8b 0xc004323d27 0xc004323d28}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:39 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"c640ebfa-5c89-4725-b086-44c32b35aa8b\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:40 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.110.222\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-qwdpw,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qwdpw,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-87-57,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Running,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:ContainersReady,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:40 +0000 UTC,Reason:,Message:,},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:39 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.87.57,PodIP:192.168.110.222,StartTime:2022-07-30 13:14:39 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:nil,Running:&ContainerStateRunning{StartedAt:2022-07-30 13:14:40 +0000 UTC,},Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:true,RestartCount:0,Image:k8s.gcr.io/e2e-test-images/httpd:2.4.38-2,ImageID:k8s.gcr.io/e2e-test-images/httpd@sha256:1b9d1b2f36cb2dbee1960e82a9344aeb11bd4c4c03abf5e1853e0559c23855e3,ContainerID:containerd://57b1bca632c6b9b42bf674d0039e6176a3cf0696811112f0cfcf4ced45fd1919,Started:*true,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.110.222,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.715: INFO: Pod "webserver-deployment-57ccb67bb8-44jrk" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-44jrk webserver-deployment-57ccb67bb8- deployment-2927  ae4e4023-2baf-4dc7-8ef5-0ac22f174ba2 36541 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc004323f57 0xc004323f58}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d9flg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d9flg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-87-57,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:45 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.716: INFO: Pod "webserver-deployment-57ccb67bb8-bsx9p" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-bsx9p webserver-deployment-57ccb67bb8- deployment-2927  de53bb35-3f0b-4678-a8a8-745a9dd2190b 36517 0 2022-07-30 13:14:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc00434e110 0xc00434e111}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.66\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rbcw6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rbcw6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.66,StartTime:2022-07-30 13:14:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.66,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.716: INFO: Pod "webserver-deployment-57ccb67bb8-g8w84" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-g8w84 webserver-deployment-57ccb67bb8- deployment-2927  7c1cc419-7714-4818-965f-6ab1747b9137 36508 0 2022-07-30 13:14:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc00434e3c7 0xc00434e3c8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.110.236\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-5l26h,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-5l26h,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-87-57,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.87.57,PodIP:192.168.110.236,StartTime:2022-07-30 13:14:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.110.236,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.716: INFO: Pod "webserver-deployment-57ccb67bb8-gnqsn" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-gnqsn webserver-deployment-57ccb67bb8- deployment-2927  d1be4d23-def6-4f62-b217-689ac844dd53 36502 0 2022-07-30 13:14:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc00434e6a7 0xc00434e6a8}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.223.69\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-jq95t,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-jq95t,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.47.213,PodIP:192.168.223.69,StartTime:2022-07-30 13:14:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.223.69,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.716: INFO: Pod "webserver-deployment-57ccb67bb8-m8qkd" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-m8qkd webserver-deployment-57ccb67bb8- deployment-2927  ab45b94d-4a4d-4164-a67d-9ad9e8e0b967 36518 0 2022-07-30 13:14:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc00434e937 0xc00434e938}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.81.71\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-th7mb,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-th7mb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-74-61,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.74.61,PodIP:192.168.81.71,StartTime:2022-07-30 13:14:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.81.71,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.716: INFO: Pod "webserver-deployment-57ccb67bb8-n7wgt" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-n7wgt webserver-deployment-57ccb67bb8- deployment-2927  ae50a564-862b-4a57-ad03-290574970765 36543 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc00434ec27 0xc00434ec28}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-d8f9z,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-d8f9z,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.716: INFO: Pod "webserver-deployment-57ccb67bb8-sq6rl" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-sq6rl webserver-deployment-57ccb67bb8- deployment-2927  fdeeaa1e-3de6-43af-aeb8-eb8655530f1f 36505 0 2022-07-30 13:14:43 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc00434ed97 0xc00434ed98}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:43 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} } {kubelet Update v1 2022-07-30 13:14:44 +0000 UTC FieldsV1 {"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:message":{},"f:reason":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.223.124\"}":{".":{},"f:ip":{}}},"f:startTime":{}}} status}]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-rn5mz,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-rn5mz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:ip-172-31-47-213,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{PodCondition{Type:Initialized,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},PodCondition{Type:Ready,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:ContainersReady,Status:False,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:ContainersNotReady,Message:containers with unready status: [httpd],},PodCondition{Type:PodScheduled,Status:True,LastProbeTime:0001-01-01 00:00:00 +0000 UTC,LastTransitionTime:2022-07-30 13:14:43 +0000 UTC,Reason:,Message:,},},Message:,Reason:,HostIP:172.31.47.213,PodIP:192.168.223.124,StartTime:2022-07-30 13:14:43 +0000 UTC,ContainerStatuses:[]ContainerStatus{ContainerStatus{Name:httpd,State:ContainerState{Waiting:&ContainerStateWaiting{Reason:ErrImagePull,Message:rpc error: code = Unknown desc = failed to pull and unpack image "docker.io/library/webserver:404": failed to resolve reference "docker.io/library/webserver:404": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed,},Running:nil,Terminated:nil,},LastTerminationState:ContainerState{Waiting:nil,Running:nil,Terminated:nil,},Ready:false,RestartCount:0,Image:webserver:404,ImageID:,ContainerID:,Started:*false,},},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{PodIP{IP:192.168.223.124,},},EphemeralContainerStatuses:[]ContainerStatus{},},}
Jul 30 13:14:45.716: INFO: Pod "webserver-deployment-57ccb67bb8-ssf4t" is not available:
&Pod{ObjectMeta:{webserver-deployment-57ccb67bb8-ssf4t webserver-deployment-57ccb67bb8- deployment-2927  f71e3d66-e34f-424a-92f6-b7f6695d4032 36544 0 2022-07-30 13:14:45 +0000 UTC <nil> <nil> map[name:httpd pod-template-hash:57ccb67bb8] map[kubernetes.io/psp:e2e-test-privileged-psp] [{apps/v1 ReplicaSet webserver-deployment-57ccb67bb8 f591540a-65db-49f0-bff9-cbc3f05288e0 0xc00434f027 0xc00434f028}] []  [{kube-controller-manager Update v1 2022-07-30 13:14:45 +0000 UTC FieldsV1 {"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:name":{},"f:pod-template-hash":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f591540a-65db-49f0-bff9-cbc3f05288e0\"}":{}}},"f:spec":{"f:containers":{"k:{\"name\":\"httpd\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-f8wbt,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:httpd,Image:webserver:404,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-f8wbt,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:ClusterFirst,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:nil,ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},},}
[AfterEach] [sig-apps] Deployment
  test/e2e/framework/framework.go:188
Jul 30 13:14:45.716: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "deployment-2927" for this suite.

• [SLOW TEST:6.307 seconds]
[sig-apps] Deployment
test/e2e/apps/framework.go:23
  deployment should support proportional scaling [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Deployment deployment should support proportional scaling [Conformance]","total":356,"completed":296,"skipped":5396,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:14:45.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-2348
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 13:14:46.379: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
Jul 30 13:14:48.390: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 30, 13, 14, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 14, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 13, 14, 46, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 14, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-68c7bd4684\" is progressing."}}, CollisionCount:(*int32)(nil)}
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 13:14:51.405: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod
STEP: 'kubectl attach' the pod, should be denied by the webhook
Jul 30 13:14:53.440: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=webhook-2348 attach --namespace=webhook-2348 to-be-attached-pod -i -c=container1'
Jul 30 13:14:53.493: INFO: rc: 1
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:14:53.500: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-2348" for this suite.
STEP: Destroying namespace "webhook-2348-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:7.822 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny attaching pod [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]","total":356,"completed":297,"skipped":5406,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job 
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Job
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:14:53.560: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename job
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in job-7267
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a job
STEP: Ensuring active pods == parallelism
STEP: Orphaning one of the Job's Pods
Jul 30 13:15:00.211: INFO: Successfully updated pod "adopt-release-wlxwv"
STEP: Checking that the Job readopts the Pod
Jul 30 13:15:00.211: INFO: Waiting up to 15m0s for pod "adopt-release-wlxwv" in namespace "job-7267" to be "adopted"
Jul 30 13:15:00.214: INFO: Pod "adopt-release-wlxwv": Phase="Running", Reason="", readiness=true. Elapsed: 2.841609ms
Jul 30 13:15:02.220: INFO: Pod "adopt-release-wlxwv": Phase="Running", Reason="", readiness=true. Elapsed: 2.008674556s
Jul 30 13:15:02.220: INFO: Pod "adopt-release-wlxwv" satisfied condition "adopted"
STEP: Removing the labels from the Job's Pod
Jul 30 13:15:02.733: INFO: Successfully updated pod "adopt-release-wlxwv"
STEP: Checking that the Job releases the Pod
Jul 30 13:15:02.733: INFO: Waiting up to 15m0s for pod "adopt-release-wlxwv" in namespace "job-7267" to be "released"
Jul 30 13:15:02.738: INFO: Pod "adopt-release-wlxwv": Phase="Running", Reason="", readiness=true. Elapsed: 5.58801ms
Jul 30 13:15:04.745: INFO: Pod "adopt-release-wlxwv": Phase="Running", Reason="", readiness=true. Elapsed: 2.012477977s
Jul 30 13:15:04.745: INFO: Pod "adopt-release-wlxwv" satisfied condition "released"
[AfterEach] [sig-apps] Job
  test/e2e/framework/framework.go:188
Jul 30 13:15:04.745: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "job-7267" for this suite.

• [SLOW TEST:11.195 seconds]
[sig-apps] Job
test/e2e/apps/framework.go:23
  should adopt matching orphans and release non-matching pods [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]","total":356,"completed":298,"skipped":5423,"failed":0}
SSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:04.756: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-611
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on tmpfs
Jul 30 13:15:04.886: INFO: Waiting up to 5m0s for pod "pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7" in namespace "emptydir-611" to be "Succeeded or Failed"
Jul 30 13:15:04.889: INFO: Pod "pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7": Phase="Pending", Reason="", readiness=false. Elapsed: 3.565915ms
Jul 30 13:15:06.901: INFO: Pod "pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7": Phase="Pending", Reason="", readiness=false. Elapsed: 2.015106629s
Jul 30 13:15:08.906: INFO: Pod "pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.020592397s
STEP: Saw pod success
Jul 30 13:15:08.906: INFO: Pod "pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7" satisfied condition "Succeeded or Failed"
Jul 30 13:15:08.910: INFO: Trying to get logs from node ip-172-31-87-57 pod pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7 container test-container: <nil>
STEP: delete the pod
Jul 30 13:15:08.945: INFO: Waiting for pod pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7 to disappear
Jul 30 13:15:08.948: INFO: Pod pod-cd50f792-ade9-4284-8ef8-5f3bc83b6db7 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:15:08.948: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-611" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":299,"skipped":5427,"failed":0}
SSSS
------------------------------
[sig-network] DNS 
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] DNS
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:08.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename dns
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in dns-9779
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a test externalName service
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9779.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9779.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9779.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9779.svc.cluster.local; sleep 1; done

STEP: creating a pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 13:15:17.134: INFO: DNS probes using dns-test-63833e2b-8ded-463f-937f-bb7a6595027a succeeded

STEP: deleting the pod
STEP: changing the externalName to bar.example.com
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9779.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-9779.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9779.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-9779.svc.cluster.local; sleep 1; done

STEP: creating a second pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 13:15:19.203: INFO: File wheezy_udp@dns-test-service-3.dns-9779.svc.cluster.local from pod  dns-9779/dns-test-8e157968-d26c-4d00-adae-b7e9eee155c9 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul 30 13:15:19.207: INFO: File jessie_udp@dns-test-service-3.dns-9779.svc.cluster.local from pod  dns-9779/dns-test-8e157968-d26c-4d00-adae-b7e9eee155c9 contains 'foo.example.com.
' instead of 'bar.example.com.'
Jul 30 13:15:19.208: INFO: Lookups using dns-9779/dns-test-8e157968-d26c-4d00-adae-b7e9eee155c9 failed for: [wheezy_udp@dns-test-service-3.dns-9779.svc.cluster.local jessie_udp@dns-test-service-3.dns-9779.svc.cluster.local]

Jul 30 13:15:24.217: INFO: DNS probes using dns-test-8e157968-d26c-4d00-adae-b7e9eee155c9 succeeded

STEP: deleting the pod
STEP: changing the service to type=ClusterIP
STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9779.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-9779.svc.cluster.local; sleep 1; done

STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-9779.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-9779.svc.cluster.local; sleep 1; done

STEP: creating a third pod to probe DNS
STEP: submitting the pod to kubernetes
STEP: retrieving the pod
STEP: looking for the results for each expected name from probers
Jul 30 13:15:26.278: INFO: DNS probes using dns-test-abc26cd0-26b0-4aa2-9e89-246cc409cc07 succeeded

STEP: deleting the pod
STEP: deleting the test externalName service
[AfterEach] [sig-network] DNS
  test/e2e/framework/framework.go:188
Jul 30 13:15:26.303: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "dns-9779" for this suite.

• [SLOW TEST:17.357 seconds]
[sig-network] DNS
test/e2e/network/common/framework.go:23
  should provide DNS for ExternalName services [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] DNS should provide DNS for ExternalName services [Conformance]","total":356,"completed":300,"skipped":5431,"failed":0}
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:26.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-4057
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul 30 13:15:26.454: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:15:28.460: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop http hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul 30 13:15:28.472: INFO: The status of Pod pod-with-prestop-http-hook is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:15:30.478: INFO: The status of Pod pod-with-prestop-http-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jul 30 13:15:30.489: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jul 30 13:15:30.492: INFO: Pod pod-with-prestop-http-hook still exists
Jul 30 13:15:32.493: INFO: Waiting for pod pod-with-prestop-http-hook to disappear
Jul 30 13:15:32.498: INFO: Pod pod-with-prestop-http-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul 30 13:15:32.526: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-4057" for this suite.

• [SLOW TEST:6.221 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop http hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]","total":356,"completed":301,"skipped":5433,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook 
  should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:32.536: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename container-lifecycle-hook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in container-lifecycle-hook-1324
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:55
STEP: create the container to handle the HTTPGet hook request.
Jul 30 13:15:32.673: INFO: The status of Pod pod-handle-http-request is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:15:34.678: INFO: The status of Pod pod-handle-http-request is Running (Ready = true)
[It] should execute prestop exec hook properly [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the pod with lifecycle hook
Jul 30 13:15:34.690: INFO: The status of Pod pod-with-prestop-exec-hook is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:15:36.704: INFO: The status of Pod pod-with-prestop-exec-hook is Running (Ready = true)
STEP: delete the pod with lifecycle hook
Jul 30 13:15:36.718: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jul 30 13:15:36.722: INFO: Pod pod-with-prestop-exec-hook still exists
Jul 30 13:15:38.722: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jul 30 13:15:38.730: INFO: Pod pod-with-prestop-exec-hook still exists
Jul 30 13:15:40.723: INFO: Waiting for pod pod-with-prestop-exec-hook to disappear
Jul 30 13:15:40.727: INFO: Pod pod-with-prestop-exec-hook no longer exists
STEP: check prestop hook
[AfterEach] [sig-node] Container Lifecycle Hook
  test/e2e/framework/framework.go:188
Jul 30 13:15:40.736: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "container-lifecycle-hook-1324" for this suite.

• [SLOW TEST:8.209 seconds]
[sig-node] Container Lifecycle Hook
test/e2e/common/node/framework.go:23
  when create a pod with lifecycle hook
  test/e2e/common/node/lifecycle_hook.go:46
    should execute prestop exec hook properly [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]","total":356,"completed":302,"skipped":5588,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:40.746: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-7073
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 13:15:41.276: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 13:15:44.308: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] listing mutating webhooks should work [Conformance]
  test/e2e/framework/framework.go:652
STEP: Listing all of the created validation webhooks
STEP: Creating a configMap that should be mutated
STEP: Deleting the collection of validation webhooks
STEP: Creating a configMap that should not be mutated
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:15:44.503: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-7073" for this suite.
STEP: Destroying namespace "webhook-7073-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104
•{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]","total":356,"completed":303,"skipped":5613,"failed":0}
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:44.565: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-3523
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on tmpfs
Jul 30 13:15:44.706: INFO: Waiting up to 5m0s for pod "pod-a9bf3337-e076-4898-bbfa-6709e46372ce" in namespace "emptydir-3523" to be "Succeeded or Failed"
Jul 30 13:15:44.710: INFO: Pod "pod-a9bf3337-e076-4898-bbfa-6709e46372ce": Phase="Pending", Reason="", readiness=false. Elapsed: 3.70897ms
Jul 30 13:15:46.718: INFO: Pod "pod-a9bf3337-e076-4898-bbfa-6709e46372ce": Phase="Pending", Reason="", readiness=false. Elapsed: 2.012244078s
Jul 30 13:15:48.724: INFO: Pod "pod-a9bf3337-e076-4898-bbfa-6709e46372ce": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.018207936s
STEP: Saw pod success
Jul 30 13:15:48.724: INFO: Pod "pod-a9bf3337-e076-4898-bbfa-6709e46372ce" satisfied condition "Succeeded or Failed"
Jul 30 13:15:48.728: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-a9bf3337-e076-4898-bbfa-6709e46372ce container test-container: <nil>
STEP: delete the pod
Jul 30 13:15:48.750: INFO: Waiting for pod pod-a9bf3337-e076-4898-bbfa-6709e46372ce to disappear
Jul 30 13:15:48.753: INFO: Pod pod-a9bf3337-e076-4898-bbfa-6709e46372ce no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:15:48.753: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-3523" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":304,"skipped":5621,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:48.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-3467
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] listing custom resource definition objects works  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:15:48.893: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:15:55.069: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-3467" for this suite.

• [SLOW TEST:6.315 seconds]
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  Simple CustomResourceDefinition
  test/e2e/apimachinery/custom_resource_definition.go:50
    listing custom resource definition objects works  [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]","total":356,"completed":305,"skipped":5640,"failed":0}
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined 
  should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:55.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2550
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-projected-all-test-volume-3c762126-ed8f-434e-bd1e-a80d246ae87c
STEP: Creating secret with name secret-projected-all-test-volume-62cfe02d-493f-4786-b5a5-e13be6cbf9ee
STEP: Creating a pod to test Check all projections for projected volume plugin
Jul 30 13:15:55.220: INFO: Waiting up to 5m0s for pod "projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28" in namespace "projected-2550" to be "Succeeded or Failed"
Jul 30 13:15:55.224: INFO: Pod "projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28": Phase="Pending", Reason="", readiness=false. Elapsed: 3.129296ms
Jul 30 13:15:57.229: INFO: Pod "projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008834445s
Jul 30 13:15:59.236: INFO: Pod "projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015786261s
STEP: Saw pod success
Jul 30 13:15:59.236: INFO: Pod "projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28" satisfied condition "Succeeded or Failed"
Jul 30 13:15:59.240: INFO: Trying to get logs from node ip-172-31-74-61 pod projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28 container projected-all-volume-test: <nil>
STEP: delete the pod
Jul 30 13:15:59.262: INFO: Waiting for pod projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28 to disappear
Jul 30 13:15:59.265: INFO: Pod projected-volume-8a36b2da-7d00-4a74-bafe-bd73920a4a28 no longer exists
[AfterEach] [sig-storage] Projected combined
  test/e2e/framework/framework.go:188
Jul 30 13:15:59.266: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2550" for this suite.
•{"msg":"PASSED [sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]","total":356,"completed":306,"skipped":5659,"failed":0}
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:15:59.277: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-7015
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0777 on node default medium
Jul 30 13:15:59.413: INFO: Waiting up to 5m0s for pod "pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b" in namespace "emptydir-7015" to be "Succeeded or Failed"
Jul 30 13:15:59.418: INFO: Pod "pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b": Phase="Pending", Reason="", readiness=false. Elapsed: 4.637779ms
Jul 30 13:16:01.423: INFO: Pod "pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010092269s
Jul 30 13:16:03.430: INFO: Pod "pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016535764s
STEP: Saw pod success
Jul 30 13:16:03.430: INFO: Pod "pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b" satisfied condition "Succeeded or Failed"
Jul 30 13:16:03.434: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b container test-container: <nil>
STEP: delete the pod
Jul 30 13:16:03.455: INFO: Waiting for pod pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b to disappear
Jul 30 13:16:03.458: INFO: Pod pod-9e3be1ec-f725-4ecc-bb26-2208e2353d5b no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:16:03.458: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-7015" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":307,"skipped":5673,"failed":0}
SSSSSS
------------------------------
[sig-instrumentation] Events API 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:16:03.469: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-3514
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-instrumentation] Events API
  test/e2e/instrumentation/events.go:84
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
STEP: get a list of Events with a label in the current namespace
STEP: delete a list of events
Jul 30 13:16:03.616: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
[AfterEach] [sig-instrumentation] Events API
  test/e2e/framework/framework.go:188
Jul 30 13:16:03.647: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-3514" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events API should delete a collection of events [Conformance]","total":356,"completed":308,"skipped":5679,"failed":0}
SSSSSSS
------------------------------
[sig-node] ConfigMap 
  should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:16:03.656: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-4444
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should run through a ConfigMap lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a ConfigMap
STEP: fetching the ConfigMap
STEP: patching the ConfigMap
STEP: listing all ConfigMaps in all namespaces with a label selector
STEP: deleting the ConfigMap by collection with a label selector
STEP: listing all ConfigMaps in test namespace
[AfterEach] [sig-node] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 13:16:03.809: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-4444" for this suite.
•{"msg":"PASSED [sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]","total":356,"completed":309,"skipped":5686,"failed":0}
S
------------------------------
[sig-network] Services 
  should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:16:03.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-6461
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should complete a service status lifecycle [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Service
STEP: watching for the Service to be added
Jul 30 13:16:03.956: INFO: Found Service test-service-jg4cn in namespace services-6461 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
Jul 30 13:16:03.956: INFO: Service test-service-jg4cn created
STEP: Getting /status
Jul 30 13:16:03.960: INFO: Service test-service-jg4cn has LoadBalancer: {[]}
STEP: patching the ServiceStatus
STEP: watching for the Service to be patched
Jul 30 13:16:03.967: INFO: observed Service test-service-jg4cn in namespace services-6461 with annotations: map[] & LoadBalancer: {[]}
Jul 30 13:16:03.967: INFO: Found Service test-service-jg4cn in namespace services-6461 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
Jul 30 13:16:03.967: INFO: Service test-service-jg4cn has service status patched
STEP: updating the ServiceStatus
Jul 30 13:16:03.975: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
STEP: watching for the Service to be updated
Jul 30 13:16:03.976: INFO: Observed Service test-service-jg4cn in namespace services-6461 with annotations: map[] & Conditions: {[]}
Jul 30 13:16:03.976: INFO: Observed event: &Service{ObjectMeta:{test-service-jg4cn  services-6461  3becc6c5-cb78-44f7-80a7-742d0d666582 37734 0 2022-07-30 13:16:03 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] []  [{e2e.test Update v1 2022-07-30 13:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2022-07-30 13:16:03 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.181,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.181],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
Jul 30 13:16:03.976: INFO: Found Service test-service-jg4cn in namespace services-6461 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
Jul 30 13:16:03.976: INFO: Service test-service-jg4cn has service status updated
STEP: patching the service
STEP: watching for the Service to be patched
Jul 30 13:16:03.986: INFO: observed Service test-service-jg4cn in namespace services-6461 with labels: map[test-service-static:true]
Jul 30 13:16:03.986: INFO: observed Service test-service-jg4cn in namespace services-6461 with labels: map[test-service-static:true]
Jul 30 13:16:03.986: INFO: observed Service test-service-jg4cn in namespace services-6461 with labels: map[test-service-static:true]
Jul 30 13:16:03.986: INFO: Found Service test-service-jg4cn in namespace services-6461 with labels: map[test-service:patched test-service-static:true]
Jul 30 13:16:03.986: INFO: Service test-service-jg4cn patched
STEP: deleting the service
STEP: watching for the Service to be deleted
Jul 30 13:16:04.010: INFO: Observed event: ADDED
Jul 30 13:16:04.010: INFO: Observed event: MODIFIED
Jul 30 13:16:04.010: INFO: Observed event: MODIFIED
Jul 30 13:16:04.010: INFO: Observed event: MODIFIED
Jul 30 13:16:04.010: INFO: Found Service test-service-jg4cn in namespace services-6461 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
Jul 30 13:16:04.010: INFO: Service test-service-jg4cn deleted
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 13:16:04.010: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-6461" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should complete a service status lifecycle [Conformance]","total":356,"completed":310,"skipped":5687,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:16:04.020: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-1704
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] custom resource defaulting for requests and from storage works  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:16:04.144: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:16:07.269: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-1704" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]","total":356,"completed":311,"skipped":5698,"failed":0}
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:16:07.280: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-5441
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should be possible to delete [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul 30 13:16:07.437: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-5441" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]","total":356,"completed":312,"skipped":5714,"failed":0}
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:16:07.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-2458
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod with failed condition
STEP: updating the pod
Jul 30 13:18:08.109: INFO: Successfully updated pod "var-expansion-9453cea7-4e9d-47fc-8c37-d7b9a2b17f7e"
STEP: waiting for pod running
STEP: deleting the pod gracefully
Jul 30 13:18:10.119: INFO: Deleting pod "var-expansion-9453cea7-4e9d-47fc-8c37-d7b9a2b17f7e" in namespace "var-expansion-2458"
Jul 30 13:18:10.127: INFO: Wait up to 5m0s for pod "var-expansion-9453cea7-4e9d-47fc-8c37-d7b9a2b17f7e" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 13:18:42.139: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-2458" for this suite.

• [SLOW TEST:154.707 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]","total":356,"completed":313,"skipped":5727,"failed":0}
SSS
------------------------------
[sig-network] Services 
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:18:42.156: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-7298
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-7298
STEP: creating service affinity-clusterip in namespace services-7298
STEP: creating replication controller affinity-clusterip in namespace services-7298
I0730 13:18:42.311592      23 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-7298, replica count: 3
I0730 13:18:45.363206      23 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 13:18:45.373: INFO: Creating new exec pod
Jul 30 13:18:48.388: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7298 exec execpod-affinityl96hc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
Jul 30 13:18:48.615: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
Jul 30 13:18:48.615: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:18:48.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7298 exec execpod-affinityl96hc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.151 80'
Jul 30 13:18:48.802: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.151 80\nConnection to 10.152.183.151 80 port [tcp/http] succeeded!\n"
Jul 30 13:18:48.802: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:18:48.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-7298 exec execpod-affinityl96hc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.151:80/ ; done'
Jul 30 13:18:49.121: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.151:80/\n"
Jul 30 13:18:49.121: INFO: stdout: "\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf\naffinity-clusterip-ht4wf"
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Received response from host: affinity-clusterip-ht4wf
Jul 30 13:18:49.121: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip in namespace services-7298, will wait for the garbage collector to delete the pods
Jul 30 13:18:49.194: INFO: Deleting ReplicationController affinity-clusterip took: 6.377783ms
Jul 30 13:18:49.294: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.470912ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 13:18:51.714: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-7298" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.570 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":314,"skipped":5730,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API 
  should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Downward API
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:18:51.726: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-5208
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should provide host IP as an env var [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward api env vars
Jul 30 13:18:51.856: INFO: Waiting up to 5m0s for pod "downward-api-c84a1427-193e-4591-aa32-92d6283a65fd" in namespace "downward-api-5208" to be "Succeeded or Failed"
Jul 30 13:18:51.859: INFO: Pod "downward-api-c84a1427-193e-4591-aa32-92d6283a65fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.57596ms
Jul 30 13:18:53.870: INFO: Pod "downward-api-c84a1427-193e-4591-aa32-92d6283a65fd": Phase="Pending", Reason="", readiness=false. Elapsed: 2.013338462s
Jul 30 13:18:55.892: INFO: Pod "downward-api-c84a1427-193e-4591-aa32-92d6283a65fd": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.035943693s
STEP: Saw pod success
Jul 30 13:18:55.892: INFO: Pod "downward-api-c84a1427-193e-4591-aa32-92d6283a65fd" satisfied condition "Succeeded or Failed"
Jul 30 13:18:55.897: INFO: Trying to get logs from node ip-172-31-74-61 pod downward-api-c84a1427-193e-4591-aa32-92d6283a65fd container dapi-container: <nil>
STEP: delete the pod
Jul 30 13:18:55.937: INFO: Waiting for pod downward-api-c84a1427-193e-4591-aa32-92d6283a65fd to disappear
Jul 30 13:18:55.941: INFO: Pod downward-api-c84a1427-193e-4591-aa32-92d6283a65fd no longer exists
[AfterEach] [sig-node] Downward API
  test/e2e/framework/framework.go:188
Jul 30 13:18:55.941: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-5208" for this suite.
•{"msg":"PASSED [sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]","total":356,"completed":315,"skipped":5778,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume 
  should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:18:55.954: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-339
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 13:18:56.125: INFO: Waiting up to 5m0s for pod "downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f" in namespace "downward-api-339" to be "Succeeded or Failed"
Jul 30 13:18:56.129: INFO: Pod "downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f": Phase="Pending", Reason="", readiness=false. Elapsed: 3.531952ms
Jul 30 13:18:58.134: INFO: Pod "downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009035944s
Jul 30 13:19:00.139: INFO: Pod "downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01393128s
STEP: Saw pod success
Jul 30 13:19:00.139: INFO: Pod "downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f" satisfied condition "Succeeded or Failed"
Jul 30 13:19:00.142: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f container client-container: <nil>
STEP: delete the pod
Jul 30 13:19:00.163: INFO: Waiting for pod downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f to disappear
Jul 30 13:19:00.166: INFO: Pod downwardapi-volume-375afa6d-fd1c-4f22-b11f-b75ad1a00f3f no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 13:19:00.166: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-339" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":316,"skipped":5795,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events 
  should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:19:00.176: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename events
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in events-6355
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete a collection of events [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create set of events
Jul 30 13:19:00.304: INFO: created test-event-1
Jul 30 13:19:00.308: INFO: created test-event-2
Jul 30 13:19:00.312: INFO: created test-event-3
STEP: get a list of Events with a label in the current namespace
STEP: delete collection of events
Jul 30 13:19:00.315: INFO: requesting DeleteCollection of events
STEP: check that the list of events matches the requested quantity
Jul 30 13:19:00.340: INFO: requesting list of events to confirm quantity
[AfterEach] [sig-instrumentation] Events
  test/e2e/framework/framework.go:188
Jul 30 13:19:00.343: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "events-6355" for this suite.
•{"msg":"PASSED [sig-instrumentation] Events should delete a collection of events [Conformance]","total":356,"completed":317,"skipped":5821,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass 
  should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:19:00.353: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename runtimeclass
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in runtimeclass-313
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] RuntimeClass
  test/e2e/framework/framework.go:188
Jul 30 13:19:02.499: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "runtimeclass-313" for this suite.
•{"msg":"PASSED [sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]","total":356,"completed":318,"skipped":5855,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] 
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:19:02.509: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename taint-multiple-pods
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in taint-multiple-pods-5060
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/node/taints.go:348
Jul 30 13:19:02.635: INFO: Waiting up to 1m0s for all nodes to be ready
Jul 30 13:20:02.648: INFO: Waiting for terminating namespaces to be deleted...
[It] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:20:02.651: INFO: Starting informer...
STEP: Starting pods...
Jul 30 13:20:02.871: INFO: Pod1 is running on ip-172-31-74-61. Tainting Node
Jul 30 13:20:05.094: INFO: Pod2 is running on ip-172-31-74-61. Tainting Node
STEP: Trying to apply a taint on the Node
STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
STEP: Waiting for Pod1 and Pod2 to be deleted
Jul 30 13:20:10.804: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
Jul 30 13:20:30.845: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute
[AfterEach] [sig-node] NoExecuteTaintManager Multiple Pods [Serial]
  test/e2e/framework/framework.go:188
Jul 30 13:20:30.858: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "taint-multiple-pods-5060" for this suite.

• [SLOW TEST:88.359 seconds]
[sig-node] NoExecuteTaintManager Multiple Pods [Serial]
test/e2e/node/framework.go:23
  evicts pods with minTolerationSeconds [Disruptive] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]","total":356,"completed":319,"skipped":5873,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] 
  should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:20:30.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-7340
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should include custom resource definition resources in discovery documents [Conformance]
  test/e2e/framework/framework.go:652
STEP: fetching the /apis discovery document
STEP: finding the apiextensions.k8s.io API group in the /apis discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document
STEP: fetching the /apis/apiextensions.k8s.io discovery document
STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document
STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document
STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:20:30.996: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-7340" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]","total":356,"completed":320,"skipped":5890,"failed":0}
SSSSSS
------------------------------
[sig-apps] DisruptionController 
  should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:20:31.006: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename disruption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in disruption-9594
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] DisruptionController
  test/e2e/apps/disruption.go:71
[It] should observe PodDisruptionBudget status updated [Conformance]
  test/e2e/framework/framework.go:652
STEP: Waiting for the pdb to be processed
STEP: Waiting for all pods to be running
Jul 30 13:20:33.161: INFO: running pods: 0 < 3
[AfterEach] [sig-apps] DisruptionController
  test/e2e/framework/framework.go:188
Jul 30 13:20:35.169: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "disruption-9594" for this suite.
•{"msg":"PASSED [sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]","total":356,"completed":321,"skipped":5896,"failed":0}
SSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:20:35.180: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-4902
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's memory limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 13:20:35.311: INFO: Waiting up to 5m0s for pod "downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590" in namespace "projected-4902" to be "Succeeded or Failed"
Jul 30 13:20:35.314: INFO: Pod "downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590": Phase="Pending", Reason="", readiness=false. Elapsed: 3.253303ms
Jul 30 13:20:37.320: INFO: Pod "downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009360003s
Jul 30 13:20:39.327: INFO: Pod "downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015564376s
STEP: Saw pod success
Jul 30 13:20:39.327: INFO: Pod "downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590" satisfied condition "Succeeded or Failed"
Jul 30 13:20:39.330: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590 container client-container: <nil>
STEP: delete the pod
Jul 30 13:20:39.361: INFO: Waiting for pod downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590 to disappear
Jul 30 13:20:39.364: INFO: Pod downwardapi-volume-b54afeb1-915a-47c8-966c-e488077ce590 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 13:20:39.364: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-4902" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]","total":356,"completed":322,"skipped":5900,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota 
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:20:39.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename resourcequota
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in resourcequota-5182
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Discovering how many secrets are in namespace by default
STEP: Counting existing ResourceQuota
STEP: Creating a ResourceQuota
STEP: Ensuring resource quota status is calculated
STEP: Creating a Secret
STEP: Ensuring resource quota status captures secret creation
STEP: Deleting a secret
STEP: Ensuring resource quota status released usage
[AfterEach] [sig-api-machinery] ResourceQuota
  test/e2e/framework/framework.go:188
Jul 30 13:20:55.552: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "resourcequota-5182" for this suite.

• [SLOW TEST:16.189 seconds]
[sig-api-machinery] ResourceQuota
test/e2e/apimachinery/framework.go:23
  should create a ResourceQuota and capture the life of a secret. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]","total":356,"completed":323,"skipped":5931,"failed":0}
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch 
  should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:20:55.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-54
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should add annotations for pods in rc  [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating Agnhost RC
Jul 30 13:20:55.688: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-54 create -f -'
Jul 30 13:20:56.158: INFO: stderr: ""
Jul 30 13:20:56.158: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
STEP: Waiting for Agnhost primary to start.
Jul 30 13:20:57.162: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 13:20:57.162: INFO: Found 0 / 1
Jul 30 13:20:58.163: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 13:20:58.163: INFO: Found 1 / 1
Jul 30 13:20:58.163: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
STEP: patching all pods
Jul 30 13:20:58.167: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 13:20:58.167: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
Jul 30 13:20:58.167: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-54 patch pod agnhost-primary-smzr9 -p {"metadata":{"annotations":{"x":"y"}}}'
Jul 30 13:20:58.222: INFO: stderr: ""
Jul 30 13:20:58.222: INFO: stdout: "pod/agnhost-primary-smzr9 patched\n"
STEP: checking annotations
Jul 30 13:20:58.226: INFO: Selector matched 1 pods for map[app:agnhost]
Jul 30 13:20:58.226: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 13:20:58.226: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-54" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]","total":356,"completed":324,"skipped":5941,"failed":0}

------------------------------
[sig-storage] Downward API volume 
  should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:20:58.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename downward-api
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in downward-api-9309
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Downward API volume
  test/e2e/common/storage/downwardapi_volume.go:43
[It] should provide podname only [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 13:20:58.365: INFO: Waiting up to 5m0s for pod "downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1" in namespace "downward-api-9309" to be "Succeeded or Failed"
Jul 30 13:20:58.368: INFO: Pod "downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1": Phase="Pending", Reason="", readiness=false. Elapsed: 3.358335ms
Jul 30 13:21:00.376: INFO: Pod "downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010894103s
Jul 30 13:21:02.381: INFO: Pod "downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015850635s
STEP: Saw pod success
Jul 30 13:21:02.381: INFO: Pod "downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1" satisfied condition "Succeeded or Failed"
Jul 30 13:21:02.384: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1 container client-container: <nil>
STEP: delete the pod
Jul 30 13:21:02.403: INFO: Waiting for pod downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1 to disappear
Jul 30 13:21:02.406: INFO: Pod downwardapi-volume-738484a0-d961-41c4-bab4-6fa0f34267b1 no longer exists
[AfterEach] [sig-storage] Downward API volume
  test/e2e/framework/framework.go:188
Jul 30 13:21:02.406: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "downward-api-9309" for this suite.
•{"msg":"PASSED [sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]","total":356,"completed":325,"skipped":5941,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] 
  should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:21:02.417: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename namespaces
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in namespaces-2485
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should patch a Namespace [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating a Namespace
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in nspatchtest-46837bfb-0546-4f53-afde-14b49f6dcf6a-4251
STEP: patching the Namespace
STEP: get the Namespace and ensuring it has the label
[AfterEach] [sig-api-machinery] Namespaces [Serial]
  test/e2e/framework/framework.go:188
Jul 30 13:21:02.682: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "namespaces-2485" for this suite.
STEP: Destroying namespace "nspatchtest-46837bfb-0546-4f53-afde-14b49f6dcf6a-4251" for this suite.
•{"msg":"PASSED [sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]","total":356,"completed":326,"skipped":6003,"failed":0}
SSS
------------------------------
[sig-storage] Projected secret 
  should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:21:02.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-6430
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating projection with secret that has name projected-secret-test-7f0acdc3-3270-4786-b53a-a48a2f7a06e4
STEP: Creating a pod to test consume secrets
Jul 30 13:21:02.837: INFO: Waiting up to 5m0s for pod "pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c" in namespace "projected-6430" to be "Succeeded or Failed"
Jul 30 13:21:02.842: INFO: Pod "pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c": Phase="Pending", Reason="", readiness=false. Elapsed: 5.096487ms
Jul 30 13:21:04.848: INFO: Pod "pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011350317s
Jul 30 13:21:06.855: INFO: Pod "pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01811518s
STEP: Saw pod success
Jul 30 13:21:06.855: INFO: Pod "pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c" satisfied condition "Succeeded or Failed"
Jul 30 13:21:06.858: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c container projected-secret-volume-test: <nil>
STEP: delete the pod
Jul 30 13:21:06.879: INFO: Waiting for pod pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c to disappear
Jul 30 13:21:06.882: INFO: Pod pod-projected-secrets-d6fe04de-9926-4cc4-84aa-7863ea1ce06c no longer exists
[AfterEach] [sig-storage] Projected secret
  test/e2e/framework/framework.go:188
Jul 30 13:21:06.882: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-6430" for this suite.
•{"msg":"PASSED [sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":327,"skipped":6006,"failed":0}
SSSS
------------------------------
[sig-api-machinery] Garbage collector 
  should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:21:06.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename gc
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in gc-579
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should delete RS created by deployment when not orphaning [Conformance]
  test/e2e/framework/framework.go:652
STEP: create the deployment
STEP: Wait for the Deployment to create new ReplicaSet
STEP: delete the deployment
STEP: wait for all rs to be garbage collected
STEP: expected 0 rs, got 1 rs
STEP: expected 0 pods, got 2 pods
STEP: Gathering metrics
Jul 30 13:21:08.061: INFO: For apiserver_request_total:
For apiserver_request_latency_seconds:
For apiserver_init_events_total:
For garbage_collector_attempt_to_delete_queue_latency:
For garbage_collector_attempt_to_delete_work_duration:
For garbage_collector_attempt_to_orphan_queue_latency:
For garbage_collector_attempt_to_orphan_work_duration:
For garbage_collector_dirty_processing_latency_microseconds:
For garbage_collector_event_processing_latency_microseconds:
For garbage_collector_graph_changes_queue_latency:
For garbage_collector_graph_changes_work_duration:
For garbage_collector_orphan_processing_latency_microseconds:
For namespace_queue_latency:
For namespace_queue_latency_sum:
For namespace_queue_latency_count:
For namespace_retries:
For namespace_work_duration:
For namespace_work_duration_sum:
For namespace_work_duration_count:
For function_duration_seconds:
For errors_total:
For evicted_pods_total:

W0730 13:21:08.061383      23 metrics_grabber.go:151] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
[AfterEach] [sig-api-machinery] Garbage collector
  test/e2e/framework/framework.go:188
Jul 30 13:21:08.061: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "gc-579" for this suite.
•{"msg":"PASSED [sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]","total":356,"completed":328,"skipped":6010,"failed":0}
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:21:08.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-5328
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with downward pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-downwardapi-2lx2
STEP: Creating a pod to test atomic-volume-subpath
Jul 30 13:21:08.213: INFO: Waiting up to 5m0s for pod "pod-subpath-test-downwardapi-2lx2" in namespace "subpath-5328" to be "Succeeded or Failed"
Jul 30 13:21:08.216: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Pending", Reason="", readiness=false. Elapsed: 2.357612ms
Jul 30 13:21:10.222: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 2.008446456s
Jul 30 13:21:12.228: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 4.014621059s
Jul 30 13:21:14.235: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 6.021523149s
Jul 30 13:21:16.241: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 8.028016271s
Jul 30 13:21:18.248: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 10.034917504s
Jul 30 13:21:20.255: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 12.04148121s
Jul 30 13:21:22.261: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 14.047789639s
Jul 30 13:21:24.266: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 16.052579554s
Jul 30 13:21:26.274: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 18.060880392s
Jul 30 13:21:28.278: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=true. Elapsed: 20.064518953s
Jul 30 13:21:30.284: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Running", Reason="", readiness=false. Elapsed: 22.071217412s
Jul 30 13:21:32.296: INFO: Pod "pod-subpath-test-downwardapi-2lx2": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.08265575s
STEP: Saw pod success
Jul 30 13:21:32.296: INFO: Pod "pod-subpath-test-downwardapi-2lx2" satisfied condition "Succeeded or Failed"
Jul 30 13:21:32.300: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-subpath-test-downwardapi-2lx2 container test-container-subpath-downwardapi-2lx2: <nil>
STEP: delete the pod
Jul 30 13:21:32.326: INFO: Waiting for pod pod-subpath-test-downwardapi-2lx2 to disappear
Jul 30 13:21:32.330: INFO: Pod pod-subpath-test-downwardapi-2lx2 no longer exists
STEP: Deleting pod pod-subpath-test-downwardapi-2lx2
Jul 30 13:21:32.330: INFO: Deleting pod "pod-subpath-test-downwardapi-2lx2" in namespace "subpath-5328"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul 30 13:21:32.335: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-5328" for this suite.

• [SLOW TEST:24.273 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with downward pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]","total":356,"completed":329,"skipped":6013,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods 
  should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Networking
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:21:32.347: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename pod-network-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in pod-network-test-4639
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should function for intra-pod communication: http [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Performing setup for networking test in namespace pod-network-test-4639
STEP: creating a selector
STEP: Creating the service pods in kubernetes
Jul 30 13:21:32.490: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
Jul 30 13:21:32.542: INFO: The status of Pod netserver-0 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:21:34.549: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:36.549: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:38.549: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:40.550: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:42.549: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:44.547: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:46.550: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:48.549: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:50.549: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:52.549: INFO: The status of Pod netserver-0 is Running (Ready = false)
Jul 30 13:21:54.547: INFO: The status of Pod netserver-0 is Running (Ready = true)
Jul 30 13:21:54.554: INFO: The status of Pod netserver-1 is Running (Ready = true)
Jul 30 13:21:54.559: INFO: The status of Pod netserver-2 is Running (Ready = true)
STEP: Creating test pods
Jul 30 13:21:56.580: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
Jul 30 13:21:56.580: INFO: Breadth first check of 192.168.223.84 on host 172.31.47.213...
Jul 30 13:21:56.583: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.111:9080/dial?request=hostname&protocol=http&host=192.168.223.84&port=8083&tries=1'] Namespace:pod-network-test-4639 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:21:56.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:21:56.584: INFO: ExecWithOptions: Clientset creation
Jul 30 13:21:56.584: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4639/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.111%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.223.84%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul 30 13:21:56.660: INFO: Waiting for responses: map[]
Jul 30 13:21:56.660: INFO: reached 192.168.223.84 after 0/1 tries
Jul 30 13:21:56.660: INFO: Breadth first check of 192.168.81.113 on host 172.31.74.61...
Jul 30 13:21:56.664: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.111:9080/dial?request=hostname&protocol=http&host=192.168.81.113&port=8083&tries=1'] Namespace:pod-network-test-4639 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:21:56.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:21:56.665: INFO: ExecWithOptions: Clientset creation
Jul 30 13:21:56.665: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4639/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.111%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.81.113%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul 30 13:21:56.743: INFO: Waiting for responses: map[]
Jul 30 13:21:56.743: INFO: reached 192.168.81.113 after 0/1 tries
Jul 30 13:21:56.743: INFO: Breadth first check of 192.168.110.203 on host 172.31.87.57...
Jul 30 13:21:56.747: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.81.111:9080/dial?request=hostname&protocol=http&host=192.168.110.203&port=8083&tries=1'] Namespace:pod-network-test-4639 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:21:56.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:21:56.747: INFO: ExecWithOptions: Clientset creation
Jul 30 13:21:56.747: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4639/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.81.111%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.110.203%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
Jul 30 13:21:56.811: INFO: Waiting for responses: map[]
Jul 30 13:21:56.811: INFO: reached 192.168.110.203 after 0/1 tries
Jul 30 13:21:56.811: INFO: Going to retry 0 out of 3 pods....
[AfterEach] [sig-network] Networking
  test/e2e/framework/framework.go:188
Jul 30 13:21:56.811: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "pod-network-test-4639" for this suite.

• [SLOW TEST:24.475 seconds]
[sig-network] Networking
test/e2e/common/network/framework.go:23
  Granular Checks: Pods
  test/e2e/common/network/networking.go:32
    should function for intra-pod communication: http [NodeConformance] [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]","total":356,"completed":330,"skipped":6036,"failed":0}
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes 
  should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:21:56.823: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename emptydir
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in emptydir-6924
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test emptydir 0644 on node default medium
Jul 30 13:21:56.954: INFO: Waiting up to 5m0s for pod "pod-e67e285c-891f-43fd-9ecc-9eefe8413c26" in namespace "emptydir-6924" to be "Succeeded or Failed"
Jul 30 13:21:56.957: INFO: Pod "pod-e67e285c-891f-43fd-9ecc-9eefe8413c26": Phase="Pending", Reason="", readiness=false. Elapsed: 3.073853ms
Jul 30 13:21:58.962: INFO: Pod "pod-e67e285c-891f-43fd-9ecc-9eefe8413c26": Phase="Pending", Reason="", readiness=false. Elapsed: 2.008363506s
Jul 30 13:22:00.967: INFO: Pod "pod-e67e285c-891f-43fd-9ecc-9eefe8413c26": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.01345657s
STEP: Saw pod success
Jul 30 13:22:00.967: INFO: Pod "pod-e67e285c-891f-43fd-9ecc-9eefe8413c26" satisfied condition "Succeeded or Failed"
Jul 30 13:22:00.971: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-e67e285c-891f-43fd-9ecc-9eefe8413c26 container test-container: <nil>
STEP: delete the pod
Jul 30 13:22:00.989: INFO: Waiting for pod pod-e67e285c-891f-43fd-9ecc-9eefe8413c26 to disappear
Jul 30 13:22:00.992: INFO: Pod pod-e67e285c-891f-43fd-9ecc-9eefe8413c26 no longer exists
[AfterEach] [sig-storage] EmptyDir volumes
  test/e2e/framework/framework.go:188
Jul 30 13:22:00.992: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "emptydir-6924" for this suite.
•{"msg":"PASSED [sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]","total":356,"completed":331,"skipped":6056,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] 
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:22:01.002: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sched-preemption
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sched-preemption-1410
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:92
Jul 30 13:22:01.139: INFO: Waiting up to 1m0s for all nodes to be ready
Jul 30 13:23:01.162: INFO: Waiting for terminating namespaces to be deleted...
[It] validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create pods that use 4/5 of node resources.
Jul 30 13:23:01.192: INFO: Created pod: pod0-0-sched-preemption-low-priority
Jul 30 13:23:01.206: INFO: Created pod: pod0-1-sched-preemption-medium-priority
Jul 30 13:23:01.221: INFO: Created pod: pod1-0-sched-preemption-medium-priority
Jul 30 13:23:01.229: INFO: Created pod: pod1-1-sched-preemption-medium-priority
Jul 30 13:23:01.248: INFO: Created pod: pod2-0-sched-preemption-medium-priority
Jul 30 13:23:01.257: INFO: Created pod: pod2-1-sched-preemption-medium-priority
STEP: Wait for pods to be scheduled.
STEP: Run a high priority pod that has same requirements as that of lower priority pod
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/framework/framework.go:188
Jul 30 13:23:07.330: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sched-preemption-1410" for this suite.
[AfterEach] [sig-scheduling] SchedulerPreemption [Serial]
  test/e2e/scheduling/preemption.go:80

• [SLOW TEST:66.378 seconds]
[sig-scheduling] SchedulerPreemption [Serial]
test/e2e/scheduling/framework.go:40
  validates basic preemption works [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]","total":356,"completed":332,"skipped":6119,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator 
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:07.380: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename aggregator
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in aggregator-4677
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:79
Jul 30 13:23:07.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[It] Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the sample API server.
Jul 30 13:23:07.884: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
Jul 30 13:23:09.928: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 13:23:11.933: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 13:23:13.933: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 13:23:15.935: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), LastTransitionTime:time.Date(2022, time.July, 30, 13, 23, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-d9646c97b\" is progressing."}}, CollisionCount:(*int32)(nil)}
Jul 30 13:23:19.364: INFO: Waited 1.419657888s for the sample-apiserver to be ready to handle requests.
STEP: Read Status for v1alpha1.wardle.example.com
STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}'
STEP: List APIServices
Jul 30 13:23:19.419: INFO: Found v1alpha1.wardle.example.com in APIServiceList
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/apimachinery/aggregator.go:69
[AfterEach] [sig-api-machinery] Aggregator
  test/e2e/framework/framework.go:188
Jul 30 13:23:19.854: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "aggregator-4677" for this suite.

• [SLOW TEST:12.578 seconds]
[sig-api-machinery] Aggregator
test/e2e/apimachinery/framework.go:23
  Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]","total":356,"completed":333,"skipped":6130,"failed":0}
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] 
  should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:19.958: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename certificates
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in certificates-7559
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CSR API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: getting /apis
STEP: getting /apis/certificates.k8s.io
STEP: getting /apis/certificates.k8s.io/v1
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul 30 13:23:20.679: INFO: starting watch
STEP: patching
STEP: updating
Jul 30 13:23:20.691: INFO: waiting for watch events with expected annotations
Jul 30 13:23:20.691: INFO: saw patched and updated annotations
STEP: getting /approval
STEP: patching /approval
STEP: updating /approval
STEP: getting /status
STEP: patching /status
STEP: updating /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-auth] Certificates API [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:23:20.749: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "certificates-7559" for this suite.
•{"msg":"PASSED [sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]","total":356,"completed":334,"skipped":6148,"failed":0}
S
------------------------------
[sig-network] Services 
  should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:20.760: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-2352
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should test the lifecycle of an Endpoint [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating an Endpoint
STEP: waiting for available Endpoint
STEP: listing all Endpoints
STEP: updating the Endpoint
STEP: fetching the Endpoint
STEP: patching the Endpoint
STEP: fetching the Endpoint
STEP: deleting the Endpoint by Collection
STEP: waiting for Endpoint deletion
STEP: fetching the Endpoint
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 13:23:20.924: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-2352" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762
•{"msg":"PASSED [sig-network] Services should test the lifecycle of an Endpoint [Conformance]","total":356,"completed":335,"skipped":6149,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info 
  should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:20.935: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubectl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubectl-672
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-cli] Kubectl client
  test/e2e/kubectl/kubectl.go:245
[It] should check if Kubernetes control plane services is included in cluster-info  [Conformance]
  test/e2e/framework/framework.go:652
STEP: validating cluster-info
Jul 30 13:23:21.058: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=kubectl-672 cluster-info'
Jul 30 13:23:21.127: INFO: stderr: ""
Jul 30 13:23:21.127: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
[AfterEach] [sig-cli] Kubectl client
  test/e2e/framework/framework.go:188
Jul 30 13:23:21.127: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubectl-672" for this suite.
•{"msg":"PASSED [sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]","total":356,"completed":336,"skipped":6192,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context 
  should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Security Context
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:21.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename security-context
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in security-context-8722
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser
Jul 30 13:23:21.268: INFO: Waiting up to 5m0s for pod "security-context-82b52c96-c06d-446b-b089-a6a7657c355e" in namespace "security-context-8722" to be "Succeeded or Failed"
Jul 30 13:23:21.272: INFO: Pod "security-context-82b52c96-c06d-446b-b089-a6a7657c355e": Phase="Pending", Reason="", readiness=false. Elapsed: 3.427881ms
Jul 30 13:23:23.279: INFO: Pod "security-context-82b52c96-c06d-446b-b089-a6a7657c355e": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011154051s
Jul 30 13:23:25.285: INFO: Pod "security-context-82b52c96-c06d-446b-b089-a6a7657c355e": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.016401541s
STEP: Saw pod success
Jul 30 13:23:25.285: INFO: Pod "security-context-82b52c96-c06d-446b-b089-a6a7657c355e" satisfied condition "Succeeded or Failed"
Jul 30 13:23:25.288: INFO: Trying to get logs from node ip-172-31-74-61 pod security-context-82b52c96-c06d-446b-b089-a6a7657c355e container test-container: <nil>
STEP: delete the pod
Jul 30 13:23:25.304: INFO: Waiting for pod security-context-82b52c96-c06d-446b-b089-a6a7657c355e to disappear
Jul 30 13:23:25.307: INFO: Pod security-context-82b52c96-c06d-446b-b089-a6a7657c355e no longer exists
[AfterEach] [sig-node] Security Context
  test/e2e/framework/framework.go:188
Jul 30 13:23:25.307: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "security-context-8722" for this suite.
•{"msg":"PASSED [sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]","total":356,"completed":337,"skipped":6221,"failed":0}
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:25.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-479
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] binary data should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-upd-d98e5e99-2109-4452-9044-4aa414c30e0d
STEP: Creating the pod
STEP: Waiting for pod with text data
STEP: Waiting for pod with binary data
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 13:23:27.484: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-479" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":338,"skipped":6238,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers 
  should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Containers
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:27.495: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename containers
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in containers-2738
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test override arguments
Jul 30 13:23:27.630: INFO: Waiting up to 5m0s for pod "client-containers-62fb3038-8eac-414d-92a1-97c5c799149c" in namespace "containers-2738" to be "Succeeded or Failed"
Jul 30 13:23:27.634: INFO: Pod "client-containers-62fb3038-8eac-414d-92a1-97c5c799149c": Phase="Pending", Reason="", readiness=false. Elapsed: 4.174491ms
Jul 30 13:23:29.639: INFO: Pod "client-containers-62fb3038-8eac-414d-92a1-97c5c799149c": Phase="Pending", Reason="", readiness=false. Elapsed: 2.009759875s
Jul 30 13:23:31.645: INFO: Pod "client-containers-62fb3038-8eac-414d-92a1-97c5c799149c": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.015298254s
STEP: Saw pod success
Jul 30 13:23:31.645: INFO: Pod "client-containers-62fb3038-8eac-414d-92a1-97c5c799149c" satisfied condition "Succeeded or Failed"
Jul 30 13:23:31.648: INFO: Trying to get logs from node ip-172-31-74-61 pod client-containers-62fb3038-8eac-414d-92a1-97c5c799149c container agnhost-container: <nil>
STEP: delete the pod
Jul 30 13:23:31.699: INFO: Waiting for pod client-containers-62fb3038-8eac-414d-92a1-97c5c799149c to disappear
Jul 30 13:23:31.702: INFO: Pod client-containers-62fb3038-8eac-414d-92a1-97c5c799149c no longer exists
[AfterEach] [sig-node] Containers
  test/e2e/framework/framework.go:188
Jul 30 13:23:31.702: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "containers-2738" for this suite.
•{"msg":"PASSED [sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]","total":356,"completed":339,"skipped":6253,"failed":0}
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob 
  should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:31.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename cronjob
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in cronjob-1865
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should support CronJob API operations [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a cronjob
STEP: creating
STEP: getting
STEP: listing
STEP: watching
Jul 30 13:23:31.862: INFO: starting watch
STEP: cluster-wide listing
STEP: cluster-wide watching
Jul 30 13:23:31.866: INFO: starting watch
STEP: patching
STEP: updating
Jul 30 13:23:31.879: INFO: waiting for watch events with expected annotations
Jul 30 13:23:31.879: INFO: saw patched and updated annotations
STEP: patching /status
STEP: updating /status
STEP: get /status
STEP: deleting
STEP: deleting a collection
[AfterEach] [sig-apps] CronJob
  test/e2e/framework/framework.go:188
Jul 30 13:23:31.918: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "cronjob-1865" for this suite.
•{"msg":"PASSED [sig-apps] CronJob should support CronJob API operations [Conformance]","total":356,"completed":340,"skipped":6268,"failed":0}
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] 
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:31.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename webhook
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in webhook-6121
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:89
STEP: Setting up server cert
STEP: Create role binding to let webhook read extension-apiserver-authentication
STEP: Deploying the webhook pod
STEP: Wait for the deployment to be ready
Jul 30 13:23:32.311: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
STEP: Deploying the webhook service
STEP: Verifying the service has paired with the endpoint
Jul 30 13:23:35.334: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
[It] should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
STEP: Registering the webhook via the AdmissionRegistration API
STEP: create a pod that should be denied by the webhook
STEP: create a pod that causes the webhook to hang
STEP: create a configmap that should be denied by the webhook
STEP: create a configmap that should be admitted by the webhook
STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook
STEP: create a namespace that bypass the webhook
STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:23:45.477: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "webhook-6121" for this suite.
STEP: Destroying namespace "webhook-6121-markers" for this suite.
[AfterEach] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
  test/e2e/apimachinery/webhook.go:104

• [SLOW TEST:13.603 seconds]
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin]
test/e2e/apimachinery/framework.go:23
  should be able to deny pod and configmap creation [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]","total":356,"completed":341,"skipped":6278,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services 
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:45.531: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-4629
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-4629
STEP: creating service affinity-nodeport in namespace services-4629
STEP: creating replication controller affinity-nodeport in namespace services-4629
I0730 13:23:45.680223      23 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-4629, replica count: 3
I0730 13:23:48.731731      23 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 13:23:48.745: INFO: Creating new exec pod
Jul 30 13:23:51.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4629 exec execpod-affinitylk8k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
Jul 30 13:23:51.886: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
Jul 30 13:23:51.886: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:23:51.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4629 exec execpod-affinitylk8k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.248 80'
Jul 30 13:23:52.005: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.248 80\nConnection to 10.152.183.248 80 port [tcp/http] succeeded!\n"
Jul 30 13:23:52.005: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:23:52.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4629 exec execpod-affinitylk8k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.47.213 32105'
Jul 30 13:23:52.154: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.47.213 32105\nConnection to 172.31.47.213 32105 port [tcp/*] succeeded!\n"
Jul 30 13:23:52.154: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:23:52.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4629 exec execpod-affinitylk8k7 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.87.57 32105'
Jul 30 13:23:52.328: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.87.57 32105\nConnection to 172.31.87.57 32105 port [tcp/*] succeeded!\n"
Jul 30 13:23:52.328: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:23:52.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-4629 exec execpod-affinitylk8k7 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.47.213:32105/ ; done'
Jul 30 13:23:52.567: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.47.213:32105/\n"
Jul 30 13:23:52.567: INFO: stdout: "\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv\naffinity-nodeport-hwdgv"
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Received response from host: affinity-nodeport-hwdgv
Jul 30 13:23:52.567: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-nodeport in namespace services-4629, will wait for the garbage collector to delete the pods
Jul 30 13:23:52.643: INFO: Deleting ReplicationController affinity-nodeport took: 6.990285ms
Jul 30 13:23:52.743: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.188213ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 13:23:55.070: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-4629" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:9.549 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity work for NodePort service [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]","total":356,"completed":342,"skipped":6328,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes 
  should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:23:55.081: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename subpath
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in subpath-424
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] Atomic writer volumes
  test/e2e/storage/subpath.go:40
STEP: Setting up data
[It] should support subpaths with projected pod [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating pod pod-subpath-test-projected-759q
STEP: Creating a pod to test atomic-volume-subpath
Jul 30 13:23:55.222: INFO: Waiting up to 5m0s for pod "pod-subpath-test-projected-759q" in namespace "subpath-424" to be "Succeeded or Failed"
Jul 30 13:23:55.227: INFO: Pod "pod-subpath-test-projected-759q": Phase="Pending", Reason="", readiness=false. Elapsed: 5.018725ms
Jul 30 13:23:57.235: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 2.012601823s
Jul 30 13:23:59.241: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 4.018745302s
Jul 30 13:24:01.247: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 6.024283477s
Jul 30 13:24:03.253: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 8.030794401s
Jul 30 13:24:05.262: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 10.039476321s
Jul 30 13:24:07.278: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 12.055655828s
Jul 30 13:24:09.285: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 14.062996025s
Jul 30 13:24:11.293: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 16.070767292s
Jul 30 13:24:13.302: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 18.079758851s
Jul 30 13:24:15.309: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=true. Elapsed: 20.086671612s
Jul 30 13:24:17.316: INFO: Pod "pod-subpath-test-projected-759q": Phase="Running", Reason="", readiness=false. Elapsed: 22.09388516s
Jul 30 13:24:19.323: INFO: Pod "pod-subpath-test-projected-759q": Phase="Succeeded", Reason="", readiness=false. Elapsed: 24.10100275s
STEP: Saw pod success
Jul 30 13:24:19.323: INFO: Pod "pod-subpath-test-projected-759q" satisfied condition "Succeeded or Failed"
Jul 30 13:24:19.326: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-subpath-test-projected-759q container test-container-subpath-projected-759q: <nil>
STEP: delete the pod
Jul 30 13:24:19.349: INFO: Waiting for pod pod-subpath-test-projected-759q to disappear
Jul 30 13:24:19.351: INFO: Pod pod-subpath-test-projected-759q no longer exists
STEP: Deleting pod pod-subpath-test-projected-759q
Jul 30 13:24:19.351: INFO: Deleting pod "pod-subpath-test-projected-759q" in namespace "subpath-424"
[AfterEach] [sig-storage] Subpath
  test/e2e/framework/framework.go:188
Jul 30 13:24:19.355: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "subpath-424" for this suite.

• [SLOW TEST:24.284 seconds]
[sig-storage] Subpath
test/e2e/storage/utils/framework.go:23
  Atomic writer volumes
  test/e2e/storage/subpath.go:36
    should support subpaths with projected pod [Conformance]
    test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]","total":356,"completed":343,"skipped":6366,"failed":0}
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition 
  getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:24:19.365: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename custom-resource-definition
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in custom-resource-definition-5928
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] getting/updating/patching custom resource definition status sub-resource works  [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:24:19.490: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
[AfterEach] [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin]
  test/e2e/framework/framework.go:188
Jul 30 13:24:20.026: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "custom-resource-definition-5928" for this suite.
•{"msg":"PASSED [sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]","total":356,"completed":344,"skipped":6368,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion 
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:24:20.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename var-expansion
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in var-expansion-991
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating the pod
STEP: waiting for pod running
STEP: creating a file in subpath
Jul 30 13:24:22.184: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-991 PodName:var-expansion-25738588-61f5-48cb-b3bf-b082c6f877c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:24:22.184: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:24:22.185: INFO: ExecWithOptions: Clientset creation
Jul 30 13:24:22.185: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-991/pods/var-expansion-25738588-61f5-48cb-b3bf-b082c6f877c9/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: test for file in mounted path
Jul 30 13:24:22.258: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-991 PodName:var-expansion-25738588-61f5-48cb-b3bf-b082c6f877c9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
Jul 30 13:24:22.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
Jul 30 13:24:22.259: INFO: ExecWithOptions: Clientset creation
Jul 30 13:24:22.259: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-991/pods/var-expansion-25738588-61f5-48cb-b3bf-b082c6f877c9/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
STEP: updating the annotation value
Jul 30 13:24:22.826: INFO: Successfully updated pod "var-expansion-25738588-61f5-48cb-b3bf-b082c6f877c9"
STEP: waiting for annotated pod running
STEP: deleting the pod gracefully
Jul 30 13:24:22.829: INFO: Deleting pod "var-expansion-25738588-61f5-48cb-b3bf-b082c6f877c9" in namespace "var-expansion-991"
Jul 30 13:24:22.836: INFO: Wait up to 5m0s for pod "var-expansion-25738588-61f5-48cb-b3bf-b082c6f877c9" to be fully deleted
[AfterEach] [sig-node] Variable Expansion
  test/e2e/framework/framework.go:188
Jul 30 13:24:56.846: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "var-expansion-991" for this suite.

• [SLOW TEST:36.818 seconds]
[sig-node] Variable Expansion
test/e2e/common/node/framework.go:23
  should succeed in writing subpaths in container [Slow] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]","total":356,"completed":345,"skipped":6411,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap 
  should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:24:56.858: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename configmap
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in configmap-8213
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should be consumable from pods in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name configmap-test-volume-58a43a45-b7ac-4edd-a437-b943b4d3235e
STEP: Creating a pod to test consume configMaps
Jul 30 13:24:56.999: INFO: Waiting up to 5m0s for pod "pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794" in namespace "configmap-8213" to be "Succeeded or Failed"
Jul 30 13:24:57.005: INFO: Pod "pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794": Phase="Pending", Reason="", readiness=false. Elapsed: 5.290593ms
Jul 30 13:24:59.010: INFO: Pod "pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794": Phase="Pending", Reason="", readiness=false. Elapsed: 2.010524578s
Jul 30 13:25:01.017: INFO: Pod "pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.017371088s
STEP: Saw pod success
Jul 30 13:25:01.017: INFO: Pod "pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794" satisfied condition "Succeeded or Failed"
Jul 30 13:25:01.020: INFO: Trying to get logs from node ip-172-31-74-61 pod pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794 container agnhost-container: <nil>
STEP: delete the pod
Jul 30 13:25:01.041: INFO: Waiting for pod pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794 to disappear
Jul 30 13:25:01.044: INFO: Pod pod-configmaps-3432e7d8-8626-4b91-9b1d-437d3e91c794 no longer exists
[AfterEach] [sig-storage] ConfigMap
  test/e2e/framework/framework.go:188
Jul 30 13:25:01.044: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "configmap-8213" for this suite.
•{"msg":"PASSED [sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]","total":356,"completed":346,"skipped":6432,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] 
  should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:37
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:01.054: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename sysctl
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in sysctl-7257
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/common/node/sysctl.go:67
[It] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod with the kernel.shm_rmid_forced sysctl
STEP: Watching for error events or started pod
STEP: Waiting for pod completion
STEP: Checking that the pod succeeded
STEP: Getting logs from the pod
STEP: Checking that the sysctl is actually updated
[AfterEach] [sig-node] Sysctls [LinuxOnly] [NodeConformance]
  test/e2e/framework/framework.go:188
Jul 30 13:25:05.225: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "sysctl-7257" for this suite.
•{"msg":"PASSED [sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]","total":356,"completed":347,"skipped":6464,"failed":0}
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI 
  should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:05.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-5470
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should provide container's cpu limit [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a pod to test downward API volume plugin
Jul 30 13:25:05.369: INFO: Waiting up to 5m0s for pod "downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702" in namespace "projected-5470" to be "Succeeded or Failed"
Jul 30 13:25:05.374: INFO: Pod "downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702": Phase="Pending", Reason="", readiness=false. Elapsed: 5.589747ms
Jul 30 13:25:07.380: INFO: Pod "downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702": Phase="Pending", Reason="", readiness=false. Elapsed: 2.011592219s
Jul 30 13:25:09.388: INFO: Pod "downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702": Phase="Succeeded", Reason="", readiness=false. Elapsed: 4.019102415s
STEP: Saw pod success
Jul 30 13:25:09.388: INFO: Pod "downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702" satisfied condition "Succeeded or Failed"
Jul 30 13:25:09.391: INFO: Trying to get logs from node ip-172-31-74-61 pod downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702 container client-container: <nil>
STEP: delete the pod
Jul 30 13:25:09.413: INFO: Waiting for pod downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702 to disappear
Jul 30 13:25:09.416: INFO: Pod downwardapi-volume-4ac7b5a1-058e-4cf0-9012-de0a0ab27702 no longer exists
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 13:25:09.416: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-5470" for this suite.
•{"msg":"PASSED [sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]","total":356,"completed":348,"skipped":6475,"failed":0}
SS
------------------------------
[sig-storage] Projected downwardAPI 
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:09.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-2897
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-storage] Projected downwardAPI
  test/e2e/common/storage/projected_downwardapi.go:43
[It] should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating the pod
Jul 30 13:25:09.568: INFO: The status of Pod labelsupdate81a8e0b4-d3e7-4b08-84cc-2d680a20131c is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:25:11.573: INFO: The status of Pod labelsupdate81a8e0b4-d3e7-4b08-84cc-2d680a20131c is Running (Ready = true)
Jul 30 13:25:12.096: INFO: Successfully updated pod "labelsupdate81a8e0b4-d3e7-4b08-84cc-2d680a20131c"
[AfterEach] [sig-storage] Projected downwardAPI
  test/e2e/framework/framework.go:188
Jul 30 13:25:16.123: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-2897" for this suite.

• [SLOW TEST:6.712 seconds]
[sig-storage] Projected downwardAPI
test/e2e/common/storage/framework.go:23
  should update labels on modification [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]","total":356,"completed":349,"skipped":6477,"failed":0}
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod 
  should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:16.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename kubelet-test
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in kubelet-test-8394
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-node] Kubelet
  test/e2e/common/node/kubelet.go:40
[BeforeEach] when scheduling a busybox command that always fails in a pod
  test/e2e/common/node/kubelet.go:84
[It] should have an terminated reason [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[AfterEach] [sig-node] Kubelet
  test/e2e/framework/framework.go:188
Jul 30 13:25:20.286: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "kubelet-test-8394" for this suite.
•{"msg":"PASSED [sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]","total":356,"completed":350,"skipped":6480,"failed":0}
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange 
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:20.301: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename limitrange
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in limitrange-3736
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating a LimitRange
STEP: Setting up watch
STEP: Submitting a LimitRange
Jul 30 13:25:20.436: INFO: observed the limitRanges list
STEP: Verifying LimitRange creation was observed
STEP: Fetching the LimitRange to ensure it has proper values
Jul 30 13:25:20.443: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jul 30 13:25:20.443: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with no resource requirements
STEP: Ensuring Pod has resource requirements applied from LimitRange
Jul 30 13:25:20.454: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
Jul 30 13:25:20.454: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Creating a Pod with partial resource requirements
STEP: Ensuring Pod has merged resource requirements applied from LimitRange
Jul 30 13:25:20.465: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
Jul 30 13:25:20.465: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
STEP: Failing to create a Pod with less than min resources
STEP: Failing to create a Pod with more than max resources
STEP: Updating a LimitRange
STEP: Verifying LimitRange updating is effective
STEP: Creating a Pod with less than former min resources
STEP: Failing to create a Pod with more than max resources
STEP: Deleting a LimitRange
STEP: Verifying the LimitRange was deleted
Jul 30 13:25:27.503: INFO: limitRange is already deleted
STEP: Creating a Pod with more than former max resources
[AfterEach] [sig-scheduling] LimitRange
  test/e2e/framework/framework.go:188
Jul 30 13:25:27.513: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "limitrange-3736" for this suite.

• [SLOW TEST:7.223 seconds]
[sig-scheduling] LimitRange
test/e2e/scheduling/framework.go:40
  should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]","total":356,"completed":351,"skipped":6501,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] 
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:27.524: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename daemonsets
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in daemonsets-6196
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:145
[It] should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:25:27.667: INFO: Create a RollingUpdate DaemonSet
Jul 30 13:25:27.671: INFO: Check that daemon pods launch on every node of the cluster
Jul 30 13:25:27.674: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:27.674: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:27.678: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 13:25:27.678: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 13:25:28.684: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:28.684: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:28.687: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
Jul 30 13:25:28.687: INFO: Node ip-172-31-47-213 is running 0 daemon pod, expected 1
Jul 30 13:25:29.685: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:29.685: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:29.689: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
Jul 30 13:25:29.689: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
Jul 30 13:25:29.689: INFO: Update the DaemonSet to trigger a rollout
Jul 30 13:25:29.699: INFO: Updating DaemonSet daemon-set
Jul 30 13:25:32.714: INFO: Roll back the DaemonSet before rollout is complete
Jul 30 13:25:32.721: INFO: Updating DaemonSet daemon-set
Jul 30 13:25:32.721: INFO: Make sure DaemonSet rollback is complete
Jul 30 13:25:32.725: INFO: Wrong image for pod: daemon-set-z77mb. Expected: k8s.gcr.io/e2e-test-images/httpd:2.4.38-2, got: foo:non-existent.
Jul 30 13:25:32.725: INFO: Pod daemon-set-z77mb is not available
Jul 30 13:25:32.732: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:32.732: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:33.741: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:33.741: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:34.737: INFO: Pod daemon-set-scqwk is not available
Jul 30 13:25:34.740: INFO: DaemonSet pods can't tolerate node ip-172-31-0-48 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
Jul 30 13:25:34.740: INFO: DaemonSet pods can't tolerate node ip-172-31-39-218 with taints [{Key:juju.is/kubernetes-control-plane Value:true Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/apps/daemon_set.go:110
STEP: Deleting DaemonSet "daemon-set"
STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6196, will wait for the garbage collector to delete the pods
Jul 30 13:25:34.809: INFO: Deleting DaemonSet.extensions daemon-set took: 7.534249ms
Jul 30 13:25:34.909: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.631959ms
Jul 30 13:25:36.212: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
Jul 30 13:25:36.213: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
Jul 30 13:25:36.217: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41044"},"items":null}

Jul 30 13:25:36.221: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41044"},"items":null}

[AfterEach] [sig-apps] Daemon set [Serial]
  test/e2e/framework/framework.go:188
Jul 30 13:25:36.234: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "daemonsets-6196" for this suite.

• [SLOW TEST:8.721 seconds]
[sig-apps] Daemon set [Serial]
test/e2e/apps/framework.go:23
  should rollback without unnecessary restarts [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]","total":356,"completed":352,"skipped":6537,"failed":0}
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController 
  should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:36.247: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replication-controller
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replication-controller-9395
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-apps] ReplicationController
  test/e2e/apps/rc.go:56
[It] should surface a failure condition on a common issue like exceeded quota [Conformance]
  test/e2e/framework/framework.go:652
Jul 30 13:25:36.377: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
STEP: Creating rc "condition-test" that asks for more than the allowed pod quota
STEP: Checking rc "condition-test" has the desired failure condition set
STEP: Scaling down rc "condition-test" to satisfy pod quota
Jul 30 13:25:38.417: INFO: Updating replication controller "condition-test"
STEP: Checking rc "condition-test" has no failure condition set
[AfterEach] [sig-apps] ReplicationController
  test/e2e/framework/framework.go:188
Jul 30 13:25:39.427: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replication-controller-9395" for this suite.
•{"msg":"PASSED [sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]","total":356,"completed":353,"skipped":6600,"failed":0}
SSSSS
------------------------------
[sig-network] Services 
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-network] Services
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:25:39.439: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename services
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in services-8933
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[BeforeEach] [sig-network] Services
  test/e2e/network/service.go:758
[It] should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
STEP: creating service in namespace services-8933
Jul 30 13:25:39.575: INFO: The status of Pod kube-proxy-mode-detector is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:25:41.579: INFO: The status of Pod kube-proxy-mode-detector is Running (Ready = true)
Jul 30 13:25:41.585: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8933 exec kube-proxy-mode-detector -- /bin/sh -x -c curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode'
Jul 30 13:25:41.706: INFO: stderr: "+ curl -q -s --connect-timeout 1 http://localhost:10249/proxyMode\n"
Jul 30 13:25:41.706: INFO: stdout: "iptables"
Jul 30 13:25:41.706: INFO: proxyMode: iptables
Jul 30 13:25:41.721: INFO: Waiting for pod kube-proxy-mode-detector to disappear
Jul 30 13:25:41.723: INFO: Pod kube-proxy-mode-detector no longer exists
STEP: creating service affinity-clusterip-timeout in namespace services-8933
STEP: creating replication controller affinity-clusterip-timeout in namespace services-8933
I0730 13:25:41.741097      23 runners.go:193] Created replication controller with name: affinity-clusterip-timeout, namespace: services-8933, replica count: 3
I0730 13:25:44.792261      23 runners.go:193] affinity-clusterip-timeout Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
Jul 30 13:25:44.808: INFO: Creating new exec pod
Jul 30 13:25:47.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8933 exec execpod-affinitytft9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-timeout 80'
Jul 30 13:25:47.950: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-timeout 80\nConnection to affinity-clusterip-timeout 80 port [tcp/http] succeeded!\n"
Jul 30 13:25:47.950: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:25:47.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8933 exec execpod-affinitytft9m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.222 80'
Jul 30 13:25:48.068: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.222 80\nConnection to 10.152.183.222 80 port [tcp/http] succeeded!\n"
Jul 30 13:25:48.068: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
Jul 30 13:25:48.068: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8933 exec execpod-affinitytft9m -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.222:80/ ; done'
Jul 30 13:25:48.200: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n"
Jul 30 13:25:48.200: INFO: stdout: "\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4\naffinity-clusterip-timeout-7tnb4"
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Received response from host: affinity-clusterip-timeout-7tnb4
Jul 30 13:25:48.200: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8933 exec execpod-affinitytft9m -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.222:80/'
Jul 30 13:25:48.321: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n"
Jul 30 13:25:48.321: INFO: stdout: "affinity-clusterip-timeout-7tnb4"
Jul 30 13:26:08.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3570470009 --namespace=services-8933 exec execpod-affinitytft9m -- /bin/sh -x -c curl -q -s --connect-timeout 2 http://10.152.183.222:80/'
Jul 30 13:26:08.450: INFO: stderr: "+ curl -q -s --connect-timeout 2 http://10.152.183.222:80/\n"
Jul 30 13:26:08.450: INFO: stdout: "affinity-clusterip-timeout-mgvtf"
Jul 30 13:26:08.450: INFO: Cleaning up the exec pod
STEP: deleting ReplicationController affinity-clusterip-timeout in namespace services-8933, will wait for the garbage collector to delete the pods
Jul 30 13:26:08.527: INFO: Deleting ReplicationController affinity-clusterip-timeout took: 6.463873ms
Jul 30 13:26:08.628: INFO: Terminating ReplicationController affinity-clusterip-timeout pods took: 100.324499ms
[AfterEach] [sig-network] Services
  test/e2e/framework/framework.go:188
Jul 30 13:26:10.651: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "services-8933" for this suite.
[AfterEach] [sig-network] Services
  test/e2e/network/service.go:762

• [SLOW TEST:31.224 seconds]
[sig-network] Services
test/e2e/network/common/framework.go:23
  should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-network] Services should have session affinity timeout work for service with type clusterIP [LinuxOnly] [Conformance]","total":356,"completed":354,"skipped":6605,"failed":0}
SSS
------------------------------
[sig-apps] ReplicaSet 
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:26:10.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename replicaset
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in replicaset-3768
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
STEP: Create a ReplicaSet
STEP: Verify that the required pods have come up
Jul 30 13:26:10.802: INFO: Pod name sample-pod: Found 0 pods out of 3
Jul 30 13:26:15.808: INFO: Pod name sample-pod: Found 3 pods out of 3
STEP: ensuring each pod is running
Jul 30 13:26:15.811: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
STEP: Listing all ReplicaSets
STEP: DeleteCollection of the ReplicaSets
STEP: After DeleteCollection verify that ReplicaSets have been deleted
[AfterEach] [sig-apps] ReplicaSet
  test/e2e/framework/framework.go:188
Jul 30 13:26:15.825: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "replicaset-3768" for this suite.

• [SLOW TEST:5.177 seconds]
[sig-apps] ReplicaSet
test/e2e/apps/framework.go:23
  should list and delete a collection of ReplicaSets [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]","total":356,"completed":355,"skipped":6608,"failed":0}
SS
------------------------------
[sig-storage] Projected configMap 
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
[BeforeEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:187
STEP: Creating a kubernetes client
Jul 30 13:26:15.841: INFO: >>> kubeConfig: /tmp/kubeconfig-3570470009
STEP: Building a namespace api object, basename projected
STEP: Binding the e2e-test-privileged-psp PodSecurityPolicy to the default service account in projected-750
STEP: Waiting for a default service account to be provisioned in namespace
STEP: Waiting for kube-root-ca.crt to be provisioned in namespace
[It] optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
STEP: Creating configMap with name cm-test-opt-del-6e629d28-5891-4fec-9b2e-0353a47cfa5e
STEP: Creating configMap with name cm-test-opt-upd-60420015-e181-4389-86ec-aecaa20d0b84
STEP: Creating the pod
Jul 30 13:26:15.996: INFO: The status of Pod pod-projected-configmaps-d72700c4-5a6a-454a-9227-66e72e853950 is Pending, waiting for it to be Running (with Ready = true)
Jul 30 13:26:18.002: INFO: The status of Pod pod-projected-configmaps-d72700c4-5a6a-454a-9227-66e72e853950 is Running (Ready = true)
STEP: Deleting configmap cm-test-opt-del-6e629d28-5891-4fec-9b2e-0353a47cfa5e
STEP: Updating configmap cm-test-opt-upd-60420015-e181-4389-86ec-aecaa20d0b84
STEP: Creating configMap with name cm-test-opt-create-85536f8d-3458-4d00-bd48-c8d765e16766
STEP: waiting to observe update in volume
[AfterEach] [sig-storage] Projected configMap
  test/e2e/framework/framework.go:188
Jul 30 13:26:22.086: INFO: Waiting up to 3m0s for all (but 0) nodes to be ready
STEP: Destroying namespace "projected-750" for this suite.

• [SLOW TEST:6.257 seconds]
[sig-storage] Projected configMap
test/e2e/common/storage/framework.go:23
  optional updates should be reflected in volume [NodeConformance] [Conformance]
  test/e2e/framework/framework.go:652
------------------------------
{"msg":"PASSED [sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]","total":356,"completed":356,"skipped":6610,"failed":0}
SSSSSJul 30 13:26:22.098: INFO: Running AfterSuite actions on all nodes
Jul 30 13:26:22.098: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func19.2
Jul 30 13:26:22.098: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func9.2
Jul 30 13:26:22.098: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage.glob..func8.2
Jul 30 13:26:22.098: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func17.3
Jul 30 13:26:22.098: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func9.2
Jul 30 13:26:22.098: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func4.2
Jul 30 13:26:22.098: INFO: Running Cleanup Action: k8s.io/kubernetes/test/e2e/storage/vsphere.glob..func1.3
Jul 30 13:26:22.098: INFO: Running AfterSuite actions on node 1
Jul 30 13:26:22.098: INFO: Skipping dumping logs from cluster

JUnit report was created: /tmp/sonobuoy/results/junit_01.xml
{"msg":"Test Suite completed","total":356,"completed":356,"skipped":6615,"failed":0}

Ran 356 of 6971 Specs in 5347.215 seconds
SUCCESS! -- 356 Passed | 0 Failed | 0 Pending | 6615 Skipped
PASS

Ginkgo ran 1 suite in 1h29m8.39725389s
Test Suite Passed
