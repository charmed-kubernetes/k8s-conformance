  I1221 12:11:07.997185      19 e2e.go:109] Starting e2e run "3048d654-34d8-4490-a4e8-1e2e1dc54a72" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1734783067 - will randomize all specs

Will run 404 of 6605 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:154
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1221 12:11:08.232361 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:11:08.233349 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1221 12:11:08.265088 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1221 12:11:08.270144 19 e2e.go:153] 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1221 12:11:08.270185 19 e2e.go:245] e2e test version: v1.31.4
  I1221 12:11:08.270936 19 e2e.go:254] kube-apiserver version: v1.31.4
  I1221 12:11:08.271095 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:11:08.275629 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.043 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 12/21/24 12:11:08.486
  I1221 12:11:08.486674 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 12:11:08.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:11:08.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:11:08.512
  STEP: set up a multi version CRD @ 12/21/24 12:11:08.516
  I1221 12:11:08.518224 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: rename a version @ 12/21/24 12:11:11.759
  STEP: check the new version name is served @ 12/21/24 12:11:11.773
  STEP: check the old version name is removed @ 12/21/24 12:11:12.578
  STEP: check the other version is not changed @ 12/21/24 12:11:13.182
  I1221 12:11:15.639956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4260" for this suite. @ 12/21/24 12:11:15.647
• [7.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/21/24 12:11:15.656
  I1221 12:11:15.656758 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replication-controller @ 12/21/24 12:11:15.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:11:15.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:11:15.69
  STEP: Given a ReplicationController is created @ 12/21/24 12:11:15.693
  STEP: When the matched label of one of its pods change @ 12/21/24 12:11:15.702
  I1221 12:11:15.707300 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I1221 12:11:20.714368 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/21/24 12:11:20.729
  I1221 12:11:21.738664 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9613" for this suite. @ 12/21/24 12:11:21.742
• [6.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/21/24 12:11:21.75
  I1221 12:11:21.750592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:11:21.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:11:21.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:11:21.779
  STEP: Creating configMap with name projected-configmap-test-volume-map-d18a4094-00ce-4877-a5bc-9fd90f543586 @ 12/21/24 12:11:21.782
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:11:21.79
  STEP: Saw pod success @ 12/21/24 12:11:29.827
  I1221 12:11:29.831833 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-configmaps-ffa63e49-d856-43f0-9408-38ebef65ac88 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 12:11:29.849
  I1221 12:11:29.870322 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6384" for this suite. @ 12/21/24 12:11:29.874
• [8.133 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:164
  STEP: Creating a kubernetes client @ 12/21/24 12:11:29.883
  I1221 12:11:29.883762 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 12:11:29.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:11:29.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:11:29.913
  STEP: Discovering how many secrets are in namespace by default @ 12/21/24 12:11:29.915
  STEP: Counting existing ResourceQuota @ 12/21/24 12:11:34.919
  STEP: Creating a ResourceQuota @ 12/21/24 12:11:39.925
  STEP: Ensuring resource quota status is calculated @ 12/21/24 12:11:39.932
  STEP: Creating a Secret @ 12/21/24 12:11:41.938
  STEP: Ensuring resource quota status captures secret creation @ 12/21/24 12:11:41.952
  STEP: Deleting a secret @ 12/21/24 12:11:43.959
  STEP: Ensuring resource quota status released usage @ 12/21/24 12:11:43.967
  I1221 12:11:45.972531 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3247" for this suite. @ 12/21/24 12:11:45.977
• [16.100 seconds]
------------------------------
SSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/21/24 12:11:45.984
  I1221 12:11:45.984248 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename subjectreview @ 12/21/24 12:11:45.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:11:46.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:11:46.006
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-9136" @ 12/21/24 12:11:46.008
  I1221 12:11:46.015762 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-9136:e2e"
  I1221 12:11:46.015787 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-9136"}
  I1221 12:11:46.015794 19 subjectreviews.go:71] saUID: "62f0b6ce-75c7-45ed-a0e4-b35f9266a194"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-9136:e2e" @ 12/21/24 12:11:46.015
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-9136:e2e" @ 12/21/24 12:11:46.016
  I1221 12:11:46.017191 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-9136:e2e" api 'list' configmaps in "subjectreview-9136" namespace @ 12/21/24 12:11:46.017
  I1221 12:11:46.018152 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-9136:e2e" @ 12/21/24 12:11:46.018
  I1221 12:11:46.019800 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1221 12:11:46.019818 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1221 12:11:46.019901 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-9136" for this suite. @ 12/21/24 12:11:46.023
• [0.046 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/21/24 12:11:46.03
  I1221 12:11:46.030276 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename aggregator @ 12/21/24 12:11:46.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:11:46.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:11:46.052
  I1221 12:11:46.054398 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Registering the sample API server. @ 12/21/24 12:11:46.054
  I1221 12:11:46.281522 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1221 12:11:46.312982 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1221 12:11:48.363609 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:11:50.368783 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:11:52.369246 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:11:54.369598 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:11:56.369852 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:11:58.368285 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:12:00.369799 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:12:02.370064 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:12:04.369539 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:12:06.370702 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:12:08.369237 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:12:10.370198 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 11, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-c4bc74fb5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1221 12:12:12.492066 19 aggregator.go:755] Waited 114.205016ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/21/24 12:12:12.527
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/21/24 12:12:12.531
  STEP: List APIServices @ 12/21/24 12:12:12.537
  I1221 12:12:12.542473 19 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/21/24 12:12:12.542
  I1221 12:12:12.555395 19 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/21/24 12:12:12.555
  I1221 12:12:12.566483 19 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.December, 21, 12, 12, 12, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/21/24 12:12:12.566
  I1221 12:12:12.570237 19 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-12-21 12:12:12 +0000 UTC Passed all checks passed}
  I1221 12:12:12.570258 19 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1221 12:12:12.570267 19 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/21/24 12:12:12.57
  I1221 12:12:12.581758 19 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-887306996" @ 12/21/24 12:12:12.581
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/21/24 12:12:12.594
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/21/24 12:12:12.599
  STEP: Patch APIService Status @ 12/21/24 12:12:12.603
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/21/24 12:12:12.611
  I1221 12:12:12.614563 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-12-21 12:12:12 +0000 UTC Passed all checks passed}
  I1221 12:12:12.614594 19 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1221 12:12:12.614624 19 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1221 12:12:12.614636 19 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/21/24 12:12:12.614
  STEP: Confirm that the generated APIService has been deleted @ 12/21/24 12:12:12.626
  I1221 12:12:12.626738 19 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1221 12:12:12.630578 19 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1221 12:12:12.630597 19 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1221 12:12:12.744813 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1389" for this suite. @ 12/21/24 12:12:12.749
• [26.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/21/24 12:12:12.757
  I1221 12:12:12.757094 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename watch @ 12/21/24 12:12:12.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:12.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:12.779
  STEP: creating a watch on configmaps @ 12/21/24 12:12:12.781
  STEP: creating a new configmap @ 12/21/24 12:12:12.781
  STEP: modifying the configmap once @ 12/21/24 12:12:12.785
  STEP: closing the watch once it receives two notifications @ 12/21/24 12:12:12.795
  I1221 12:12:12.795529 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7773  6779bf49-a920-4483-8b17-8c6023159569 4665 0 2024-12-21 12:12:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-21 12:12:12 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 12:12:12.795681 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7773  6779bf49-a920-4483-8b17-8c6023159569 4666 0 2024-12-21 12:12:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-21 12:12:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/21/24 12:12:12.795
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/21/24 12:12:12.805
  STEP: deleting the configmap @ 12/21/24 12:12:12.806
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/21/24 12:12:12.813
  I1221 12:12:12.813507 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7773  6779bf49-a920-4483-8b17-8c6023159569 4667 0 2024-12-21 12:12:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-21 12:12:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 12:12:12.813583 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-7773  6779bf49-a920-4483-8b17-8c6023159569 4668 0 2024-12-21 12:12:12 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-21 12:12:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 12:12:12.813648 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7773" for this suite. @ 12/21/24 12:12:12.817
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/21/24 12:12:12.825
  I1221 12:12:12.825020 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 12:12:12.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:12.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:12.847
  STEP: Creating secret with name secret-test-map-0e72d36a-cd30-457a-a391-2a6eb9de3666 @ 12/21/24 12:12:12.849
  STEP: Creating a pod to test consume secrets @ 12/21/24 12:12:12.853
  STEP: Saw pod success @ 12/21/24 12:12:16.876
  I1221 12:12:16.880988 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-c7879a44-3b8f-43b3-9ce0-d21a17793e04 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:12:16.888
  I1221 12:12:16.908659 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3595" for this suite. @ 12/21/24 12:12:16.912
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/21/24 12:12:16.919
  I1221 12:12:16.919774 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:12:16.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:16.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:16.944
  STEP: Creating projection with secret that has name projected-secret-test-7f874c46-17a3-4bb0-b6a3-ace118ae0ef8 @ 12/21/24 12:12:16.946
  STEP: Creating a pod to test consume secrets @ 12/21/24 12:12:16.952
  STEP: Saw pod success @ 12/21/24 12:12:20.974
  I1221 12:12:20.979090 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-secrets-87665911-2a8d-43b4-9de2-6dfb50e88b88 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:12:20.987
  I1221 12:12:21.008438 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4646" for this suite. @ 12/21/24 12:12:21.012
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:878
  STEP: Creating a kubernetes client @ 12/21/24 12:12:21.02
  I1221 12:12:21.020355 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:12:21.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:21.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:21.045
  STEP: validating api versions @ 12/21/24 12:12:21.046
  I1221 12:12:21.046805 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6062 api-versions'
  I1221 12:12:21.083929 19 builder.go:146] stderr: ""
  I1221 12:12:21.083957 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1221 12:12:21.084157 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6062" for this suite. @ 12/21/24 12:12:21.088
• [0.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/21/24 12:12:21.097
  I1221 12:12:21.097451 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:12:21.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:21.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:21.12
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 12:12:21.121
  STEP: Saw pod success @ 12/21/24 12:12:23.142
  I1221 12:12:23.146355 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-b5404d51-0400-4375-b7f9-4ce73ce80d6b container client-container: <nil>
  STEP: delete the pod @ 12/21/24 12:12:23.154
  I1221 12:12:23.173870 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4578" for this suite. @ 12/21/24 12:12:23.177
• [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/21/24 12:12:23.185
  I1221 12:12:23.185937 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename gc @ 12/21/24 12:12:23.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:23.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:23.207
  STEP: create the deployment @ 12/21/24 12:12:23.209
  W1221 12:12:23.214631      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/21/24 12:12:23.214
  STEP: delete the deployment @ 12/21/24 12:12:23.726
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/21/24 12:12:23.738
  STEP: Gathering metrics @ 12/21/24 12:12:24.26
  W1221 12:12:24.266212      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1221 12:12:24.266261 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1221 12:12:24.266601 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2732" for this suite. @ 12/21/24 12:12:24.271
• [1.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/21/24 12:12:24.28
  I1221 12:12:24.280383 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename runtimeclass @ 12/21/24 12:12:24.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:24.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:24.307
  I1221 12:12:26.342585 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7234" for this suite. @ 12/21/24 12:12:26.347
• [2.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/21/24 12:12:26.353
  I1221 12:12:26.353910 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replicaset @ 12/21/24 12:12:26.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:26.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:26.377
  STEP: Create a Replicaset @ 12/21/24 12:12:26.382
  STEP: Verify that the required pods have come up. @ 12/21/24 12:12:26.388
  I1221 12:12:26.392220 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1221 12:12:31.399569 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/21/24 12:12:31.399
  STEP: Getting /status @ 12/21/24 12:12:31.399
  I1221 12:12:31.404661 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/21/24 12:12:31.404
  I1221 12:12:31.415770 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/21/24 12:12:31.415
  I1221 12:12:31.417171 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1221 12:12:31.417234 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1221 12:12:31.417306 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1221 12:12:31.417448 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1221 12:12:31.417525 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-1889 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1221 12:12:31.417540 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/21/24 12:12:31.417
  I1221 12:12:31.417616 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1221 12:12:31.423430 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/21/24 12:12:31.423
  I1221 12:12:31.424588 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1221 12:12:31.424656 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1221 12:12:31.424721 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1221 12:12:31.424862 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1221 12:12:31.424878 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-1889 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1221 12:12:31.424938 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1221 12:12:31.424951 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-1889 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1221 12:12:31.424959 19 replica_set.go:729] Replicaset test-rs has a patched status
  I1221 12:12:31.425037 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1889" for this suite. @ 12/21/24 12:12:31.429
• [5.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/21/24 12:12:31.438
  I1221 12:12:31.438544 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename runtimeclass @ 12/21/24 12:12:31.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:31.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:31.46
  STEP: Deleting RuntimeClass runtimeclass-4243-delete-me @ 12/21/24 12:12:31.466
  STEP: Waiting for the RuntimeClass to disappear @ 12/21/24 12:12:31.474
  I1221 12:12:31.486030 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4243" for this suite. @ 12/21/24 12:12:31.489
• [0.059 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:167
  STEP: Creating a kubernetes client @ 12/21/24 12:12:31.497
  I1221 12:12:31.497912 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename disruption @ 12/21/24 12:12:31.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:31.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:31.521
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:12:31.531
  STEP: Updating PodDisruptionBudget status @ 12/21/24 12:12:33.537
  STEP: Waiting for all pods to be running @ 12/21/24 12:12:33.545
  I1221 12:12:33.553771 19 disruption.go:691] running pods: 0 < 1
  STEP: locating a running pod @ 12/21/24 12:12:35.553
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:12:35.566
  STEP: Patching PodDisruptionBudget status @ 12/21/24 12:12:35.576
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:12:35.586
  I1221 12:12:35.592699 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3095" for this suite. @ 12/21/24 12:12:35.596
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1791
  STEP: Creating a kubernetes client @ 12/21/24 12:12:35.604
  I1221 12:12:35.605018 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:12:35.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:35.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:35.627
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/21/24 12:12:35.629
  I1221 12:12:35.629442 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-400 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1221 12:12:35.685353 19 builder.go:146] stderr: ""
  I1221 12:12:35.685380 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/21/24 12:12:35.685
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/21/24 12:12:40.737
  I1221 12:12:40.737489 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-400 get pod e2e-test-httpd-pod -o json'
  I1221 12:12:40.778325 19 builder.go:146] stderr: ""
  I1221 12:12:40.778498 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-12-21T12:12:35Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-400\",\n        \"resourceVersion\": \"5054\",\n        \"uid\": \"e9199a49-3923-4155-a862-31ede5871ec9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8ndqf\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-18-134\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-8ndqf\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-21T12:12:37Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-21T12:12:35Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-21T12:12:37Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-21T12:12:37Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-21T12:12:35Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://2ebb37fafba3ad4f4898414208a7150b9053d885f17fb6f473161dd545b0b6f9\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-12-21T12:12:36Z\"\n                    }\n                },\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8ndqf\",\n                        \"readOnly\": true,\n                        \"recursiveReadOnly\": \"Disabled\"\n                    }\n                ]\n            }\n        ],\n        \"hostIP\": \"172.31.18.134\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.18.134\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.235.132\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.235.132\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-12-21T12:12:35Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/21/24 12:12:40.778
  I1221 12:12:40.778583 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-400 replace -f -'
  I1221 12:12:40.862425 19 builder.go:146] stderr: ""
  I1221 12:12:40.862477 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/21/24 12:12:40.862
  I1221 12:12:40.867302 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-400 delete pods e2e-test-httpd-pod'
  I1221 12:12:43.286119 19 builder.go:146] stderr: ""
  I1221 12:12:43.286218 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1221 12:12:43.286442 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-400" for this suite. @ 12/21/24 12:12:43.29
• [7.693 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:119
  STEP: Creating a kubernetes client @ 12/21/24 12:12:43.297
  I1221 12:12:43.297920 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 12:12:43.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:43.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:43.319
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2782.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-2782.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/21/24 12:12:43.322
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-2782.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-2782.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/21/24 12:12:43.322
  STEP: creating a pod to probe /etc/hosts @ 12/21/24 12:12:43.322
  STEP: submitting the pod to kubernetes @ 12/21/24 12:12:43.322
  STEP: retrieving the pod @ 12/21/24 12:12:49.356
  STEP: looking for the results for each expected name from probers @ 12/21/24 12:12:49.36
  I1221 12:12:49.378747 19 dns_common.go:527] DNS probes using dns-2782/dns-test-30731f4d-156b-4ebd-adf7-dd06f33627e3 succeeded

  STEP: deleting the pod @ 12/21/24 12:12:49.378
  I1221 12:12:49.395256 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2782" for this suite. @ 12/21/24 12:12:49.4
• [6.112 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:115
  STEP: Creating a kubernetes client @ 12/21/24 12:12:49.409
  I1221 12:12:49.409586 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename field-validation @ 12/21/24 12:12:49.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:49.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:49.432
  STEP: apply creating a deployment @ 12/21/24 12:12:49.434
  I1221 12:12:49.448459 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5165" for this suite. @ 12/21/24 12:12:49.452
• [0.050 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/21/24 12:12:49.459
  I1221 12:12:49.459688 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:12:49.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:49.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:49.48
  STEP: Creating configMap with name projected-configmap-test-volume-map-536e16c5-c9a2-4cd8-94ea-8ab86a592a10 @ 12/21/24 12:12:49.482
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:12:49.486
  STEP: Saw pod success @ 12/21/24 12:12:53.513
  I1221 12:12:53.517745 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-configmaps-e13e0aaa-289c-4989-9695-fb41157aceac container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 12:12:53.526
  I1221 12:12:53.547882 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5175" for this suite. @ 12/21/24 12:12:53.551
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:235
  STEP: Creating a kubernetes client @ 12/21/24 12:12:53.559
  I1221 12:12:53.559456 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 12:12:53.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:12:53.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:12:53.58
  STEP: Counting existing ResourceQuota @ 12/21/24 12:12:53.582
  STEP: Creating a ResourceQuota @ 12/21/24 12:12:58.588
  STEP: Ensuring resource quota status is calculated @ 12/21/24 12:12:58.598
  STEP: Creating a Pod that fits quota @ 12/21/24 12:13:00.604
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/21/24 12:13:00.618
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/21/24 12:13:02.624
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/21/24 12:13:02.626
  STEP: Ensuring a pod cannot update its resource requirements @ 12/21/24 12:13:02.628
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/21/24 12:13:02.633
  STEP: Deleting the pod @ 12/21/24 12:13:04.639
  STEP: Ensuring resource quota status released the pod usage @ 12/21/24 12:13:04.659
  I1221 12:13:06.664636 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6338" for this suite. @ 12/21/24 12:13:06.668
• [13.118 seconds]
------------------------------
SSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/21/24 12:13:06.677
  I1221 12:13:06.677828 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename ingressclass @ 12/21/24 12:13:06.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:13:06.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:13:06.699
  STEP: getting /apis @ 12/21/24 12:13:06.701
  STEP: getting /apis/networking.k8s.io @ 12/21/24 12:13:06.703
  STEP: getting /apis/networking.k8s.iov1 @ 12/21/24 12:13:06.704
  STEP: creating @ 12/21/24 12:13:06.705
  STEP: getting @ 12/21/24 12:13:06.722
  STEP: listing @ 12/21/24 12:13:06.725
  STEP: watching @ 12/21/24 12:13:06.729
  I1221 12:13:06.729542 19 ingressclass.go:348] starting watch
  STEP: patching @ 12/21/24 12:13:06.73
  STEP: updating @ 12/21/24 12:13:06.735
  I1221 12:13:06.741057 19 ingressclass.go:364] waiting for watch events with expected annotations
  I1221 12:13:06.741084 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 12/21/24 12:13:06.741
  STEP: deleting a collection @ 12/21/24 12:13:06.757
  I1221 12:13:06.777950 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8887" for this suite. @ 12/21/24 12:13:06.782
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 12/21/24 12:13:06.791
  I1221 12:13:06.791628 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 12:13:06.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:13:06.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:13:06.812
  STEP: Creating projection with secret that has name secret-emptykey-test-c2debb52-3abd-410e-bec1-16895399c967 @ 12/21/24 12:13:06.814
  I1221 12:13:06.815824 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7311" for this suite. @ 12/21/24 12:13:06.82
• [0.036 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:270
  STEP: Creating a kubernetes client @ 12/21/24 12:13:06.827
  I1221 12:13:06.827877 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:13:06.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:13:06.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:13:06.848
  STEP: Setting up server cert @ 12/21/24 12:13:06.875
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:13:06.957
  STEP: Deploying the webhook pod @ 12/21/24 12:13:06.966
  STEP: Wait for the deployment to be ready @ 12/21/24 12:13:06.979
  I1221 12:13:06.989106 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:13:09.001
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:13:09.013
  I1221 12:13:10.013377 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/21/24 12:13:10.022
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/21/24 12:13:10.037
  STEP: Creating a dummy validating-webhook-configuration object @ 12/21/24 12:13:10.05
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/21/24 12:13:10.059
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/21/24 12:13:10.067
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/21/24 12:13:10.076
  I1221 12:13:10.140007 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8614" for this suite. @ 12/21/24 12:13:10.144
  STEP: Destroying namespace "webhook-markers-5826" for this suite. @ 12/21/24 12:13:10.151
• [3.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/21/24 12:13:10.159
  I1221 12:13:10.159387 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-runtime @ 12/21/24 12:13:10.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:13:10.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:13:10.181
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/21/24 12:13:10.193
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/21/24 12:13:28.296
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/21/24 12:13:28.301
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/21/24 12:13:28.309
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/21/24 12:13:28.309
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/21/24 12:13:28.338
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/21/24 12:13:30.353
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/21/24 12:13:31.362
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/21/24 12:13:31.37
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/21/24 12:13:31.37
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/21/24 12:13:31.399
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/21/24 12:13:32.409
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/21/24 12:13:33.42
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/21/24 12:13:33.429
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/21/24 12:13:33.429
  I1221 12:13:33.459934 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1638" for this suite. @ 12/21/24 12:13:33.463
• [23.313 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:258
  STEP: Creating a kubernetes client @ 12/21/24 12:13:33.472
  I1221 12:13:33.472722 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:13:33.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:13:33.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:13:33.495
  STEP: Setting up server cert @ 12/21/24 12:13:33.526
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:13:33.84
  STEP: Deploying the webhook pod @ 12/21/24 12:13:33.847
  STEP: Wait for the deployment to be ready @ 12/21/24 12:13:33.859
  I1221 12:13:33.868320 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:13:35.882
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:13:35.893
  I1221 12:13:36.894448 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/21/24 12:13:36.903
  STEP: create a pod that should be updated by the webhook @ 12/21/24 12:13:36.915
  I1221 12:13:36.982981 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5638" for this suite. @ 12/21/24 12:13:36.986
  STEP: Destroying namespace "webhook-markers-1201" for this suite. @ 12/21/24 12:13:36.994
• [3.529 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/21/24 12:13:37.001
  I1221 12:13:37.001552 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 12:13:37.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:13:37.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:13:37.026
  STEP: creating the pod @ 12/21/24 12:13:37.028
  STEP: submitting the pod to kubernetes @ 12/21/24 12:13:37.028
  STEP: verifying the pod is in kubernetes @ 12/21/24 12:13:39.052
  STEP: updating the pod @ 12/21/24 12:13:39.056
  I1221 12:13:39.568983 19 pod_client.go:173] Successfully updated pod "pod-update-04b265bb-c2eb-4acf-8bc1-33a25cdfaedf"
  STEP: verifying the updated pod is in kubernetes @ 12/21/24 12:13:39.572
  I1221 12:13:39.576766 19 pods.go:391] Pod update OK
  I1221 12:13:39.576884 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9192" for this suite. @ 12/21/24 12:13:39.58
• [2.587 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/21/24 12:13:39.588
  I1221 12:13:39.588455 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename chunking @ 12/21/24 12:13:39.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:13:39.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:13:39.609
  STEP: creating a large number of resources @ 12/21/24 12:13:39.612
  STEP: retrieving the first page @ 12/21/24 12:13:57.296
  I1221 12:13:57.344793 19 chunking.go:163] Retrieved 40/40 results with rv 6115 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 12/21/24 12:13:57.344
  I1221 12:14:17.354319 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:14:37.353375 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:14:57.354627 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:15:17.351514 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:15:37.354768 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:15:57.353793 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:16:17.354407 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:16:37.354562 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:16:57.354586 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:17:17.350964 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:17:37.354516 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:17:57.354008 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:18:17.350476 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:18:37.350743 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:18:57.354654 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:19:17.351047 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:19:37.353834 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:19:57.354721 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:20:17.354153 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:20:37.353744 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:20:57.354668 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:21:17.351915 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:21:37.354360 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:21:57.354241 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjExNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1221 12:22:17.353171 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1221 12:22:17.353204 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/21/24 12:22:17.353
  STEP: retrieving all remaining pages @ 12/21/24 12:22:17.358
  I1221 12:22:17.362492 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzA2OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I1221 12:22:17.366693 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzA2OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I1221 12:22:17.371357 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzA2OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I1221 12:22:17.375127 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzA2OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I1221 12:22:17.379191 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzA2OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I1221 12:22:17.384117 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzA2OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I1221 12:22:17.388318 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzA2OCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I1221 12:22:17.392721 19 chunking.go:221] Retrieved 40/40 results with rv 7068 and continue 
  I1221 12:22:17.392914 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4391" for this suite. @ 12/21/24 12:22:17.396
• [517.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 12/21/24 12:22:17.404
  I1221 12:22:17.404161 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 12:22:17.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:22:17.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:22:17.427
  I1221 12:22:19.453506 19 delete.go:62] Deleting pod "var-expansion-2e9590da-38e7-48c2-a9d3-ef4492b54368" in namespace "var-expansion-9990"
  I1221 12:22:19.462531 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-2e9590da-38e7-48c2-a9d3-ef4492b54368" to be fully deleted
  I1221 12:22:21.472013 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9990" for this suite. @ 12/21/24 12:22:21.477
• [4.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/21/24 12:22:21.486
  I1221 12:22:21.486366 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 12:22:21.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:22:21.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:22:21.508
  STEP: Creating secret with name secret-test-62e59a7e-3691-4a49-96d9-6bbd31fa9045 @ 12/21/24 12:22:21.511
  STEP: Creating a pod to test consume secrets @ 12/21/24 12:22:21.516
  STEP: Saw pod success @ 12/21/24 12:22:25.539
  I1221 12:22:25.543374 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-889c8076-4e71-4430-838a-79f72ee38586 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:22:25.56
  I1221 12:22:25.575930 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7942" for this suite. @ 12/21/24 12:22:25.58
• [4.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/21/24 12:22:25.588
  I1221 12:22:25.588204 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:22:25.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:22:25.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:22:25.609
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 12:22:25.611
  STEP: Saw pod success @ 12/21/24 12:22:29.636
  I1221 12:22:29.640307 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-c2ef28c8-3d16-4b80-9876-a7bcefa59d37 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 12:22:29.648
  I1221 12:22:29.670385 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2702" for this suite. @ 12/21/24 12:22:29.674
• [4.093 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/21/24 12:22:29.681
  I1221 12:22:29.681697 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pod-network-test @ 12/21/24 12:22:29.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:22:29.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:22:29.704
  STEP: Performing setup for networking test in namespace pod-network-test-5936 @ 12/21/24 12:22:29.706
  STEP: creating a selector @ 12/21/24 12:22:29.706
  STEP: Creating the service pods in kubernetes @ 12/21/24 12:22:29.706
  I1221 12:22:29.706364 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/21/24 12:22:51.833
  I1221 12:22:53.866394 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1221 12:22:53.866430 19 utils.go:496] Going to poll 192.168.235.134 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1221 12:22:53.870841 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.235.134 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5936 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:22:53.870864 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:22:53.871343 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:22:53.871409 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5936/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.235.134+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1221 12:22:54.921227 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1221 12:22:54.921257 19 utils.go:496] Going to poll 192.168.200.21 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1221 12:22:54.926113 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.200.21 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5936 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:22:54.926132 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:22:54.926515 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:22:54.926553 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5936/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.200.21+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1221 12:22:55.964656 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1221 12:22:55.964697 19 utils.go:496] Going to poll 192.168.78.6 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1221 12:22:55.969633 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.78.6 8081 | grep -v '^\s*$'] Namespace:pod-network-test-5936 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:22:55.969654 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:22:55.970062 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:22:55.970104 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5936/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.78.6+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1221 12:22:57.008730 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1221 12:22:57.008853 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5936" for this suite. @ 12/21/24 12:22:57.013
• [27.341 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:337
  STEP: Creating a kubernetes client @ 12/21/24 12:22:57.022
  I1221 12:22:57.022820 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename security-context @ 12/21/24 12:22:57.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:22:57.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:22:57.05
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/21/24 12:22:57.052
  STEP: Saw pod success @ 12/21/24 12:22:59.068
  I1221 12:22:59.073046 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod security-context-f70b3c15-87a2-4bf3-b854-e4337e3d4df1 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 12:22:59.08
  I1221 12:22:59.100573 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2357" for this suite. @ 12/21/24 12:22:59.105
• [2.090 seconds]
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 12/21/24 12:22:59.112
  I1221 12:22:59.112508 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename volumeattachment @ 12/21/24 12:22:59.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:22:59.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:22:59.133
  STEP: Create VolumeAttachment "va-e2e-2h45g" on node "ip-172-31-19-94" @ 12/21/24 12:22:59.14
  STEP: Get VolumeAttachment "va-e2e-2h45g" on node "ip-172-31-19-94" @ 12/21/24 12:22:59.146
  STEP: Patch VolumeAttachment "va-e2e-2h45g" on node "ip-172-31-19-94" @ 12/21/24 12:22:59.149
  STEP: List VolumeAttachments with "va-e2e-2h45g=patched" label @ 12/21/24 12:22:59.154
  STEP: Delete VolumeAttachment "va-e2e-2h45g" on node "ip-172-31-19-94" @ 12/21/24 12:22:59.157
  STEP: Confirm deletion of VolumeAttachment "va-e2e-2h45g" on node "ip-172-31-19-94" @ 12/21/24 12:22:59.164
  STEP: Create VolumeAttachment "va-e2e-b5tv5" on node "ip-172-31-9-184" @ 12/21/24 12:22:59.172
  STEP: Update the VolumeAttachment "va-e2e-b5tv5" on node "ip-172-31-9-184" with label "va-e2e=updated" @ 12/21/24 12:22:59.178
  STEP: Create VolumeAttachment "va-e2e-hr2c9" on node "ip-172-31-19-94" @ 12/21/24 12:22:59.191
  STEP: Update the VolumeAttachment "va-e2e-hr2c9" on node "ip-172-31-19-94" with label "va-e2e=updated" @ 12/21/24 12:22:59.196
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/21/24 12:22:59.206
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/21/24 12:22:59.221
  I1221 12:22:59.225582 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-103" for this suite. @ 12/21/24 12:22:59.229
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/21/24 12:22:59.237
  I1221 12:22:59.237106 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 12:22:59.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:22:59.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:22:59.259
  STEP: Create set of pods @ 12/21/24 12:22:59.26
  I1221 12:22:59.269629 19 pods.go:871] created test-pod-1
  I1221 12:22:59.274478 19 pods.go:871] created test-pod-2
  I1221 12:22:59.284514 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/21/24 12:22:59.284
  STEP: waiting for all pods to be deleted @ 12/21/24 12:23:01.323
  I1221 12:23:01.327377 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1221 12:23:02.329065 19 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  I1221 12:23:03.330007 19 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  I1221 12:23:04.329684 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9123" for this suite. @ 12/21/24 12:23:04.333
• [5.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 12/21/24 12:23:04.342
  I1221 12:23:04.342217 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 12:23:04.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:23:04.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:23:04.361
  STEP: Creating pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473 @ 12/21/24 12:23:04.363
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 12:23:06.382
  I1221 12:23:06.386690 19 container_probe.go:1749] Initial restart count of pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f is 0
  I1221 12:23:06.390621 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:08.396451 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:10.402419 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:12.407840 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:14.413442 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:16.419843 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:18.425314 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:20.438527 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:22.443954 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:24.449356 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:26.455432 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:28.461485 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:30.467435 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:32.473273 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:34.478660 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:36.483626 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:38.489541 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:40.494520 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:42.500644 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:44.506233 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:46.511280 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:48.517081 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:50.523318 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:52.529394 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:54.534386 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:56.540130 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:23:58.545738 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:00.551655 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:02.556554 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:04.563048 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:06.569067 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:08.574985 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:10.580827 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:12.586181 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:14.591579 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:16.597443 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:18.602604 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:20.609730 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:22.615926 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:24.620984 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:26.627051 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:28.633052 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:30.639631 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:32.646446 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:34.651280 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:36.657383 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:38.663045 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:40.668521 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:42.674609 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:44.680548 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:46.686495 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:48.692771 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:50.698089 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:52.703787 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:54.709353 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:56.715394 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:24:58.720703 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:00.726985 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:02.732621 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:04.738513 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:06.744558 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:08.750281 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:10.756378 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:12.762413 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:14.768429 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:16.774749 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:18.782371 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:20.787453 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:22.793256 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:24.799397 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:26.804523 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:28.809742 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:30.816138 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:32.821038 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:34.826435 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:36.832308 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:38.838491 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:40.844512 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:42.849191 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:44.854751 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:46.860887 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:48.866142 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:50.871583 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:52.877536 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:54.883007 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:56.888826 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:25:58.894105 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:00.900118 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:02.905441 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:04.911492 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:06.916060 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:08.921550 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:10.926857 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:12.932637 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:14.938866 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:16.944054 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:18.949214 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:20.953939 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:22.959090 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:24.966303 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:26.984062 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:28.990711 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:30.998054 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:33.005650 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:35.014264 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:37.019560 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:39.026099 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:41.032224 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:43.037067 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:45.042679 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:47.048187 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:49.053396 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:51.060101 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:53.065641 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:55.071370 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:57.077276 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:26:59.082455 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:27:01.088675 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:27:03.094316 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  I1221 12:27:05.101017 19 container_probe.go:1759] Get pod test-webserver-66faebfa-03f6-409f-b3bf-7590137cbd2f in namespace container-probe-1473
  STEP: deleting the pod @ 12/21/24 12:27:07.102
  I1221 12:27:07.120545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1473" for this suite. @ 12/21/24 12:27:07.125
• [242.791 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1148
  STEP: Creating a kubernetes client @ 12/21/24 12:27:07.133
  I1221 12:27:07.133682 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename job @ 12/21/24 12:27:07.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:07.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:07.154
  STEP: Creating a suspended job @ 12/21/24 12:27:07.16
  STEP: Patching the Job @ 12/21/24 12:27:07.166
  STEP: Watching for Job to be patched @ 12/21/24 12:27:07.175
  I1221 12:27:07.176517 19 job.go:1330] Event ADDED observed for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq] and annotations: map[]
  I1221 12:27:07.176538 19 job.go:1333] Event MODIFIED found for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[]
  STEP: Updating the job @ 12/21/24 12:27:07.176
  STEP: Watching for Job to be updated @ 12/21/24 12:27:07.186
  I1221 12:27:07.187496 19 job.go:1333] Event MODIFIED found for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[updated:true]
  I1221 12:27:07.187534 19 job.go:1226] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/21/24 12:27:07.187
  I1221 12:27:07.191476 19 job.go:1233] Job: e2e-k2hdq as labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched]
  STEP: Waiting for job to complete @ 12/21/24 12:27:07.191
  STEP: Delete a job collection with a labelselector @ 12/21/24 12:27:17.202
  STEP: Watching for Job to be deleted @ 12/21/24 12:27:17.213
  I1221 12:27:17.214804 19 job.go:1330] Event MODIFIED observed for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[updated:true]
  I1221 12:27:17.214831 19 job.go:1330] Event MODIFIED observed for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[updated:true]
  I1221 12:27:17.214841 19 job.go:1330] Event MODIFIED observed for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[updated:true]
  I1221 12:27:17.214890 19 job.go:1330] Event MODIFIED observed for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[updated:true]
  I1221 12:27:17.214921 19 job.go:1330] Event MODIFIED observed for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[updated:true]
  I1221 12:27:17.214935 19 job.go:1333] Event DELETED found for Job e2e-k2hdq in namespace job-4326 with labels: map[e2e-job-label:e2e-k2hdq e2e-k2hdq:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/21/24 12:27:17.215
  I1221 12:27:17.218916 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4326" for this suite. @ 12/21/24 12:27:17.222
• [10.096 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 12/21/24 12:27:17.23
  I1221 12:27:17.230631 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 12:27:17.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:17.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:17.265
  STEP: Creating configMap that has name configmap-test-emptyKey-c0b1c9f4-bf08-4d64-9941-6904ab103763 @ 12/21/24 12:27:17.266
  I1221 12:27:17.268892 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-295" for this suite. @ 12/21/24 12:27:17.272
• [0.049 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 12/21/24 12:27:17.28
  I1221 12:27:17.280087 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:27:17.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:17.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:17.297
  STEP: starting the proxy server @ 12/21/24 12:27:17.3
  I1221 12:27:17.300613 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6193 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/21/24 12:27:17.331
  I1221 12:27:17.335717 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1221 12:27:17.336781 19 kubectl.go:2224] kubectl proxy stdout: Starting to serve on 127.0.0.1:38139

  I1221 12:27:17.336809 19 kubectl.go:2229] kubectl proxy stderr: W1221 12:27:17.331274      53 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-6193" for this suite. @ 12/21/24 12:27:17.34
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/21/24 12:27:17.347
  I1221 12:27:17.347448 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/21/24 12:27:17.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:17.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:17.367
  I1221 12:27:17.369063 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:27:20.449188 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2239" for this suite. @ 12/21/24 12:27:20.453
• [3.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/21/24 12:27:20.462
  I1221 12:27:20.462125 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename podtemplate @ 12/21/24 12:27:20.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:20.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:20.486
  I1221 12:27:20.523984 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6684" for this suite. @ 12/21/24 12:27:20.528
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/21/24 12:27:20.535
  I1221 12:27:20.535392 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename discovery @ 12/21/24 12:27:20.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:20.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:20.563
  STEP: Setting up server cert @ 12/21/24 12:27:20.572
  I1221 12:27:20.770055 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1221 12:27:20.771026 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1221 12:27:20.771048 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1221 12:27:20.771054 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1221 12:27:20.771059 19 discovery.go:139] Checking APIGroup: apps
  I1221 12:27:20.771803 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1221 12:27:20.771817 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I1221 12:27:20.771821 19 discovery.go:154] apps/v1 matches apps/v1
  I1221 12:27:20.771825 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I1221 12:27:20.772585 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1221 12:27:20.772599 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1221 12:27:20.772604 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1221 12:27:20.772617 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1221 12:27:20.773347 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1221 12:27:20.773358 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1221 12:27:20.773363 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1221 12:27:20.773369 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1221 12:27:20.774113 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1221 12:27:20.774132 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1221 12:27:20.774137 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1221 12:27:20.774144 19 discovery.go:139] Checking APIGroup: autoscaling
  I1221 12:27:20.774872 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1221 12:27:20.774892 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1221 12:27:20.774900 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1221 12:27:20.774905 19 discovery.go:139] Checking APIGroup: batch
  I1221 12:27:20.775845 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1221 12:27:20.775866 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I1221 12:27:20.775872 19 discovery.go:154] batch/v1 matches batch/v1
  I1221 12:27:20.775886 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1221 12:27:20.776813 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1221 12:27:20.776832 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1221 12:27:20.776838 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1221 12:27:20.776843 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1221 12:27:20.777660 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1221 12:27:20.777674 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1221 12:27:20.777679 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1221 12:27:20.777685 19 discovery.go:139] Checking APIGroup: policy
  I1221 12:27:20.778323 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1221 12:27:20.778350 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I1221 12:27:20.778355 19 discovery.go:154] policy/v1 matches policy/v1
  I1221 12:27:20.778383 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1221 12:27:20.779133 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1221 12:27:20.779142 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1221 12:27:20.779147 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1221 12:27:20.779153 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1221 12:27:20.779857 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1221 12:27:20.779874 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1221 12:27:20.779880 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1221 12:27:20.779887 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1221 12:27:20.780669 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1221 12:27:20.780681 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1221 12:27:20.780687 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1221 12:27:20.780692 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1221 12:27:20.781344 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1221 12:27:20.781354 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1221 12:27:20.781359 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1221 12:27:20.781390 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1221 12:27:20.782103 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1221 12:27:20.782143 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1221 12:27:20.782148 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1221 12:27:20.782153 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1221 12:27:20.782835 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1221 12:27:20.782848 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1221 12:27:20.782854 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1221 12:27:20.782859 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I1221 12:27:20.783547 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1221 12:27:20.783558 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1221 12:27:20.783562 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1221 12:27:20.783569 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1221 12:27:20.784256 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1221 12:27:20.784277 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1221 12:27:20.784282 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1221 12:27:20.784288 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1221 12:27:20.784997 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1221 12:27:20.785017 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1221 12:27:20.785023 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1221 12:27:20.785029 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1221 12:27:20.785655 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1221 12:27:20.785664 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1221 12:27:20.785677 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1221 12:27:20.785817 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7727" for this suite. @ 12/21/24 12:27:20.79
• [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3184
  STEP: Creating a kubernetes client @ 12/21/24 12:27:20.799
  I1221 12:27:20.799231 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 12:27:20.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:20.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:20.821
  STEP: fetching services @ 12/21/24 12:27:20.823
  I1221 12:27:20.827938 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7183" for this suite. @ 12/21/24 12:27:20.831
• [0.042 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 12/21/24 12:27:20.841
  I1221 12:27:20.841266 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename security-context-test @ 12/21/24 12:27:20.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:20.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:20.865
  I1221 12:27:24.906464 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2957" for this suite. @ 12/21/24 12:27:24.911
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3209
  STEP: Creating a kubernetes client @ 12/21/24 12:27:24.919
  I1221 12:27:24.919243 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 12:27:24.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:24.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:24.942
  STEP: creating an Endpoint @ 12/21/24 12:27:24.948
  STEP: waiting for available Endpoint @ 12/21/24 12:27:24.954
  STEP: listing all Endpoints @ 12/21/24 12:27:24.954
  STEP: updating the Endpoint @ 12/21/24 12:27:24.958
  STEP: fetching the Endpoint @ 12/21/24 12:27:24.965
  STEP: patching the Endpoint @ 12/21/24 12:27:24.969
  STEP: fetching the Endpoint @ 12/21/24 12:27:24.976
  STEP: deleting the Endpoint by Collection @ 12/21/24 12:27:24.98
  STEP: waiting for Endpoint deletion @ 12/21/24 12:27:24.99
  STEP: fetching the Endpoint @ 12/21/24 12:27:24.991
  I1221 12:27:24.994775 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7106" for this suite. @ 12/21/24 12:27:24.998
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/21/24 12:27:25.006
  I1221 12:27:25.006939 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 12:27:25.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:25.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:25.028
  STEP: Creating secret with name secret-test-2ba039a4-a65c-4bdf-8af4-6d5cdf606125 @ 12/21/24 12:27:25.056
  STEP: Creating a pod to test consume secrets @ 12/21/24 12:27:25.062
  STEP: Saw pod success @ 12/21/24 12:27:29.084
  I1221 12:27:29.089259 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-f61492b4-db02-4e32-aed8-a2af96900fea container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:27:29.103
  I1221 12:27:29.125244 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1223" for this suite. @ 12/21/24 12:27:29.129
  STEP: Destroying namespace "secret-namespace-8742" for this suite. @ 12/21/24 12:27:29.137
• [4.138 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 12/21/24 12:27:29.145
  I1221 12:27:29.145484 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 12:27:29.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:29.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:29.169
  STEP: Creating service test in namespace statefulset-7315 @ 12/21/24 12:27:29.171
  I1221 12:27:29.189730 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1221 12:27:39.191876 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/21/24 12:27:39.2
  I1221 12:27:39.219474 19 wait.go:40] Found 1 stateful pods, waiting for 2
  I1221 12:27:49.221804 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1221 12:27:49.221847 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/21/24 12:27:49.23
  STEP: Delete all of the StatefulSets @ 12/21/24 12:27:49.234
  STEP: Verify that StatefulSets have been deleted @ 12/21/24 12:27:49.244
  I1221 12:27:49.248169 19 statefulset.go:138] Deleting all statefulset in ns statefulset-7315
  I1221 12:27:49.258060 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7315" for this suite. @ 12/21/24 12:27:49.266
• [20.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 12/21/24 12:27:49.273
  I1221 12:27:49.273453 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:27:49.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:49.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:49.297
  STEP: Starting the proxy @ 12/21/24 12:27:49.299
  I1221 12:27:49.300040 19 util.go:585] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-5467 proxy --unix-socket=/tmp/kubectl-proxy-unix1741442193/test'
  STEP: retrieving proxy /api/ output @ 12/21/24 12:27:49.352
  I1221 12:27:49.352737 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5467" for this suite. @ 12/21/24 12:27:49.358
• [0.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 12/21/24 12:27:49.366
  I1221 12:27:49.366499 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/21/24 12:27:49.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:49.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:49.395
  STEP: getting /apis @ 12/21/24 12:27:49.405
  STEP: getting /apis/admissionregistration.k8s.io @ 12/21/24 12:27:49.426
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/21/24 12:27:49.432
  STEP: creating @ 12/21/24 12:27:49.433
  STEP: getting @ 12/21/24 12:27:49.455
  STEP: listing @ 12/21/24 12:27:49.46
  STEP: watching @ 12/21/24 12:27:49.466
  I1221 12:27:49.466722 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 12/21/24 12:27:49.467
  STEP: updating @ 12/21/24 12:27:49.472
  I1221 12:27:49.484142 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 12/21/24 12:27:49.484
  STEP: patching /status @ 12/21/24 12:27:49.491
  STEP: updating /status @ 12/21/24 12:27:49.505
  STEP: deleting @ 12/21/24 12:27:49.516
  STEP: deleting a collection @ 12/21/24 12:27:49.535
  I1221 12:27:49.557851 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5409" for this suite. @ 12/21/24 12:27:49.561
• [0.202 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3703
  STEP: Creating a kubernetes client @ 12/21/24 12:27:49.568
  I1221 12:27:49.568839 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 12:27:49.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:27:49.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:27:49.589
  STEP: creating service multiprotocol-test in namespace services-1551 @ 12/21/24 12:27:49.591
  STEP: creating pod pod1 in namespace services-1551 @ 12/21/24 12:27:49.602
  STEP: Creating pod pod1 in namespace services-1551 @ 12/21/24 12:27:49.602
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1551 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/21/24 12:27:51.628
  I1221 12:27:51.640357 19 service.go:4392] successfully validated that service multiprotocol-test in namespace services-1551 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/21/24 12:27:51.64
  I1221 12:27:51.640404 19 resource.go:361] Creating new exec pod
  I1221 12:27:53.654608 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  I1221 12:27:53.741424 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [tcp/http] succeeded!\n"
  I1221 12:27:53.741501 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 12:27:53.741611 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.82 80'
  I1221 12:27:57.858818 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [udp/*] succeeded!\n"
  I1221 12:27:57.858861 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/21/24 12:27:57.858
  I1221 12:27:57.870024 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  I1221 12:27:57.952362 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [tcp/http] succeeded!\n"
  I1221 12:27:57.952399 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 12:27:57.952490 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.82 80'
  I1221 12:28:02.034301 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [udp/*] succeeded!\n"
  I1221 12:28:02.034367 19 builder.go:147] stdout: ""
  I1221 12:28:02.034499 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.82 80'
  I1221 12:28:06.119056 19 builder.go:146] stderr: "+ + echo hostName\nnc -v -u -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [udp/*] succeeded!\n"
  I1221 12:28:06.119104 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/21/24 12:28:06.119
  I1221 12:28:06.129500 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.152.183.82 80'
  I1221 12:28:10.218912 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.152.183.82 80\nConnection to 10.152.183.82 80 port [udp/*] succeeded!\n"
  I1221 12:28:10.218951 19 builder.go:147] stdout: "pod1"
  I1221 12:28:10.219049 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  I1221 12:28:12.307088 19 builder.go:135] rc: 1
  I1221 12:28:12.307153 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.82 80
  nc: connect to 10.152.183.82 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1221 12:28:12.307232 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  I1221 12:28:14.381193 19 builder.go:135] rc: 1
  I1221 12:28:14.381247 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.82 80
  nc: connect to 10.152.183.82 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1221 12:28:14.381316 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80'
  I1221 12:28:16.458089 19 builder.go:135] rc: 1
  I1221 12:28:16.458156 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1551 exec execpodmrkn8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.82 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.152.183.82 80
  nc: connect to 10.152.183.82 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1221 12:28:16.458372 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1551" for this suite. @ 12/21/24 12:28:16.463
• [26.902 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 12/21/24 12:28:16.471
  I1221 12:28:16.471421 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 12:28:16.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:28:16.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:28:16.493
  STEP: set up a multi version CRD @ 12/21/24 12:28:16.495
  I1221 12:28:16.495561 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: mark a version not serverd @ 12/21/24 12:28:19.648
  STEP: check the unserved version gets removed @ 12/21/24 12:28:19.666
  STEP: check the other version is not changed @ 12/21/24 12:28:20.363
  I1221 12:28:22.792964 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3749" for this suite. @ 12/21/24 12:28:22.801
• [6.338 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/21/24 12:28:22.81
  I1221 12:28:22.810522 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/21/24 12:28:22.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:28:22.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:28:22.83
  STEP: Setting up the test @ 12/21/24 12:28:22.839
  STEP: Creating hostNetwork=false pod @ 12/21/24 12:28:22.839
  STEP: Creating hostNetwork=true pod @ 12/21/24 12:28:24.876
  STEP: Running the test @ 12/21/24 12:28:26.904
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/21/24 12:28:26.904
  I1221 12:28:26.904659 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:26.904692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:26.905135 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:26.905175 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1221 12:28:26.938434 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:26.938482 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:26.938491 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:26.938981 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:26.939043 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1221 12:28:26.977544 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:26.977597 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:26.977626 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:26.978078 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:26.978134 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1221 12:28:27.016107 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:27.016149 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:27.016160 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:27.016629 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:27.016681 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1221 12:28:27.048477 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/21/24 12:28:27.048
  I1221 12:28:27.048556 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:27.048565 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:27.048980 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:27.049021 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1221 12:28:27.087072 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:27.087120 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:27.087129 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:27.087577 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:27.087624 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1221 12:28:27.118692 19 exec_util.go:111] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/21/24 12:28:27.118
  I1221 12:28:27.118755 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:27.118763 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:27.119184 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:27.119247 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1221 12:28:27.167793 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:27.167834 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:27.167842 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:27.168207 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:27.168248 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1221 12:28:27.199015 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:27.199071 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:27.199080 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:27.199542 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:27.199603 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1221 12:28:27.227364 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:27.227407 19 exec_util.go:59] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8968 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:28:27.227415 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:28:27.227773 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:28:27.227812 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8968/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1221 12:28:27.261489 19 exec_util.go:111] Exec stderr: ""
  I1221 12:28:27.261606 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8968" for this suite. @ 12/21/24 12:28:27.267
• [4.466 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 12/21/24 12:28:27.276
  I1221 12:28:27.276317 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-pred @ 12/21/24 12:28:27.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:28:27.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:28:27.296
  I1221 12:28:27.299320 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1221 12:28:27.308008 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1221 12:28:27.311773 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-134 before test
  I1221 12:28:27.317831 19 predicates.go:957] test-host-network-pod from e2e-kubelet-etc-hosts-8968 started at 2024-12-21 12:28:24 +0000 UTC (2 container statuses recorded)
  I1221 12:28:27.317851 19 predicates.go:959] 	Container busybox-1 ready: true, restart count 0
  I1221 12:28:27.317856 19 predicates.go:959] 	Container busybox-2 ready: true, restart count 0
  I1221 12:28:27.317865 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-f4st4 from ingress-nginx-kubernetes-worker started at 2024-12-21 12:02:55 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.317871 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 12:28:27.317878 19 predicates.go:957] calico-node-lftqs from kube-system started at 2024-12-21 12:08:33 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.317884 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 12:28:27.317891 19 predicates.go:957] sonobuoy-e2e-job-b5a495975eb84fdf from sonobuoy started at 2024-12-21 12:10:57 +0000 UTC (2 container statuses recorded)
  I1221 12:28:27.317900 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1221 12:28:27.317905 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:28:27.317911 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-rx848 from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 12:28:27.317916 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:28:27.317921 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 12:28:27.317928 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-100 before test
  I1221 12:28:27.323539 19 predicates.go:957] test-pod from e2e-kubelet-etc-hosts-8968 started at 2024-12-21 12:28:22 +0000 UTC (3 container statuses recorded)
  I1221 12:28:27.323555 19 predicates.go:959] 	Container busybox-1 ready: true, restart count 0
  I1221 12:28:27.323561 19 predicates.go:959] 	Container busybox-2 ready: true, restart count 0
  I1221 12:28:27.323580 19 predicates.go:959] 	Container busybox-3 ready: true, restart count 0
  I1221 12:28:27.323587 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-4rn6b from ingress-nginx-kubernetes-worker started at 2024-12-21 12:04:45 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.323592 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 12:28:27.323599 19 predicates.go:957] calico-node-npt9c from kube-system started at 2024-12-21 12:06:56 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.323605 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 12:28:27.323611 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-21 12:10:55 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.323675 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1221 12:28:27.323682 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-4tc8w from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 12:28:27.323687 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:28:27.323692 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 12:28:27.323698 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-184 before test
  I1221 12:28:27.329592 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5c9cx from ingress-nginx-kubernetes-worker started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.329606 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 12:28:27.329612 19 predicates.go:957] calico-node-qsfv4 from kube-system started at 2024-12-21 12:08:22 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.329627 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 12:28:27.329633 19 predicates.go:957] coredns-5b4857d7c8-vssh5 from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.329639 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1221 12:28:27.329644 19 predicates.go:957] kube-state-metrics-5d7bdccd49-tfhds from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.329650 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 4
  I1221 12:28:27.329655 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wp8st from kube-system started at 2024-12-21 12:00:58 +0000 UTC (2 container statuses recorded)
  I1221 12:28:27.329664 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1221 12:28:27.329668 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1221 12:28:27.329673 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-588bl from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.329678 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1221 12:28:27.329683 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-p8lb6 from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:28:27.329726 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 4
  I1221 12:28:27.329732 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-fqqth from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 12:28:27.329737 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:28:27.329741 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/21/24 12:28:27.329
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/21/24 12:28:29.357
  STEP: Trying to apply a random label on the found node. @ 12/21/24 12:28:29.379
  STEP: verifying the node has the label kubernetes.io/e2e-c9770196-4b1b-41d4-a2f2-22205d9f9ad1 95 @ 12/21/24 12:28:29.389
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/21/24 12:28:29.392
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.18.134 on the node which pod4 resides and expect not scheduled @ 12/21/24 12:28:31.41
  STEP: removing the label kubernetes.io/e2e-c9770196-4b1b-41d4-a2f2-22205d9f9ad1 off the node ip-172-31-18-134 @ 12/21/24 12:33:31.42
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c9770196-4b1b-41d4-a2f2-22205d9f9ad1 @ 12/21/24 12:33:31.433
  I1221 12:33:31.438671 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4033" for this suite. @ 12/21/24 12:33:31.444
• [304.178 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 12/21/24 12:33:31.454
  I1221 12:33:31.455444 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/21/24 12:33:31.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:33:31.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:33:31.478
  STEP: creating a policy with variables @ 12/21/24 12:33:31.487
  STEP: waiting until the marker is denied @ 12/21/24 12:33:31.509
  STEP: testing a replicated Deployment to be allowed @ 12/21/24 12:33:31.719
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/21/24 12:33:31.736
  I1221 12:33:31.783271 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-223" for this suite. @ 12/21/24 12:33:31.801
• [0.361 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates pod disruption condition is added to the preempted pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:329
  STEP: Creating a kubernetes client @ 12/21/24 12:33:31.816
  I1221 12:33:31.816100 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-preemption @ 12/21/24 12:33:31.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:33:31.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:33:31.831
  I1221 12:33:31.848475 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1221 12:34:31.854483 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Select a node to run the lower and higher priority pods @ 12/21/24 12:34:31.857
  STEP: Create a low priority pod that consumes 1/1 of node resources @ 12/21/24 12:34:31.867
  I1221 12:34:31.880196 19 preemption.go:367] Created pod: victim-pod
  STEP: Wait for the victim pod to be scheduled @ 12/21/24 12:34:31.88
  STEP: Create a high priority pod to trigger preemption of the lower priority pod @ 12/21/24 12:34:33.895
  I1221 12:34:33.905000 19 preemption.go:385] Created pod: preemptor-pod
  STEP: Waiting for the victim pod to be terminating @ 12/21/24 12:34:33.905
  STEP: Verifying the pod has the pod disruption condition @ 12/21/24 12:34:35.914
  I1221 12:34:35.919282 19 pod_client.go:378] Removing pod's "victim-pod" finalizer: "example.com/test-finalizer"
  I1221 12:34:36.435576 19 pod_client.go:173] Successfully updated pod "victim-pod"
  I1221 12:34:36.479261 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7635" for this suite. @ 12/21/24 12:34:36.484
• [64.677 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 12/21/24 12:34:36.493
  I1221 12:34:36.493183 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 12:34:36.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:34:36.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:34:36.512
  STEP: creating a ConfigMap @ 12/21/24 12:34:36.515
  STEP: fetching the ConfigMap @ 12/21/24 12:34:36.521
  STEP: patching the ConfigMap @ 12/21/24 12:34:36.525
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/21/24 12:34:36.53
  STEP: deleting the ConfigMap by collection with a label selector @ 12/21/24 12:34:36.535
  STEP: listing all ConfigMaps in test namespace @ 12/21/24 12:34:36.545
  I1221 12:34:36.550702 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7509" for this suite. @ 12/21/24 12:34:36.555
• [0.073 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/21/24 12:34:36.566
  I1221 12:34:36.566187 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:34:36.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:34:36.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:34:36.59
  STEP: Creating a pod to test downward api env vars @ 12/21/24 12:34:36.594
  STEP: Saw pod success @ 12/21/24 12:34:40.629
  I1221 12:34:40.634449 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downward-api-353142f5-a148-4d71-bbcc-34c5454241b1 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 12:34:40.653
  I1221 12:34:40.675545 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-722" for this suite. @ 12/21/24 12:34:40.68
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:907
  STEP: Creating a kubernetes client @ 12/21/24 12:34:40.689
  I1221 12:34:40.689352 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename job @ 12/21/24 12:34:40.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:34:40.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:34:40.71
  STEP: Creating a job @ 12/21/24 12:34:40.712
  STEP: Ensuring active pods == parallelism @ 12/21/24 12:34:40.72
  STEP: Orphaning one of the Job's Pods @ 12/21/24 12:34:42.726
  I1221 12:34:43.246923 19 pod_client.go:173] Successfully updated pod "adopt-release-ktmcj"
  STEP: Checking that the Job readopts the Pod @ 12/21/24 12:34:43.246
  STEP: Removing the labels from the Job's Pod @ 12/21/24 12:34:45.263
  I1221 12:34:45.778456 19 pod_client.go:173] Successfully updated pod "adopt-release-ktmcj"
  STEP: Checking that the Job releases the Pod @ 12/21/24 12:34:45.778
  I1221 12:34:47.788228 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8364" for this suite. @ 12/21/24 12:34:47.792
• [7.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:337
  STEP: Creating a kubernetes client @ 12/21/24 12:34:47.801
  I1221 12:34:47.801817 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:34:47.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:34:47.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:34:47.822
  STEP: creating a replication controller @ 12/21/24 12:34:47.824
  I1221 12:34:47.824745 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 create -f -'
  I1221 12:34:47.905458 19 builder.go:146] stderr: ""
  I1221 12:34:47.905493 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/21/24 12:34:47.905
  I1221 12:34:47.905589 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1221 12:34:47.947447 19 builder.go:146] stderr: ""
  I1221 12:34:47.947490 19 builder.go:147] stdout: "update-demo-nautilus-2l6gt update-demo-nautilus-fqgcn "
  I1221 12:34:47.947530 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods update-demo-nautilus-2l6gt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 12:34:47.986862 19 builder.go:146] stderr: ""
  I1221 12:34:47.986896 19 builder.go:147] stdout: ""
  I1221 12:34:47.986904 19 kubectl.go:2502] update-demo-nautilus-2l6gt is created but not running
  I1221 12:34:52.990541 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1221 12:34:53.032047 19 builder.go:146] stderr: ""
  I1221 12:34:53.032083 19 builder.go:147] stdout: "update-demo-nautilus-2l6gt update-demo-nautilus-fqgcn "
  I1221 12:34:53.032129 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods update-demo-nautilus-2l6gt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 12:34:53.072280 19 builder.go:146] stderr: ""
  I1221 12:34:53.072311 19 builder.go:147] stdout: "true"
  I1221 12:34:53.072363 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods update-demo-nautilus-2l6gt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1221 12:34:53.110731 19 builder.go:146] stderr: ""
  I1221 12:34:53.110762 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1221 12:34:53.110772 19 kubectl.go:2393] validating pod update-demo-nautilus-2l6gt
  I1221 12:34:53.117988 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1221 12:34:53.118229 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1221 12:34:53.118244 19 kubectl.go:2520] update-demo-nautilus-2l6gt is verified up and running
  I1221 12:34:53.118482 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods update-demo-nautilus-fqgcn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 12:34:53.170365 19 builder.go:146] stderr: ""
  I1221 12:34:53.170408 19 builder.go:147] stdout: "true"
  I1221 12:34:53.170510 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods update-demo-nautilus-fqgcn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1221 12:34:53.218032 19 builder.go:146] stderr: ""
  I1221 12:34:53.218070 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1221 12:34:53.218093 19 kubectl.go:2393] validating pod update-demo-nautilus-fqgcn
  I1221 12:34:53.223638 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1221 12:34:53.223683 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1221 12:34:53.223699 19 kubectl.go:2520] update-demo-nautilus-fqgcn is verified up and running
  STEP: using delete to clean up resources @ 12/21/24 12:34:53.223
  I1221 12:34:53.223803 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 delete --grace-period=0 --force -f -'
  I1221 12:34:53.274193 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 12:34:53.274228 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1221 12:34:53.274283 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get rc,svc -l name=update-demo --no-headers'
  I1221 12:34:53.345508 19 builder.go:146] stderr: "No resources found in kubectl-4072 namespace.\n"
  I1221 12:34:53.345575 19 builder.go:147] stdout: ""
  I1221 12:34:53.345852 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4072 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1221 12:34:53.428656 19 builder.go:146] stderr: ""
  I1221 12:34:53.428702 19 builder.go:147] stdout: ""
  I1221 12:34:53.428815 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4072" for this suite. @ 12/21/24 12:34:53.434
• [5.640 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/21/24 12:34:53.441
  I1221 12:34:53.441771 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:34:53.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:34:53.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:34:53.478
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 12:34:53.494
  STEP: Saw pod success @ 12/21/24 12:34:55.522
  I1221 12:34:55.526669 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod downwardapi-volume-25897447-3355-4091-b853-5509242ce0cf container client-container: <nil>
  STEP: delete the pod @ 12/21/24 12:34:55.544
  I1221 12:34:55.568425 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7003" for this suite. @ 12/21/24 12:34:55.572
• [2.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/21/24 12:34:55.58
  I1221 12:34:55.580514 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 12:34:55.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:34:55.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:34:55.6
  STEP: Creating Pod @ 12/21/24 12:34:55.602
  STEP: Reading file content from the nginx-container @ 12/21/24 12:34:57.626
  I1221 12:34:57.626108 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2224 PodName:pod-sharedvolume-d1a6a2b4-b293-45b1-992f-f8773f57f1ac ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:34:57.626125 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:34:57.626574 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:34:57.626620 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-2224/pods/pod-sharedvolume-d1a6a2b4-b293-45b1-992f-f8773f57f1ac/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1221 12:34:57.675775 19 exec_util.go:111] Exec stderr: ""
  I1221 12:34:57.675890 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2224" for this suite. @ 12/21/24 12:34:57.681
• [2.109 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/21/24 12:34:57.689
  I1221 12:34:57.689994 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 12:34:57.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:34:57.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:34:57.709
  STEP: creating the pod @ 12/21/24 12:34:57.712
  STEP: setting up watch @ 12/21/24 12:34:57.712
  STEP: submitting the pod to kubernetes @ 12/21/24 12:34:57.817
  STEP: verifying the pod is in kubernetes @ 12/21/24 12:34:57.829
  STEP: verifying pod creation was observed @ 12/21/24 12:34:57.836
  STEP: deleting the pod gracefully @ 12/21/24 12:34:59.854
  STEP: verifying pod deletion was observed @ 12/21/24 12:34:59.863
  I1221 12:35:01.334220 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9769" for this suite. @ 12/21/24 12:35:01.338
• [3.656 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:859
  STEP: Creating a kubernetes client @ 12/21/24 12:35:01.346
  I1221 12:35:01.346578 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 12:35:01.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:35:01.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:35:01.365
  STEP: Creating a ResourceQuota with best effort scope @ 12/21/24 12:35:01.367
  STEP: Ensuring ResourceQuota status is calculated @ 12/21/24 12:35:01.374
  STEP: Creating a ResourceQuota with not best effort scope @ 12/21/24 12:35:03.38
  STEP: Ensuring ResourceQuota status is calculated @ 12/21/24 12:35:03.386
  STEP: Creating a best-effort pod @ 12/21/24 12:35:05.392
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/21/24 12:35:05.407
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/21/24 12:35:07.413
  STEP: Deleting the pod @ 12/21/24 12:35:09.42
  STEP: Ensuring resource quota status released the pod usage @ 12/21/24 12:35:09.439
  STEP: Creating a not best-effort pod @ 12/21/24 12:35:11.444
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/21/24 12:35:11.458
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/21/24 12:35:13.464
  STEP: Deleting the pod @ 12/21/24 12:35:15.47
  STEP: Ensuring resource quota status released the pod usage @ 12/21/24 12:35:15.49
  I1221 12:35:17.496602 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7793" for this suite. @ 12/21/24 12:35:17.501
• [16.163 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 12/21/24 12:35:17.51
  I1221 12:35:17.510192 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 12:35:17.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:35:17.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:35:17.529
  STEP: Creating service test in namespace statefulset-6412 @ 12/21/24 12:35:17.531
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/21/24 12:35:17.537
  STEP: Creating stateful set ss in namespace statefulset-6412 @ 12/21/24 12:35:17.543
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6412 @ 12/21/24 12:35:17.549
  I1221 12:35:17.552905 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1221 12:35:27.559251 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/21/24 12:35:27.559
  I1221 12:35:27.564453 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 12:35:27.642469 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 12:35:27.642511 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 12:35:27.642520 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 12:35:27.647507 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1221 12:35:37.651077 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1221 12:35:37.651118 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1221 12:35:37.671445 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999748s
  I1221 12:35:38.677253 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.995281366s
  I1221 12:35:39.683616 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.989269546s
  I1221 12:35:40.689677 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.982376558s
  I1221 12:35:41.695761 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.976908403s
  I1221 12:35:42.702507 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.970367365s
  I1221 12:35:43.708587 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.964204142s
  I1221 12:35:44.714409 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.957912427s
  I1221 12:35:45.721445 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.951369205s
  I1221 12:35:46.727209 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 945.253852ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6412 @ 12/21/24 12:35:47.727
  I1221 12:35:47.733790 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 12:35:47.816606 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1221 12:35:47.816639 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 12:35:47.816648 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 12:35:47.821939 19 wait.go:40] Found 1 stateful pods, waiting for 3
  I1221 12:35:57.827173 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1221 12:35:57.827221 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1221 12:35:57.827229 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/21/24 12:35:57.827
  STEP: Scale down will halt with unhealthy stateful pod @ 12/21/24 12:35:57.827
  I1221 12:35:57.836032 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 12:35:57.909666 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 12:35:57.909692 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 12:35:57.909700 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 12:35:57.909736 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 12:35:57.994767 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 12:35:57.994798 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 12:35:57.994807 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 12:35:57.994853 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 12:35:58.080672 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 12:35:58.080705 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 12:35:58.080714 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 12:35:58.080723 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1221 12:35:58.085849 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1221 12:36:08.091798 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1221 12:36:08.091827 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1221 12:36:08.091834 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1221 12:36:08.110227 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999772s
  I1221 12:36:09.115990 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.994166096s
  I1221 12:36:10.121901 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.988079171s
  I1221 12:36:11.127162 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.982497642s
  I1221 12:36:12.133041 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.977006507s
  I1221 12:36:13.140036 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.970465709s
  I1221 12:36:14.146341 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.9642997s
  I1221 12:36:15.152853 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.958018516s
  I1221 12:36:16.159150 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.951551302s
  I1221 12:36:17.165482 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 945.193197ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6412 @ 12/21/24 12:36:18.166
  I1221 12:36:18.172786 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 12:36:18.250944 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1221 12:36:18.250975 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 12:36:18.250983 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 12:36:18.251020 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 12:36:18.321736 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1221 12:36:18.321766 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 12:36:18.321774 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 12:36:18.321809 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-6412 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 12:36:18.398626 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1221 12:36:18.398664 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 12:36:18.398672 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 12:36:18.398681 19 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/21/24 12:36:28.41
  I1221 12:36:28.410226 19 statefulset.go:138] Deleting all statefulset in ns statefulset-6412
  I1221 12:36:28.415490 19 rest.go:150] Scaling statefulset ss to 0
  I1221 12:36:28.423454 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 12:36:28.428033 19 rest.go:88] Deleting statefulset ss
  I1221 12:36:28.445856 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6412" for this suite. @ 12/21/24 12:36:28.452
• [70.950 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/21/24 12:36:28.46
  I1221 12:36:28.460585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/21/24 12:36:28.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:28.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:28.481
  STEP: creating a target pod @ 12/21/24 12:36:28.483
  STEP: adding an ephemeral container @ 12/21/24 12:36:30.506
  STEP: checking pod container endpoints @ 12/21/24 12:36:32.527
  I1221 12:36:32.527105 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4197 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:36:32.527122 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:36:32.527553 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:36:32.527599 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4197/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1221 12:36:32.564786 19 exec_util.go:111] Exec stderr: ""
  I1221 12:36:32.577486 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4197" for this suite. @ 12/21/24 12:36:32.582
• [4.132 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/21/24 12:36:32.592
  I1221 12:36:32.592291 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 12:36:32.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:32.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:32.61
  STEP: Creating configMap with name configmap-test-volume-d991a8eb-c2e5-49bb-b220-51b023dc2e2f @ 12/21/24 12:36:32.612
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:36:32.616
  STEP: Saw pod success @ 12/21/24 12:36:34.635
  I1221 12:36:34.640829 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-configmaps-413cd19e-aed5-4eb8-86f5-28426036106b container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 12:36:34.651
  I1221 12:36:34.674193 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9383" for this suite. @ 12/21/24 12:36:34.678
• [2.098 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/21/24 12:36:34.69
  I1221 12:36:34.690100 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replicaset @ 12/21/24 12:36:34.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:34.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:34.705
  STEP: Create a ReplicaSet @ 12/21/24 12:36:34.707
  STEP: Verify that the required pods have come up @ 12/21/24 12:36:34.713
  I1221 12:36:34.716825 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1221 12:36:39.723571 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/21/24 12:36:39.723
  I1221 12:36:39.728513 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/21/24 12:36:39.728
  STEP: DeleteCollection of the ReplicaSets @ 12/21/24 12:36:39.735
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/21/24 12:36:39.75
  I1221 12:36:39.757124 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1447" for this suite. @ 12/21/24 12:36:39.764
• [5.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 12/21/24 12:36:39.782
  I1221 12:36:39.782490 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename ingress @ 12/21/24 12:36:39.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:39.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:39.811
  STEP: getting /apis @ 12/21/24 12:36:39.815
  STEP: getting /apis/networking.k8s.io @ 12/21/24 12:36:39.818
  STEP: getting /apis/networking.k8s.iov1 @ 12/21/24 12:36:39.819
  STEP: creating @ 12/21/24 12:36:39.821
  STEP: getting @ 12/21/24 12:36:39.842
  STEP: listing @ 12/21/24 12:36:39.85
  STEP: watching @ 12/21/24 12:36:39.855
  I1221 12:36:39.856036 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 12/21/24 12:36:39.857
  STEP: cluster-wide watching @ 12/21/24 12:36:39.863
  I1221 12:36:39.863559 19 ingress.go:198] starting watch
  STEP: patching @ 12/21/24 12:36:39.864
  STEP: updating @ 12/21/24 12:36:39.872
  I1221 12:36:39.889014 19 ingress.go:221] waiting for watch events with expected annotations
  I1221 12:36:39.889044 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 12/21/24 12:36:39.889
  STEP: updating /status @ 12/21/24 12:36:39.895
  STEP: get /status @ 12/21/24 12:36:39.908
  STEP: deleting @ 12/21/24 12:36:39.915
  STEP: deleting a collection @ 12/21/24 12:36:39.938
  I1221 12:36:39.961356 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7759" for this suite. @ 12/21/24 12:36:39.965
• [0.194 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/21/24 12:36:39.982
  I1221 12:36:39.982697 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 12:36:39.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:40.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:40.007
  STEP: Creating secret with name secret-test-5bfea8b1-ef29-49af-8cb6-ca6d8c434ac8 @ 12/21/24 12:36:40.01
  STEP: Creating a pod to test consume secrets @ 12/21/24 12:36:40.016
  STEP: Saw pod success @ 12/21/24 12:36:44.049
  I1221 12:36:44.053129 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-7960a5cb-44f3-42f4-9f85-8398f4d147d3 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:36:44.061
  I1221 12:36:44.081957 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3800" for this suite. @ 12/21/24 12:36:44.086
• [4.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/21/24 12:36:44.094
  I1221 12:36:44.094823 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:36:44.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:44.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:44.114
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 12:36:44.116
  STEP: Saw pod success @ 12/21/24 12:36:48.142
  I1221 12:36:48.146531 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod downwardapi-volume-cc67d034-0a91-42d2-8d0c-9158ed47637c container client-container: <nil>
  STEP: delete the pod @ 12/21/24 12:36:48.155
  I1221 12:36:48.177214 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4229" for this suite. @ 12/21/24 12:36:48.182
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/21/24 12:36:48.191
  I1221 12:36:48.191463 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename daemonsets @ 12/21/24 12:36:48.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:48.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:48.21
  I1221 12:36:48.238520 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1221 12:36:48.244246 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1221 12:36:48.250741 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:48.250769 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:48.255282 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:36:48.255303 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:36:49.248193 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:49.248230 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:49.252454 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:36:49.252470 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:36:50.250093 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:50.250134 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:50.254235 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 12:36:50.254252 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1221 12:36:50.254265 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1221 12:36:50.264584 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1221 12:36:51.281450 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1221 12:36:51.293001 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I1221 12:36:51.293027 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1221 12:36:51.299898 19 daemon_set.go:1193] Wrong image for pod: daemon-set-8rx56. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1221 12:36:51.299916 19 daemon_set.go:1198] Pod daemon-set-8rx56 is not available
  I1221 12:36:51.303522 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:51.303548 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:52.302823 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:52.302866 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:53.303763 19 daemon_set.go:1198] Pod daemon-set-fmvzz is not available
  I1221 12:36:53.316436 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:53.316464 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:54.301013 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:36:54.301047 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 12/21/24 12:36:54.309
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6114, will wait for the garbage collector to delete the pods @ 12/21/24 12:36:54.309
  I1221 12:36:54.373443 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.402942ms
  I1221 12:36:54.473614 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.169345ms
  I1221 12:36:56.379608 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:36:56.379642 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1221 12:36:56.384603 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"11461"},"items":null}

  I1221 12:36:56.390180 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"11461"},"items":null}

  I1221 12:36:56.406919 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6114" for this suite. @ 12/21/24 12:36:56.411
• [8.228 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/21/24 12:36:56.419
  I1221 12:36:56.419429 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:36:56.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:36:56.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:36:56.44
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 12:36:56.442
  STEP: Saw pod success @ 12/21/24 12:37:00.469
  I1221 12:37:00.474000 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod downwardapi-volume-14fab27e-57ca-46f4-b204-2db84a2b3ddf container client-container: <nil>
  STEP: delete the pod @ 12/21/24 12:37:00.481
  I1221 12:37:00.500474 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5539" for this suite. @ 12/21/24 12:37:00.505
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/21/24 12:37:00.514
  I1221 12:37:00.514379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svcaccounts @ 12/21/24 12:37:00.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:00.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:00.531
  STEP: reading a file in the container @ 12/21/24 12:37:02.559
  I1221 12:37:02.559074 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8151 pod-service-account-03e8b259-a1b2-4065-9a54-5c205700eb6e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/21/24 12:37:02.632
  I1221 12:37:02.632283 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8151 pod-service-account-03e8b259-a1b2-4065-9a54-5c205700eb6e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/21/24 12:37:02.718
  I1221 12:37:02.718583 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8151 pod-service-account-03e8b259-a1b2-4065-9a54-5c205700eb6e -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1221 12:37:02.795247 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-8151"
  I1221 12:37:02.797259 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8151" for this suite. @ 12/21/24 12:37:02.802
• [2.296 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should allow to use the pod failure policy on exit code to fail the job early [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:107
  STEP: Creating a kubernetes client @ 12/21/24 12:37:02.81
  I1221 12:37:02.810200 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename job @ 12/21/24 12:37:02.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:02.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:02.83
  STEP: Looking for a node to schedule job pod @ 12/21/24 12:37:02.832
  STEP: Creating a job @ 12/21/24 12:37:02.836
  STEP: Ensuring job fails @ 12/21/24 12:37:02.844
  I1221 12:37:06.852916 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8507" for this suite. @ 12/21/24 12:37:06.857
• [4.056 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:821
  STEP: Creating a kubernetes client @ 12/21/24 12:37:06.865
  I1221 12:37:06.865970 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 12:37:06.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:06.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:06.891
  STEP: creating service multi-endpoint-test in namespace services-6916 @ 12/21/24 12:37:06.893
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6916 to expose endpoints map[] @ 12/21/24 12:37:06.904
  I1221 12:37:06.908972 19 service.go:4267] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I1221 12:37:07.917921 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6916 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-6916 @ 12/21/24 12:37:07.917
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6916 to expose endpoints map[pod1:[100]] @ 12/21/24 12:37:09.943
  I1221 12:37:09.957315 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6916 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-6916 @ 12/21/24 12:37:09.957
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6916 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/21/24 12:37:11.978
  I1221 12:37:11.998474 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6916 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/21/24 12:37:11.998
  I1221 12:37:11.998539 19 resource.go:361] Creating new exec pod
  I1221 12:37:15.018382 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-6916 exec execpodwxl2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1221 12:37:15.104988 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1221 12:37:15.105027 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 12:37:15.105214 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-6916 exec execpodwxl2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 80'
  I1221 12:37:15.186183 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.93 80\nConnection to 10.152.183.93 80 port [tcp/http] succeeded!\n"
  I1221 12:37:15.186228 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 12:37:15.186301 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-6916 exec execpodwxl2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1221 12:37:15.266587 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1221 12:37:15.266629 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 12:37:15.266710 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-6916 exec execpodwxl2p -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.93 81'
  I1221 12:37:15.343414 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.93 81\nConnection to 10.152.183.93 81 port [tcp/*] succeeded!\n"
  I1221 12:37:15.343455 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-6916 @ 12/21/24 12:37:15.343
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6916 to expose endpoints map[pod2:[101]] @ 12/21/24 12:37:15.366
  I1221 12:37:15.382525 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6916 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-6916 @ 12/21/24 12:37:15.382
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-6916 to expose endpoints map[] @ 12/21/24 12:37:15.396
  I1221 12:37:15.407621 19 service.go:4299] successfully validated that service multi-endpoint-test in namespace services-6916 exposes endpoints map[]
  I1221 12:37:15.430991 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6916" for this suite. @ 12/21/24 12:37:15.435
• [8.576 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/21/24 12:37:15.442
  I1221 12:37:15.442553 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename apf @ 12/21/24 12:37:15.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:15.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:15.46
  STEP: getting /apis @ 12/21/24 12:37:15.464
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/21/24 12:37:15.467
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/21/24 12:37:15.469
  STEP: creating @ 12/21/24 12:37:15.47
  STEP: getting @ 12/21/24 12:37:15.489
  STEP: listing @ 12/21/24 12:37:15.493
  STEP: watching @ 12/21/24 12:37:15.5
  I1221 12:37:15.501837 19 flowcontrol.go:394] starting watch
  STEP: patching @ 12/21/24 12:37:15.505
  STEP: updating @ 12/21/24 12:37:15.516
  I1221 12:37:15.525880 19 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 12/21/24 12:37:15.525
  STEP: patching /status @ 12/21/24 12:37:15.531
  STEP: updating /status @ 12/21/24 12:37:15.538
  STEP: deleting @ 12/21/24 12:37:15.573
  STEP: deleting a collection @ 12/21/24 12:37:15.59
  I1221 12:37:15.616965 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7200" for this suite. @ 12/21/24 12:37:15.622
• [0.188 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/21/24 12:37:15.63
  I1221 12:37:15.630163 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:37:15.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:15.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:15.65
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 12:37:15.652
  STEP: Saw pod success @ 12/21/24 12:37:19.682
  I1221 12:37:19.687885 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod downwardapi-volume-8fb81120-e45e-4baa-94cd-93ee78d0d9b3 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 12:37:19.694
  I1221 12:37:19.718253 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-852" for this suite. @ 12/21/24 12:37:19.722
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:302
  STEP: Creating a kubernetes client @ 12/21/24 12:37:19.73
  I1221 12:37:19.730576 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename security-context @ 12/21/24 12:37:19.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:19.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:19.75
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/21/24 12:37:19.752
  STEP: Saw pod success @ 12/21/24 12:37:23.777
  I1221 12:37:23.782231 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod security-context-71c82048-69c1-44b1-a3c9-c5e110662ea9 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 12:37:23.792
  I1221 12:37:23.813019 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3496" for this suite. @ 12/21/24 12:37:23.817
• [4.096 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/21/24 12:37:23.826
  I1221 12:37:23.826212 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename discovery @ 12/21/24 12:37:23.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:23.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:23.844
  STEP: Setting up server cert @ 12/21/24 12:37:23.848
  STEP: Requesting APIResourceList from "/api/v1" @ 12/21/24 12:37:24.162
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/21/24 12:37:24.164
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/21/24 12:37:24.165
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/21/24 12:37:24.166
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/21/24 12:37:24.167
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/21/24 12:37:24.168
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/21/24 12:37:24.169
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/21/24 12:37:24.17
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/21/24 12:37:24.171
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/21/24 12:37:24.172
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/21/24 12:37:24.172
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/21/24 12:37:24.173
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/21/24 12:37:24.174
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/21/24 12:37:24.175
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/21/24 12:37:24.176
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/21/24 12:37:24.177
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/21/24 12:37:24.179
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/21/24 12:37:24.179
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/21/24 12:37:24.181
  I1221 12:37:24.182109 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5463" for this suite. @ 12/21/24 12:37:24.187
• [0.371 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:218
  STEP: Creating a kubernetes client @ 12/21/24 12:37:24.197
  I1221 12:37:24.197113 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:37:24.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:24.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:24.216
  STEP: Setting up server cert @ 12/21/24 12:37:24.241
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:37:24.578
  STEP: Deploying the webhook pod @ 12/21/24 12:37:24.59
  STEP: Wait for the deployment to be ready @ 12/21/24 12:37:24.605
  I1221 12:37:24.616029 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:37:26.631
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:37:26.645
  I1221 12:37:27.646440 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1221 12:37:27.656685 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/21/24 12:37:28.167
  STEP: Creating a custom resource that should be denied by the webhook @ 12/21/24 12:37:28.181
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/21/24 12:37:30.197
  STEP: Updating the custom resource with disallowed data should be denied @ 12/21/24 12:37:30.206
  STEP: Deleting the custom resource should be denied @ 12/21/24 12:37:30.216
  STEP: Remove the offending key and value from the custom resource data @ 12/21/24 12:37:30.224
  STEP: Deleting the updated custom resource should be successful @ 12/21/24 12:37:30.236
  I1221 12:37:30.827651 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4923" for this suite. @ 12/21/24 12:37:30.833
  STEP: Destroying namespace "webhook-markers-9468" for this suite. @ 12/21/24 12:37:30.842
• [6.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1530
  STEP: Creating a kubernetes client @ 12/21/24 12:37:30.85
  I1221 12:37:30.850696 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:37:30.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:30.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:30.871
  STEP: creating Agnhost RC @ 12/21/24 12:37:30.873
  I1221 12:37:30.873856 19 kubectl.go:1537] namespace kubectl-7339
  I1221 12:37:30.873904 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-7339 create -f -'
  I1221 12:37:30.955547 19 builder.go:146] stderr: ""
  I1221 12:37:30.955588 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/21/24 12:37:30.955
  I1221 12:37:31.961745 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 12:37:31.961773 19 framework.go:733] Found 0 / 1
  I1221 12:37:32.960848 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 12:37:32.960886 19 framework.go:733] Found 1 / 1
  I1221 12:37:32.960899 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1221 12:37:32.966184 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 12:37:32.966204 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1221 12:37:32.966210 19 kubectl.go:1544] wait on agnhost-primary startup in kubectl-7339 
  I1221 12:37:32.966255 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-7339 logs agnhost-primary-clnvs agnhost-primary'
  I1221 12:37:33.017727 19 builder.go:146] stderr: ""
  I1221 12:37:33.017777 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 12/21/24 12:37:33.017
  I1221 12:37:33.017852 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-7339 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1221 12:37:33.075708 19 builder.go:146] stderr: ""
  I1221 12:37:33.075744 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I1221 12:37:33.081183 19 utils.go:1203] Service rm2 in namespace kubectl-7339 found.
  STEP: exposing service @ 12/21/24 12:37:35.09
  I1221 12:37:35.090768 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-7339 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1221 12:37:35.170787 19 builder.go:146] stderr: ""
  I1221 12:37:35.171045 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I1221 12:37:35.178363 19 utils.go:1203] Service rm3 in namespace kubectl-7339 found.
  I1221 12:37:37.189120 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7339" for this suite. @ 12/21/24 12:37:37.193
• [6.351 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 12/21/24 12:37:37.201
  I1221 12:37:37.201694 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-pred @ 12/21/24 12:37:37.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:37.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:37.224
  I1221 12:37:37.227426 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1221 12:37:37.235744 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1221 12:37:37.240597 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-134 before test
  I1221 12:37:37.246051 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-f4st4 from ingress-nginx-kubernetes-worker started at 2024-12-21 12:02:55 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.246073 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 12:37:37.246080 19 predicates.go:957] calico-node-lftqs from kube-system started at 2024-12-21 12:08:33 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.246085 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 12:37:37.246090 19 predicates.go:957] sonobuoy-e2e-job-b5a495975eb84fdf from sonobuoy started at 2024-12-21 12:10:57 +0000 UTC (2 container statuses recorded)
  I1221 12:37:37.246094 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1221 12:37:37.246098 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:37:37.246104 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-rx848 from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 12:37:37.246108 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:37:37.246112 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 12:37:37.246118 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-100 before test
  I1221 12:37:37.252083 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-4rn6b from ingress-nginx-kubernetes-worker started at 2024-12-21 12:04:45 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.252102 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 12:37:37.252108 19 predicates.go:957] calico-node-npt9c from kube-system started at 2024-12-21 12:06:56 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.252114 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 12:37:37.252119 19 predicates.go:957] agnhost-primary-clnvs from kubectl-7339 started at 2024-12-21 12:37:30 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.252123 19 predicates.go:959] 	Container agnhost-primary ready: true, restart count 0
  I1221 12:37:37.252127 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-21 12:10:55 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.252131 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1221 12:37:37.252136 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-4tc8w from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 12:37:37.252142 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:37:37.252147 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 12:37:37.252152 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-184 before test
  I1221 12:37:37.258384 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5c9cx from ingress-nginx-kubernetes-worker started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.258401 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 12:37:37.258408 19 predicates.go:957] calico-node-qsfv4 from kube-system started at 2024-12-21 12:08:22 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.258414 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 12:37:37.258420 19 predicates.go:957] coredns-5b4857d7c8-vssh5 from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.258425 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1221 12:37:37.258430 19 predicates.go:957] kube-state-metrics-5d7bdccd49-tfhds from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.258435 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 4
  I1221 12:37:37.258439 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wp8st from kube-system started at 2024-12-21 12:00:58 +0000 UTC (2 container statuses recorded)
  I1221 12:37:37.258444 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1221 12:37:37.258449 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1221 12:37:37.258459 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-588bl from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.258463 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1221 12:37:37.258489 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-p8lb6 from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 12:37:37.258493 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 4
  I1221 12:37:37.258498 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-fqqth from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 12:37:37.258501 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 12:37:37.258505 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/21/24 12:37:37.258
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.181331745b05ed88], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling.] @ 12/21/24 12:37:37.287
  I1221 12:37:38.286001 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9292" for this suite. @ 12/21/24 12:37:38.29
• [1.097 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/21/24 12:37:38.298
  I1221 12:37:38.298692 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:37:38.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:38.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:38.315
  STEP: Creating projection with secret that has name projected-secret-test-map-ddbe2bf7-4c9a-4d14-9b01-070db034ea25 @ 12/21/24 12:37:38.317
  STEP: Creating a pod to test consume secrets @ 12/21/24 12:37:38.323
  STEP: Saw pod success @ 12/21/24 12:37:42.351
  I1221 12:37:42.358795 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-secrets-6983e71e-911a-42af-a7d7-70a8a9c0a338 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:37:42.374
  I1221 12:37:42.398623 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7132" for this suite. @ 12/21/24 12:37:42.404
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:750
  STEP: Creating a kubernetes client @ 12/21/24 12:37:42.413
  I1221 12:37:42.413148 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 12:37:42.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:42.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:42.435
  I1221 12:37:42.443536 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5064" for this suite. @ 12/21/24 12:37:42.447
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/21/24 12:37:42.457
  I1221 12:37:42.457776 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename namespaces @ 12/21/24 12:37:42.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:42.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:42.474
  STEP: Read namespace status @ 12/21/24 12:37:42.477
  I1221 12:37:42.482857 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/21/24 12:37:42.482
  I1221 12:37:42.489960 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/21/24 12:37:42.489
  I1221 12:37:42.499456 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1221 12:37:42.499559 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6449" for this suite. @ 12/21/24 12:37:42.503
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/21/24 12:37:42.511
  I1221 12:37:42.511903 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:37:42.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:42.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:42.529
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 12:37:42.531
  STEP: Saw pod success @ 12/21/24 12:37:46.557
  I1221 12:37:46.563470 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod downwardapi-volume-9fb90a16-835f-49bf-b5dc-f48f146cfd7c container client-container: <nil>
  STEP: delete the pod @ 12/21/24 12:37:46.571
  I1221 12:37:46.591647 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9333" for this suite. @ 12/21/24 12:37:46.595
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:409
  STEP: Creating a kubernetes client @ 12/21/24 12:37:46.604
  I1221 12:37:46.604978 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 12:37:46.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:46.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:46.625
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/21/24 12:37:46.627
  I1221 12:37:46.637500 19 dns.go:421] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9293  a6bf030a-4c17-4ee6-a4e6-08d067bc89e0 12178 0 2024-12-21 12:37:46 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-12-21 12:37:46 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-fm8gq,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,Image:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.52,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-fm8gq,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,SupplementalGroupsPolicy:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/21/24 12:37:48.651
  I1221 12:37:48.651377 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9293 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:37:48.651395 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:37:48.651798 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:37:48.651835 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9293/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/21/24 12:37:48.699
  I1221 12:37:48.699602 19 exec_util.go:59] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9293 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:37:48.699618 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:37:48.700061 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:37:48.700103 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-9293/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1221 12:37:48.739957 19 dns.go:423] Deleting pod test-dns-nameservers...
  I1221 12:37:48.757840 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9293" for this suite. @ 12/21/24 12:37:48.762
• [2.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1391
  STEP: Creating a kubernetes client @ 12/21/24 12:37:48.77
  I1221 12:37:48.770974 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:37:48.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:48.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:48.791
  I1221 12:37:48.794239 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2106 create -f -'
  I1221 12:37:48.875768 19 builder.go:146] stderr: ""
  I1221 12:37:48.875811 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1221 12:37:48.875859 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2106 create -f -'
  I1221 12:37:48.958111 19 builder.go:146] stderr: ""
  I1221 12:37:48.958180 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/21/24 12:37:48.958
  I1221 12:37:49.963564 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 12:37:49.963597 19 framework.go:733] Found 0 / 1
  I1221 12:37:50.965525 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 12:37:50.965557 19 framework.go:733] Found 1 / 1
  I1221 12:37:50.965570 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1221 12:37:50.969489 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 12:37:50.969509 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1221 12:37:50.969553 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2106 describe pod agnhost-primary-xgrjt'
  I1221 12:37:51.020574 19 builder.go:146] stderr: ""
  I1221 12:37:51.020630 19 builder.go:147] stdout: "Name:             agnhost-primary-xgrjt\nNamespace:        kubectl-2106\nPriority:         0\nService Account:  default\nNode:             ip-172-31-68-100/172.31.68.100\nStart Time:       Sat, 21 Dec 2024 12:37:48 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.200.58\nIPs:\n  IP:           192.168.200.58\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://3743dbf6ac7956e520c3488e2942696c74e11ba3d09363bf8c622abecf35ba5d\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.52\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 21 Dec 2024 12:37:49 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-dhdp5 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-dhdp5:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-2106/agnhost-primary-xgrjt to ip-172-31-68-100\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.52\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I1221 12:37:51.020690 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2106 describe rc agnhost-primary'
  I1221 12:37:51.077782 19 builder.go:146] stderr: ""
  I1221 12:37:51.077831 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-2106\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.52\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-xgrjt\n"
  I1221 12:37:51.077897 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2106 describe service agnhost-primary'
  I1221 12:37:51.131919 19 builder.go:146] stderr: ""
  I1221 12:37:51.131960 19 builder.go:147] stdout: "Name:                     agnhost-primary\nNamespace:                kubectl-2106\nLabels:                   app=agnhost\n                          role=primary\nAnnotations:              <none>\nSelector:                 app=agnhost,role=primary\nType:                     ClusterIP\nIP Family Policy:         SingleStack\nIP Families:              IPv4\nIP:                       10.152.183.145\nIPs:                      10.152.183.145\nPort:                     <unset>  6379/TCP\nTargetPort:               agnhost-server/TCP\nEndpoints:                192.168.200.58:6379\nSession Affinity:         None\nInternal Traffic Policy:  Cluster\nEvents:                   <none>\n"
  I1221 12:37:51.136628 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2106 describe node ip-172-31-1-34'
  I1221 12:37:51.236619 19 builder.go:146] stderr: ""
  I1221 12:37:51.236742 19 builder.go:147] stdout: "Name:               ip-172-31-1-34\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-control-plane\n                    juju-charm=kubernetes-control-plane\n                    juju.io/cloud=ec2\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-1-34\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 21 Dec 2024 11:52:16 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-1-34\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 21 Dec 2024 12:37:46 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 21 Dec 2024 12:07:08 +0000   Sat, 21 Dec 2024 12:07:08 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Sat, 21 Dec 2024 12:36:45 +0000   Sat, 21 Dec 2024 11:52:16 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 21 Dec 2024 12:36:45 +0000   Sat, 21 Dec 2024 11:52:16 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 21 Dec 2024 12:36:45 +0000   Sat, 21 Dec 2024 11:52:16 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 21 Dec 2024 12:36:45 +0000   Sat, 21 Dec 2024 12:01:28 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.1.34\n  Hostname:    ip-172-31-1-34\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7967624Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7865224Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec28209606b07d78115ea5ee5f6658c2\n  System UUID:                ec282096-06b0-7d78-115e-a5ee5f6658c2\n  Boot ID:                    cbd80fbb-d658-49fe-b381-99dd6e883d84\n  Kernel Version:             6.8.0-1021-aws\n  OS Image:                   Ubuntu 22.04.5 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.8\n  Kubelet Version:            v1.31.4\n  Kube-Proxy Version:         v1.31.4\nNon-terminated Pods:          (2 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-szc24                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         30m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-lfjv2    0 (0%)        0 (0%)      0 (0%)           0 (0%)         26m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:\n  Type     Reason                   Age   From             Message\n  ----     ------                   ----  ----             -------\n  Normal   Starting                 43m   kube-proxy       \n  Normal   Starting                 35m   kube-proxy       \n  Normal   Starting                 36m   kube-proxy       \n  Normal   Starting                 40m   kube-proxy       \n  Normal   Starting                 43m   kube-proxy       \n  Normal   Starting                 39m   kube-proxy       \n  Normal   Starting                 37m   kube-proxy       \n  Normal   Starting                 38m   kube-proxy       \n  Normal   Starting                 41m   kube-proxy       \n  Normal   Starting                 44m   kube-proxy       \n  Normal   Starting                 42m   kube-proxy       \n  Normal   Starting                 40m   kube-proxy       \n  Normal   Starting                 37m   kube-proxy       \n  Warning  InvalidDiskCapacity      44m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     44m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    44m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  44m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  44m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 44m   kubelet          Starting kubelet.\n  Normal   NodeHasNoDiskPressure    43m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     43m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   NodeHasSufficientMemory  43m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  43m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      43m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 43m   kubelet          Starting kubelet.\n  Normal   NodeHasSufficientMemory  43m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    43m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     43m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  43m   kubelet          Updated Node Allocatable limit across pods\n  Warning  InvalidDiskCapacity      43m   kubelet          invalid capacity 0 on image filesystem\n  Normal   Starting                 43m   kubelet          Starting kubelet.\n  Normal   Starting                 42m   kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     42m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      42m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  42m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  42m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    42m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     41m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   Starting                 41m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      41m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasNoDiskPressure    41m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  41m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeAllocatableEnforced  41m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 40m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      40m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  40m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  40m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    40m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     40m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      40m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  40m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasNoDiskPressure    40m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  40m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   Starting                 40m   kubelet          Starting kubelet.\n  Normal   NodeHasSufficientPID     40m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   Starting                 39m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      39m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  39m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  39m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    39m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     39m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   Starting                 38m   kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  38m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientPID     38m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    38m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  38m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   Starting                 37m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      37m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  37m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  37m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    37m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     37m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           37m   node-controller  Node ip-172-31-1-34 event: Registered Node ip-172-31-1-34 in Controller\n  Normal   Starting                 37m   kubelet          Starting kubelet.\n  Normal   NodeAllocatableEnforced  37m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  37m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    37m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     37m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Warning  InvalidDiskCapacity      37m   kubelet          invalid capacity 0 on image filesystem\n  Normal   RegisteredNode           36m   node-controller  Node ip-172-31-1-34 event: Registered Node ip-172-31-1-34 in Controller\n  Normal   Starting                 36m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      36m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientPID     36m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   NodeHasNoDiskPressure    36m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientMemory  36m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeReady                36m   kubelet          Node ip-172-31-1-34 status is now: NodeReady\n  Normal   NodeAllocatableEnforced  36m   kubelet          Updated Node Allocatable limit across pods\n  Normal   Starting                 35m   kubelet          Starting kubelet.\n  Warning  InvalidDiskCapacity      35m   kubelet          invalid capacity 0 on image filesystem\n  Normal   NodeAllocatableEnforced  35m   kubelet          Updated Node Allocatable limit across pods\n  Normal   NodeHasSufficientMemory  35m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    35m   kubelet          Node ip-172-31-1-34 status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     35m   kubelet          Node ip-172-31-1-34 status is now: NodeHasSufficientPID\n  Normal   RegisteredNode           35m   node-controller  Node ip-172-31-1-34 event: Registered Node ip-172-31-1-34 in Controller\n"
  I1221 12:37:51.236847 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2106 describe namespace kubectl-2106'
  I1221 12:37:51.293447 19 builder.go:146] stderr: ""
  I1221 12:37:51.293491 19 builder.go:147] stdout: "Name:         kubectl-2106\nLabels:       e2e-framework=kubectl\n              e2e-run=3048d654-34d8-4490-a4e8-1e2e1dc54a72\n              kubernetes.io/metadata.name=kubectl-2106\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1221 12:37:51.293643 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2106" for this suite. @ 12/21/24 12:37:51.297
• [2.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/21/24 12:37:51.306
  I1221 12:37:51.306782 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 12:37:51.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:51.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:51.328
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/21/24 12:37:51.33
  STEP: Saw pod success @ 12/21/24 12:37:55.356
  I1221 12:37:55.361368 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-ae4e9fec-a36c-405c-9aa7-b4df8169b232 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 12:37:55.369
  I1221 12:37:55.391164 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6062" for this suite. @ 12/21/24 12:37:55.396
• [4.099 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:167
  STEP: Creating a kubernetes client @ 12/21/24 12:37:55.405
  I1221 12:37:55.405702 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl-logs @ 12/21/24 12:37:55.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:37:55.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:37:55.424
  STEP: creating a pod @ 12/21/24 12:37:55.426
  I1221 12:37:55.426797 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.52 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1221 12:37:55.477235 19 builder.go:146] stderr: ""
  I1221 12:37:55.477313 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/21/24 12:37:55.477
  I1221 12:37:55.477407 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1221 12:37:57.487996 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/21/24 12:37:57.488
  I1221 12:37:57.488095 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 logs logs-generator logs-generator'
  I1221 12:37:57.540802 19 builder.go:146] stderr: ""
  I1221 12:37:57.540843 19 builder.go:147] stdout: "I1221 12:37:56.023115       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/7wf 212\nI1221 12:37:56.223194       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/p4m 392\nI1221 12:37:56.423771       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/v42d 344\nI1221 12:37:56.624178       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/gph 517\nI1221 12:37:56.823664       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/cjmm 573\nI1221 12:37:57.024147       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/t7tt 402\nI1221 12:37:57.223476       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/kqbm 511\nI1221 12:37:57.423774       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/7pd5 237\n"
  STEP: limiting log lines @ 12/21/24 12:37:57.54
  I1221 12:37:57.540916 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 logs logs-generator logs-generator --tail=1'
  I1221 12:37:57.588505 19 builder.go:146] stderr: ""
  I1221 12:37:57.588545 19 builder.go:147] stdout: "I1221 12:37:57.423774       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/7pd5 237\n"
  I1221 12:37:57.588554 19 logs.go:180] got output "I1221 12:37:57.423774       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/7pd5 237\n"
  STEP: limiting log bytes @ 12/21/24 12:37:57.588
  I1221 12:37:57.588637 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 logs logs-generator logs-generator --limit-bytes=1'
  I1221 12:37:57.637556 19 builder.go:146] stderr: ""
  I1221 12:37:57.637587 19 builder.go:147] stdout: "I"
  I1221 12:37:57.637594 19 logs.go:186] got output "I"
  STEP: exposing timestamps @ 12/21/24 12:37:57.637
  I1221 12:37:57.637664 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 logs logs-generator logs-generator --tail=1 --timestamps'
  I1221 12:37:57.688301 19 builder.go:146] stderr: ""
  I1221 12:37:57.688355 19 builder.go:147] stdout: "2024-12-21T12:37:57.623238948Z I1221 12:37:57.623146       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/xlkq 545\n"
  I1221 12:37:57.688369 19 logs.go:192] got output "2024-12-21T12:37:57.623238948Z I1221 12:37:57.623146       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/xlkq 545\n"
  STEP: restricting to a time range @ 12/21/24 12:37:57.688
  I1221 12:38:00.188946 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 logs logs-generator logs-generator --since=1s'
  I1221 12:38:00.239250 19 builder.go:146] stderr: ""
  I1221 12:38:00.239290 19 builder.go:147] stdout: "I1221 12:37:59.423161       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/7hq 412\nI1221 12:37:59.623473       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/hv8j 346\nI1221 12:37:59.823799       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/rpx 279\nI1221 12:38:00.024116       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/jhv 295\nI1221 12:38:00.223225       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/lmq 293\n"
  I1221 12:38:00.239356 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 logs logs-generator logs-generator --since=24h'
  I1221 12:38:00.288547 19 builder.go:146] stderr: ""
  I1221 12:38:00.288604 19 builder.go:147] stdout: "I1221 12:37:56.023115       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/ns/pods/7wf 212\nI1221 12:37:56.223194       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/default/pods/p4m 392\nI1221 12:37:56.423771       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/v42d 344\nI1221 12:37:56.624178       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/gph 517\nI1221 12:37:56.823664       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/cjmm 573\nI1221 12:37:57.024147       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/t7tt 402\nI1221 12:37:57.223476       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/kqbm 511\nI1221 12:37:57.423774       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/7pd5 237\nI1221 12:37:57.623146       1 logs_generator.go:76] 8 GET /api/v1/namespaces/kube-system/pods/xlkq 545\nI1221 12:37:57.823467       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/kube-system/pods/sjr 374\nI1221 12:37:58.023843       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/default/pods/2hk 594\nI1221 12:37:58.224149       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/szdr 357\nI1221 12:37:58.423470       1 logs_generator.go:76] 12 GET /api/v1/namespaces/default/pods/f5j6 471\nI1221 12:37:58.623799       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/ft7c 359\nI1221 12:37:58.824139       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/2g7g 497\nI1221 12:37:59.023466       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/sl9v 437\nI1221 12:37:59.223887       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/tlm 305\nI1221 12:37:59.423161       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/7hq 412\nI1221 12:37:59.623473       1 logs_generator.go:76] 18 POST /api/v1/namespaces/default/pods/hv8j 346\nI1221 12:37:59.823799       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/rpx 279\nI1221 12:38:00.024116       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/jhv 295\nI1221 12:38:00.223225       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/lmq 293\n"
  I1221 12:38:00.288768 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-logs-5016 delete pod logs-generator'
  I1221 12:38:01.441493 19 builder.go:146] stderr: ""
  I1221 12:38:01.441529 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1221 12:38:01.441647 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-5016" for this suite. @ 12/21/24 12:38:01.447
• [6.050 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:331
  STEP: Creating a kubernetes client @ 12/21/24 12:38:01.456
  I1221 12:38:01.456153 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 12:38:01.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:01.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:01.475
  STEP: Counting existing ResourceQuota @ 12/21/24 12:38:18.484
  STEP: Creating a ResourceQuota @ 12/21/24 12:38:23.491
  STEP: Ensuring resource quota status is calculated @ 12/21/24 12:38:23.497
  STEP: Creating a ConfigMap @ 12/21/24 12:38:25.503
  STEP: Ensuring resource quota status captures configMap creation @ 12/21/24 12:38:25.517
  STEP: Deleting a ConfigMap @ 12/21/24 12:38:27.522
  STEP: Ensuring resource quota status released usage @ 12/21/24 12:38:27.53
  I1221 12:38:29.537055 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4079" for this suite. @ 12/21/24 12:38:29.541
• [28.095 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 12/21/24 12:38:29.551
  I1221 12:38:29.551717 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/21/24 12:38:29.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:29.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:29.571
  STEP: create the container to handle the HTTPGet hook request. @ 12/21/24 12:38:29.577
  STEP: create the pod with lifecycle hook @ 12/21/24 12:38:31.605
  STEP: delete the pod with lifecycle hook @ 12/21/24 12:38:33.628
  STEP: check prestop hook @ 12/21/24 12:38:35.649
  I1221 12:38:35.658097 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-854" for this suite. @ 12/21/24 12:38:35.662
• [6.120 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:351
  STEP: Creating a kubernetes client @ 12/21/24 12:38:35.671
  I1221 12:38:35.671925 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename disruption @ 12/21/24 12:38:35.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:35.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:35.696
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/21/24 12:38:35.698
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:38:35.704
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/21/24 12:38:37.716
  STEP: Waiting for all pods to be running @ 12/21/24 12:38:37.716
  I1221 12:38:37.720014 19 disruption.go:680] pods: 0 < 3
  STEP: locating a running pod @ 12/21/24 12:38:39.723
  STEP: Updating the pdb to allow a pod to be evicted @ 12/21/24 12:38:39.735
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:38:39.747
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/21/24 12:38:39.752
  STEP: Waiting for all pods to be running @ 12/21/24 12:38:39.752
  STEP: Waiting for the pdb to observed all healthy pods @ 12/21/24 12:38:39.757
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/21/24 12:38:39.792
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:38:39.818
  STEP: Waiting for all pods to be running @ 12/21/24 12:38:41.824
  STEP: locating a running pod @ 12/21/24 12:38:41.829
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/21/24 12:38:41.84
  STEP: Waiting for the pdb to be deleted @ 12/21/24 12:38:41.848
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/21/24 12:38:41.852
  STEP: Waiting for all pods to be running @ 12/21/24 12:38:41.852
  I1221 12:38:41.878227 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8815" for this suite. @ 12/21/24 12:38:41.888
• [6.227 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/21/24 12:38:41.898
  I1221 12:38:41.898849 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sysctl @ 12/21/24 12:38:41.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:41.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:41.917
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/21/24 12:38:41.919
  STEP: Watching for error events or started pod @ 12/21/24 12:38:41.931
  STEP: Waiting for pod completion @ 12/21/24 12:38:43.939
  STEP: Checking that the pod succeeded @ 12/21/24 12:38:45.954
  STEP: Getting logs from the pod @ 12/21/24 12:38:45.954
  STEP: Checking that the sysctl is actually updated @ 12/21/24 12:38:45.962
  I1221 12:38:45.963028 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8454" for this suite. @ 12/21/24 12:38:45.967
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/21/24 12:38:45.974
  I1221 12:38:45.974868 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 12:38:45.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:45.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:45.993
  STEP: creating a Deployment @ 12/21/24 12:38:46
  I1221 12:38:46.000599 19 deployment.go:507] Creating simple deployment test-deployment-m5tms
  I1221 12:38:46.016883 19 deployment.go:222] deployment "test-deployment-m5tms" doesn't have the required revision set
  STEP: Getting /status @ 12/21/24 12:38:48.033
  I1221 12:38:48.039019 19 deployment.go:532] Deployment test-deployment-m5tms has Conditions: [{Available True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m5tms-f4dbbbf74" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/21/24 12:38:48.039
  I1221 12:38:48.051636 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 38, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 38, 47, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 12, 38, 47, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 12, 38, 46, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-m5tms-f4dbbbf74\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/21/24 12:38:48.051
  I1221 12:38:48.053183 19 deployment.go:579] Observed &Deployment event: ADDED
  I1221 12:38:48.053214 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m5tms-f4dbbbf74"}
  I1221 12:38:48.053269 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1221 12:38:48.053372 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m5tms-f4dbbbf74"}
  I1221 12:38:48.053381 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1221 12:38:48.053437 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1221 12:38:48.053446 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1221 12:38:48.053454 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-m5tms-f4dbbbf74" is progressing.}
  I1221 12:38:48.053518 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1221 12:38:48.053527 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1221 12:38:48.053535 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m5tms-f4dbbbf74" has successfully progressed.}
  I1221 12:38:48.053584 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I1221 12:38:48.053618 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1221 12:38:48.053626 19 deployment.go:575] Observed Deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m5tms-f4dbbbf74" has successfully progressed.}
  I1221 12:38:48.053635 19 deployment.go:572] Found Deployment test-deployment-m5tms in namespace deployment-5142 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1221 12:38:48.053643 19 deployment.go:583] Deployment test-deployment-m5tms has an updated status
  STEP: patching the Statefulset Status @ 12/21/24 12:38:48.053
  I1221 12:38:48.053666 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1221 12:38:48.061438 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/21/24 12:38:48.061
  I1221 12:38:48.062757 19 deployment.go:616] Observed &Deployment event: ADDED
  I1221 12:38:48.062779 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m5tms-f4dbbbf74"}
  I1221 12:38:48.062848 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1221 12:38:48.062870 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-m5tms-f4dbbbf74"}
  I1221 12:38:48.062878 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1221 12:38:48.063016 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1221 12:38:48.063030 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1221 12:38:48.063058 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:46 +0000 UTC 2024-12-21 12:38:46 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-m5tms-f4dbbbf74" is progressing.}
  I1221 12:38:48.063145 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1221 12:38:48.063162 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1221 12:38:48.063174 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m5tms-f4dbbbf74" has successfully progressed.}
  I1221 12:38:48.063245 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1221 12:38:48.063385 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:47 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1221 12:38:48.063398 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-21 12:38:47 +0000 UTC 2024-12-21 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-m5tms-f4dbbbf74" has successfully progressed.}
  I1221 12:38:48.063408 19 deployment.go:612] Observed deployment test-deployment-m5tms in namespace deployment-5142 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1221 12:38:48.063487 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I1221 12:38:48.063503 19 deployment.go:609] Found deployment test-deployment-m5tms in namespace deployment-5142 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1221 12:38:48.063513 19 deployment.go:620] Deployment test-deployment-m5tms has a patched status
  I1221 12:38:48.068853 19 deployment.go:633] Deployment "test-deployment-m5tms":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-m5tms",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5142",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1032467-50ea-4034-a638-53cf8bc89783",
      ResourceVersion: (string) (len=5) "12770",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870381526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-m5tms-f4dbbbf74\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1221 12:38:48.074664 19 deployment.go:39] New ReplicaSet "test-deployment-m5tms-f4dbbbf74" of Deployment "test-deployment-m5tms":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-m5tms-f4dbbbf74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5142",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55e4733d-1504-42c0-bf8c-27629da77c9b",
      ResourceVersion: (string) (len=5) "12756",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870381526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-m5tms",
          UID: (types.UID) (len=36) "d1032467-50ea-4034-a638-53cf8bc89783",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 64 31 30  |k:{\"uid\":\"d10|
              00000120  33 32 34 36 37 2d 35 30  65 61 2d 34 30 33 34 2d  |32467-50ea-4034-|
              00000130  61 36 33 38 2d 35 33 63  66 38 62 63 38 39 37 38  |a638-53cf8bc8978|
              00000140  33 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |3\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 12:38:48.080422 19 deployment.go:67] Pod "test-deployment-m5tms-f4dbbbf74-cvgxm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-m5tms-f4dbbbf74-cvgxm",
      GenerateName: (string) (len=32) "test-deployment-m5tms-f4dbbbf74-",
      Namespace: (string) (len=15) "deployment-5142",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a98309e-434f-4ca9-8e3f-65792523dde8",
      ResourceVersion: (string) (len=5) "12755",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870381526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "f4dbbbf74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-m5tms-f4dbbbf74",
          UID: (types.UID) (len=36) "55e4733d-1504-42c0-bf8c-27629da77c9b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 35 35 65 34 37 33 33  64 2d 31 35 30 34 2d 34  |"55e4733d-1504-4|
              000000a0  32 63 30 2d 62 66 38 63  2d 32 37 36 32 39 64 61  |2c0-bf8c-27629da|
              000000b0  37 37 63 39 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |77c9b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  30 2e 36 33 5c 22 7d 22  |2.168.200.63\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p429l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p429l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381527,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870381526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=14) "192.168.200.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.200.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870381526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870381526,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://94e1baebefca3e5bea5a4129ad2042b6004f9ec61321fa7ea11c567b742f4b84",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-p429l",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 12:38:48.081419 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5142" for this suite. @ 12/21/24 12:38:48.086
• [2.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/21/24 12:38:48.094
  I1221 12:38:48.094192 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename events @ 12/21/24 12:38:48.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:48.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:48.112
  STEP: Create set of events @ 12/21/24 12:38:48.114
  STEP: get a list of Events with a label in the current namespace @ 12/21/24 12:38:48.13
  STEP: delete a list of events @ 12/21/24 12:38:48.134
  I1221 12:38:48.134139 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/21/24 12:38:48.166
  I1221 12:38:48.171934 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2175" for this suite. @ 12/21/24 12:38:48.176
• [0.091 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/21/24 12:38:48.185
  I1221 12:38:48.185177 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 12:38:48.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:48.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:48.205
  STEP: Creating configMap with name configmap-test-volume-d2ed37f4-cc00-43cc-b030-5faffda321ee @ 12/21/24 12:38:48.208
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:38:48.213
  STEP: Saw pod success @ 12/21/24 12:38:52.24
  I1221 12:38:52.244679 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-configmaps-2d75dabe-f88f-4cf5-8283-3692a48fb1fe container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:38:52.252
  I1221 12:38:52.274294 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2841" for this suite. @ 12/21/24 12:38:52.281
• [4.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 12/21/24 12:38:52.292
  I1221 12:38:52.292803 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 12:38:52.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:38:52.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:38:52.322
  STEP: creating the pod @ 12/21/24 12:38:52.325
  STEP: waiting for pod running @ 12/21/24 12:38:52.353
  STEP: creating a file in subpath @ 12/21/24 12:38:54.365
  I1221 12:38:54.369689 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5753 PodName:var-expansion-e688f377-cf06-4115-b9f5-065a2cf62fec ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:38:54.369721 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:38:54.370464 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:38:54.370523 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-5753/pods/var-expansion-e688f377-cf06-4115-b9f5-065a2cf62fec/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/21/24 12:38:54.406
  I1221 12:38:54.410654 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5753 PodName:var-expansion-e688f377-cf06-4115-b9f5-065a2cf62fec ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:38:54.410677 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:38:54.411072 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:38:54.411116 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-5753/pods/var-expansion-e688f377-cf06-4115-b9f5-065a2cf62fec/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/21/24 12:38:54.444
  I1221 12:38:54.961715 19 pod_client.go:173] Successfully updated pod "var-expansion-e688f377-cf06-4115-b9f5-065a2cf62fec"
  STEP: waiting for annotated pod running @ 12/21/24 12:38:54.961
  STEP: deleting the pod gracefully @ 12/21/24 12:38:54.965
  I1221 12:38:54.965927 19 delete.go:62] Deleting pod "var-expansion-e688f377-cf06-4115-b9f5-065a2cf62fec" in namespace "var-expansion-5753"
  I1221 12:38:54.976168 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-e688f377-cf06-4115-b9f5-065a2cf62fec" to be fully deleted
  I1221 12:39:27.082220 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5753" for this suite. @ 12/21/24 12:39:27.088
• [34.805 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/21/24 12:39:27.097
  I1221 12:39:27.097770 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pod-network-test @ 12/21/24 12:39:27.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:39:27.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:39:27.119
  STEP: Performing setup for networking test in namespace pod-network-test-669 @ 12/21/24 12:39:27.121
  STEP: creating a selector @ 12/21/24 12:39:27.121
  STEP: Creating the service pods in kubernetes @ 12/21/24 12:39:27.121
  I1221 12:39:27.121423 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/21/24 12:39:39.226
  I1221 12:39:41.250591 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1221 12:39:41.250623 19 networking.go:42] Breadth first check of 192.168.235.159 on host 172.31.18.134...
  I1221 12:39:41.254368 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.200.4:9080/dial?request=hostname&protocol=http&host=192.168.235.159&port=8083&tries=1'] Namespace:pod-network-test-669 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:39:41.254387 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:39:41.254791 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:39:41.254827 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-669/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.200.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.235.159%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1221 12:39:41.293755 19 utils.go:356] Waiting for responses: map[]
  I1221 12:39:41.293783 19 utils.go:360] reached 192.168.235.159 after 0/1 tries
  I1221 12:39:41.293800 19 networking.go:42] Breadth first check of 192.168.200.3 on host 172.31.68.100...
  I1221 12:39:41.299112 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.200.4:9080/dial?request=hostname&protocol=http&host=192.168.200.3&port=8083&tries=1'] Namespace:pod-network-test-669 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:39:41.299132 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:39:41.299536 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:39:41.299574 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-669/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.200.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.200.3%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1221 12:39:41.339617 19 utils.go:356] Waiting for responses: map[]
  I1221 12:39:41.339643 19 utils.go:360] reached 192.168.200.3 after 0/1 tries
  I1221 12:39:41.339653 19 networking.go:42] Breadth first check of 192.168.78.13 on host 172.31.9.184...
  I1221 12:39:41.343684 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.200.4:9080/dial?request=hostname&protocol=http&host=192.168.78.13&port=8083&tries=1'] Namespace:pod-network-test-669 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 12:39:41.343700 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:39:41.344074 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 12:39:41.344113 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-669/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.200.4%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.78.13%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1221 12:39:41.386589 19 utils.go:356] Waiting for responses: map[]
  I1221 12:39:41.386623 19 utils.go:360] reached 192.168.78.13 after 0/1 tries
  I1221 12:39:41.386631 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1221 12:39:41.386722 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-669" for this suite. @ 12/21/24 12:39:41.391
• [14.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/21/24 12:39:41.402
  I1221 12:39:41.402077 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename limitrange @ 12/21/24 12:39:41.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:39:41.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:39:41.424
  STEP: Creating LimitRange "e2e-limitrange-fk5s2" in namespace "limitrange-8800" @ 12/21/24 12:39:41.426
  STEP: Creating another limitRange in another namespace @ 12/21/24 12:39:41.431
  I1221 12:39:41.449914 19 limit_range.go:299] Namespace "e2e-limitrange-fk5s2-4298" created
  I1221 12:39:41.449958 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-fk5s2" in namespace "e2e-limitrange-fk5s2-4298"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-fk5s2" @ 12/21/24 12:39:41.458
  I1221 12:39:41.463237 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-fk5s2" in "limitrange-8800" namespace @ 12/21/24 12:39:41.463
  I1221 12:39:41.469574 19 limit_range.go:335] LimitRange "e2e-limitrange-fk5s2" has been patched
  STEP: Delete LimitRange "e2e-limitrange-fk5s2" by Collection with labelSelector: "e2e-limitrange-fk5s2=patched" @ 12/21/24 12:39:41.469
  STEP: Confirm that the limitRange "e2e-limitrange-fk5s2" has been deleted @ 12/21/24 12:39:41.48
  I1221 12:39:41.480898 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1221 12:39:41.485221 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-fk5s2=patched"
  I1221 12:39:41.485240 19 limit_range.go:344] LimitRange "e2e-limitrange-fk5s2" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-fk5s2" @ 12/21/24 12:39:41.485
  I1221 12:39:41.489413 19 limit_range.go:350] Found 1 limitRange
  I1221 12:39:41.489564 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8800" for this suite. @ 12/21/24 12:39:41.494
  STEP: Destroying namespace "e2e-limitrange-fk5s2-4298" for this suite. @ 12/21/24 12:39:41.501
• [0.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 12/21/24 12:39:41.51
  I1221 12:39:41.510682 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 12:39:41.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:39:41.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:39:41.53
  STEP: creating a secret @ 12/21/24 12:39:41.532
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/21/24 12:39:41.539
  STEP: patching the secret @ 12/21/24 12:39:41.543
  STEP: deleting the secret using a LabelSelector @ 12/21/24 12:39:41.553
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/21/24 12:39:41.563
  I1221 12:39:41.567855 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-597" for this suite. @ 12/21/24 12:39:41.572
• [0.071 seconds]
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/21/24 12:39:41.581
  I1221 12:39:41.581680 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename endpointslice @ 12/21/24 12:39:41.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:39:41.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:39:41.609
  I1221 12:39:41.626408 19 endpointslice.go:1045] Endpoints addresses: [172.31.1.34 172.31.19.94] , ports: [6443]
  I1221 12:39:41.626427 19 endpointslice.go:1075] EndpointSlices addresses: [172.31.1.34 172.31.19.94] , ports: [6443]
  I1221 12:39:41.626490 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1729" for this suite. @ 12/21/24 12:39:41.63
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:863
  STEP: Creating a kubernetes client @ 12/21/24 12:39:41.64
  I1221 12:39:41.640859 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:39:41.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:39:41.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:39:41.662
  STEP: Setting up server cert @ 12/21/24 12:39:41.691
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:39:41.922
  STEP: Deploying the webhook pod @ 12/21/24 12:39:41.932
  STEP: Wait for the deployment to be ready @ 12/21/24 12:39:41.948
  I1221 12:39:41.957965 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:39:43.973
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:39:43.989
  I1221 12:39:44.989474 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/21/24 12:39:44.997
  STEP: create the configmap with a random name @ 12/21/24 12:39:45.017
  STEP: verify the configmap is mutated @ 12/21/24 12:39:45.028
  STEP: create the configmap with 'skip-me' name @ 12/21/24 12:39:45.028
  I1221 12:39:45.103896 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7089" for this suite. @ 12/21/24 12:39:45.109
  STEP: Destroying namespace "webhook-markers-7199" for this suite. @ 12/21/24 12:39:45.12
• [3.488 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:814
  STEP: Creating a kubernetes client @ 12/21/24 12:39:45.129
  I1221 12:39:45.129253 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-preemption @ 12/21/24 12:39:45.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:39:45.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:39:45.157
  I1221 12:39:45.176502 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1221 12:40:45.184017 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/21/24 12:40:45.189
  I1221 12:40:45.189046 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/21/24 12:40:45.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:40:45.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:40:45.21
  I1221 12:40:45.230246 19 preemption.go:820] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1221 12:40:45.235464 19 preemption.go:826] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1221 12:40:45.324997 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6206" for this suite. @ 12/21/24 12:40:45.329
  I1221 12:40:45.337681 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7760" for this suite. @ 12/21/24 12:40:45.341
• [60.220 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 12/21/24 12:40:45.348
  I1221 12:40:45.348964 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 12:40:45.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:40:45.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:40:45.37
  STEP: Creating pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566 @ 12/21/24 12:40:45.372
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 12:40:47.393
  I1221 12:40:47.398565 19 container_probe.go:1749] Initial restart count of pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de is 0
  I1221 12:40:47.402311 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:40:49.407473 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:40:51.413618 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:40:53.419851 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:40:55.424875 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:40:57.430986 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:40:59.437317 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:01.444398 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:03.449791 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:05.456098 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:07.461514 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:09.467796 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:11.474096 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:13.479999 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:15.486839 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:17.493392 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:19.499684 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:21.505504 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:23.511449 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:25.517810 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:27.523568 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:29.529116 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:31.534602 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:33.541178 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:35.547313 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:37.554498 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:39.561424 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:41.567804 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:43.573519 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:45.579862 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:47.584612 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:49.590030 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:51.596102 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:53.600995 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:55.606894 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:57.613269 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:41:59.619535 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:01.625991 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:03.631250 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:05.636372 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:07.642833 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:09.650056 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:11.657686 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:13.663641 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:15.669781 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:17.676533 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:19.683020 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:21.689992 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:23.696843 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:25.703212 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:27.709216 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:29.717204 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:31.722965 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:33.730085 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:35.736816 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:37.743229 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:39.750026 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:41.757063 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:43.762798 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:45.768895 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:47.774873 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:49.780759 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:51.787382 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:53.794186 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:55.799433 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:57.806675 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:42:59.813841 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:01.819415 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:03.826174 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:05.831798 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:07.837961 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:09.843551 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:11.849967 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:13.854961 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:15.861274 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:17.867296 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:19.873578 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:21.880104 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:23.885222 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:25.891257 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:27.896606 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:29.902987 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:31.910056 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:33.916551 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:35.923094 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:37.928178 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:39.934215 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:41.939926 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:43.946308 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:45.953450 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:47.960160 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:49.967659 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:51.973639 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:53.979983 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:55.986957 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:57.993146 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:43:59.999312 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:02.011498 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:04.016542 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:06.023508 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:08.030412 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:10.036765 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:12.043876 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:14.049963 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:16.055949 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:18.062298 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:20.068274 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:22.074375 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:24.079975 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:26.085827 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:28.091500 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:30.098925 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:32.104280 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:34.111402 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:36.116999 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:38.122994 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:40.129481 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:42.135043 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:44.140717 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  I1221 12:44:46.147595 19 container_probe.go:1759] Get pod liveness-08a3df9e-c1fc-4ea5-9a76-0748a0fff0de in namespace container-probe-2566
  STEP: deleting the pod @ 12/21/24 12:44:48.147
  I1221 12:44:48.167555 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2566" for this suite. @ 12/21/24 12:44:48.172
• [242.831 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/21/24 12:44:48.18
  I1221 12:44:48.180035 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename subpath @ 12/21/24 12:44:48.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:44:48.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:44:48.201
  STEP: Setting up data @ 12/21/24 12:44:48.203
  STEP: Creating pod pod-subpath-test-secret-m7nh @ 12/21/24 12:44:48.213
  STEP: Creating a pod to test atomic-volume-subpath @ 12/21/24 12:44:48.213
  STEP: Saw pod success @ 12/21/24 12:45:10.296
  I1221 12:45:10.301355 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-subpath-test-secret-m7nh container test-container-subpath-secret-m7nh: <nil>
  STEP: delete the pod @ 12/21/24 12:45:10.32
  STEP: Deleting pod pod-subpath-test-secret-m7nh @ 12/21/24 12:45:10.342
  I1221 12:45:10.342931 19 delete.go:62] Deleting pod "pod-subpath-test-secret-m7nh" in namespace "subpath-8743"
  I1221 12:45:10.347939 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8743" for this suite. @ 12/21/24 12:45:10.353
• [22.185 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/21/24 12:45:10.365
  I1221 12:45:10.365138 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:45:10.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:10.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:10.391
  STEP: Creating configMap with name configmap-projected-all-test-volume-27477491-cfec-4fb3-9e8e-dcfc0eed9ab9 @ 12/21/24 12:45:10.395
  STEP: Creating secret with name secret-projected-all-test-volume-41bceb4e-c57a-4ef5-90d8-23fd955f3d2a @ 12/21/24 12:45:10.404
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/21/24 12:45:10.409
  STEP: Saw pod success @ 12/21/24 12:45:12.433
  I1221 12:45:12.438008 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod projected-volume-50c19585-0370-4883-96b7-68f0a0275baf container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:45:12.445
  I1221 12:45:12.469453 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3246" for this suite. @ 12/21/24 12:45:12.474
• [2.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 12/21/24 12:45:12.482
  I1221 12:45:12.482948 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubelet-test @ 12/21/24 12:45:12.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:12.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:12.5
  I1221 12:45:14.538472 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9305" for this suite. @ 12/21/24 12:45:14.542
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 12/21/24 12:45:14.549
  I1221 12:45:14.549959 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 12:45:14.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:14.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:14.569
  STEP: Creating configMap configmap-3032/configmap-test-a3b6196d-c064-43c7-9301-2546983fee9b @ 12/21/24 12:45:14.572
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:45:14.578
  STEP: Saw pod success @ 12/21/24 12:45:16.601
  I1221 12:45:16.606438 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-configmaps-c2e6251f-76c6-45ba-bfdf-ff03cf311b24 container env-test: <nil>
  STEP: delete the pod @ 12/21/24 12:45:16.621
  I1221 12:45:16.639480 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3032" for this suite. @ 12/21/24 12:45:16.644
• [2.102 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/21/24 12:45:16.651
  I1221 12:45:16.651870 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-runtime @ 12/21/24 12:45:16.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:16.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:16.672
  STEP: create the container @ 12/21/24 12:45:16.674
  W1221 12:45:16.686602      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/21/24 12:45:16.686
  STEP: get the container status @ 12/21/24 12:45:19.711
  STEP: the container should be terminated @ 12/21/24 12:45:19.714
  STEP: the termination message should be set @ 12/21/24 12:45:19.714
  I1221 12:45:19.714486 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/21/24 12:45:19.714
  I1221 12:45:19.736436 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5519" for this suite. @ 12/21/24 12:45:19.74
• [3.096 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:312
  STEP: Creating a kubernetes client @ 12/21/24 12:45:19.747
  I1221 12:45:19.747770 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:45:19.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:19.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:19.77
  STEP: Setting up server cert @ 12/21/24 12:45:19.793
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:45:20.184
  STEP: Deploying the webhook pod @ 12/21/24 12:45:20.194
  STEP: Wait for the deployment to be ready @ 12/21/24 12:45:20.215
  I1221 12:45:20.229493 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:45:22.244
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:45:22.255
  I1221 12:45:23.255540 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1221 12:45:23.264203 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8471-crds.webhook.example.com via the AdmissionRegistration API @ 12/21/24 12:45:23.778
  STEP: Creating a custom resource while v1 is storage version @ 12/21/24 12:45:23.791
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/21/24 12:45:25.822
  STEP: Patching the custom resource while v2 is storage version @ 12/21/24 12:45:25.837
  I1221 12:45:26.442015 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7865" for this suite. @ 12/21/24 12:45:26.447
  STEP: Destroying namespace "webhook-markers-925" for this suite. @ 12/21/24 12:45:26.457
• [6.717 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:246
  STEP: Creating a kubernetes client @ 12/21/24 12:45:26.464
  I1221 12:45:26.465013 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 12:45:26.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:26.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:26.485
  STEP: Creating a test headless service @ 12/21/24 12:45:26.487
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-162.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-162.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/21/24 12:45:26.492
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-162.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-162.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/21/24 12:45:26.492
  STEP: creating a pod to probe DNS @ 12/21/24 12:45:26.492
  STEP: submitting the pod to kubernetes @ 12/21/24 12:45:26.492
  STEP: retrieving the pod @ 12/21/24 12:45:28.516
  STEP: looking for the results for each expected name from probers @ 12/21/24 12:45:28.521
  I1221 12:45:28.542259 19 dns_common.go:527] DNS probes using dns-162/dns-test-78b55193-4ab9-4bc1-a079-4eef12f48ed5 succeeded

  STEP: deleting the pod @ 12/21/24 12:45:28.542
  STEP: deleting the test headless service @ 12/21/24 12:45:28.564
  I1221 12:45:28.578495 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-162" for this suite. @ 12/21/24 12:45:28.582
• [2.127 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:999
  STEP: Creating a kubernetes client @ 12/21/24 12:45:28.592
  I1221 12:45:28.592095 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 12:45:28.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:28.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:28.609
  STEP: Creating a ResourceQuota @ 12/21/24 12:45:28.611
  STEP: Getting a ResourceQuota @ 12/21/24 12:45:28.616
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/21/24 12:45:28.62
  STEP: Patching the ResourceQuota @ 12/21/24 12:45:28.624
  STEP: Deleting a Collection of ResourceQuotas @ 12/21/24 12:45:28.63
  STEP: Verifying the deleted ResourceQuota @ 12/21/24 12:45:28.642
  I1221 12:45:28.646034 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7224" for this suite. @ 12/21/24 12:45:28.65
• [0.067 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1365
  STEP: Creating a kubernetes client @ 12/21/24 12:45:28.658
  I1221 12:45:28.658943 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:45:28.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:28.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:28.679
  STEP: validating cluster-info @ 12/21/24 12:45:28.681
  I1221 12:45:28.681783 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-9059 cluster-info'
  I1221 12:45:28.724743 19 builder.go:146] stderr: ""
  I1221 12:45:28.724812 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1221 12:45:28.724984 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9059" for this suite. @ 12/21/24 12:45:28.73
• [0.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/21/24 12:45:28.739
  I1221 12:45:28.739937 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename subpath @ 12/21/24 12:45:28.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:28.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:28.761
  STEP: Setting up data @ 12/21/24 12:45:28.763
  STEP: Creating pod pod-subpath-test-configmap-d9q4 @ 12/21/24 12:45:28.775
  STEP: Creating a pod to test atomic-volume-subpath @ 12/21/24 12:45:28.775
  STEP: Saw pod success @ 12/21/24 12:45:52.868
  I1221 12:45:52.873508 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-subpath-test-configmap-d9q4 container test-container-subpath-configmap-d9q4: <nil>
  STEP: delete the pod @ 12/21/24 12:45:52.883
  STEP: Deleting pod pod-subpath-test-configmap-d9q4 @ 12/21/24 12:45:52.905
  I1221 12:45:52.905548 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-d9q4" in namespace "subpath-1342"
  I1221 12:45:52.910440 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1342" for this suite. @ 12/21/24 12:45:52.915
• [24.185 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/21/24 12:45:52.924
  I1221 12:45:52.924549 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename csi-storageclass @ 12/21/24 12:45:52.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:52.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:52.944
  STEP: Creating a StorageClass @ 12/21/24 12:45:52.946
  STEP: Get StorageClass "e2e-wzjcn" @ 12/21/24 12:45:52.952
  STEP: Patching the StorageClass "e2e-wzjcn" @ 12/21/24 12:45:52.956
  STEP: Delete StorageClass "e2e-wzjcn" @ 12/21/24 12:45:52.963
  STEP: Confirm deletion of StorageClass "e2e-wzjcn" @ 12/21/24 12:45:52.972
  STEP: Create a replacement StorageClass @ 12/21/24 12:45:52.977
  STEP: Updating StorageClass "e2e-v2-n9jbv" @ 12/21/24 12:45:52.983
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-n9jbv=updated" @ 12/21/24 12:45:52.993
  STEP: Deleting StorageClass "e2e-v2-n9jbv" via DeleteCollection @ 12/21/24 12:45:52.998
  STEP: Confirm deletion of StorageClass "e2e-v2-n9jbv" @ 12/21/24 12:45:53.008
  I1221 12:45:53.012111 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1388" for this suite. @ 12/21/24 12:45:53.016
• [0.099 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 12/21/24 12:45:53.023
  I1221 12:45:53.023852 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 12:45:53.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:45:53.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:45:53.043
  STEP: Creating service test in namespace statefulset-1886 @ 12/21/24 12:45:53.046
  STEP: Creating a new StatefulSet @ 12/21/24 12:45:53.052
  I1221 12:45:53.068805 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I1221 12:46:03.069623 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1221 12:46:03.069659 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1221 12:46:03.069667 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/21/24 12:46:03.083
  I1221 12:46:03.094027 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/21/24 12:46:03.094
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/21/24 12:46:13.104
  STEP: Performing a canary update @ 12/21/24 12:46:13.104
  I1221 12:46:13.115487 19 statefulset.go:2507] Updating stateful set ss2
  I1221 12:46:13.123125 19 wait.go:74] Waiting for Pod statefulset-1886/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/21/24 12:46:23.126
  I1221 12:46:23.180132 19 wait.go:40] Found 2 stateful pods, waiting for 3
  I1221 12:46:33.174197 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1221 12:46:33.174226 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1221 12:46:33.174234 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/21/24 12:46:33.182
  I1221 12:46:33.193348 19 statefulset.go:2507] Updating stateful set ss2
  I1221 12:46:33.207152 19 wait.go:74] Waiting for Pod statefulset-1886/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1221 12:46:43.216896 19 statefulset.go:2507] Updating stateful set ss2
  I1221 12:46:43.229205 19 wait.go:56] Waiting for StatefulSet statefulset-1886/ss2 to complete update
  I1221 12:46:43.229233 19 wait.go:63] Waiting for Pod statefulset-1886/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1221 12:46:53.227005 19 statefulset.go:138] Deleting all statefulset in ns statefulset-1886
  I1221 12:46:53.231276 19 rest.go:150] Scaling statefulset ss2 to 0
  I1221 12:47:03.248608 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 12:47:03.252584 19 rest.go:88] Deleting statefulset ss2
  I1221 12:47:03.268732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1886" for this suite. @ 12/21/24 12:47:03.272
• [70.257 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/21/24 12:47:03.281
  I1221 12:47:03.281263 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replicaset @ 12/21/24 12:47:03.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:47:03.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:47:03.301
  I1221 12:47:03.317254 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1221 12:47:08.321098 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/21/24 12:47:08.321
  STEP: Scaling up "test-rs" replicaset @ 12/21/24 12:47:08.321
  I1221 12:47:08.331385 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/21/24 12:47:08.331
  I1221 12:47:08.343103 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1031 with ReadyReplicas 1, AvailableReplicas 1
  I1221 12:47:08.354497 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1031 with ReadyReplicas 1, AvailableReplicas 1
  I1221 12:47:08.366458 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1031 with ReadyReplicas 1, AvailableReplicas 1
  I1221 12:47:08.375139 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1031 with ReadyReplicas 1, AvailableReplicas 1
  I1221 12:47:09.432864 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1031 with ReadyReplicas 2, AvailableReplicas 2
  I1221 12:47:09.470811 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1031 with ReadyReplicas 3 found true
  I1221 12:47:09.470930 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1031" for this suite. @ 12/21/24 12:47:09.475
• [6.202 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/21/24 12:47:09.483
  I1221 12:47:09.483116 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:47:09.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:47:09.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:47:09.503
  STEP: Creating configMap with name projected-configmap-test-volume-e7c00f99-e5aa-40e6-a9de-9d84d64e8704 @ 12/21/24 12:47:09.506
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:47:09.511
  STEP: Saw pod success @ 12/21/24 12:47:11.531
  I1221 12:47:11.535278 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-configmaps-e9a811b1-1487-4826-84c0-9dfbbd298463 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 12:47:11.543
  I1221 12:47:11.565631 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4222" for this suite. @ 12/21/24 12:47:11.571
• [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/21/24 12:47:11.587
  I1221 12:47:11.587650 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 12:47:11.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:47:11.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:47:11.618
  STEP: Creating configMap with name configmap-test-upd-008f1248-86f9-4336-9368-743fc2003aef @ 12/21/24 12:47:11.63
  STEP: Creating the pod @ 12/21/24 12:47:11.636
  STEP: Updating configmap configmap-test-upd-008f1248-86f9-4336-9368-743fc2003aef @ 12/21/24 12:47:13.679
  STEP: waiting to observe update in volume @ 12/21/24 12:47:13.684
  I1221 12:48:22.049215 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8529" for this suite. @ 12/21/24 12:48:22.054
• [70.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 12/21/24 12:48:22.064
  I1221 12:48:22.064313 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 12:48:22.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:22.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:22.082
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/21/24 12:48:22.085
  I1221 12:48:22.085466 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:48:23.360120 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:48:28.244192 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-805" for this suite. @ 12/21/24 12:48:28.251
• [6.195 seconds]
------------------------------
SSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/21/24 12:48:28.259
  I1221 12:48:28.259890 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename conformance-tests @ 12/21/24 12:48:28.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:28.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:28.28
  STEP: Getting node addresses @ 12/21/24 12:48:28.282
  I1221 12:48:28.282243 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1221 12:48:28.286558 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4069" for this suite. @ 12/21/24 12:48:28.29
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 12/21/24 12:48:28.298
  I1221 12:48:28.298994 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename cronjob @ 12/21/24 12:48:28.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:28.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:28.319
  STEP: Creating a cronjob @ 12/21/24 12:48:28.32
  STEP: creating @ 12/21/24 12:48:28.32
  STEP: getting @ 12/21/24 12:48:28.326
  STEP: listing @ 12/21/24 12:48:28.33
  STEP: watching @ 12/21/24 12:48:28.334
  I1221 12:48:28.334042 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 12/21/24 12:48:28.334
  STEP: cluster-wide watching @ 12/21/24 12:48:28.338
  I1221 12:48:28.338263 19 cronjob.go:382] starting watch
  STEP: patching @ 12/21/24 12:48:28.339
  STEP: updating @ 12/21/24 12:48:28.345
  I1221 12:48:28.356448 19 cronjob.go:406] waiting for watch events with expected annotations
  I1221 12:48:28.356474 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 12/21/24 12:48:28.356
  STEP: updating /status @ 12/21/24 12:48:28.361
  STEP: get /status @ 12/21/24 12:48:28.369
  STEP: deleting @ 12/21/24 12:48:28.373
  STEP: deleting a collection @ 12/21/24 12:48:28.389
  I1221 12:48:28.402755 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4688" for this suite. @ 12/21/24 12:48:28.407
• [0.116 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1756
  STEP: Creating a kubernetes client @ 12/21/24 12:48:28.414
  I1221 12:48:28.414748 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 12:48:28.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:28.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:28.434
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/21/24 12:48:28.436
  I1221 12:48:28.436761 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-790 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1221 12:48:28.486159 19 builder.go:146] stderr: ""
  I1221 12:48:28.486187 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/21/24 12:48:28.486
  I1221 12:48:28.490545 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-790 delete pods e2e-test-httpd-pod'
  I1221 12:48:30.491394 19 builder.go:146] stderr: ""
  I1221 12:48:30.491433 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1221 12:48:30.491556 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-790" for this suite. @ 12/21/24 12:48:30.496
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:890
  STEP: Creating a kubernetes client @ 12/21/24 12:48:30.504
  I1221 12:48:30.504299 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename daemonsets @ 12/21/24 12:48:30.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:30.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:30.525
  STEP: Creating simple DaemonSet "daemon-set" @ 12/21/24 12:48:30.552
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/21/24 12:48:30.558
  I1221 12:48:30.562712 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:48:30.562739 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:48:30.565718 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:48:30.565730 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:48:31.562990 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:48:31.563036 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:48:31.567717 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1221 12:48:31.567732 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:48:32.563828 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:48:32.563871 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:48:32.568506 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 12:48:32.568524 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 12/21/24 12:48:32.572
  I1221 12:48:32.577251 19 daemon_set.go:927] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/21/24 12:48:32.577
  I1221 12:48:32.587968 19 daemon_set.go:947] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/21/24 12:48:32.588
  I1221 12:48:32.589961 19 daemon_set.go:972] Observed &DaemonSet event: ADDED
  I1221 12:48:32.590028 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.590094 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.590228 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.590307 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.590416 19 daemon_set.go:972] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.590435 19 daemon_set.go:965] Found daemon set daemon-set in namespace daemonsets-9760 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1221 12:48:32.590444 19 daemon_set.go:976] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/21/24 12:48:32.59
  STEP: watching for the daemon set status to be patched @ 12/21/24 12:48:32.604
  I1221 12:48:32.605945 19 daemon_set.go:1016] Observed &DaemonSet event: ADDED
  I1221 12:48:32.606010 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.606069 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.606120 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.606206 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.606398 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.606415 19 daemon_set.go:1012] Observed daemon set daemon-set in namespace daemonsets-9760 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1221 12:48:32.606474 19 daemon_set.go:1016] Observed &DaemonSet event: MODIFIED
  I1221 12:48:32.606488 19 daemon_set.go:1009] Found daemon set daemon-set in namespace daemonsets-9760 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1221 12:48:32.606499 19 daemon_set.go:1020] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/21/24 12:48:32.611
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9760, will wait for the garbage collector to delete the pods @ 12/21/24 12:48:32.611
  I1221 12:48:32.677921 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.409052ms
  I1221 12:48:32.778236 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.309027ms
  I1221 12:48:33.683291 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:48:33.683350 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1221 12:48:33.686436 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"15406"},"items":null}

  I1221 12:48:33.690653 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"15407"},"items":null}

  I1221 12:48:33.706012 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9760" for this suite. @ 12/21/24 12:48:33.709
• [3.213 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 12/21/24 12:48:33.717
  I1221 12:48:33.717667 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 12:48:33.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:33.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:33.738
  I1221 12:48:33.745912 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/21/24 12:48:35.011
  I1221 12:48:35.011293 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-9029 --namespace=crd-publish-openapi-9029 create -f -'
  I1221 12:48:35.073507 19 builder.go:146] stderr: ""
  I1221 12:48:35.073539 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1667-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1221 12:48:35.073574 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-9029 --namespace=crd-publish-openapi-9029 delete e2e-test-crd-publish-openapi-1667-crds test-cr'
  I1221 12:48:35.123468 19 builder.go:146] stderr: ""
  I1221 12:48:35.123501 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1667-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1221 12:48:35.123541 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-9029 --namespace=crd-publish-openapi-9029 apply -f -'
  I1221 12:48:35.177916 19 builder.go:146] stderr: ""
  I1221 12:48:35.177952 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1667-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1221 12:48:35.177987 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-9029 --namespace=crd-publish-openapi-9029 delete e2e-test-crd-publish-openapi-1667-crds test-cr'
  I1221 12:48:35.227589 19 builder.go:146] stderr: ""
  I1221 12:48:35.227624 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1667-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/21/24 12:48:35.227
  I1221 12:48:35.227689 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-9029 explain e2e-test-crd-publish-openapi-1667-crds'
  I1221 12:48:35.267281 19 builder.go:146] stderr: ""
  I1221 12:48:35.267321 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-1667-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1221 12:48:36.457457 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9029" for this suite. @ 12/21/24 12:48:36.464
• [2.754 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:838
  STEP: Creating a kubernetes client @ 12/21/24 12:48:36.472
  I1221 12:48:36.472179 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:48:36.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:36.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:36.491
  STEP: Setting up server cert @ 12/21/24 12:48:36.517
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:48:36.708
  STEP: Deploying the webhook pod @ 12/21/24 12:48:36.719
  STEP: Wait for the deployment to be ready @ 12/21/24 12:48:36.734
  I1221 12:48:36.746383 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:48:38.763
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:48:38.774
  I1221 12:48:39.774471 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/21/24 12:48:39.784
  I1221 12:48:39.835669 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9515" for this suite. @ 12/21/24 12:48:39.84
  STEP: Destroying namespace "webhook-markers-408" for this suite. @ 12/21/24 12:48:39.849
• [3.387 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/21/24 12:48:39.858
  I1221 12:48:39.858912 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 12:48:39.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:39.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:39.877
  STEP: Creating configMap with name configmap-test-volume-8e303fcb-a257-4f89-a93a-b806f5dc80b5 @ 12/21/24 12:48:39.879
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:48:39.885
  STEP: Saw pod success @ 12/21/24 12:48:43.916
  I1221 12:48:43.922482 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-configmaps-f480b21b-bd14-4312-a94b-15ac0c3822f1 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 12:48:43.932
  I1221 12:48:43.954970 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1352" for this suite. @ 12/21/24 12:48:43.959
• [4.111 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:814
  STEP: Creating a kubernetes client @ 12/21/24 12:48:43.969
  I1221 12:48:43.969908 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:48:43.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:43.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:43.99
  STEP: Setting up server cert @ 12/21/24 12:48:44.013
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:48:44.188
  STEP: Deploying the webhook pod @ 12/21/24 12:48:44.195
  STEP: Wait for the deployment to be ready @ 12/21/24 12:48:44.21
  I1221 12:48:44.222011 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:48:46.234
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:48:46.246
  I1221 12:48:47.247462 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/21/24 12:48:47.257
  I1221 12:48:47.309536 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7054" for this suite. @ 12/21/24 12:48:47.314
  STEP: Destroying namespace "webhook-markers-2386" for this suite. @ 12/21/24 12:48:47.323
• [3.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/21/24 12:48:47.333
  I1221 12:48:47.333684 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svcaccounts @ 12/21/24 12:48:47.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:47.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:47.354
  STEP: Creating ServiceAccount "e2e-sa-2kwfv"  @ 12/21/24 12:48:47.356
  I1221 12:48:47.362078 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-2kwfv"  @ 12/21/24 12:48:47.362
  I1221 12:48:47.370372 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I1221 12:48:47.370445 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8766" for this suite. @ 12/21/24 12:48:47.374
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/21/24 12:48:47.383
  I1221 12:48:47.383970 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 12:48:47.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:47.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:47.403
  I1221 12:48:47.415408 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1221 12:48:52.421968 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/21/24 12:48:52.421
  I1221 12:48:52.422031 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/21/24 12:48:52.434
  I1221 12:48:54.462551 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "82e1afe5-52d5-42bd-9b04-d93896dfe0e2",
      ResourceVersion: (string) (len=5) "15756",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870382132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=75) "ReplicaSet \"test-cleanup-deployment-898f8f847\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1221 12:48:54.468034 19 deployment.go:39] New ReplicaSet "test-cleanup-deployment-898f8f847" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0e5f5f59-1a77-4ee1-93ca-a4a8259cd7b1",
      ResourceVersion: (string) (len=5) "15746",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870382132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "82e1afe5-52d5-42bd-9b04-d93896dfe0e2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 32 65 31 61 66  65 35 2d 35 32 64 35 2d  |\"82e1afe5-52d5-|
              00000120  34 32 62 64 2d 39 62 30  34 2d 64 39 33 38 39 36  |42bd-9b04-d93896|
              00000130  64 66 65 30 65 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |dfe0e2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 12:48:54.473577 19 deployment.go:67] Pod "test-cleanup-deployment-898f8f847-595v8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=39) "test-cleanup-deployment-898f8f847-595v8",
      GenerateName: (string) (len=34) "test-cleanup-deployment-898f8f847-",
      Namespace: (string) (len=15) "deployment-6945",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a8d66c5-f8f9-4fa9-86b6-b9bd0e1c8aae",
      ResourceVersion: (string) (len=5) "15745",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870382132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "898f8f847"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=33) "test-cleanup-deployment-898f8f847",
          UID: (types.UID) (len=36) "0e5f5f59-1a77-4ee1-93ca-a4a8259cd7b1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 65  35 66 35 66 35 39 2d 31  |d\":\"0e5f5f59-1|
              00000090  61 37 37 2d 34 65 65 31  2d 39 33 63 61 2d 61 34  |a77-4ee1-93ca-a4|
              000000a0  61 38 32 35 39 63 64 37  62 31 5c 22 7d 22 3a 7b  |a8259cd7b1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  30 2e 32 31 5c 22 7d 22  |2.168.200.21\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nt4zl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nt4zl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870382132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=14) "192.168.200.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.200.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870382132,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870382133,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://98756c228155d460be7a8a27d7a50e675d5338b0234f38c6f5d583a2434e5344",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nt4zl",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 12:48:54.474749 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6945" for this suite. @ 12/21/24 12:48:54.479
• [7.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/21/24 12:48:54.487
  I1221 12:48:54.487477 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 12:48:54.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:54.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:54.507
  STEP: creating a Pod with a static label @ 12/21/24 12:48:54.514
  STEP: watching for Pod to be ready @ 12/21/24 12:48:54.523
  I1221 12:48:54.524811 19 pods.go:945] observed Pod pod-test in namespace pods-5737 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1221 12:48:54.530154 19 pods.go:945] observed Pod pod-test in namespace pods-5737 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC  }]
  I1221 12:48:54.546468 19 pods.go:945] observed Pod pod-test in namespace pods-5737 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC  }]
  I1221 12:48:55.517906 19 pods.go:948] Found Pod pod-test in namespace pods-5737 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:55 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:55 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:55 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 12:48:54 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/21/24 12:48:55.522
  STEP: getting the Pod and ensuring that it's patched @ 12/21/24 12:48:55.532
  STEP: replacing the Pod's status Ready condition to False @ 12/21/24 12:48:55.535
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/21/24 12:48:55.548
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/21/24 12:48:55.548
  STEP: watching for the Pod to be deleted @ 12/21/24 12:48:55.562
  I1221 12:48:55.563791 19 pods.go:1058] observed event type MODIFIED
  I1221 12:48:56.121845 19 pods.go:1058] observed event type MODIFIED
  I1221 12:48:57.524725 19 pods.go:1058] observed event type MODIFIED
  I1221 12:48:57.677141 19 pods.go:1058] observed event type MODIFIED
  I1221 12:48:58.530541 19 pods.go:1058] observed event type MODIFIED
  I1221 12:48:58.542685 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5737" for this suite. @ 12/21/24 12:48:58.547
• [4.068 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3619
  STEP: Creating a kubernetes client @ 12/21/24 12:48:58.555
  I1221 12:48:58.555649 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 12:48:58.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:58.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:58.573
  STEP: creating a collection of services @ 12/21/24 12:48:58.576
  I1221 12:48:58.576028 19 service.go:3655] Creating e2e-svc-a-dmslx
  I1221 12:48:58.589573 19 service.go:3655] Creating e2e-svc-b-nqjdx
  I1221 12:48:58.602235 19 service.go:3655] Creating e2e-svc-c-gbxxv
  STEP: deleting service collection @ 12/21/24 12:48:58.618
  I1221 12:48:58.656098 19 service.go:3690] Collection of services has been deleted
  I1221 12:48:58.656196 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5245" for this suite. @ 12/21/24 12:48:58.661
• [0.114 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 12/21/24 12:48:58.67
  I1221 12:48:58.670034 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename cronjob @ 12/21/24 12:48:58.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:48:58.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:48:58.689
  STEP: Creating a ReplaceConcurrent cronjob @ 12/21/24 12:48:58.691
  STEP: Ensuring a job is scheduled @ 12/21/24 12:48:58.697
  STEP: Ensuring exactly one is scheduled @ 12/21/24 12:49:00.703
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/21/24 12:49:00.708
  STEP: Ensuring the job is replaced with a new one @ 12/21/24 12:49:00.712
  STEP: Removing cronjob @ 12/21/24 12:50:00.717
  I1221 12:50:00.726422 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8451" for this suite. @ 12/21/24 12:50:00.732
• [62.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:329
  STEP: Creating a kubernetes client @ 12/21/24 12:50:00.741
  I1221 12:50:00.741796 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:50:00.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:50:00.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:50:00.769
  STEP: Setting up server cert @ 12/21/24 12:50:00.793
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:50:00.93
  STEP: Deploying the webhook pod @ 12/21/24 12:50:00.941
  STEP: Wait for the deployment to be ready @ 12/21/24 12:50:00.955
  I1221 12:50:00.965466 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 12:50:02.981
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:50:02.996
  I1221 12:50:03.996979 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1221 12:50:04.005456 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6626-crds.webhook.example.com via the AdmissionRegistration API @ 12/21/24 12:50:04.519
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/21/24 12:50:04.534
  I1221 12:50:07.157004 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7814" for this suite. @ 12/21/24 12:50:07.162
  STEP: Destroying namespace "webhook-markers-862" for this suite. @ 12/21/24 12:50:07.171
• [6.439 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/21/24 12:50:07.18
  I1221 12:50:07.180684 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 12:50:07.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:50:07.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:50:07.198
  STEP: Creating configMap with name projected-configmap-test-volume-map-0c947cdc-6b8e-4f3f-bce8-60b0ae86e0d9 @ 12/21/24 12:50:07.201
  STEP: Creating a pod to test consume configMaps @ 12/21/24 12:50:07.207
  STEP: Saw pod success @ 12/21/24 12:50:11.235
  I1221 12:50:11.239520 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-configmaps-bf478c45-6388-45e7-a9f8-27e4b5db1e0c container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 12:50:11.253
  I1221 12:50:11.273732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9324" for this suite. @ 12/21/24 12:50:11.277
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 12/21/24 12:50:11.286
  I1221 12:50:11.286579 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename security-context-test @ 12/21/24 12:50:11.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:50:11.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:50:11.303
  I1221 12:50:15.333010 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7691" for this suite. @ 12/21/24 12:50:15.338
• [4.060 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/21/24 12:50:15.346
  I1221 12:50:15.346856 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename endpointslice @ 12/21/24 12:50:15.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:50:15.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:50:15.366
  I1221 12:50:17.428480 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4347" for this suite. @ 12/21/24 12:50:17.432
• [2.095 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/21/24 12:50:17.441
  I1221 12:50:17.441731 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename daemonsets @ 12/21/24 12:50:17.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:50:17.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:50:17.457
  STEP: Creating simple DaemonSet "daemon-set" @ 12/21/24 12:50:17.48
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/21/24 12:50:17.486
  I1221 12:50:17.491346 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:17.491383 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:17.495050 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:50:17.495073 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:50:18.492184 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:18.492219 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:18.496136 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:50:18.496157 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:50:19.492409 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:19.492451 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:19.497098 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 12:50:19.497119 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/21/24 12:50:19.501
  I1221 12:50:19.520549 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:19.520577 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:19.524415 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1221 12:50:19.524434 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:50:20.521910 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:20.521955 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:20.525977 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1221 12:50:20.526008 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:50:21.521641 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:21.521685 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:50:21.526167 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 12:50:21.526187 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/21/24 12:50:21.529
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6333, will wait for the garbage collector to delete the pods @ 12/21/24 12:50:21.529
  I1221 12:50:21.593499 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.91395ms
  I1221 12:50:21.694113 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.610166ms
  I1221 12:50:22.798818 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:50:22.798849 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1221 12:50:22.802566 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"16367"},"items":null}

  I1221 12:50:22.807486 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"16367"},"items":null}

  I1221 12:50:22.823560 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6333" for this suite. @ 12/21/24 12:50:22.827
• [5.393 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/21/24 12:50:22.835
  I1221 12:50:22.835318 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 12:50:22.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:50:22.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:50:22.853
  STEP: Creating secret with name s-test-opt-del-84496370-9e84-4d83-8cf0-9dd7d79a094f @ 12/21/24 12:50:22.86
  STEP: Creating secret with name s-test-opt-upd-8894d1c5-67fa-4b1a-bf7d-afeb46339961 @ 12/21/24 12:50:22.866
  STEP: Creating the pod @ 12/21/24 12:50:22.871
  STEP: Deleting secret s-test-opt-del-84496370-9e84-4d83-8cf0-9dd7d79a094f @ 12/21/24 12:50:24.925
  STEP: Updating secret s-test-opt-upd-8894d1c5-67fa-4b1a-bf7d-afeb46339961 @ 12/21/24 12:50:24.933
  STEP: Creating secret with name s-test-opt-create-1dc8e120-76aa-4377-b1ec-6947b83cc743 @ 12/21/24 12:50:24.94
  STEP: waiting to observe update in volume @ 12/21/24 12:50:24.944
  I1221 12:51:51.434989 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4947" for this suite. @ 12/21/24 12:51:51.439
• [88.613 seconds]
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/21/24 12:51:51.448
  I1221 12:51:51.448661 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replicaset @ 12/21/24 12:51:51.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:51:51.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:51:51.469
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/21/24 12:51:51.471
  STEP: When a replicaset with a matching selector is created @ 12/21/24 12:51:53.494
  STEP: Then the orphan pod is adopted @ 12/21/24 12:51:53.5
  STEP: When the matched label of one of its pods change @ 12/21/24 12:51:54.51
  I1221 12:51:54.515116 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/21/24 12:51:54.527
  I1221 12:51:55.537772 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9009" for this suite. @ 12/21/24 12:51:55.543
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:398
  STEP: Creating a kubernetes client @ 12/21/24 12:51:55.553
  I1221 12:51:55.553274 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 12:51:55.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:51:55.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:51:55.573
  STEP: Counting existing ResourceQuota @ 12/21/24 12:51:55.576
  STEP: Creating a ResourceQuota @ 12/21/24 12:52:00.58
  STEP: Ensuring resource quota status is calculated @ 12/21/24 12:52:00.587
  STEP: Creating a ReplicationController @ 12/21/24 12:52:02.593
  STEP: Ensuring resource quota status captures replication controller creation @ 12/21/24 12:52:02.611
  STEP: Deleting a ReplicationController @ 12/21/24 12:52:04.616
  STEP: Ensuring resource quota status released usage @ 12/21/24 12:52:04.623
  I1221 12:52:06.630420 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-50" for this suite. @ 12/21/24 12:52:06.635
• [11.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/21/24 12:52:06.645
  I1221 12:52:06.645208 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 12:52:06.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:52:06.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:52:06.671
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/21/24 12:52:06.675
  STEP: Saw pod success @ 12/21/24 12:52:10.715
  I1221 12:52:10.719392 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-c99f7eb0-f887-4a3d-b755-766ac8fc78f3 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 12:52:10.729
  I1221 12:52:10.752344 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3655" for this suite. @ 12/21/24 12:52:10.756
• [4.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/21/24 12:52:10.767
  I1221 12:52:10.767072 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename containers @ 12/21/24 12:52:10.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:52:10.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:52:10.794
  STEP: Creating a pod to test override all @ 12/21/24 12:52:10.796
  STEP: Saw pod success @ 12/21/24 12:52:14.825
  I1221 12:52:14.830567 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod client-containers-dfecd01b-3c4f-4bdf-bd55-efd1effbb24e container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 12:52:14.838
  I1221 12:52:14.855788 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-838" for this suite. @ 12/21/24 12:52:14.861
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/21/24 12:52:14.872
  I1221 12:52:14.872635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 12:52:14.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:52:14.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:52:14.898
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/21/24 12:52:14.901
  STEP: Saw pod success @ 12/21/24 12:52:18.94
  I1221 12:52:18.945279 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-cf7ec306-5b9d-4a0e-8541-d350c8f9c1b5 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 12:52:18.954
  I1221 12:52:18.976517 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9884" for this suite. @ 12/21/24 12:52:18.981
• [4.117 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/21/24 12:52:18.99
  I1221 12:52:18.990197 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename cronjob @ 12/21/24 12:52:18.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:52:19.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:52:19.011
  STEP: Creating a ForbidConcurrent cronjob @ 12/21/24 12:52:19.013
  STEP: Ensuring a job is scheduled @ 12/21/24 12:52:19.021
  STEP: Ensuring exactly one is scheduled @ 12/21/24 12:53:01.026
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/21/24 12:53:01.031
  STEP: Ensuring no more jobs are scheduled @ 12/21/24 12:53:01.036
  STEP: Removing cronjob @ 12/21/24 12:53:01.04
  I1221 12:53:01.049699 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7624" for this suite. @ 12/21/24 12:53:01.053
• [42.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1396
  STEP: Creating a kubernetes client @ 12/21/24 12:53:01.062
  I1221 12:53:01.062259 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 12:53:01.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:53:01.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:53:01.089
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3998 @ 12/21/24 12:53:01.092
  STEP: changing the ExternalName service to type=ClusterIP @ 12/21/24 12:53:01.098
  STEP: creating replication controller externalname-service in namespace services-3998 @ 12/21/24 12:53:01.115
  I1221 12:53:01.124093      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-3998, replica count: 2
  I1221 12:53:04.174411      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 12:53:04.174463 19 resource.go:361] Creating new exec pod
  I1221 12:53:07.196446 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-3998 exec execpodtfzlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1221 12:53:07.278553 19 builder.go:146] stderr: "+ + nc -v -t -w 2 externalname-service 80\necho hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1221 12:53:07.278594 19 builder.go:147] stdout: "externalname-service-h4djv"
  I1221 12:53:07.278663 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-3998 exec execpodtfzlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.248 80'
  I1221 12:53:07.355952 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.248 80\nConnection to 10.152.183.248 80 port [tcp/http] succeeded!\n"
  I1221 12:53:07.356003 19 builder.go:147] stdout: ""
  I1221 12:53:08.278811 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-3998 exec execpodtfzlb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.248 80'
  I1221 12:53:08.352836 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.248 80\nConnection to 10.152.183.248 80 port [tcp/http] succeeded!\n"
  I1221 12:53:08.352875 19 builder.go:147] stdout: "externalname-service-h4djv"
  I1221 12:53:08.352967 19 service.go:1405] Cleaning up the ExternalName to ClusterIP test service
  I1221 12:53:08.376605 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3998" for this suite. @ 12/21/24 12:53:08.38
• [7.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/21/24 12:53:08.389
  I1221 12:53:08.390035 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-watch @ 12/21/24 12:53:08.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:53:08.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:53:08.41
  I1221 12:53:08.412592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Creating first CR  @ 12/21/24 12:53:10.951
  I1221 12:53:10.959434 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-21T12:53:10Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-21T12:53:10Z]] name:name1 resourceVersion:17086 uid:c694b496-639a-43a2-a465-158ef33d698e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/21/24 12:53:20.959
  I1221 12:53:20.967586 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-21T12:53:20Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-21T12:53:20Z]] name:name2 resourceVersion:17149 uid:684de6ee-e9cb-4b11-8d12-3b30f488f090] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/21/24 12:53:30.967
  I1221 12:53:30.975732 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-21T12:53:10Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-21T12:53:30Z]] name:name1 resourceVersion:17170 uid:c694b496-639a-43a2-a465-158ef33d698e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/21/24 12:53:40.976
  I1221 12:53:40.983845 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-21T12:53:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-21T12:53:40Z]] name:name2 resourceVersion:17196 uid:684de6ee-e9cb-4b11-8d12-3b30f488f090] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/21/24 12:53:50.984
  I1221 12:53:50.995925 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-21T12:53:10Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-21T12:53:30Z]] name:name1 resourceVersion:17221 uid:c694b496-639a-43a2-a465-158ef33d698e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/21/24 12:54:00.997
  I1221 12:54:01.007360 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-21T12:53:20Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-21T12:53:40Z]] name:name2 resourceVersion:17240 uid:684de6ee-e9cb-4b11-8d12-3b30f488f090] num:map[num1:9223372036854775807 num2:1000000]]}
  I1221 12:54:11.525150 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4414" for this suite. @ 12/21/24 12:54:11.531
• [63.149 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/21/24 12:54:11.539
  I1221 12:54:11.539503 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename certificates @ 12/21/24 12:54:11.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:11.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:11.559
  STEP: getting /apis @ 12/21/24 12:54:11.918
  STEP: getting /apis/certificates.k8s.io @ 12/21/24 12:54:11.922
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/21/24 12:54:11.923
  STEP: creating @ 12/21/24 12:54:11.924
  STEP: getting @ 12/21/24 12:54:11.944
  STEP: listing @ 12/21/24 12:54:11.949
  STEP: watching @ 12/21/24 12:54:11.953
  I1221 12:54:11.953247 19 certificates.go:316] starting watch
  STEP: patching @ 12/21/24 12:54:11.954
  STEP: updating @ 12/21/24 12:54:11.962
  I1221 12:54:11.968271 19 certificates.go:332] waiting for watch events with expected annotations
  I1221 12:54:11.968308 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 12/21/24 12:54:11.968
  STEP: patching /approval @ 12/21/24 12:54:11.972
  STEP: updating /approval @ 12/21/24 12:54:11.979
  STEP: getting /status @ 12/21/24 12:54:11.987
  STEP: patching /status @ 12/21/24 12:54:11.991
  STEP: updating /status @ 12/21/24 12:54:12.004
  STEP: deleting @ 12/21/24 12:54:12.012
  STEP: deleting a collection @ 12/21/24 12:54:12.028
  I1221 12:54:12.049585 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7362" for this suite. @ 12/21/24 12:54:12.053
• [0.521 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/21/24 12:54:12.06
  I1221 12:54:12.060162 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 12:54:12.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:12.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:12.076
  I1221 12:54:12.079528 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: creating the pod @ 12/21/24 12:54:12.079
  STEP: submitting the pod to kubernetes @ 12/21/24 12:54:12.08
  I1221 12:54:14.152613 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7368" for this suite. @ 12/21/24 12:54:14.158
• [2.108 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:298
  STEP: Creating a kubernetes client @ 12/21/24 12:54:14.168
  I1221 12:54:14.168381 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 12:54:14.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:14.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:14.186
  STEP: Setting up server cert @ 12/21/24 12:54:14.21
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 12:54:14.339
  STEP: Deploying the webhook pod @ 12/21/24 12:54:14.351
  STEP: Wait for the deployment to be ready @ 12/21/24 12:54:14.366
  I1221 12:54:14.374357 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/21/24 12:54:16.388
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 12:54:16.4
  I1221 12:54:17.401144 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/21/24 12:54:17.411
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/21/24 12:54:17.425
  I1221 12:54:17.425806 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:54:17.495186 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6929" for this suite. @ 12/21/24 12:54:17.501
  STEP: Destroying namespace "webhook-markers-4195" for this suite. @ 12/21/24 12:54:17.51
• [3.350 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/21/24 12:54:17.518
  I1221 12:54:17.518140 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replication-controller @ 12/21/24 12:54:17.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:17.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:17.538
  STEP: Creating ReplicationController "e2e-rc-vqn24" @ 12/21/24 12:54:17.54
  I1221 12:54:17.549156 19 rc.go:792] Get Replication Controller "e2e-rc-vqn24" to confirm replicas
  I1221 12:54:18.549286 19 rc.go:792] Get Replication Controller "e2e-rc-vqn24" to confirm replicas
  I1221 12:54:18.553837 19 rc.go:801] Found 1 replicas for "e2e-rc-vqn24" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-vqn24" @ 12/21/24 12:54:18.553
  STEP: Updating a scale subresource @ 12/21/24 12:54:18.557
  STEP: Verifying replicas where modified for replication controller "e2e-rc-vqn24" @ 12/21/24 12:54:18.564
  I1221 12:54:18.564533 19 rc.go:792] Get Replication Controller "e2e-rc-vqn24" to confirm replicas
  I1221 12:54:19.565521 19 rc.go:792] Get Replication Controller "e2e-rc-vqn24" to confirm replicas
  I1221 12:54:19.570921 19 rc.go:801] Found 2 replicas for "e2e-rc-vqn24" replication controller
  I1221 12:54:19.571088 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3088" for this suite. @ 12/21/24 12:54:19.576
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/21/24 12:54:19.585
  I1221 12:54:19.585226 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/21/24 12:54:19.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:19.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:19.606
  STEP: mirroring a new custom Endpoint @ 12/21/24 12:54:19.622
  I1221 12:54:19.638279 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/21/24 12:54:21.644
  I1221 12:54:21.657938 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/21/24 12:54:23.663
  I1221 12:54:23.676951 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I1221 12:54:25.682255 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3711" for this suite. @ 12/21/24 12:54:25.687
• [6.112 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 12/21/24 12:54:25.697
  I1221 12:54:25.697494 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 12:54:25.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:25.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:25.713
  I1221 12:54:27.738591 19 delete.go:62] Deleting pod "var-expansion-e0a8b693-981f-4dc4-883d-7d9ea18bdacc" in namespace "var-expansion-1762"
  I1221 12:54:27.749554 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-e0a8b693-981f-4dc4-883d-7d9ea18bdacc" to be fully deleted
  I1221 12:54:29.759614 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1762" for this suite. @ 12/21/24 12:54:29.764
• [4.077 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:878
  STEP: Creating a kubernetes client @ 12/21/24 12:54:29.774
  I1221 12:54:29.774292 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename job @ 12/21/24 12:54:29.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:29.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:29.795
  STEP: Creating a job @ 12/21/24 12:54:29.797
  STEP: Ensuring active pods == parallelism @ 12/21/24 12:54:29.803
  STEP: delete a job @ 12/21/24 12:54:31.809
  STEP: deleting Job.batch foo in namespace job-9266, will wait for the garbage collector to delete the pods @ 12/21/24 12:54:31.809
  I1221 12:54:31.873444 19 resources.go:139] Deleting Job.batch foo took: 8.913559ms
  I1221 12:54:31.974462 19 resources.go:163] Terminating Job.batch foo pods took: 101.013007ms
  STEP: Ensuring job was deleted @ 12/21/24 12:54:33.175
  I1221 12:54:33.180615 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9266" for this suite. @ 12/21/24 12:54:33.186
• [3.426 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 12/21/24 12:54:33.2
  I1221 12:54:33.200577 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 12:54:33.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:33.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:33.222
  STEP: Creating service test in namespace statefulset-3505 @ 12/21/24 12:54:33.226
  STEP: Creating statefulset ss in namespace statefulset-3505 @ 12/21/24 12:54:33.24
  I1221 12:54:33.256373 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1221 12:54:43.254648 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/21/24 12:54:43.264
  STEP: updating a scale subresource @ 12/21/24 12:54:43.267
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/21/24 12:54:43.273
  STEP: Patch a scale subresource @ 12/21/24 12:54:43.28
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/21/24 12:54:43.3
  I1221 12:54:43.306969 19 statefulset.go:138] Deleting all statefulset in ns statefulset-3505
  I1221 12:54:43.311519 19 rest.go:150] Scaling statefulset ss to 0
  I1221 12:54:53.328595 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 12:54:53.333530 19 rest.go:88] Deleting statefulset ss
  I1221 12:54:53.349946 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3505" for this suite. @ 12/21/24 12:54:53.355
• [20.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:851
  STEP: Creating a kubernetes client @ 12/21/24 12:54:53.37
  I1221 12:54:53.370212 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename daemonsets @ 12/21/24 12:54:53.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:53.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:53.39
  STEP: Creating simple DaemonSet "daemon-set" @ 12/21/24 12:54:53.416
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/21/24 12:54:53.424
  I1221 12:54:53.429414 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:54:53.429462 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:54:53.432925 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:54:53.432949 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:54:54.431806 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:54:54.431856 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:54:54.436273 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 12:54:54.436293 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/21/24 12:54:54.441
  STEP: DeleteCollection of the DaemonSets @ 12/21/24 12:54:54.445
  STEP: Verify that ReplicaSets have been deleted @ 12/21/24 12:54:54.456
  I1221 12:54:54.475767 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17801"},"items":null}

  I1221 12:54:54.480506 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17803"},"items":[{"metadata":{"name":"daemon-set-jcsbt","generateName":"daemon-set-","namespace":"daemonsets-5945","uid":"c0678cf2-b2bb-4580-b7ee-aed849a3f077","resourceVersion":"17803","creationTimestamp":"2024-12-21T12:54:53Z","deletionTimestamp":"2024-12-21T12:55:24Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ef8dd010-1788-4565-8b5a-27f11207009a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-21T12:54:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ef8dd010-1788-4565-8b5a-27f11207009a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-21T12:54:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.78.20\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-k2krn","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-k2krn","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-9-184","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-9-184"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:53Z"}],"hostIP":"172.31.9.184","hostIPs":[{"ip":"172.31.9.184"}],"podIP":"192.168.78.20","podIPs":[{"ip":"192.168.78.20"}],"startTime":"2024-12-21T12:54:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-21T12:54:54Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://bf72a7367775f6e5bf4ce3dd1672978c8ca14e777069025347f2f0e77ccdc6cc","started":true,"volumeMounts":[{"name":"kube-api-access-k2krn","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-nscwv","generateName":"daemon-set-","namespace":"daemonsets-5945","uid":"7dd424cf-ca50-401f-bcd7-794ea36cd2dc","resourceVersion":"17801","creationTimestamp":"2024-12-21T12:54:53Z","deletionTimestamp":"2024-12-21T12:55:24Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ef8dd010-1788-4565-8b5a-27f11207009a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-21T12:54:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ef8dd010-1788-4565-8b5a-27f11207009a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-21T12:54:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.200.39\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wndsg","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wndsg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-68-100","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-68-100"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:53Z"}],"hostIP":"172.31.68.100","hostIPs":[{"ip":"172.31.68.100"}],"podIP":"192.168.200.39","podIPs":[{"ip":"192.168.200.39"}],"startTime":"2024-12-21T12:54:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-21T12:54:54Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://831690ac320c11823bac89d491fe826829ee5ba4134adc0c9c6d568f4a97f9ea","started":true,"volumeMounts":[{"name":"kube-api-access-wndsg","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-tbhsg","generateName":"daemon-set-","namespace":"daemonsets-5945","uid":"86b39964-2909-4f28-b9e0-93147140860b","resourceVersion":"17800","creationTimestamp":"2024-12-21T12:54:53Z","deletionTimestamp":"2024-12-21T12:55:24Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"6fc6fb49db","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"ef8dd010-1788-4565-8b5a-27f11207009a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-21T12:54:53Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"ef8dd010-1788-4565-8b5a-27f11207009a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-21T12:54:54Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.235.177\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ljm7d","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ljm7d","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-18-134","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-18-134"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:54Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-21T12:54:53Z"}],"hostIP":"172.31.18.134","hostIPs":[{"ip":"172.31.18.134"}],"podIP":"192.168.235.177","podIPs":[{"ip":"192.168.235.177"}],"startTime":"2024-12-21T12:54:53Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-21T12:54:53Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://7a85a812859aeab66973fd83e38ed83f11e5e01bbff2b6c1c3c9340ce1ca4f1a","started":true,"volumeMounts":[{"name":"kube-api-access-ljm7d","mountPath":"/var/run/secrets/kubernetes.io/serviceaccount","readOnly":true,"recursiveReadOnly":"Disabled"}]}],"qosClass":"BestEffort"}}]}

  I1221 12:54:54.495856 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5945" for this suite. @ 12/21/24 12:54:54.499
• [1.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/21/24 12:54:54.508
  I1221 12:54:54.508744 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:54:54.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:54.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:54.525
  STEP: Creating a pod to test downward api env vars @ 12/21/24 12:54:54.528
  STEP: Saw pod success @ 12/21/24 12:54:58.556
  I1221 12:54:58.561154 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downward-api-63933750-0526-43ef-9bbc-e51760933b93 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 12:54:58.572
  I1221 12:54:58.590954 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1766" for this suite. @ 12/21/24 12:54:58.594
• [4.094 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 12/21/24 12:54:58.602
  I1221 12:54:58.602688 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/21/24 12:54:58.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:58.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:58.62
  I1221 12:54:58.626355 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1970" for this suite. @ 12/21/24 12:54:58.632
• [0.038 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:62
  STEP: Creating a kubernetes client @ 12/21/24 12:54:58.641
  I1221 12:54:58.641099 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename field-validation @ 12/21/24 12:54:58.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:58.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:58.658
  STEP: apply creating a deployment @ 12/21/24 12:54:58.661
  I1221 12:54:58.678070 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8181" for this suite. @ 12/21/24 12:54:58.682
• [0.051 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:940
  STEP: Creating a kubernetes client @ 12/21/24 12:54:58.692
  I1221 12:54:58.692521 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 12:54:58.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:58.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:58.714
  STEP: Creating a ResourceQuota @ 12/21/24 12:54:58.716
  STEP: Getting a ResourceQuota @ 12/21/24 12:54:58.721
  STEP: Updating a ResourceQuota @ 12/21/24 12:54:58.724
  STEP: Verifying a ResourceQuota was modified @ 12/21/24 12:54:58.736
  STEP: Deleting a ResourceQuota @ 12/21/24 12:54:58.741
  STEP: Verifying the deleted ResourceQuota @ 12/21/24 12:54:58.751
  I1221 12:54:58.754795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6027" for this suite. @ 12/21/24 12:54:58.76
• [0.078 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/21/24 12:54:58.77
  I1221 12:54:58.770539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 12:54:58.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:54:58.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:54:58.787
  STEP: Saw pod success @ 12/21/24 12:55:04.853
  I1221 12:55:04.857068 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod client-envvars-c3642d0c-101d-4169-b14d-111196bfdb06 container env3cont: <nil>
  STEP: delete the pod @ 12/21/24 12:55:04.875
  I1221 12:55:04.895178 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-778" for this suite. @ 12/21/24 12:55:04.9
• [6.137 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/21/24 12:55:04.907
  I1221 12:55:04.907985 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 12:55:04.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:55:04.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:55:04.927
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/21/24 12:55:04.929
  STEP: Saw pod success @ 12/21/24 12:55:08.955
  I1221 12:55:08.960781 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-2ad3ec63-f032-49f4-8680-b1447f151ef8 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 12:55:08.969
  I1221 12:55:08.991896 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6552" for this suite. @ 12/21/24 12:55:08.996
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:127
  STEP: Creating a kubernetes client @ 12/21/24 12:55:09.006
  I1221 12:55:09.006457 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-preemption @ 12/21/24 12:55:09.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:55:09.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:55:09.027
  I1221 12:55:09.047078 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1221 12:56:09.052427 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/21/24 12:56:09.057
  I1221 12:56:09.080005 19 preemption.go:175] Created pod: pod0-0-sched-preemption-low-priority
  I1221 12:56:09.087708 19 preemption.go:175] Created pod: pod0-1-sched-preemption-medium-priority
  I1221 12:56:09.112188 19 preemption.go:175] Created pod: pod1-0-sched-preemption-medium-priority
  I1221 12:56:09.122712 19 preemption.go:175] Created pod: pod1-1-sched-preemption-medium-priority
  I1221 12:56:09.141906 19 preemption.go:175] Created pod: pod2-0-sched-preemption-medium-priority
  I1221 12:56:09.150254 19 preemption.go:175] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/21/24 12:56:09.15
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/21/24 12:56:11.182
  I1221 12:56:15.280776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7473" for this suite. @ 12/21/24 12:56:15.284
• [66.287 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:90
  STEP: Creating a kubernetes client @ 12/21/24 12:56:15.293
  I1221 12:56:15.293309 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename disruption @ 12/21/24 12:56:15.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:15.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:15.313
  STEP: Creating a kubernetes client @ 12/21/24 12:56:15.316
  I1221 12:56:15.316344 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename disruption-2 @ 12/21/24 12:56:15.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:15.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:15.333
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:56:15.34
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:56:17.351
  STEP: Waiting for the pdb to be processed @ 12/21/24 12:56:19.364
  STEP: listing a collection of PDBs across all namespaces @ 12/21/24 12:56:21.369
  STEP: listing a collection of PDBs in namespace disruption-7910 @ 12/21/24 12:56:21.372
  STEP: deleting a collection of PDBs @ 12/21/24 12:56:21.376
  STEP: Waiting for the PDB collection to be deleted @ 12/21/24 12:56:21.392
  I1221 12:56:21.397102 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9171" for this suite. @ 12/21/24 12:56:21.401
  I1221 12:56:21.410868 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7910" for this suite. @ 12/21/24 12:56:21.414
• [6.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/21/24 12:56:21.423
  I1221 12:56:21.423897 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/21/24 12:56:21.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:21.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:21.441
  STEP: Creating 50 configmaps @ 12/21/24 12:56:21.444
  STEP: Creating RC which spawns configmap-volume pods @ 12/21/24 12:56:21.701
  I1221 12:56:21.826036 19 resource.go:87] Pod name wrapped-volume-race-5da448d6-fe08-44fd-b388-cb782588b87d: Found 3 pods out of 5
  I1221 12:56:26.833251 19 resource.go:87] Pod name wrapped-volume-race-5da448d6-fe08-44fd-b388-cb782588b87d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/21/24 12:56:26.833
  STEP: Creating RC which spawns configmap-volume pods @ 12/21/24 12:56:26.861
  I1221 12:56:26.876264 19 resource.go:87] Pod name wrapped-volume-race-6fa90f43-16ee-4384-ae36-1236ecca5e0b: Found 0 pods out of 5
  I1221 12:56:31.886069 19 resource.go:87] Pod name wrapped-volume-race-6fa90f43-16ee-4384-ae36-1236ecca5e0b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/21/24 12:56:31.886
  STEP: Creating RC which spawns configmap-volume pods @ 12/21/24 12:56:31.91
  I1221 12:56:31.927221 19 resource.go:87] Pod name wrapped-volume-race-df7c2509-96fa-44e0-a917-203912d982e1: Found 0 pods out of 5
  I1221 12:56:36.937466 19 resource.go:87] Pod name wrapped-volume-race-df7c2509-96fa-44e0-a917-203912d982e1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/21/24 12:56:36.937
  STEP: deleting ReplicationController wrapped-volume-race-df7c2509-96fa-44e0-a917-203912d982e1 in namespace emptydir-wrapper-2693, will wait for the garbage collector to delete the pods @ 12/21/24 12:56:36.96
  I1221 12:56:37.025408 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-df7c2509-96fa-44e0-a917-203912d982e1 took: 11.679582ms
  I1221 12:56:37.126298 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-df7c2509-96fa-44e0-a917-203912d982e1 pods took: 100.886963ms
  STEP: deleting ReplicationController wrapped-volume-race-6fa90f43-16ee-4384-ae36-1236ecca5e0b in namespace emptydir-wrapper-2693, will wait for the garbage collector to delete the pods @ 12/21/24 12:56:38.527
  I1221 12:56:38.592474 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-6fa90f43-16ee-4384-ae36-1236ecca5e0b took: 10.368007ms
  I1221 12:56:38.693553 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-6fa90f43-16ee-4384-ae36-1236ecca5e0b pods took: 101.074611ms
  STEP: deleting ReplicationController wrapped-volume-race-5da448d6-fe08-44fd-b388-cb782588b87d in namespace emptydir-wrapper-2693, will wait for the garbage collector to delete the pods @ 12/21/24 12:56:39.794
  I1221 12:56:39.859359 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-5da448d6-fe08-44fd-b388-cb782588b87d took: 9.684645ms
  I1221 12:56:39.959538 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-5da448d6-fe08-44fd-b388-cb782588b87d pods took: 100.170427ms
  STEP: Cleaning up the configMaps @ 12/21/24 12:56:41.56
  I1221 12:56:41.951167 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-2693" for this suite. @ 12/21/24 12:56:41.956
• [20.540 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/21/24 12:56:41.963
  I1221 12:56:41.963671 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename controllerrevisions @ 12/21/24 12:56:41.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:41.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:41.984
  STEP: Creating DaemonSet "e2e-5kkz7-daemon-set" @ 12/21/24 12:56:42.008
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/21/24 12:56:42.015
  I1221 12:56:42.019345 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:56:42.019374 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:56:42.022684 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5kkz7-daemon-set: 0
  I1221 12:56:42.022697 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:56:43.020661 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:56:43.020699 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:56:43.025437 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5kkz7-daemon-set: 0
  I1221 12:56:43.025458 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 12:56:44.024228 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:56:44.024270 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 12:56:44.029535 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5kkz7-daemon-set: 3
  I1221 12:56:44.029554 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-5kkz7-daemon-set
  STEP: Confirm DaemonSet "e2e-5kkz7-daemon-set" successfully created with "daemonset-name=e2e-5kkz7-daemon-set" label @ 12/21/24 12:56:44.034
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-5kkz7-daemon-set" @ 12/21/24 12:56:44.045
  I1221 12:56:44.049539 19 controller_revision.go:162] Located ControllerRevision: "e2e-5kkz7-daemon-set-688bb67d6b"
  STEP: Patching ControllerRevision "e2e-5kkz7-daemon-set-688bb67d6b" @ 12/21/24 12:56:44.054
  I1221 12:56:44.067761 19 controller_revision.go:173] e2e-5kkz7-daemon-set-688bb67d6b has been patched
  STEP: Create a new ControllerRevision @ 12/21/24 12:56:44.067
  I1221 12:56:44.076714 19 controller_revision.go:191] Created ControllerRevision: e2e-5kkz7-daemon-set-6b7498cc7b
  STEP: Confirm that there are two ControllerRevisions @ 12/21/24 12:56:44.076
  I1221 12:56:44.076768 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1221 12:56:44.081547 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-5kkz7-daemon-set-688bb67d6b" @ 12/21/24 12:56:44.081
  STEP: Confirm that there is only one ControllerRevision @ 12/21/24 12:56:44.089
  I1221 12:56:44.089440 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1221 12:56:44.094818 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-5kkz7-daemon-set-6b7498cc7b" @ 12/21/24 12:56:44.102
  I1221 12:56:44.113085 19 controller_revision.go:220] e2e-5kkz7-daemon-set-6b7498cc7b has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/21/24 12:56:44.113
  W1221 12:56:44.124673      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/21/24 12:56:44.124
  I1221 12:56:44.124785 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1221 12:56:45.125668 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1221 12:56:45.130851 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-5kkz7-daemon-set-6b7498cc7b=updated" @ 12/21/24 12:56:45.13
  STEP: Confirm that there is only one ControllerRevision @ 12/21/24 12:56:45.143
  I1221 12:56:45.144009 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1221 12:56:45.148701 19 controller_revision.go:265] Found 1 ControllerRevisions
  I1221 12:56:45.152270 19 controller_revision.go:246] ControllerRevision "e2e-5kkz7-daemon-set-56c49d9" has revision 3
  STEP: Deleting DaemonSet "e2e-5kkz7-daemon-set" @ 12/21/24 12:56:45.156
  STEP: deleting DaemonSet.extensions e2e-5kkz7-daemon-set in namespace controllerrevisions-8648, will wait for the garbage collector to delete the pods @ 12/21/24 12:56:45.157
  I1221 12:56:45.220473 19 resources.go:139] Deleting DaemonSet.extensions e2e-5kkz7-daemon-set took: 8.095006ms
  I1221 12:56:45.320721 19 resources.go:163] Terminating DaemonSet.extensions e2e-5kkz7-daemon-set pods took: 100.2423ms
  I1221 12:56:46.527104 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-5kkz7-daemon-set: 0
  I1221 12:56:46.527135 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-5kkz7-daemon-set
  I1221 12:56:46.532167 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19023"},"items":null}

  I1221 12:56:46.536789 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19023"},"items":null}

  I1221 12:56:46.553728 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8648" for this suite. @ 12/21/24 12:56:46.558
• [4.603 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/21/24 12:56:46.566
  I1221 12:56:46.566949 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 12:56:46.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:46.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:46.586
  STEP: Creating a pod to test downward api env vars @ 12/21/24 12:56:46.59
  STEP: Saw pod success @ 12/21/24 12:56:48.61
  I1221 12:56:48.614568 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downward-api-6bd25045-e4e4-4f93-8a7f-0866f7eab616 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 12:56:48.63
  I1221 12:56:48.654230 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2365" for this suite. @ 12/21/24 12:56:48.658
• [2.100 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/21/24 12:56:48.667
  I1221 12:56:48.667184 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/21/24 12:56:48.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:48.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:48.684
  I1221 12:56:48.687254 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 12:56:49.716277 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-51" for this suite. @ 12/21/24 12:56:49.721
• [1.064 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/21/24 12:56:49.731
  I1221 12:56:49.731679 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename daemonsets @ 12/21/24 12:56:49.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:49.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:49.754
  I1221 12:56:49.787387 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/21/24 12:56:49.793
  I1221 12:56:49.798882 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:56:49.798908 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/21/24 12:56:49.798
  I1221 12:56:49.821573 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:56:49.821592 19 fixtures.go:130] Node ip-172-31-68-100 is running 0 daemon pod, expected 1
  I1221 12:56:50.822884 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:56:50.822919 19 fixtures.go:130] Node ip-172-31-68-100 is running 0 daemon pod, expected 1
  I1221 12:56:51.822438 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1221 12:56:51.822471 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/21/24 12:56:51.825
  I1221 12:56:51.848628 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1221 12:56:51.848657 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1221 12:56:52.848393 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:56:52.848428 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/21/24 12:56:52.848
  I1221 12:56:52.862907 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:56:52.862926 19 fixtures.go:130] Node ip-172-31-68-100 is running 0 daemon pod, expected 1
  I1221 12:56:53.862506 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:56:53.862538 19 fixtures.go:130] Node ip-172-31-68-100 is running 0 daemon pod, expected 1
  I1221 12:56:54.861565 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1221 12:56:54.861600 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/21/24 12:56:54.868
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2361, will wait for the garbage collector to delete the pods @ 12/21/24 12:56:54.868
  I1221 12:56:54.930979 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.688258ms
  I1221 12:56:55.031592 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.610121ms
  I1221 12:56:56.336942 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 12:56:56.336977 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1221 12:56:56.341542 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19291"},"items":null}

  I1221 12:56:56.345879 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19291"},"items":null}

  I1221 12:56:56.371642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2361" for this suite. @ 12/21/24 12:56:56.377
• [6.653 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/21/24 12:56:56.385
  I1221 12:56:56.385093 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename apf @ 12/21/24 12:56:56.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:56.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:56.404
  STEP: getting /apis @ 12/21/24 12:56:56.407
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/21/24 12:56:56.41
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/21/24 12:56:56.411
  STEP: creating @ 12/21/24 12:56:56.412
  STEP: getting @ 12/21/24 12:56:56.43
  STEP: listing @ 12/21/24 12:56:56.435
  STEP: watching @ 12/21/24 12:56:56.439
  I1221 12:56:56.439157 19 flowcontrol.go:620] starting watch
  STEP: patching @ 12/21/24 12:56:56.44
  STEP: updating @ 12/21/24 12:56:56.445
  I1221 12:56:56.454623 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 12/21/24 12:56:56.454
  STEP: patching /status @ 12/21/24 12:56:56.459
  STEP: updating /status @ 12/21/24 12:56:56.465
  STEP: deleting @ 12/21/24 12:56:56.477
  STEP: deleting a collection @ 12/21/24 12:56:56.493
  I1221 12:56:56.517988 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9822" for this suite. @ 12/21/24 12:56:56.523
• [0.146 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:444
  STEP: Creating a kubernetes client @ 12/21/24 12:56:56.531
  I1221 12:56:56.531559 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/21/24 12:56:56.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:56:56.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:56:56.549
  I1221 12:56:56.551839 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1221 12:57:56.552472 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1221 12:57:56.558249 19 taints.go:144] Starting informer...
  STEP: Starting pods... @ 12/21/24 12:57:56.558
  I1221 12:57:56.783621 19 taints.go:463] Pod1 is running on ip-172-31-68-100. Tainting Node
  I1221 12:57:59.007041 19 taints.go:471] Pod2 is running on ip-172-31-68-100. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/21/24 12:57:59.007
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/21/24 12:57:59.016
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/21/24 12:57:59.021
  I1221 12:58:04.736066 19 taints.go:492] Noticed Pod "taint-eviction-b1" gets evicted.
  I1221 12:58:24.473501 19 taints.go:492] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/21/24 12:58:24.485
  I1221 12:58:24.489118 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-9162" for this suite. @ 12/21/24 12:58:24.493
• [87.974 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/21/24 12:58:24.505
  I1221 12:58:24.505607 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/21/24 12:58:24.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:58:24.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:58:24.532
  STEP: Cleaning up the secret @ 12/21/24 12:58:26.574
  STEP: Cleaning up the configmap @ 12/21/24 12:58:26.583
  STEP: Cleaning up the pod @ 12/21/24 12:58:26.591
  I1221 12:58:26.608620 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5926" for this suite. @ 12/21/24 12:58:26.612
• [2.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 12/21/24 12:58:26.622
  I1221 12:58:26.622397 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 12:58:26.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 12:58:26.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 12:58:26.64
  STEP: Creating pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443 @ 12/21/24 12:58:26.643
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 12:58:28.668
  I1221 12:58:28.672605 19 container_probe.go:1749] Initial restart count of pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 is 0
  I1221 12:58:28.676864 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:30.683531 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:32.689583 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:34.696608 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:36.703120 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:38.709689 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:40.715862 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:42.721171 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:44.727840 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:46.734484 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:48.740796 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:50.747914 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:52.754582 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:54.760596 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:56.767570 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:58:58.773407 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:00.780421 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:02.786410 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:04.793908 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:06.800382 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:08.807233 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:10.813111 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:12.819905 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:14.825935 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:16.832229 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:18.839644 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:20.845853 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:22.851967 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:24.857637 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:26.863378 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:28.869531 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:30.874610 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:32.880951 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:34.885714 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:36.892368 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:38.898748 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:40.904025 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:42.910141 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:44.915095 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:46.921494 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:48.927481 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:50.934280 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:52.941391 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:54.946277 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:56.953049 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 12:59:58.959680 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:00.965811 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:02.971516 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:04.978039 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:06.985197 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:08.991552 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:10.998421 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:13.005315 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:15.011570 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:17.019304 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:19.024841 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:21.030382 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:23.034705 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:25.040124 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:27.045555 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:29.052051 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:31.057312 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:33.062812 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:35.069215 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:37.074834 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:39.079927 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:41.086680 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:43.093391 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:45.099288 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:47.104462 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:49.110683 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:51.115952 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:53.122849 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:55.129191 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:57.136056 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:00:59.141121 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:01.148609 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:03.153672 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:05.160824 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:07.166855 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:09.173354 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:11.179272 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:13.184514 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:15.190618 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:17.196580 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:19.202479 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:21.207745 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:23.214524 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:25.220219 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:27.226024 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:29.233022 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:31.240060 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:33.246896 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:35.253356 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:37.258928 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:39.266188 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:41.272441 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:43.278493 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:45.286309 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:47.293398 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:49.298546 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:51.304524 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:53.309560 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:55.316012 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:57.321003 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:01:59.327622 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:01.333964 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:03.340854 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:05.348301 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:07.353295 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:09.359921 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:11.364847 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:13.371896 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:15.377652 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:17.383139 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:19.389596 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:21.396261 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:23.402041 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:25.408265 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  I1221 13:02:27.415369 19 container_probe.go:1759] Get pod test-grpc-e973ddc9-49f5-46a1-b280-b682b38a1723 in namespace container-probe-3443
  STEP: deleting the pod @ 12/21/24 13:02:29.416
  I1221 13:02:29.435410 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3443" for this suite. @ 12/21/24 13:02:29.439
• [242.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/21/24 13:02:29.449
  I1221 13:02:29.449710 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename proxy @ 12/21/24 13:02:29.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:02:29.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:02:29.478
  I1221 13:02:29.480311 19 proxy.go:293] Creating pod...
  I1221 13:02:31.500788 19 proxy.go:317] Creating service...
  I1221 13:02:31.513724 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/pods/agnhost/proxy/some/path/with/DELETE
  I1221 13:02:31.519133 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1221 13:02:31.519165 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/pods/agnhost/proxy/some/path/with/GET
  I1221 13:02:31.525076 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1221 13:02:31.525103 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/pods/agnhost/proxy/some/path/with/HEAD
  I1221 13:02:31.530103 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1221 13:02:31.530127 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/pods/agnhost/proxy/some/path/with/OPTIONS
  I1221 13:02:31.534042 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1221 13:02:31.534083 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/pods/agnhost/proxy/some/path/with/PATCH
  I1221 13:02:31.538842 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1221 13:02:31.538873 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/pods/agnhost/proxy/some/path/with/POST
  I1221 13:02:31.543600 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1221 13:02:31.543621 19 proxy.go:354] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/pods/agnhost/proxy/some/path/with/PUT
  I1221 13:02:31.547547 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1221 13:02:31.547569 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/services/test-service/proxy/some/path/with/DELETE
  I1221 13:02:31.554902 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1221 13:02:31.554930 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/services/test-service/proxy/some/path/with/GET
  I1221 13:02:31.563226 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1221 13:02:31.563252 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/services/test-service/proxy/some/path/with/HEAD
  I1221 13:02:31.569814 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1221 13:02:31.569836 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/services/test-service/proxy/some/path/with/OPTIONS
  I1221 13:02:31.578956 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1221 13:02:31.578980 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/services/test-service/proxy/some/path/with/PATCH
  I1221 13:02:31.587145 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1221 13:02:31.587172 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/services/test-service/proxy/some/path/with/POST
  I1221 13:02:31.592846 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1221 13:02:31.592874 19 proxy.go:365] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-7797/services/test-service/proxy/some/path/with/PUT
  I1221 13:02:31.600409 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1221 13:02:31.600523 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7797" for this suite. @ 12/21/24 13:02:31.604
• [2.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/21/24 13:02:31.612
  I1221 13:02:31.612749 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename server-version @ 12/21/24 13:02:31.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:02:31.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:02:31.634
  STEP: Request ServerVersion @ 12/21/24 13:02:31.636
  STEP: Confirm major version @ 12/21/24 13:02:31.637
  I1221 13:02:31.637515 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 12/21/24 13:02:31.637
  I1221 13:02:31.637539 19 server_version.go:58] cleanMinorVersion: 31
  I1221 13:02:31.637547 19 server_version.go:62] Minor version: 31
  I1221 13:02:31.637658 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-407" for this suite. @ 12/21/24 13:02:31.642
• [0.038 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/21/24 13:02:31.65
  I1221 13:02:31.650745 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:02:31.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:02:31.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:02:31.671
  STEP: Creating the pod @ 12/21/24 13:02:31.674
  I1221 13:02:34.234543 19 pod_client.go:173] Successfully updated pod "annotationupdate6a1e2390-3ac5-4d80-a141-44bf43c58201"
  I1221 13:02:36.254713 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9905" for this suite. @ 12/21/24 13:02:36.258
• [4.616 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1260
  STEP: Creating a kubernetes client @ 12/21/24 13:02:36.267
  I1221 13:02:36.267019 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:02:36.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:02:36.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:02:36.289
  STEP: creating service nodeport-test with type=NodePort in namespace services-1280 @ 12/21/24 13:02:36.292
  STEP: creating replication controller nodeport-test in namespace services-1280 @ 12/21/24 13:02:36.316
  I1221 13:02:36.325662      19 runners.go:193] Created replication controller with name: nodeport-test, namespace: services-1280, replica count: 2
  I1221 13:02:39.377398      19 runners.go:193] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 13:02:39.377554 19 resource.go:361] Creating new exec pod
  I1221 13:02:42.402256 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1280 exec execpod5hr2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1221 13:02:42.493478 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1221 13:02:42.493517 19 builder.go:147] stdout: "nodeport-test-mc7jk"
  I1221 13:02:42.493598 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1280 exec execpod5hr2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.167 80'
  I1221 13:02:42.568324 19 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 10.152.183.167 80\nConnection to 10.152.183.167 80 port [tcp/http] succeeded!\n"
  I1221 13:02:42.568385 19 builder.go:147] stdout: "nodeport-test-mc7jk"
  I1221 13:02:42.568459 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1280 exec execpod5hr2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.134 30283'
  I1221 13:02:42.645642 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.134 30283\nConnection to 172.31.18.134 30283 port [tcp/*] succeeded!\n"
  I1221 13:02:42.645680 19 builder.go:147] stdout: "nodeport-test-6szvg"
  I1221 13:02:42.645755 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1280 exec execpod5hr2d -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.100 30283'
  I1221 13:02:42.724030 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.100 30283\nConnection to 172.31.68.100 30283 port [tcp/*] succeeded!\n"
  I1221 13:02:42.724069 19 builder.go:147] stdout: "nodeport-test-6szvg"
  I1221 13:02:42.724201 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1280" for this suite. @ 12/21/24 13:02:42.729
• [6.471 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:247
  STEP: Creating a kubernetes client @ 12/21/24 13:02:42.738
  I1221 13:02:42.738490 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:02:42.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:02:42.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:02:42.759
  STEP: Setting up server cert @ 12/21/24 13:02:42.784
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:02:42.921
  STEP: Deploying the webhook pod @ 12/21/24 13:02:42.932
  STEP: Wait for the deployment to be ready @ 12/21/24 13:02:42.946
  I1221 13:02:42.955854 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:02:44.971
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:02:44.983
  I1221 13:02:45.983587 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/21/24 13:02:45.994
  STEP: create a configmap that should be updated by the webhook @ 12/21/24 13:02:46.008
  I1221 13:02:46.077549 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8804" for this suite. @ 12/21/24 13:02:46.081
  STEP: Destroying namespace "webhook-markers-8266" for this suite. @ 12/21/24 13:02:46.089
• [3.359 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:196
  STEP: Creating a kubernetes client @ 12/21/24 13:02:46.097
  I1221 13:02:46.097922 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:02:46.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:02:46.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:02:46.115
  STEP: Setting up server cert @ 12/21/24 13:02:46.138
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:02:46.248
  STEP: Deploying the webhook pod @ 12/21/24 13:02:46.255
  STEP: Wait for the deployment to be ready @ 12/21/24 13:02:46.269
  I1221 13:02:46.278643 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:02:48.294
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:02:48.31
  I1221 13:02:49.311532 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/21/24 13:02:49.32
  STEP: create a pod that should be denied by the webhook @ 12/21/24 13:02:49.335
  STEP: create a pod that causes the webhook to hang @ 12/21/24 13:02:49.345
  STEP: create a configmap that should be denied by the webhook @ 12/21/24 13:02:59.352
  STEP: create a configmap that should be admitted by the webhook @ 12/21/24 13:02:59.382
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/21/24 13:02:59.393
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/21/24 13:02:59.403
  STEP: create a namespace that bypass the webhook @ 12/21/24 13:02:59.409
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/21/24 13:02:59.424
  I1221 13:02:59.490491 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8075" for this suite. @ 12/21/24 13:02:59.495
  STEP: Destroying namespace "webhook-markers-4778" for this suite. @ 12/21/24 13:02:59.51
  STEP: Destroying namespace "exempted-namespace-5362" for this suite. @ 12/21/24 13:02:59.519
• [13.429 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/21/24 13:02:59.526
  I1221 13:02:59.526618 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename containers @ 12/21/24 13:02:59.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:02:59.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:02:59.546
  STEP: Creating a pod to test override arguments @ 12/21/24 13:02:59.549
  STEP: Saw pod success @ 12/21/24 13:03:03.576
  I1221 13:03:03.580970 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod client-containers-9e2be827-eda5-4e24-8007-21729343f188 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:03:03.597
  I1221 13:03:03.618982 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5635" for this suite. @ 12/21/24 13:03:03.622
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/21/24 13:03:03.63
  I1221 13:03:03.630379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:03:03.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:03.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:03.652
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/21/24 13:03:03.654
  STEP: Saw pod success @ 12/21/24 13:03:07.681
  I1221 13:03:07.686602 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-0860ba4d-e003-4035-8f09-8a1f942d5c5c container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:03:07.695
  I1221 13:03:07.716773 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9463" for this suite. @ 12/21/24 13:03:07.722
• [4.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 12/21/24 13:03:07.731
  I1221 13:03:07.731681 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 13:03:07.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:07.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:07.749
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/21/24 13:03:07.752
  I1221 13:03:07.752816 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:03:09.052477 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:03:13.924449 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4738" for this suite. @ 12/21/24 13:03:13.931
• [6.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/21/24 13:03:13.938
  I1221 13:03:13.938861 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:03:13.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:13.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:13.957
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:03:13.96
  STEP: Saw pod success @ 12/21/24 13:03:17.992
  I1221 13:03:17.997423 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-6482b098-f0aa-49af-b764-bbea737e0985 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:03:18.005
  I1221 13:03:18.029199 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5115" for this suite. @ 12/21/24 13:03:18.034
• [4.104 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:111
  STEP: Creating a kubernetes client @ 12/21/24 13:03:18.043
  I1221 13:03:18.043399 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename disruption @ 12/21/24 13:03:18.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:18.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:18.064
  STEP: creating the pdb @ 12/21/24 13:03:18.066
  STEP: Waiting for the pdb to be processed @ 12/21/24 13:03:18.071
  STEP: updating the pdb @ 12/21/24 13:03:20.077
  STEP: Waiting for the pdb to be processed @ 12/21/24 13:03:20.087
  STEP: patching the pdb @ 12/21/24 13:03:22.094
  STEP: Waiting for the pdb to be processed @ 12/21/24 13:03:22.107
  STEP: Waiting for the pdb to be deleted @ 12/21/24 13:03:24.122
  I1221 13:03:24.125930 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3901" for this suite. @ 12/21/24 13:03:24.129
• [6.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/21/24 13:03:24.14
  I1221 13:03:24.140455 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svcaccounts @ 12/21/24 13:03:24.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:24.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:24.159
  STEP: creating a ServiceAccount @ 12/21/24 13:03:24.162
  STEP: watching for the ServiceAccount to be added @ 12/21/24 13:03:24.172
  STEP: patching the ServiceAccount @ 12/21/24 13:03:24.174
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/21/24 13:03:24.18
  STEP: deleting the ServiceAccount @ 12/21/24 13:03:24.183
  I1221 13:03:24.202427 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-190" for this suite. @ 12/21/24 13:03:24.207
• [0.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1473
  STEP: Creating a kubernetes client @ 12/21/24 13:03:24.215
  I1221 13:03:24.215604 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:03:24.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:24.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:24.233
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-1977 @ 12/21/24 13:03:24.235
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/21/24 13:03:24.246
  STEP: creating service externalsvc in namespace services-1977 @ 12/21/24 13:03:24.246
  STEP: creating replication controller externalsvc in namespace services-1977 @ 12/21/24 13:03:24.265
  I1221 13:03:24.272126      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-1977, replica count: 2
  I1221 13:03:27.324392      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/21/24 13:03:27.329
  I1221 13:03:27.349018 19 resource.go:361] Creating new exec pod
  I1221 13:03:29.370651 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1977 exec execpodl2jm4 -- /bin/sh -x -c nslookup clusterip-service.services-1977.svc.cluster.local'
  I1221 13:03:29.452231 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-1977.svc.cluster.local\n"
  I1221 13:03:29.452274 19 builder.go:147] stdout: "Server:\t\t10.152.183.151\nAddress:\t10.152.183.151#53\n\nclusterip-service.services-1977.svc.cluster.local\tcanonical name = externalsvc.services-1977.svc.cluster.local.\nName:\texternalsvc.services-1977.svc.cluster.local\nAddress: 10.152.183.236\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1977, will wait for the garbage collector to delete the pods @ 12/21/24 13:03:29.452
  I1221 13:03:29.515835 19 resources.go:139] Deleting ReplicationController externalsvc took: 9.748516ms
  I1221 13:03:29.616689 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.849657ms
  I1221 13:03:32.139033 19 service.go:1482] Cleaning up the ClusterIP to ExternalName test service
  I1221 13:03:32.154728 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1977" for this suite. @ 12/21/24 13:03:32.161
• [7.956 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:348
  STEP: Creating a kubernetes client @ 12/21/24 13:03:32.172
  I1221 13:03:32.172651 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename field-validation @ 12/21/24 13:03:32.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:32.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:32.192
  I1221 13:03:32.194655 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  W1221 13:03:32.195125      19 field_validation.go:421] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000e072b0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1221 13:03:34.731134      19 warnings.go:70] unknown field "alpha"
  W1221 13:03:34.731157      19 warnings.go:70] unknown field "beta"
  W1221 13:03:34.731159      19 warnings.go:70] unknown field "delta"
  W1221 13:03:34.731162      19 warnings.go:70] unknown field "epsilon"
  W1221 13:03:34.731165      19 warnings.go:70] unknown field "gamma"
  I1221 13:03:35.283583 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-10" for this suite. @ 12/21/24 13:03:35.287
• [3.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/21/24 13:03:35.296
  I1221 13:03:35.296599 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename gc @ 12/21/24 13:03:35.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:35.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:35.319
  I1221 13:03:35.355533 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"bbe5500c-3565-4ee9-bb3b-a883ef262b3c", Controller:(*bool)(0xc00360356e), BlockOwnerDeletion:(*bool)(0xc00360356f)}}
  I1221 13:03:35.362063 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a6575805-6414-431e-884c-9ed96b018475", Controller:(*bool)(0xc003603a16), BlockOwnerDeletion:(*bool)(0xc003603a17)}}
  I1221 13:03:35.372050 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"e936cf59-8e97-4799-8815-1d75985f8b26", Controller:(*bool)(0xc003603ca6), BlockOwnerDeletion:(*bool)(0xc003603ca7)}}
  I1221 13:03:40.387415 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1134" for this suite. @ 12/21/24 13:03:40.392
• [5.103 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/21/24 13:03:40.399
  I1221 13:03:40.399514 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:03:40.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:40.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:40.423
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:03:40.429
  STEP: Saw pod success @ 12/21/24 13:03:44.458
  I1221 13:03:44.462641 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-c2b09049-33f1-4f02-b572-a9d05609db60 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:03:44.472
  I1221 13:03:44.493757 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9462" for this suite. @ 12/21/24 13:03:44.498
• [4.108 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/21/24 13:03:44.507
  I1221 13:03:44.507743 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename runtimeclass @ 12/21/24 13:03:44.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:44.52
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:44.522
  STEP: getting /apis @ 12/21/24 13:03:44.525
  STEP: getting /apis/node.k8s.io @ 12/21/24 13:03:44.532
  STEP: getting /apis/node.k8s.io/v1 @ 12/21/24 13:03:44.535
  STEP: creating @ 12/21/24 13:03:44.537
  STEP: watching @ 12/21/24 13:03:44.556
  I1221 13:03:44.556757 19 runtimeclass.go:275] starting watch
  STEP: getting @ 12/21/24 13:03:44.562
  STEP: listing @ 12/21/24 13:03:44.567
  STEP: patching @ 12/21/24 13:03:44.57
  STEP: updating @ 12/21/24 13:03:44.578
  I1221 13:03:44.583822 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 12/21/24 13:03:44.583
  STEP: deleting a collection @ 12/21/24 13:03:44.6
  I1221 13:03:44.621786 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2759" for this suite. @ 12/21/24 13:03:44.626
• [0.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:1054
  STEP: Creating a kubernetes client @ 12/21/24 13:03:44.634
  I1221 13:03:44.634974 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename job @ 12/21/24 13:03:44.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:44.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:44.654
  STEP: Creating a job @ 12/21/24 13:03:44.656
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/21/24 13:03:44.664
  STEP: patching /status @ 12/21/24 13:03:46.671
  STEP: updating /status @ 12/21/24 13:03:46.677
  STEP: get /status @ 12/21/24 13:03:46.686
  I1221 13:03:46.690606 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9914" for this suite. @ 12/21/24 13:03:46.695
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/21/24 13:03:46.704
  I1221 13:03:46.704252 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sysctl @ 12/21/24 13:03:46.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:46.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:46.723
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/21/24 13:03:46.725
  I1221 13:03:46.731134 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8913" for this suite. @ 12/21/24 13:03:46.734
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1066
  STEP: Creating a kubernetes client @ 12/21/24 13:03:46.745
  I1221 13:03:46.745492 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 13:03:46.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:03:46.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:03:46.763
  STEP: Creating resourceQuota "e2e-rq-status-nz22f" @ 12/21/24 13:03:46.77
  I1221 13:03:46.781771 19 resource_quota.go:1102] Resource quota "e2e-rq-status-nz22f" reports spec: hard cpu limit of 500m
  I1221 13:03:46.781795 19 resource_quota.go:1104] Resource quota "e2e-rq-status-nz22f" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-nz22f" /status @ 12/21/24 13:03:46.781
  STEP: Confirm /status for "e2e-rq-status-nz22f" resourceQuota via watch @ 12/21/24 13:03:46.829
  I1221 13:03:46.831143 19 resource_quota.go:1131] observed resourceQuota "e2e-rq-status-nz22f" in namespace "resourcequota-9570" with hard status: v1.ResourceList(nil)
  I1221 13:03:46.831198 19 resource_quota.go:1134] Found resourceQuota "e2e-rq-status-nz22f" in namespace "resourcequota-9570" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1221 13:03:46.831215 19 resource_quota.go:1141] ResourceQuota "e2e-rq-status-nz22f" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/21/24 13:03:46.835
  I1221 13:03:46.843863 19 resource_quota.go:1152] Resource quota "e2e-rq-status-nz22f" reports spec: hard cpu limit of 1
  I1221 13:03:46.843883 19 resource_quota.go:1153] Resource quota "e2e-rq-status-nz22f" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-nz22f" /status @ 12/21/24 13:03:46.843
  STEP: Confirm /status for "e2e-rq-status-nz22f" resourceQuota via watch @ 12/21/24 13:03:46.85
  I1221 13:03:46.851946 19 resource_quota.go:1175] observed resourceQuota "e2e-rq-status-nz22f" in namespace "resourcequota-9570" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1221 13:03:46.851986 19 resource_quota.go:1178] Found resourceQuota "e2e-rq-status-nz22f" in namespace "resourcequota-9570" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1221 13:03:46.851995 19 resource_quota.go:1185] ResourceQuota "e2e-rq-status-nz22f" /status was patched
  STEP: Get "e2e-rq-status-nz22f" /status @ 12/21/24 13:03:46.852
  I1221 13:03:46.856956 19 resource_quota.go:1196] Resourcequota "e2e-rq-status-nz22f" reports status: hard cpu of 1
  I1221 13:03:46.856975 19 resource_quota.go:1198] Resourcequota "e2e-rq-status-nz22f" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-nz22f" /status before checking Spec is unchanged @ 12/21/24 13:03:46.861
  I1221 13:03:46.867039 19 resource_quota.go:1218] Resourcequota "e2e-rq-status-nz22f" reports status: hard cpu of 2
  I1221 13:03:46.867063 19 resource_quota.go:1220] Resourcequota "e2e-rq-status-nz22f" reports status: hard memory of 2Gi
  I1221 13:03:46.868385 19 resource_quota.go:1232] Found resourceQuota "e2e-rq-status-nz22f" in namespace "resourcequota-9570" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1221 13:03:46.872798 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a649d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64a68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:03:51.875763 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64c00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:03:56.877208 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64db0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64de0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64e10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:01.874386 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be2a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:06.876768 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a64fc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:11.874057 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be468), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be4b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:16.874250 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a651e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:21.876419 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65398), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a653e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:26.876841 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be798), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be7c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013be810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:31.877013 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65650), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:36.876805 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bea20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bea80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013beaf8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:41.877755 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a657e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65830), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65860), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:46.876902 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bed50), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bede0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bee28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:51.873761 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a659e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65a28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65a70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:04:56.877420 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65b78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65bc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65bf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:01.877652 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf050), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf098), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf0c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:06.877311 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65d88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65de8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003a65e18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:11.874513 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c000), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c030), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c078), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:16.877250 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf320), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf368), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf3b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:21.875268 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf530), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf578), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf5a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:26.878076 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c3a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c3f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:31.877566 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf770), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf7d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bf818), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:36.877682 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bfab8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bfb18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bfbd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:41.877033 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bfdd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bfe30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0013bfe90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:46.873435 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c0c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:51.874824 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c360), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c3a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c3f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:05:56.876071 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc168), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:01.878053 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc390), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:06.874371 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c648), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c6c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:11.876977 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c948), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3c9a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:16.877230 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3caf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3cb58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3cbe8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:21.874592 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc6a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:26.877660 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc8b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dc960), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:31.874243 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dcaf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dcb40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dcbb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:36.874580 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3ceb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3cf00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3cf60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:41.877215 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d0e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d110), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d158), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:46.875321 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d2c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d350), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:51.877857 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d548), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d5c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d5f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:06:56.877006 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3d8d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:01.876641 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3db00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3dba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3dbf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:06.877299 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3de00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3de48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c3de78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:11.877807 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d60d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6120), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:16.877749 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d62d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6330), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6378), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:21.875569 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d65b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6618), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6648), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:26.875604 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6858), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0043d6900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:31.874519 19 resource_quota.go:1263] ResourceQuota "e2e-rq-status-nz22f" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-nz22f", GenerateName:"", Namespace:"resourcequota-9570", SelfLink:"", UID:"13356ac1-0a9e-4e03-b8f1-afe36ebef6ad", ResourceVersion:"21136", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-nz22f"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dd020), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dd050), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 3, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0012dd0b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1221 13:07:36.877480 19 resource_quota.go:1260] ResourceQuota "e2e-rq-status-nz22f" Spec was unchanged and /status reset
  I1221 13:07:36.877614 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9570" for this suite. @ 12/21/24 13:07:36.882
• [230.146 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/21/24 13:07:36.892
  I1221 13:07:36.892218 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replication-controller @ 12/21/24 13:07:36.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:07:36.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:07:36.915
  STEP: Creating replication controller my-hostname-basic-0d9fdcdf-f383-4ab8-8661-03772482d68f @ 12/21/24 13:07:36.917
  I1221 13:07:36.927610 19 resource.go:87] Pod name my-hostname-basic-0d9fdcdf-f383-4ab8-8661-03772482d68f: Found 0 pods out of 1
  I1221 13:07:41.932606 19 resource.go:87] Pod name my-hostname-basic-0d9fdcdf-f383-4ab8-8661-03772482d68f: Found 1 pods out of 1
  I1221 13:07:41.932637 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-0d9fdcdf-f383-4ab8-8661-03772482d68f" are running
  I1221 13:07:41.936949 19 rc.go:523] Pod "my-hostname-basic-0d9fdcdf-f383-4ab8-8661-03772482d68f-bnbl7" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:07:38 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:07:36 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:07:38 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:07:38 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:07:36 +0000 UTC Reason: Message:}])
  I1221 13:07:41.936970 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/21/24 13:07:41.936
  I1221 13:07:41.950381 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-253" for this suite. @ 12/21/24 13:07:41.956
• [5.072 seconds]
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/21/24 13:07:41.964
  I1221 13:07:41.964320 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replication-controller @ 12/21/24 13:07:41.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:07:41.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:07:41.983
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/21/24 13:07:41.985
  STEP: When a replication controller with a matching selector is created @ 12/21/24 13:07:44.011
  STEP: Then the orphan pod is adopted @ 12/21/24 13:07:44.02
  I1221 13:07:45.031694 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9167" for this suite. @ 12/21/24 13:07:45.036
• [3.083 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/21/24 13:07:45.047
  I1221 13:07:45.047764 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename limitrange @ 12/21/24 13:07:45.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:07:45.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:07:45.064
  STEP: Creating a LimitRange @ 12/21/24 13:07:45.067
  STEP: Setting up watch @ 12/21/24 13:07:45.067
  STEP: Submitting a LimitRange @ 12/21/24 13:07:45.172
  STEP: Verifying LimitRange creation was observed @ 12/21/24 13:07:45.181
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/21/24 13:07:45.181
  I1221 13:07:45.189196 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1221 13:07:45.189224 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/21/24 13:07:45.189
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/21/24 13:07:45.197
  I1221 13:07:45.203474 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1221 13:07:45.203499 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/21/24 13:07:45.203
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/21/24 13:07:45.213
  I1221 13:07:45.217911 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1221 13:07:45.217937 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/21/24 13:07:45.217
  STEP: Failing to create a Pod with more than max resources @ 12/21/24 13:07:45.221
  STEP: Updating a LimitRange @ 12/21/24 13:07:45.226
  STEP: Verifying LimitRange updating is effective @ 12/21/24 13:07:45.243
  STEP: Creating a Pod with less than former min resources @ 12/21/24 13:07:47.249
  STEP: Failing to create a Pod with more than max resources @ 12/21/24 13:07:47.258
  STEP: Deleting a LimitRange @ 12/21/24 13:07:47.26
  STEP: Verifying the LimitRange was deleted @ 12/21/24 13:07:47.27
  I1221 13:07:52.280114 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/21/24 13:07:52.28
  I1221 13:07:52.291497 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5228" for this suite. @ 12/21/24 13:07:52.298
• [7.259 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:288
  STEP: Creating a kubernetes client @ 12/21/24 13:07:52.306
  I1221 13:07:52.306866 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 13:07:52.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:07:52.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:07:52.326
  STEP: Creating a test headless service @ 12/21/24 13:07:52.329
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-9736.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-9736.svc.cluster.local;sleep 1; done
   @ 12/21/24 13:07:52.335
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-9736.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-9736.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-9736.svc.cluster.local;sleep 1; done
   @ 12/21/24 13:07:52.335
  STEP: creating a pod to probe DNS @ 12/21/24 13:07:52.335
  STEP: submitting the pod to kubernetes @ 12/21/24 13:07:52.335
  STEP: retrieving the pod @ 12/21/24 13:07:54.361
  STEP: looking for the results for each expected name from probers @ 12/21/24 13:07:54.365
  I1221 13:07:54.371406 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.376803 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.381158 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.386959 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.392308 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.396943 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.402179 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.407831 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-9736.svc.cluster.local from pod dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b: the server could not find the requested resource (get pods dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b)
  I1221 13:07:54.407860 19 dns_common.go:489] Lookups using dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local wheezy_udp@dns-test-service-2.dns-9736.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-9736.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-9736.svc.cluster.local jessie_udp@dns-test-service-2.dns-9736.svc.cluster.local jessie_tcp@dns-test-service-2.dns-9736.svc.cluster.local]

  I1221 13:07:54.420426 19 dns_common.go:495] Pod client logs for webserver: 
  I1221 13:07:54.428516 19 dns_common.go:495] Pod client logs for querier: 
  I1221 13:07:54.436065 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1221 13:07:59.406682 19 dns_common.go:527] DNS probes using dns-9736/dns-test-ac6f33de-f2be-40ec-9eea-9f234315183b succeeded

  STEP: deleting the pod @ 12/21/24 13:07:59.406
  STEP: deleting the test headless service @ 12/21/24 13:07:59.426
  I1221 13:07:59.444513 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9736" for this suite. @ 12/21/24 13:07:59.449
• [7.152 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 12/21/24 13:07:59.459
  I1221 13:07:59.459045 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 13:07:59.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:07:59.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:07:59.479
  STEP: Creating pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913 @ 12/21/24 13:07:59.481
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 13:08:01.504
  I1221 13:08:01.508466 19 container_probe.go:1749] Initial restart count of pod liveness-7b666087-2948-4cf7-bad7-d181283d848c is 0
  I1221 13:08:01.512419 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:03.517485 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:05.524140 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:07.529563 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:09.535177 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:11.540428 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:13.546919 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:15.552761 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:17.558780 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:19.565160 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:21.571294 19 container_probe.go:1759] Get pod liveness-7b666087-2948-4cf7-bad7-d181283d848c in namespace container-probe-8913
  I1221 13:08:21.571350 19 container_probe.go:1763] Restart count of pod container-probe-8913/liveness-7b666087-2948-4cf7-bad7-d181283d848c is now 1 (20.062859073s elapsed)
  STEP: deleting the pod @ 12/21/24 13:08:21.571
  I1221 13:08:21.591060 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8913" for this suite. @ 12/21/24 13:08:21.594
• [22.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/21/24 13:08:21.604
  I1221 13:08:21.604930 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 13:08:21.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:08:21.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:08:21.622
  I1221 13:08:21.625191 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I1221 13:08:21.630485 19 deployment.go:1200] Waiting for observed generation 1
  I1221 13:08:23.643892 19 deployment.go:1205] Waiting for all required pods to come up
  I1221 13:08:23.649118 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/21/24 13:08:23.649
  I1221 13:08:23.649190 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1221 13:08:23.657661 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1221 13:08:23.668759 19 deployment.go:313] Updating deployment webserver-deployment
  I1221 13:08:23.668784 19 deployment.go:1224] Waiting for observed generation 2
  I1221 13:08:25.682489 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1221 13:08:25.686998 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1221 13:08:25.691953 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1221 13:08:25.704408 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1221 13:08:25.704439 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1221 13:08:25.708012 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1221 13:08:25.716272 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1221 13:08:25.716293 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1221 13:08:25.728026 19 deployment.go:313] Updating deployment webserver-deployment
  I1221 13:08:25.728051 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1221 13:08:25.736225 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1221 13:08:25.744373 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1221 13:08:25.767869 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8548b333-868a-41b5-afdd-69cda1e4769a",
      ResourceVersion: (string) (len=5) "22234",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-786f49d774\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1221 13:08:25.783976 19 deployment.go:39] New ReplicaSet "webserver-deployment-786f49d774" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-786f49d774",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
      ResourceVersion: (string) (len=5) "22229",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "8548b333-868a-41b5-afdd-69cda1e4769a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 35 34 38 62 33  33 33 2d 38 36 38 61 2d  |\"8548b333-868a-|
              00000120  34 31 62 35 2d 61 66 64  64 2d 36 39 63 64 61 31  |41b5-afdd-69cda1|
              00000130  65 34 37 36 39 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e4769a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:08:25.784424 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1221 13:08:25.784609 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
      ResourceVersion: (string) (len=5) "22227",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "8548b333-868a-41b5-afdd-69cda1e4769a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 35 34 38 62 33  33 33 2d 38 36 38 61 2d  |\"8548b333-868a-|
              00000120  34 31 62 35 2d 61 66 64  64 2d 36 39 63 64 61 31  |41b5-afdd-69cda1|
              00000130  65 34 37 36 39 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e4769a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:08:25.810502 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-282rp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-282rp",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fe265bf-dfec-410b-9c05-4232696e4656",
      ResourceVersion: (string) (len=5) "22260",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p5fbn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p5fbn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.811939 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-4q8ss" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-4q8ss",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a0dd95a-5658-45ac-b410-c9fbff250b3c",
      ResourceVersion: (string) (len=5) "22111",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  30 2e 31 31 5c 22 7d 22  |2.168.200.11\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-khpvf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-khpvf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=14) "192.168.200.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.200.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://11779ae524df839396f341a4f092daf63ad617fc1ec1c7e7d54ac8790b24eb8f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-khpvf",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.814173 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-52xkq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-52xkq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0e080ab-9f73-44ee-8c4c-bfccd5a25d55",
      ResourceVersion: (string) (len=5) "22242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jkngw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jkngw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.815110 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-7pgf8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-7pgf8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "615f76a1-8e98-44a3-a979-0d4792f36d50",
      ResourceVersion: (string) (len=5) "22086",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 38  2e 33 31 5c 22 7d 22 3a  |2.168.78.31\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-njh2g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-njh2g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-184",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.184"
        }
      },
      PodIP: (string) (len=13) "192.168.78.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.78.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://92622364ca42261e819907dc82dfc830501eae5567d523470febc9ef025acf6d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-njh2g",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.816910 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-9b678" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-9b678",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1a595d6-fcde-42f7-8261-d826ebe9e051",
      ResourceVersion: (string) (len=5) "22246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wk6t5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wk6t5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.817598 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-fdgmr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-fdgmr",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d20798dc-e740-4d1c-85ca-b45a82d8ec75",
      ResourceVersion: (string) (len=5) "22261",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2chd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2chd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.818291 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-j84vz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-j84vz",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f7f6c81-c6e4-4e14-98bf-32056ea3f297",
      ResourceVersion: (string) (len=5) "22233",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x68v9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x68v9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.819031 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-kk24t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-kk24t",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8375b79-9fd5-4f71-a7ad-db7b193e9c23",
      ResourceVersion: (string) (len=5) "22253",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmkbc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmkbc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-184",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.820503 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-ltnc4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-ltnc4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffadf359-cfce-4ef1-921c-c10229c4fa42",
      ResourceVersion: (string) (len=5) "22109",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 38  2e 33 32 5c 22 7d 22 3a  |2.168.78.32\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dnmsw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dnmsw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-184",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.184"
        }
      },
      PodIP: (string) (len=13) "192.168.78.32",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.78.32"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a8d4434f8e94dec5db9740d7e3df249e7d91cf57931a9f02bf2081f237811f76",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-dnmsw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.821966 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-qj4xh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-qj4xh",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "640c61b2-0d0b-473c-b53b-61d96f281183",
      ResourceVersion: (string) (len=5) "22247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mz2wf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mz2wf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.824558 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rqtw8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rqtw8",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e04e8a9b-1e86-4ff9-926a-cc5bf98191d8",
      ResourceVersion: (string) (len=5) "22248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8btrs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8btrs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.825738 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-rvfcx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-rvfcx",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2c10518-9f52-496f-b558-a563fff4c3a6",
      ResourceVersion: (string) (len=5) "22243",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-czvp4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-czvp4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.826788 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-s5mlb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-s5mlb",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d2e68df-33b0-41ee-ae0c-8a5c1b003cf6",
      ResourceVersion: (string) (len=5) "22262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tstzm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tstzm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.828125 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-v28bq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-v28bq",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffd8b98d-e634-4c78-acf4-b83082edb6a5",
      ResourceVersion: (string) (len=5) "22084",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 36 5c 22 7d  |2.168.235.136\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xjgjk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xjgjk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0e1039347866ad5fd027701c974536adb1f6b4477a1520c23b9276cf4e22183b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-xjgjk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.830169 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-w5qq4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-w5qq4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c919f53b-0210-45ca-9e5d-79dd46f0b893",
      ResourceVersion: (string) (len=5) "22079",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 38 5c 22 7d  |2.168.235.138\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-88rd2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-88rd2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7c5a9760dc3a0af74e41f6a6e92de2f156d347e0a009cba63378ac5837d609be",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-88rd2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.830993 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-xktq4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-xktq4",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3bd1c70-7735-412c-b575-c9fe577f84a7",
      ResourceVersion: (string) (len=5) "22075",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 33 37 5c 22 7d  |2.168.235.137\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2bhhq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2bhhq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.137",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.137"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c56eba3e375c96546b71202d5569b1111298bba65245d3a702feb1b89c12cb3d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2bhhq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.833994 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zcmrd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zcmrd",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea60ece8-c863-49fc-a840-574c2e79d4c2",
      ResourceVersion: (string) (len=5) "22107",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  30 2e 39 5c 22 7d 22 3a  |2.168.200.9\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nfcpm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nfcpm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=13) "192.168.200.9",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.200.9"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e6de13e6890369383cd9ac16fc77d1a0a41325d31b3ff225279af4e05c5b1bb0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nfcpm",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.836902 19 deployment.go:67] Pod "webserver-deployment-64bcfc6446-zfrvj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-64bcfc6446-zfrvj",
      GenerateName: (string) (len=32) "webserver-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33a25b0d-d57a-496b-9e0c-be16d37b110e",
      ResourceVersion: (string) (len=5) "22082",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "32b21370-450a-43fa-b3d7-6a9eb1346bb4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 32  62 32 31 33 37 30 2d 34  |d\":\"32b21370-4|
              00000090  35 30 61 2d 34 33 66 61  2d 62 33 64 37 2d 36 61  |50a-43fa-b3d7-6a|
              000000a0  39 65 62 31 33 34 36 62  62 34 5c 22 7d 22 3a 7b  |9eb1346bb4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 37 38  2e 33 30 5c 22 7d 22 3a  |2.168.78.30\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnpjc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnpjc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-184",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383302,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383301,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.184"
        }
      },
      PodIP: (string) (len=13) "192.168.78.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.78.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383301,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383302,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://855e40e1b12774514d1fa25b7a32404b7013c58096f9443f213ff0bccd78e3d5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wnpjc",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.838225 19 deployment.go:67] Pod "webserver-deployment-786f49d774-24fc5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-24fc5",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63f6218c-d362-42ad-bb9c-620ab9411c01",
      ResourceVersion: (string) (len=5) "22208",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 30 2e 31  33 5c 22 7d 22 3a 7b 22  |68.200.13\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bpmgn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bpmgn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=14) "192.168.200.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.200.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bpmgn",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.839277 19 deployment.go:67] Pod "webserver-deployment-786f49d774-2c44k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-2c44k",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d221460a-fd41-46b8-b1f8-f9c68d423cc7",
      ResourceVersion: (string) (len=5) "22251",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7m67",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7m67",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.841286 19 deployment.go:67] Pod "webserver-deployment-786f49d774-6rtwp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6rtwp",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e31ae500-5fc0-4b62-a193-70d04473c219",
      ResourceVersion: (string) (len=5) "22249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pc6sl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pc6sl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.842399 19 deployment.go:67] Pod "webserver-deployment-786f49d774-6xxhx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-6xxhx",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93797eb5-65b8-45fe-bcea-7b6ec1f4632e",
      ResourceVersion: (string) (len=5) "22255",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r2qww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r2qww",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.843369 19 deployment.go:67] Pod "webserver-deployment-786f49d774-7hc2h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-7hc2h",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8fc43dd2-e4cf-4fa7-baef-35aade25d4ad",
      ResourceVersion: (string) (len=5) "22257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z2d59",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z2d59",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.844787 19 deployment.go:67] Pod "webserver-deployment-786f49d774-95r8x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-95r8x",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33089f31-07e6-4e50-a4a7-99b7d0be117a",
      ResourceVersion: (string) (len=5) "22254",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h6m2c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h6m2c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.845676 19 deployment.go:67] Pod "webserver-deployment-786f49d774-dmlft" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-dmlft",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c63111e3-d8d1-4e80-9bca-052f9977547d",
      ResourceVersion: (string) (len=5) "22205",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 33 35 2e 31  34 30 5c 22 7d 22 3a 7b  |68.235.140\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2mbz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2mbz2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-2mbz2",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.847233 19 deployment.go:67] Pod "webserver-deployment-786f49d774-ftmfk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-ftmfk",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29ec72a5-541f-4e72-bad1-636b7444c278",
      ResourceVersion: (string) (len=5) "22238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nw6kn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nw6kn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-184",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.848256 19 deployment.go:67] Pod "webserver-deployment-786f49d774-hh8fv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-hh8fv",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fa81cc9e-d385-4e83-9313-98b3372559d1",
      ResourceVersion: (string) (len=5) "22203",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=708) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 30 30 2e 31  32 5c 22 7d 22 3a 7b 22  |68.200.12\"}":{"|
              000002a0  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              000002b0  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              000002c0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8ccb8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8ccb8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=14) "192.168.200.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.200.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-8ccb8",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.849448 19 deployment.go:67] Pod "webserver-deployment-786f49d774-pb2sm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-pb2sm",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52093a2e-7225-4a9f-bf18-2eb984af1735",
      ResourceVersion: (string) (len=5) "22214",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=707) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 37 38 2e 33 33  5c 22 7d 22 3a 7b 22 2e  |68.78.33\"}":{".|
              000002a0  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              000002b0  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              000002c0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m4d5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m4d5p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-9-184",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.9.184",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.9.184"
        }
      },
      PodIP: (string) (len=13) "192.168.78.33",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.78.33"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-m4d5p",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.850457 19 deployment.go:67] Pod "webserver-deployment-786f49d774-vmml4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-vmml4",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e03be837-1db9-4268-83dd-07581a82b07f",
      ResourceVersion: (string) (len=5) "22252",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383305,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383305,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6ktgh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6ktgh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.851255 19 deployment.go:67] Pod "webserver-deployment-786f49d774-wr75x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-786f49d774-wr75x",
      GenerateName: (string) (len=32) "webserver-deployment-786f49d774-",
      Namespace: (string) (len=15) "deployment-7635",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "95ca7f96-09d2-4ad4-a460-23802c26249b",
      ResourceVersion: (string) (len=5) "22211",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "786f49d774"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-786f49d774",
          UID: (types.UID) (len=36) "aaddb96b-7ad4-4643-b1a2-550df15d16b7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 61  64 64 62 39 36 62 2d 37  |d\":\"aaddb96b-7|
              00000090  61 64 34 2d 34 36 34 33  2d 62 31 61 32 2d 35 35  |ad4-4643-b1a2-55|
              000000a0  30 64 66 31 35 64 31 36  62 37 5c 22 7d 22 3a 7b  |0df15d16b7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=709) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 39 32 2e 31  |:{\"ip\":\"192.1|
              00000290  36 38 2e 32 33 35 2e 31  33 39 5c 22 7d 22 3a 7b  |68.235.139\"}":{|
              000002a0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000002b0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              000002c0  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nnt9c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nnt9c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383304,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383303,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.139",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.139"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383303,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-nnt9c",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:08:25.852307 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7635" for this suite. @ 12/21/24 13:08:25.87
• [4.278 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 12/21/24 13:08:25.884
  I1221 13:08:25.884022 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 13:08:25.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:08:25.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:08:25.912
  I1221 13:09:25.932087 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4947" for this suite. @ 12/21/24 13:09:25.936
• [60.062 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 12/21/24 13:09:25.946
  I1221 13:09:25.946562 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 13:09:25.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:09:25.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:09:25.963
  STEP: Creating service test in namespace statefulset-2731 @ 12/21/24 13:09:25.965
  STEP: Creating stateful set ss in namespace statefulset-2731 @ 12/21/24 13:09:25.972
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2731 @ 12/21/24 13:09:25.981
  I1221 13:09:25.986447 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I1221 13:09:35.990539 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/21/24 13:09:35.99
  I1221 13:09:35.996003 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-2731 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 13:09:36.081273 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 13:09:36.081316 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 13:09:36.081324 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 13:09:36.086380 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1221 13:09:46.087694 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1221 13:09:46.087735 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1221 13:09:46.107000 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1221 13:09:46.107047 19 resource.go:175] ss-0  ip-172-31-68-100  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:36 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:26 +0000 UTC  }]
  I1221 13:09:46.107055 19 resource.go:178] 
  I1221 13:09:46.107060 19 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1221 13:09:47.111735 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995324557s
  I1221 13:09:48.117641 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.99093958s
  I1221 13:09:49.123965 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.984354021s
  I1221 13:09:50.143227 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.978380121s
  I1221 13:09:51.149722 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.959003699s
  I1221 13:09:52.155249 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.952862005s
  I1221 13:09:53.162679 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.946528178s
  I1221 13:09:54.168779 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.939908455s
  I1221 13:09:55.174934 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 933.823763ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2731 @ 12/21/24 13:09:56.175
  I1221 13:09:56.180901 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-2731 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 13:09:56.261869 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1221 13:09:56.261904 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 13:09:56.261914 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 13:09:56.262006 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-2731 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 13:09:56.347515 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1221 13:09:56.347573 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 13:09:56.347584 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 13:09:56.347642 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-2731 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 13:09:56.428893 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1221 13:09:56.428936 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 13:09:56.428945 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 13:09:56.434449 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1221 13:09:56.434471 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1221 13:09:56.434477 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/21/24 13:09:56.434
  I1221 13:09:56.438238 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-2731 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 13:09:56.521845 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 13:09:56.521885 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 13:09:56.521894 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 13:09:56.521938 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-2731 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 13:09:56.599104 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 13:09:56.599142 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 13:09:56.599149 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 13:09:56.599186 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-2731 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 13:09:56.685136 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 13:09:56.685186 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 13:09:56.685195 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 13:09:56.685203 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1221 13:09:56.690395 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1221 13:10:06.697549 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1221 13:10:06.697580 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1221 13:10:06.697586 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1221 13:10:06.713980 19 resource.go:168] POD   NODE              PHASE    GRACE  CONDITIONS
  I1221 13:10:06.714028 19 resource.go:175] ss-0  ip-172-31-68-100  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:26 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:26 +0000 UTC  }]
  I1221 13:10:06.714045 19 resource.go:175] ss-1  ip-172-31-9-184   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:46 +0000 UTC  }]
  I1221 13:10:06.714066 19 resource.go:175] ss-2  ip-172-31-18-134  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:47 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:46 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-21 13:09:46 +0000 UTC  }]
  I1221 13:10:06.714085 19 resource.go:178] 
  I1221 13:10:06.714091 19 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1221 13:10:07.718904 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 8.995213959s
  I1221 13:10:08.723939 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.99056248s
  I1221 13:10:09.729497 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.985543463s
  I1221 13:10:10.735071 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.980067016s
  I1221 13:10:11.740789 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.973841486s
  I1221 13:10:12.749460 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.968797139s
  I1221 13:10:13.756964 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.960072449s
  I1221 13:10:14.763003 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.95225438s
  I1221 13:10:15.767944 19 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 946.472042ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2731 @ 12/21/24 13:10:16.768
  I1221 13:10:16.773361 19 rest.go:150] Scaling statefulset ss to 0
  I1221 13:10:16.782148 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 13:10:16.786979 19 statefulset.go:138] Deleting all statefulset in ns statefulset-2731
  I1221 13:10:16.791785 19 rest.go:150] Scaling statefulset ss to 0
  I1221 13:10:16.800368 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 13:10:16.804575 19 rest.go:88] Deleting statefulset ss
  I1221 13:10:16.820765 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2731" for this suite. @ 12/21/24 13:10:16.825
• [50.887 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/21/24 13:10:16.836
  I1221 13:10:16.836541 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:10:16.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:16.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:16.855
  STEP: Creating a pod to test downward api env vars @ 12/21/24 13:10:16.857
  STEP: Saw pod success @ 12/21/24 13:10:18.88
  I1221 13:10:18.883553 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downward-api-10830b7e-e346-4014-9b16-5f83806b5ff4 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 13:10:18.899
  I1221 13:10:18.921934 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-665" for this suite. @ 12/21/24 13:10:18.927
• [2.098 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/21/24 13:10:18.934
  I1221 13:10:18.934984 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:10:18.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:18.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:18.956
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:10:18.958
  STEP: Saw pod success @ 12/21/24 13:10:20.978
  I1221 13:10:20.982755 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-d6ee051f-3375-4880-bd11-798e64693d91 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:10:20.991
  I1221 13:10:21.013507 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6085" for this suite. @ 12/21/24 13:10:21.018
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/21/24 13:10:21.026
  I1221 13:10:21.026708 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename podtemplate @ 12/21/24 13:10:21.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:21.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:21.046
  STEP: Create a pod template @ 12/21/24 13:10:21.049
  STEP: Replace a pod template @ 12/21/24 13:10:21.053
  I1221 13:10:21.063405 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1221 13:10:21.063490 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2956" for this suite. @ 12/21/24 13:10:21.068
• [0.051 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 12/21/24 13:10:21.077
  I1221 13:10:21.077818 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename security-context-test @ 12/21/24 13:10:21.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:21.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:21.093
  I1221 13:10:25.132921 19 security_context.go:538] Got logs for pod "busybox-privileged-false-0cc5eb11-a6bc-4ad1-afe7-b0338e40c9ad": "ip: RTNETLINK answers: Operation not permitted\n"
  I1221 13:10:25.133037 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1345" for this suite. @ 12/21/24 13:10:25.137
• [4.069 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1513
  STEP: Creating a kubernetes client @ 12/21/24 13:10:25.146
  I1221 13:10:25.146638 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:10:25.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:25.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:25.166
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-564 @ 12/21/24 13:10:25.168
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/21/24 13:10:25.185
  STEP: creating service externalsvc in namespace services-564 @ 12/21/24 13:10:25.185
  STEP: creating replication controller externalsvc in namespace services-564 @ 12/21/24 13:10:25.201
  I1221 13:10:25.211610      19 runners.go:193] Created replication controller with name: externalsvc, namespace: services-564, replica count: 2
  I1221 13:10:28.262672      19 runners.go:193] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/21/24 13:10:28.267
  I1221 13:10:28.293229 19 resource.go:361] Creating new exec pod
  I1221 13:10:30.311810 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-564 exec execpodmlr7c -- /bin/sh -x -c nslookup nodeport-service.services-564.svc.cluster.local'
  I1221 13:10:30.406439 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-564.svc.cluster.local\n"
  I1221 13:10:30.406489 19 builder.go:147] stdout: "Server:\t\t10.152.183.151\nAddress:\t10.152.183.151#53\n\nnodeport-service.services-564.svc.cluster.local\tcanonical name = externalsvc.services-564.svc.cluster.local.\nName:\texternalsvc.services-564.svc.cluster.local\nAddress: 10.152.183.177\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-564, will wait for the garbage collector to delete the pods @ 12/21/24 13:10:30.406
  I1221 13:10:30.470818 19 resources.go:139] Deleting ReplicationController externalsvc took: 9.976543ms
  I1221 13:10:30.571065 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.242924ms
  I1221 13:10:33.798973 19 service.go:1524] Cleaning up the NodePort to ExternalName test service
  I1221 13:10:33.813821 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-564" for this suite. @ 12/21/24 13:10:33.818
• [8.682 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2157
  STEP: Creating a kubernetes client @ 12/21/24 13:10:33.828
  I1221 13:10:33.828815 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:10:33.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:33.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:33.845
  STEP: creating service in namespace services-3897 @ 12/21/24 13:10:33.848
  STEP: creating service affinity-clusterip in namespace services-3897 @ 12/21/24 13:10:33.848
  STEP: creating replication controller affinity-clusterip in namespace services-3897 @ 12/21/24 13:10:33.858
  I1221 13:10:33.867357      19 runners.go:193] Created replication controller with name: affinity-clusterip, namespace: services-3897, replica count: 3
  I1221 13:10:36.919398      19 runners.go:193] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 13:10:36.929172 19 resource.go:361] Creating new exec pod
  I1221 13:10:39.943670 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-3897 exec execpod-affinity4pjfp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1221 13:10:40.025374 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1221 13:10:40.025423 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:10:40.025532 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-3897 exec execpod-affinity4pjfp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.242 80'
  I1221 13:10:40.105201 19 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.242 80\necho hostName\nConnection to 10.152.183.242 80 port [tcp/http] succeeded!\n"
  I1221 13:10:40.105242 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:10:40.105466 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-3897 exec execpod-affinity4pjfp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.242:80/ ; done'
  I1221 13:10:40.240945 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.242:80/\n"
  I1221 13:10:40.240991 19 builder.go:147] stdout: "\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb\naffinity-clusterip-pggfb"
  I1221 13:10:40.241003 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241010 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241019 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241024 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241030 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241034 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241040 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241045 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241054 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241066 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241072 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241078 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241083 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241088 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241112 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241118 19 service.go:242] Received response from host: affinity-clusterip-pggfb
  I1221 13:10:40.241254 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3897, will wait for the garbage collector to delete the pods @ 12/21/24 13:10:40.258
  I1221 13:10:40.322052 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 8.805744ms
  I1221 13:10:40.423112 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.054797ms
  I1221 13:10:43.148362 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3897" for this suite. @ 12/21/24 13:10:43.152
• [9.333 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1075
  STEP: Creating a kubernetes client @ 12/21/24 13:10:43.162
  I1221 13:10:43.162063 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 13:10:43.162
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:43.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:43.181
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/21/24 13:10:43.183
  I1221 13:10:43.183311 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-7175 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1221 13:10:43.230563 19 builder.go:146] stderr: ""
  I1221 13:10:43.230583 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/21/24 13:10:43.23
  I1221 13:10:43.230633 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-7175 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1221 13:10:43.276990 19 builder.go:146] stderr: ""
  I1221 13:10:43.277010 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/21/24 13:10:43.277
  I1221 13:10:43.280557 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-7175 delete pods e2e-test-httpd-pod'
  I1221 13:10:44.771101 19 builder.go:146] stderr: ""
  I1221 13:10:44.771142 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1221 13:10:44.771301 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7175" for this suite. @ 12/21/24 13:10:44.775
• [1.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/21/24 13:10:44.784
  I1221 13:10:44.784850 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replication-controller @ 12/21/24 13:10:44.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:44.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:44.805
  I1221 13:10:44.807944 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/21/24 13:10:45.823
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/21/24 13:10:45.83
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/21/24 13:10:46.841
  I1221 13:10:46.854124 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/21/24 13:10:46.854
  I1221 13:10:47.865711 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4943" for this suite. @ 12/21/24 13:10:47.87
• [3.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/21/24 13:10:47.88
  I1221 13:10:47.880874 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename namespaces @ 12/21/24 13:10:47.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:47.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:47.904
  STEP: creating a Namespace @ 12/21/24 13:10:47.906
  STEP: patching the Namespace @ 12/21/24 13:10:47.921
  STEP: get the Namespace and ensuring it has the label @ 12/21/24 13:10:47.928
  I1221 13:10:47.932024 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8039" for this suite. @ 12/21/24 13:10:47.936
  STEP: Destroying namespace "nspatchtest-f2837ea0-3ec5-4aa2-a647-66692300bdf6-966" for this suite. @ 12/21/24 13:10:47.947
• [0.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:139
  STEP: Creating a kubernetes client @ 12/21/24 13:10:47.956
  I1221 13:10:47.956047 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-webhook @ 12/21/24 13:10:47.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:47.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:47.977
  STEP: Setting up server cert @ 12/21/24 13:10:47.979
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/21/24 13:10:48.09
  STEP: Deploying the custom resource conversion webhook pod @ 12/21/24 13:10:48.099
  STEP: Wait for the deployment to be ready @ 12/21/24 13:10:48.113
  I1221 13:10:48.121621 19 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/21/24 13:10:50.136
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:10:50.15
  I1221 13:10:51.150111 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1221 13:10:51.161009 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Creating a v1 custom resource @ 12/21/24 13:10:53.716
  STEP: v2 custom resource should be converted @ 12/21/24 13:10:53.722
  I1221 13:10:54.297260 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9612" for this suite. @ 12/21/24 13:10:54.301
• [6.360 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/21/24 13:10:54.316
  I1221 13:10:54.316112 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename runtimeclass @ 12/21/24 13:10:54.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:54.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:54.334
  I1221 13:10:54.367600 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1640" for this suite. @ 12/21/24 13:10:54.374
• [0.065 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/21/24 13:10:54.381
  I1221 13:10:54.381369 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 13:10:54.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:54.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:54.4
  I1221 13:10:54.448205 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6730" for this suite. @ 12/21/24 13:10:54.453
• [0.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/21/24 13:10:54.462
  I1221 13:10:54.462027 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename gc @ 12/21/24 13:10:54.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:54.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:54.48
  STEP: create the deployment @ 12/21/24 13:10:54.483
  W1221 13:10:54.490669      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/21/24 13:10:54.49
  STEP: delete the deployment @ 12/21/24 13:10:54.995
  STEP: wait for all rs to be garbage collected @ 12/21/24 13:10:55.003
  STEP: expected 0 pods, got 2 pods @ 12/21/24 13:10:55.007
  STEP: Gathering metrics @ 12/21/24 13:10:55.516
  W1221 13:10:55.522448      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1221 13:10:55.522476 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1221 13:10:55.522625 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1699" for this suite. @ 12/21/24 13:10:55.526
• [1.072 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 12/21/24 13:10:55.533
  I1221 13:10:55.533992 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 13:10:55.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:55.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:55.551
  STEP: Creating secret with name secret-test-9320be1b-6514-4809-accb-d469f40a2421 @ 12/21/24 13:10:55.556
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:10:55.562
  STEP: Saw pod success @ 12/21/24 13:10:59.592
  I1221 13:10:59.596210 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-25ec54e5-0636-4468-8f51-f5c47f91940d container secret-env-test: <nil>
  STEP: delete the pod @ 12/21/24 13:10:59.605
  I1221 13:10:59.627169 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1358" for this suite. @ 12/21/24 13:10:59.631
• [4.108 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/21/24 13:10:59.641
  I1221 13:10:59.641574 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:10:59.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:10:59.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:10:59.656
  STEP: Creating configMap with name configmap-test-volume-map-ccbf5e45-571e-453e-93be-d1e6e2406ac3 @ 12/21/24 13:10:59.66
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:10:59.667
  STEP: Saw pod success @ 12/21/24 13:11:03.696
  I1221 13:11:03.701286 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-configmaps-6e0da3a5-f3cb-466c-87ef-9f9e7f98212f container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:11:03.721
  I1221 13:11:03.745526 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2172" for this suite. @ 12/21/24 13:11:03.751
• [4.119 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:79
  STEP: Creating a kubernetes client @ 12/21/24 13:11:03.76
  I1221 13:11:03.760934 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 13:11:03.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:03.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:03.779
  STEP: Counting existing ResourceQuota @ 12/21/24 13:11:03.782
  STEP: Creating a ResourceQuota @ 12/21/24 13:11:08.787
  STEP: Ensuring resource quota status is calculated @ 12/21/24 13:11:08.793
  I1221 13:11:10.799534 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5377" for this suite. @ 12/21/24 13:11:10.804
• [7.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/21/24 13:11:10.814
  I1221 13:11:10.814954 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:11:10.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:10.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:10.836
  STEP: Creating configMap with name configmap-test-upd-6dc70ec7-8603-4c9f-a8ba-27e1e6203dba @ 12/21/24 13:11:10.841
  STEP: Creating the pod @ 12/21/24 13:11:10.847
  STEP: Waiting for pod with text data @ 12/21/24 13:11:12.871
  STEP: Waiting for pod with binary data @ 12/21/24 13:11:12.88
  I1221 13:11:12.890264 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-97" for this suite. @ 12/21/24 13:11:12.894
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/21/24 13:11:12.903
  I1221 13:11:12.903859 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename init-container @ 12/21/24 13:11:12.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:12.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:12.923
  STEP: creating the pod @ 12/21/24 13:11:12.925
  I1221 13:11:12.925525 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I1221 13:11:16.911156 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3517" for this suite. @ 12/21/24 13:11:16.916
• [4.021 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 12/21/24 13:11:16.924
  I1221 13:11:16.924815 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 13:11:16.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:16.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:16.945
  I1221 13:11:39.032696 19 container_probe.go:92] Container started at 2024-12-21 13:11:17 +0000 UTC, pod became ready at 2024-12-21 13:11:37 +0000 UTC
  I1221 13:11:39.032823 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-221" for this suite. @ 12/21/24 13:11:39.037
• [22.124 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1690
  STEP: Creating a kubernetes client @ 12/21/24 13:11:39.048
  I1221 13:11:39.048924 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 13:11:39.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:39.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:39.069
  STEP: creating Agnhost RC @ 12/21/24 13:11:39.072
  I1221 13:11:39.072195 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2117 create -f -'
  I1221 13:11:39.153104 19 builder.go:146] stderr: ""
  I1221 13:11:39.153138 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/21/24 13:11:39.153
  I1221 13:11:40.158975 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 13:11:40.159009 19 framework.go:733] Found 1 / 1
  I1221 13:11:40.159024 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/21/24 13:11:40.159
  I1221 13:11:40.163869 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 13:11:40.163889 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1221 13:11:40.163935 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-2117 patch pod agnhost-primary-cwjsx -p {"metadata":{"annotations":{"x":"y"}}}'
  I1221 13:11:40.213701 19 builder.go:146] stderr: ""
  I1221 13:11:40.213733 19 builder.go:147] stdout: "pod/agnhost-primary-cwjsx patched\n"
  STEP: checking annotations @ 12/21/24 13:11:40.213
  I1221 13:11:40.218643 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1221 13:11:40.218660 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1221 13:11:40.218776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2117" for this suite. @ 12/21/24 13:11:40.223
• [1.188 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 12/21/24 13:11:40.237
  I1221 13:11:40.237043 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 13:11:40.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:40.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:40.257
  STEP: Creating a pod to test env composition @ 12/21/24 13:11:40.259
  STEP: Saw pod success @ 12/21/24 13:11:44.285
  I1221 13:11:44.292777 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod var-expansion-69bccc39-9468-4e6d-a47b-f281bc7b21a5 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 13:11:44.301
  I1221 13:11:44.322131 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4215" for this suite. @ 12/21/24 13:11:44.326
• [4.099 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:429
  STEP: Creating a kubernetes client @ 12/21/24 13:11:44.336
  I1221 13:11:44.336451 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pv @ 12/21/24 13:11:44.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:44.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:44.357
  STEP: Creating initial PV and PVC @ 12/21/24 13:11:44.359
  I1221 13:11:44.359781 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2765" @ 12/21/24 13:11:44.377
  STEP: Listing PVCs in namespace "pv-2765" @ 12/21/24 13:11:44.381
  STEP: Patching the PV "pv-2765-l6jtw" @ 12/21/24 13:11:44.384
  STEP: Patching the PVC "pvc-c5cr4" @ 12/21/24 13:11:44.394
  STEP: Getting PV "pv-2765-l6jtw" @ 12/21/24 13:11:44.402
  STEP: Getting PVC "pvc-c5cr4" @ 12/21/24 13:11:44.407
  STEP: Deleting PVC "pvc-c5cr4" @ 12/21/24 13:11:44.414
  STEP: Confirm deletion of PVC "pvc-c5cr4" @ 12/21/24 13:11:44.433
  STEP: Deleting PV "pv-2765-l6jtw" @ 12/21/24 13:11:46.445
  STEP: Confirm deletion of PV "pv-2765-l6jtw" @ 12/21/24 13:11:46.456
  STEP: Recreating another PV & PVC @ 12/21/24 13:11:48.467
  I1221 13:11:48.467912 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2765-rx72q" @ 12/21/24 13:11:48.479
  STEP: Updating the PVC "pvc-n7zlh" @ 12/21/24 13:11:48.492
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-n7zlh=updated" @ 12/21/24 13:11:48.501
  STEP: Deleting PVC "pvc-n7zlh" via DeleteCollection @ 12/21/24 13:11:48.508
  STEP: Confirm deletion of PVC "pvc-n7zlh" @ 12/21/24 13:11:48.52
  STEP: Deleting PV "pv-2765-rx72q" via DeleteCollection @ 12/21/24 13:11:50.532
  STEP: Confirm deletion of PV "pv-2765-rx72q" @ 12/21/24 13:11:50.542
  I1221 13:11:52.552877 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1221 13:11:52.552905 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-n7zlh"
  I1221 13:11:52.557723 19 pv.go:193] Deleting PersistentVolume "pv-2765-rx72q"
  I1221 13:11:52.561548 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2765" for this suite. @ 12/21/24 13:11:52.566
• [8.239 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:620
  STEP: Creating a kubernetes client @ 12/21/24 13:11:52.575
  I1221 13:11:52.575943 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename field-validation @ 12/21/24 13:11:52.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:52.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:52.596
  I1221 13:11:52.598412 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  W1221 13:11:55.133433      19 warnings.go:70] unknown field "alpha"
  W1221 13:11:55.133457      19 warnings.go:70] unknown field "beta"
  W1221 13:11:55.133461      19 warnings.go:70] unknown field "delta"
  W1221 13:11:55.133465      19 warnings.go:70] unknown field "epsilon"
  W1221 13:11:55.133467      19 warnings.go:70] unknown field "gamma"
  I1221 13:11:55.684417 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6536" for this suite. @ 12/21/24 13:11:55.689
• [3.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 12/21/24 13:11:55.7
  I1221 13:11:55.700456 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 13:11:55.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:11:55.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:11:55.719
  STEP: Creating pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053 @ 12/21/24 13:11:55.722
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 13:11:57.739
  I1221 13:11:57.744035 19 container_probe.go:1749] Initial restart count of pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 is 0
  I1221 13:11:57.747550 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:11:59.752950 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:01.759488 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:03.765668 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:05.772118 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:07.778215 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:09.783122 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:11.789216 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:13.795950 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:15.802863 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:17.809618 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:19.815373 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:21.822223 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:23.828139 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:25.832859 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:27.838069 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:29.844362 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:31.850944 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:33.858191 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:35.864166 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:37.870797 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:39.877023 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:41.882489 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:43.888366 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:45.895831 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:47.902346 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:49.909146 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:51.914628 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:53.920367 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:55.925838 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:57.931178 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:12:59.937139 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:01.944012 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:03.949435 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:05.956089 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:07.962741 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:09.969251 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:11.976138 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:13.982256 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:15.989350 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:17.995250 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:20.002436 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:22.008517 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:24.014444 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:26.021054 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:28.026480 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:30.032633 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:32.039144 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:34.045313 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:36.052161 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:38.057950 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:40.064730 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:42.073314 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:44.078399 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:46.084093 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:48.090081 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:50.097443 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:52.103205 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:54.109428 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:56.115818 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:13:58.121762 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:00.127241 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:02.133478 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:04.138683 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:06.145554 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:08.151099 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:10.157073 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:12.162415 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:14.169605 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:16.176730 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:18.184362 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:20.191108 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:22.197610 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:24.204527 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:26.210544 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:28.216109 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:30.222080 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:32.228686 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:34.234516 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:36.240727 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:38.247510 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:40.253865 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:42.259980 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:44.266683 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:46.274612 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:48.281092 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:50.287831 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:52.294630 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:54.300625 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:56.307595 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:14:58.313653 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:00.320050 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:02.325901 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:04.331927 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:06.336885 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:08.342645 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:10.348524 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:12.354041 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:14.360992 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:16.366952 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:18.371757 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:20.377379 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:22.382923 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:24.388305 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:26.394308 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:28.401216 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:30.406289 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:32.412770 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:34.419134 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:36.425525 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:38.431323 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:40.438385 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:42.446787 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:44.452805 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:46.457441 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:48.463458 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:50.471374 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:52.478036 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:54.483776 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  I1221 13:15:56.489029 19 container_probe.go:1759] Get pod busybox-d230a2bc-a6a7-4b9b-8b94-e25218eb8ef8 in namespace container-probe-7053
  STEP: deleting the pod @ 12/21/24 13:15:58.49
  I1221 13:15:58.509359 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7053" for this suite. @ 12/21/24 13:15:58.513
• [242.820 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/21/24 13:15:58.521
  I1221 13:15:58.521048 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename endpointslice @ 12/21/24 13:15:58.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:15:58.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:15:58.543
  STEP: referencing a single matching pod @ 12/21/24 13:16:00.632
  STEP: referencing matching pods with named port @ 12/21/24 13:16:00.641
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/21/24 13:16:00.649
  STEP: recreating EndpointSlices after they've been deleted @ 12/21/24 13:16:00.658
  I1221 13:16:00.685087 19 endpointslice.go:938] EndpointSlice for Service endpointslice-4069/example-named-port not found
  I1221 13:16:02.687570 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4069" for this suite. @ 12/21/24 13:16:02.692
• [4.180 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:746
  STEP: Creating a kubernetes client @ 12/21/24 13:16:02.7
  I1221 13:16:02.700810 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 13:16:02.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:02.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:02.757
  STEP: Creating a ResourceQuota with terminating scope @ 12/21/24 13:16:02.759
  STEP: Ensuring ResourceQuota status is calculated @ 12/21/24 13:16:02.764
  STEP: Creating a ResourceQuota with not terminating scope @ 12/21/24 13:16:04.77
  STEP: Ensuring ResourceQuota status is calculated @ 12/21/24 13:16:04.776
  STEP: Creating a long running pod @ 12/21/24 13:16:06.783
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/21/24 13:16:06.8
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/21/24 13:16:08.807
  STEP: Deleting the pod @ 12/21/24 13:16:10.812
  STEP: Ensuring resource quota status released the pod usage @ 12/21/24 13:16:10.832
  STEP: Creating a terminating pod @ 12/21/24 13:16:12.838
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/21/24 13:16:12.849
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/21/24 13:16:14.854
  STEP: Deleting the pod @ 12/21/24 13:16:16.861
  STEP: Ensuring resource quota status released the pod usage @ 12/21/24 13:16:16.88
  I1221 13:16:18.886365 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7441" for this suite. @ 12/21/24 13:16:18.891
• [16.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/21/24 13:16:18.903
  I1221 13:16:18.903576 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename containers @ 12/21/24 13:16:18.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:18.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:18.921
  I1221 13:16:20.959276 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9995" for this suite. @ 12/21/24 13:16:20.964
• [2.070 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/21/24 13:16:20.973
  I1221 13:16:20.973377 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename namespaces @ 12/21/24 13:16:20.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:20.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:20.993
  STEP: Updating Namespace "namespaces-4724" @ 12/21/24 13:16:20.996
  I1221 13:16:21.006197 19 namespace.go:389] Namespace "namespaces-4724" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"3048d654-34d8-4490-a4e8-1e2e1dc54a72", "kubernetes.io/metadata.name":"namespaces-4724", "namespaces-4724":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1221 13:16:21.006286 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4724" for this suite. @ 12/21/24 13:16:21.01
• [0.045 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/21/24 13:16:21.018
  I1221 13:16:21.018290 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:16:21.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:21.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:21.036
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/21/24 13:16:21.038
  STEP: Saw pod success @ 12/21/24 13:16:25.065
  I1221 13:16:25.070315 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-03554ac7-0228-4827-843e-de027b302b7c container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:16:25.088
  I1221 13:16:25.109536 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6200" for this suite. @ 12/21/24 13:16:25.113
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/21/24 13:16:25.121
  I1221 13:16:25.121680 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename proxy @ 12/21/24 13:16:25.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:25.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:25.141
  I1221 13:16:25.144089 19 proxy.go:387] Creating pod...
  I1221 13:16:27.163578 19 proxy.go:411] Creating service...
  I1221 13:16:27.174661 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/pods/agnhost/proxy?method=DELETE
  I1221 13:16:27.181851 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1221 13:16:27.181879 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/pods/agnhost/proxy?method=OPTIONS
  I1221 13:16:27.188453 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1221 13:16:27.188483 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/pods/agnhost/proxy?method=PATCH
  I1221 13:16:27.193254 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1221 13:16:27.193278 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/pods/agnhost/proxy?method=POST
  I1221 13:16:27.196938 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1221 13:16:27.196972 19 proxy.go:448] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/pods/agnhost/proxy?method=PUT
  I1221 13:16:27.200876 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1221 13:16:27.200901 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/services/e2e-proxy-test-service/proxy?method=DELETE
  I1221 13:16:27.207042 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1221 13:16:27.207067 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1221 13:16:27.213350 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1221 13:16:27.213373 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/services/e2e-proxy-test-service/proxy?method=PATCH
  I1221 13:16:27.219164 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1221 13:16:27.219187 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/services/e2e-proxy-test-service/proxy?method=POST
  I1221 13:16:27.226073 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1221 13:16:27.226108 19 proxy.go:459] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/services/e2e-proxy-test-service/proxy?method=PUT
  I1221 13:16:27.232232 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1221 13:16:27.232259 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/pods/agnhost/proxy?method=GET
  I1221 13:16:27.235831 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1221 13:16:27.235857 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/services/e2e-proxy-test-service/proxy?method=GET
  I1221 13:16:27.241317 19 proxy.go:487] http.Client request:GET StatusCode:301
  I1221 13:16:27.241365 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/pods/agnhost/proxy?method=HEAD
  I1221 13:16:27.244207 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1221 13:16:27.244223 19 proxy.go:479] Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5358/services/e2e-proxy-test-service/proxy?method=HEAD
  I1221 13:16:27.250416 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1221 13:16:27.250594 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5358" for this suite. @ 12/21/24 13:16:27.255
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:400
  STEP: Creating a kubernetes client @ 12/21/24 13:16:27.263
  I1221 13:16:27.263851 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:16:27.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:27.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:27.284
  STEP: Setting up server cert @ 12/21/24 13:16:27.311
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:16:27.679
  STEP: Deploying the webhook pod @ 12/21/24 13:16:27.688
  STEP: Wait for the deployment to be ready @ 12/21/24 13:16:27.701
  I1221 13:16:27.711950 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:16:29.726
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:16:29.739
  I1221 13:16:30.739697 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/21/24 13:16:30.749
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/21/24 13:16:30.762
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/21/24 13:16:30.767
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/21/24 13:16:30.78
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/21/24 13:16:30.793
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/21/24 13:16:30.8
  I1221 13:16:30.857116 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7656" for this suite. @ 12/21/24 13:16:30.861
  STEP: Destroying namespace "webhook-markers-6142" for this suite. @ 12/21/24 13:16:30.871
• [3.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/21/24 13:16:30.878
  I1221 13:16:30.878242 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename chunking @ 12/21/24 13:16:30.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:30.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:30.896
  STEP: creating a large number of resources @ 12/21/24 13:16:30.899
  STEP: retrieving those results in paged fashion several times @ 12/21/24 13:16:48.585
  I1221 13:16:48.634195 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1221 13:16:48.684996 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1221 13:16:48.735125 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1221 13:16:48.783658 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1221 13:16:48.834302 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1221 13:16:48.885423 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1221 13:16:48.934319 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1221 13:16:48.985446 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1221 13:16:49.034931 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1221 13:16:49.083707 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1221 13:16:49.134158 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1221 13:16:49.185110 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1221 13:16:49.233958 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1221 13:16:49.284160 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1221 13:16:49.335473 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1221 13:16:49.384990 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1221 13:16:49.434727 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1221 13:16:49.484721 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1221 13:16:49.534022 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1221 13:16:49.584880 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1221 13:16:49.634806 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1221 13:16:49.683997 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1221 13:16:49.734062 19 chunking.go:98] Retrieved 17/17 results with rv 25691 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTEsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1221 13:16:49.784544 19 chunking.go:98] Retrieved 9/17 results with rv 25691 and continue 
  I1221 13:16:49.833711 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1221 13:16:49.884585 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1221 13:16:49.934298 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1221 13:16:49.984628 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1221 13:16:50.034072 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1221 13:16:50.084814 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1221 13:16:50.133280 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1221 13:16:50.184897 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1221 13:16:50.234195 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1221 13:16:50.284114 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1221 13:16:50.334142 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1221 13:16:50.384203 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1221 13:16:50.434229 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1221 13:16:50.485569 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1221 13:16:50.534724 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1221 13:16:50.583988 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1221 13:16:50.634438 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1221 13:16:50.685261 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1221 13:16:50.734069 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1221 13:16:50.784804 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1221 13:16:50.834582 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1221 13:16:50.883562 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1221 13:16:50.934172 19 chunking.go:98] Retrieved 17/17 results with rv 25692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1221 13:16:50.984848 19 chunking.go:98] Retrieved 9/17 results with rv 25692 and continue 
  I1221 13:16:51.034003 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1221 13:16:51.084743 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1221 13:16:51.134297 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1221 13:16:51.184501 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1221 13:16:51.234111 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1221 13:16:51.285312 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1221 13:16:51.334208 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1221 13:16:51.384897 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1221 13:16:51.434531 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1221 13:16:51.483883 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1221 13:16:51.534456 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1221 13:16:51.585726 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1221 13:16:51.633934 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1221 13:16:51.684716 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1221 13:16:51.734403 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1221 13:16:51.784508 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1221 13:16:51.834767 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1221 13:16:51.884636 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1221 13:16:51.933662 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1221 13:16:51.984671 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1221 13:16:52.034401 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1221 13:16:52.084232 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1221 13:16:52.134239 19 chunking.go:98] Retrieved 17/17 results with rv 25694 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjU2OTQsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1221 13:16:52.185180 19 chunking.go:98] Retrieved 9/17 results with rv 25694 and continue 
  STEP: retrieving those results all at once @ 12/21/24 13:16:52.185
  I1221 13:16:52.241070 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8222" for this suite. @ 12/21/24 13:16:52.284
• [21.459 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/21/24 13:16:52.337
  I1221 13:16:52.337851 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename namespaces @ 12/21/24 13:16:52.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:52.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:16:52.357
  STEP: Creating a test namespace @ 12/21/24 13:16:52.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:16:52.375
  STEP: Creating a pod in the namespace @ 12/21/24 13:16:52.377
  STEP: Waiting for the pod to have running status @ 12/21/24 13:16:52.387
  STEP: Deleting the namespace @ 12/21/24 13:16:54.4
  STEP: Waiting for the namespace to be removed. @ 12/21/24 13:16:54.41
  STEP: Recreating the namespace @ 12/21/24 13:17:05.415
  STEP: Verifying there are no pods in the namespace @ 12/21/24 13:17:05.432
  I1221 13:17:05.437088 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8922" for this suite. @ 12/21/24 13:17:05.441
  STEP: Destroying namespace "nsdeletetest-3795" for this suite. @ 12/21/24 13:17:05.45
  I1221 13:17:05.454674 19 framework.go:370] Namespace nsdeletetest-3795 was already deleted
  STEP: Destroying namespace "nsdeletetest-5414" for this suite. @ 12/21/24 13:17:05.454
• [13.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/21/24 13:17:05.466
  I1221 13:17:05.466940 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:17:05.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:17:05.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:17:05.489
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/21/24 13:17:05.491
  STEP: Saw pod success @ 12/21/24 13:17:07.515
  I1221 13:17:07.519359 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-158e0c42-ac43-4c6e-9325-55e6032476fa container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:17:07.528
  I1221 13:17:07.549957 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4031" for this suite. @ 12/21/24 13:17:07.553
• [2.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/21/24 13:17:07.563
  I1221 13:17:07.564026 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename podtemplate @ 12/21/24 13:17:07.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:17:07.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:17:07.582
  STEP: Create set of pod templates @ 12/21/24 13:17:07.587
  I1221 13:17:07.592870 19 podtemplates.go:143] created test-podtemplate-1
  I1221 13:17:07.598993 19 podtemplates.go:143] created test-podtemplate-2
  I1221 13:17:07.605502 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/21/24 13:17:07.605
  STEP: delete collection of pod templates @ 12/21/24 13:17:07.609
  I1221 13:17:07.609235 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/21/24 13:17:07.633
  I1221 13:17:07.633907 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1221 13:17:07.638570 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5563" for this suite. @ 12/21/24 13:17:07.643
• [0.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/21/24 13:17:07.652
  I1221 13:17:07.652832 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 13:17:07.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:17:07.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:17:07.671
  I1221 13:17:07.673780 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I1221 13:17:07.692067 19 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 12/21/24 13:17:09.711
  STEP: updating a scale subresource @ 12/21/24 13:17:09.715
  STEP: verifying the deployment Spec.Replicas was modified @ 12/21/24 13:17:09.724
  STEP: Patch a scale subresource @ 12/21/24 13:17:09.727
  I1221 13:17:09.750946 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4824",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "739fd030-69f3-4cbb-aede-7b3aea3ebbae",
      ResourceVersion: (string) (len=5) "26249",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-64bcfc6446\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1221 13:17:09.758583 19 deployment.go:39] New ReplicaSet "test-new-deployment-64bcfc6446" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-64bcfc6446",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4824",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "951e197c-72a3-4fa1-8f42-72d89c3d7674",
      ResourceVersion: (string) (len=5) "26254",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "739fd030-69f3-4cbb-aede-7b3aea3ebbae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 33 39 66 64 30  33 30 2d 36 39 66 33 2d  |\"739fd030-69f3-|
              00000120  34 63 62 62 2d 61 65 64  65 2d 37 62 33 61 65 61  |4cbb-aede-7b3aea|
              00000130  33 65 62 62 61 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3ebbae\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:17:09.768558 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-57qdg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-57qdg",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4824",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e11a327-aa8d-4e45-91e2-7a857c2847bf",
      ResourceVersion: (string) (len=5) "26242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "951e197c-72a3-4fa1-8f42-72d89c3d7674",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  31 65 31 39 37 63 2d 37  |d\":\"951e197c-7|
              00000090  32 61 33 2d 34 66 61 31  2d 38 66 34 32 2d 37 32  |2a3-4fa1-8f42-72|
              000000a0  64 38 39 63 33 64 37 36  37 34 5c 22 7d 22 3a 7b  |d89c3d7674\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  30 2e 33 34 5c 22 7d 22  |2.168.200.34\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9pbdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9pbdp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383827,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=14) "192.168.200.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.200.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870383828,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://54de797c8ef1c180e518cc2c45c4ef6cc35c2b36a5c997ea1c0b27c0257aed89",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-9pbdp",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:17:09.769782 19 deployment.go:67] Pod "test-new-deployment-64bcfc6446-654b5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-64bcfc6446-654b5",
      GenerateName: (string) (len=31) "test-new-deployment-64bcfc6446-",
      Namespace: (string) (len=15) "deployment-4824",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1cb7cc38-2fbf-47ab-90ee-c807f081b54f",
      ResourceVersion: (string) (len=5) "26257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64bcfc6446"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-64bcfc6446",
          UID: (types.UID) (len=36) "951e197c-72a3-4fa1-8f42-72d89c3d7674",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  31 65 31 39 37 63 2d 37  |d\":\"951e197c-7|
              00000090  32 61 33 2d 34 66 61 31  2d 38 66 34 32 2d 37 32  |2a3-4fa1-8f42-72|
              000000a0  64 38 39 63 33 64 37 36  37 34 5c 22 7d 22 3a 7b  |d89c3d7674\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vj8wh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vj8wh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870383829,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870383829,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-vj8wh",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:17:09.770921 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4824" for this suite. @ 12/21/24 13:17:09.78
• [2.145 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:763
  STEP: Creating a kubernetes client @ 12/21/24 13:17:09.798
  I1221 13:17:09.798434 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:17:09.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:17:09.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:17:09.82
  STEP: Setting up server cert @ 12/21/24 13:17:09.844
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:17:09.94
  STEP: Deploying the webhook pod @ 12/21/24 13:17:09.949
  STEP: Wait for the deployment to be ready @ 12/21/24 13:17:09.963
  I1221 13:17:09.975164 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:17:11.989
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:17:12.001
  I1221 13:17:13.002545 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/21/24 13:17:13.012
  STEP: verifying the mutating webhook match conditions @ 12/21/24 13:17:13.019
  STEP: updating the mutating webhook match conditions @ 12/21/24 13:17:13.023
  STEP: verifying the mutating webhook match conditions @ 12/21/24 13:17:13.032
  I1221 13:17:13.088915 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2295" for this suite. @ 12/21/24 13:17:13.092
  STEP: Destroying namespace "webhook-markers-6604" for this suite. @ 12/21/24 13:17:13.104
• [3.314 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/21/24 13:17:13.112
  I1221 13:17:13.112607 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:17:13.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:17:13.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:17:13.13
  STEP: Creating projection with secret that has name projected-secret-test-0281325a-e7ae-497f-ba96-3a700453dc8e @ 12/21/24 13:17:13.133
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:17:13.137
  STEP: Saw pod success @ 12/21/24 13:17:17.164
  I1221 13:17:17.168070 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-secrets-afba2362-9895-4450-bafd-4e60dfcb9210 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 13:17:17.176
  I1221 13:17:17.199732 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9859" for this suite. @ 12/21/24 13:17:17.204
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 12/21/24 13:17:17.214
  I1221 13:17:17.214349 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 13:17:17.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:17:17.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:17:17.231
  STEP: Creating pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714 @ 12/21/24 13:17:17.233
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 13:17:19.257
  I1221 13:17:19.260925 19 container_probe.go:1749] Initial restart count of pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 is 0
  I1221 13:17:19.265410 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:21.271349 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:23.277608 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:25.283987 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:27.289374 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:29.296504 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:31.303019 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:33.309632 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:35.315312 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:37.321759 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:39.328103 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:41.332720 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:43.337653 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:45.343837 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:47.349244 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:49.353912 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:51.360063 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:53.366526 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:55.373164 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:57.378755 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:17:59.383705 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:18:01.390651 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:18:03.396904 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:18:05.402976 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:18:07.410220 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:18:09.416940 19 container_probe.go:1759] Get pod busybox-30c85d0f-66cb-4948-a125-c508955943d0 in namespace container-probe-714
  I1221 13:18:09.416974 19 container_probe.go:1763] Restart count of pod container-probe-714/busybox-30c85d0f-66cb-4948-a125-c508955943d0 is now 1 (50.155928407s elapsed)
  STEP: deleting the pod @ 12/21/24 13:18:09.417
  I1221 13:18:09.436087 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-714" for this suite. @ 12/21/24 13:18:09.442
• [52.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 12/21/24 13:18:09.45
  I1221 13:18:09.450379 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 13:18:09.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:09.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:09.471
  STEP: creating secret secrets-8432/secret-test-8ab892b3-90f2-4e58-95e5-98ef31bd9bb1 @ 12/21/24 13:18:09.473
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:18:09.479
  STEP: Saw pod success @ 12/21/24 13:18:13.508
  I1221 13:18:13.512290 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-configmaps-b2060440-47ab-46a5-bf43-cb4672e4fb2d container env-test: <nil>
  STEP: delete the pod @ 12/21/24 13:18:13.521
  I1221 13:18:13.544044 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8432" for this suite. @ 12/21/24 13:18:13.549
• [4.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:788
  STEP: Creating a kubernetes client @ 12/21/24 13:18:13.558
  I1221 13:18:13.558045 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename job @ 12/21/24 13:18:13.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:13.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:13.578
  STEP: Creating a job @ 12/21/24 13:18:13.58
  STEP: Ensuring job reaches completions @ 12/21/24 13:18:13.587
  I1221 13:18:23.599467 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-984" for this suite. @ 12/21/24 13:18:23.603
• [10.055 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/21/24 13:18:23.613
  I1221 13:18:23.613203 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:18:23.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:23.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:23.636
  I1221 13:18:23.685881 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-104" for this suite. @ 12/21/24 13:18:23.69
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 12/21/24 13:18:23.7
  I1221 13:18:23.700062 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename security-context-test @ 12/21/24 13:18:23.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:23.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:23.719
  I1221 13:18:25.749231 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9812" for this suite. @ 12/21/24 13:18:25.754
• [2.063 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/21/24 13:18:25.763
  I1221 13:18:25.763144 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:18:25.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:25.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:25.783
  STEP: Creating the pod @ 12/21/24 13:18:25.785
  I1221 13:18:28.332635 19 pod_client.go:173] Successfully updated pod "labelsupdatea5d4949a-7dd5-44a8-94dc-ccf225e40c8b"
  I1221 13:18:32.364346 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6458" for this suite. @ 12/21/24 13:18:32.369
• [6.617 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/21/24 13:18:32.38
  I1221 13:18:32.380224 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replicaset @ 12/21/24 13:18:32.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:32.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:32.398
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/21/24 13:18:32.401
  I1221 13:18:32.411539 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1221 13:18:37.419069 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/21/24 13:18:37.419
  STEP: getting scale subresource @ 12/21/24 13:18:37.419
  STEP: updating a scale subresource @ 12/21/24 13:18:37.423
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/21/24 13:18:37.429
  STEP: Patch a scale subresource @ 12/21/24 13:18:37.437
  I1221 13:18:37.462625 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1129" for this suite. @ 12/21/24 13:18:37.466
• [5.098 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2179
  STEP: Creating a kubernetes client @ 12/21/24 13:18:37.478
  I1221 13:18:37.478592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:18:37.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:37.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:37.501
  STEP: creating service in namespace services-7817 @ 12/21/24 13:18:37.503
  STEP: creating service affinity-clusterip-transition in namespace services-7817 @ 12/21/24 13:18:37.504
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7817 @ 12/21/24 13:18:37.516
  I1221 13:18:37.523555      19 runners.go:193] Created replication controller with name: affinity-clusterip-transition, namespace: services-7817, replica count: 3
  I1221 13:18:40.575488      19 runners.go:193] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 13:18:40.584838 19 resource.go:361] Creating new exec pod
  I1221 13:18:43.602840 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-7817 exec execpod-affinityhhb8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1221 13:18:43.695519 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1221 13:18:43.695668 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:18:43.695811 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-7817 exec execpod-affinityhhb8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.120 80'
  I1221 13:18:43.879418 19 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.120 80\necho hostName\nConnection to 10.152.183.120 80 port [tcp/http] succeeded!\n"
  I1221 13:18:43.879463 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:18:43.889819 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-7817 exec execpod-affinityhhb8z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.120:80/ ; done'
  I1221 13:18:44.039903 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n"
  I1221 13:18:44.039955 19 builder.go:147] stdout: "\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-757gr\naffinity-clusterip-transition-thw9h\naffinity-clusterip-transition-757gr\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-757gr\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-757gr\naffinity-clusterip-transition-thw9h\naffinity-clusterip-transition-thw9h\naffinity-clusterip-transition-757gr\naffinity-clusterip-transition-thw9h\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-thw9h\naffinity-clusterip-transition-9qqks"
  I1221 13:18:44.039968 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.039976 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.039982 19 service.go:242] Received response from host: affinity-clusterip-transition-757gr
  I1221 13:18:44.039988 19 service.go:242] Received response from host: affinity-clusterip-transition-thw9h
  I1221 13:18:44.039995 19 service.go:242] Received response from host: affinity-clusterip-transition-757gr
  I1221 13:18:44.040003 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.040008 19 service.go:242] Received response from host: affinity-clusterip-transition-757gr
  I1221 13:18:44.040013 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.040019 19 service.go:242] Received response from host: affinity-clusterip-transition-757gr
  I1221 13:18:44.040026 19 service.go:242] Received response from host: affinity-clusterip-transition-thw9h
  I1221 13:18:44.040031 19 service.go:242] Received response from host: affinity-clusterip-transition-thw9h
  I1221 13:18:44.040037 19 service.go:242] Received response from host: affinity-clusterip-transition-757gr
  I1221 13:18:44.040043 19 service.go:242] Received response from host: affinity-clusterip-transition-thw9h
  I1221 13:18:44.040049 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.040061 19 service.go:242] Received response from host: affinity-clusterip-transition-thw9h
  I1221 13:18:44.040067 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.051571 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-7817 exec execpod-affinityhhb8z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.120:80/ ; done'
  I1221 13:18:44.186880 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.120:80/\n"
  I1221 13:18:44.186926 19 builder.go:147] stdout: "\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks\naffinity-clusterip-transition-9qqks"
  I1221 13:18:44.186939 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186947 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186952 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186958 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186964 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186969 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186974 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186982 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186988 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186993 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.186999 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.187004 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.187015 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.187020 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.187024 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.187029 19 service.go:242] Received response from host: affinity-clusterip-transition-9qqks
  I1221 13:18:44.187115 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7817, will wait for the garbage collector to delete the pods @ 12/21/24 13:18:44.206
  I1221 13:18:44.271127 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.1268ms
  I1221 13:18:44.371881 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.74936ms
  I1221 13:18:47.599988 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7817" for this suite. @ 12/21/24 13:18:47.604
• [10.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/21/24 13:18:47.612
  I1221 13:18:47.612619 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:18:47.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:47.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:47.631
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:18:47.633
  STEP: Saw pod success @ 12/21/24 13:18:51.663
  I1221 13:18:51.669082 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-3c0bf9c2-a425-48b1-a577-0e10e56ddb44 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:18:51.677
  I1221 13:18:51.701008 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-708" for this suite. @ 12/21/24 13:18:51.705
• [4.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/21/24 13:18:51.713
  I1221 13:18:51.713999 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:18:51.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:51.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:51.731
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/21/24 13:18:51.737
  STEP: Saw pod success @ 12/21/24 13:18:53.756
  I1221 13:18:53.760446 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-ed08a32b-dd6c-45e3-947e-b4e637f24c78 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:18:53.771
  I1221 13:18:53.792928 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1797" for this suite. @ 12/21/24 13:18:53.798
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/21/24 13:18:53.806
  I1221 13:18:53.806486 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:18:53.807
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:53.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:53.826
  STEP: Creating secret with name projected-secret-test-0585f281-9cbe-4664-9e57-acb3b77dacd3 @ 12/21/24 13:18:53.828
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:18:53.833
  STEP: Saw pod success @ 12/21/24 13:18:55.858
  I1221 13:18:55.862804 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-secrets-a3c35f51-1e3e-42de-bb9e-62a3c319f74a container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 13:18:55.871
  I1221 13:18:55.894734 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3458" for this suite. @ 12/21/24 13:18:55.899
• [2.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/21/24 13:18:55.908
  I1221 13:18:55.908898 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-runtime @ 12/21/24 13:18:55.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:55.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:55.927
  STEP: create the container @ 12/21/24 13:18:55.929
  W1221 13:18:55.940989      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/21/24 13:18:55.941
  STEP: get the container status @ 12/21/24 13:18:57.955
  STEP: the container should be terminated @ 12/21/24 13:18:57.96
  STEP: the termination message should be set @ 12/21/24 13:18:57.96
  I1221 13:18:57.960847 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/21/24 13:18:57.96
  I1221 13:18:57.982368 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1742" for this suite. @ 12/21/24 13:18:57.987
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/21/24 13:18:57.995
  I1221 13:18:57.995883 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:18:57.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:18:58.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:18:58.012
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:18:58.015
  STEP: Saw pod success @ 12/21/24 13:19:02.042
  I1221 13:19:02.047367 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-3cf9f24d-ddfa-4ac8-b7f0-ac5781f1b9eb container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:19:02.056
  I1221 13:19:02.080324 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5026" for this suite. @ 12/21/24 13:19:02.085
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 12/21/24 13:19:02.094
  I1221 13:19:02.094470 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 13:19:02.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:19:02.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:19:02.113
  STEP: Creating service test in namespace statefulset-4788 @ 12/21/24 13:19:02.115
  STEP: Creating a new StatefulSet @ 12/21/24 13:19:02.121
  I1221 13:19:02.135375 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I1221 13:19:12.137799 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1221 13:19:12.137829 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1221 13:19:12.137835 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1221 13:19:12.150240 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-4788 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 13:19:12.234750 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 13:19:12.234791 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 13:19:12.234801 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/21/24 13:19:22.244
  I1221 13:19:22.255622 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/21/24 13:19:22.255
  STEP: Updating Pods in reverse ordinal order @ 12/21/24 13:19:32.269
  I1221 13:19:32.273845 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-4788 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 13:19:32.350910 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1221 13:19:32.350941 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 13:19:32.350951 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 12/21/24 13:19:42.369
  I1221 13:19:42.369733 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-4788 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1221 13:19:42.450948 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1221 13:19:42.450991 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1221 13:19:42.451002 19 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1221 13:19:52.473058 19 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/21/24 13:20:02.486
  I1221 13:20:02.491648 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=statefulset-4788 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1221 13:20:02.568108 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1221 13:20:02.568147 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1221 13:20:02.568154 19 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1221 13:20:12.590313 19 statefulset.go:138] Deleting all statefulset in ns statefulset-4788
  I1221 13:20:12.595375 19 rest.go:150] Scaling statefulset ss2 to 0
  I1221 13:20:22.619032 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 13:20:22.622979 19 rest.go:88] Deleting statefulset ss2
  I1221 13:20:22.639868 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4788" for this suite. @ 12/21/24 13:20:22.643
• [80.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/21/24 13:20:22.651
  I1221 13:20:22.651581 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-runtime @ 12/21/24 13:20:22.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:20:22.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:20:22.67
  STEP: create the container @ 12/21/24 13:20:22.673
  W1221 13:20:22.684119      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/21/24 13:20:22.684
  STEP: get the container status @ 12/21/24 13:20:25.707
  STEP: the container should be terminated @ 12/21/24 13:20:25.711
  STEP: the termination message should be set @ 12/21/24 13:20:25.711
  I1221 13:20:25.711168 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/21/24 13:20:25.711
  I1221 13:20:25.728644 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3846" for this suite. @ 12/21/24 13:20:25.732
• [3.090 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:626
  STEP: Creating a kubernetes client @ 12/21/24 13:20:25.741
  I1221 13:20:25.741516 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-preemption @ 12/21/24 13:20:25.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:20:25.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:20:25.759
  I1221 13:20:25.778502 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1221 13:21:25.785311 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/21/24 13:21:25.79
  I1221 13:21:25.790556 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/21/24 13:21:25.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:21:25.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:21:25.812
  STEP: Finding an available node @ 12/21/24 13:21:25.814
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/21/24 13:21:25.814
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/21/24 13:21:27.841
  I1221 13:21:27.859456 19 preemption.go:585] found a healthy node: ip-172-31-68-100
  I1221 13:21:33.931923 19 preemption.go:708] pods created so far: [1 1 1]
  I1221 13:21:33.931951 19 preemption.go:709] length of pods created so far: 3
  I1221 13:21:35.945440 19 preemption.go:726] pods created so far: [2 2 1]
  I1221 13:21:43.041792 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2250" for this suite. @ 12/21/24 13:21:43.047
  I1221 13:21:43.055467 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9801" for this suite. @ 12/21/24 13:21:43.06
• [77.328 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 12/21/24 13:21:43.069
  I1221 13:21:43.069764 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubelet-test @ 12/21/24 13:21:43.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:21:43.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:21:43.087
  I1221 13:21:43.122009 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6951" for this suite. @ 12/21/24 13:21:43.125
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 12/21/24 13:21:43.136
  I1221 13:21:43.136944 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/21/24 13:21:43.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:21:43.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:21:43.159
  I1221 13:21:43.164257 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-376" for this suite. @ 12/21/24 13:21:43.168
• [0.040 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:668
  STEP: Creating a kubernetes client @ 12/21/24 13:21:43.177
  I1221 13:21:43.177260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pv @ 12/21/24 13:21:43.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:21:43.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:21:43.197
  STEP: Creating initial PV and PVC @ 12/21/24 13:21:43.199
  I1221 13:21:43.199431 19 pv.go:394] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9559" @ 12/21/24 13:21:43.217
  STEP: Listing PVCs in namespace "pv-9559" @ 12/21/24 13:21:43.222
  STEP: Reading "pvc-gcgcr" Status @ 12/21/24 13:21:43.229
  STEP: Reading "pv-9559-9drfd" Status @ 12/21/24 13:21:43.233
  STEP: Patching "pvc-gcgcr" Status @ 12/21/24 13:21:43.238
  STEP: Patching "pv-9559-9drfd" Status @ 12/21/24 13:21:43.249
  STEP: Updating "pvc-gcgcr" Status @ 12/21/24 13:21:43.256
  STEP: Updating "pv-9559-9drfd" Status @ 12/21/24 13:21:43.266
  I1221 13:21:43.277945 19 persistent_volumes.go:406] AfterEach: deleting 1 PVCs and 1 PVs...
  I1221 13:21:43.277965 19 pv.go:205] Deleting PersistentVolumeClaim "pvc-gcgcr"
  I1221 13:21:43.289213 19 pv.go:193] Deleting PersistentVolume "pv-9559-9drfd"
  I1221 13:21:43.298191 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9559" for this suite. @ 12/21/24 13:21:43.302
• [0.139 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/21/24 13:21:43.315
  I1221 13:21:43.315948 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename gc @ 12/21/24 13:21:43.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:21:43.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:21:43.332
  STEP: create the rc1 @ 12/21/24 13:21:43.338
  STEP: create the rc2 @ 12/21/24 13:21:43.345
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/21/24 13:21:49.356
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/21/24 13:21:49.811
  STEP: wait for the rc to be deleted @ 12/21/24 13:21:49.82
  I1221 13:21:54.834607 19 garbage_collector.go:762] 69 pods remaining
  I1221 13:21:54.834632 19 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I1221 13:21:54.834637 19 garbage_collector.go:770] 
  STEP: Gathering metrics @ 12/21/24 13:21:59.833
  W1221 13:21:59.839492      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1221 13:21:59.839526 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1221 13:21:59.839570 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-272d6" in namespace "gc-6978"
  I1221 13:21:59.853686 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-29f62" in namespace "gc-6978"
  I1221 13:21:59.871441 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2qbpr" in namespace "gc-6978"
  I1221 13:21:59.889452 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-42rrk" in namespace "gc-6978"
  I1221 13:21:59.901515 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45dx2" in namespace "gc-6978"
  I1221 13:21:59.922482 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4l5qg" in namespace "gc-6978"
  I1221 13:21:59.938954 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4mhzk" in namespace "gc-6978"
  I1221 13:21:59.953926 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4pnkl" in namespace "gc-6978"
  I1221 13:21:59.969277 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5bb6x" in namespace "gc-6978"
  I1221 13:21:59.990000 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5fkx5" in namespace "gc-6978"
  I1221 13:22:00.004949 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5g7lm" in namespace "gc-6978"
  I1221 13:22:00.021623 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-644mq" in namespace "gc-6978"
  I1221 13:22:00.040394 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6hmvq" in namespace "gc-6978"
  I1221 13:22:00.057877 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6th2w" in namespace "gc-6978"
  I1221 13:22:00.076105 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7cpbq" in namespace "gc-6978"
  I1221 13:22:00.096719 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7nlsh" in namespace "gc-6978"
  I1221 13:22:00.116513 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86hvj" in namespace "gc-6978"
  I1221 13:22:00.134574 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-88slp" in namespace "gc-6978"
  I1221 13:22:00.159618 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89z7t" in namespace "gc-6978"
  I1221 13:22:00.186388 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cmn5" in namespace "gc-6978"
  I1221 13:22:00.203803 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8jd85" in namespace "gc-6978"
  I1221 13:22:00.222200 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8lkvq" in namespace "gc-6978"
  I1221 13:22:00.244639 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vhvp" in namespace "gc-6978"
  I1221 13:22:00.259517 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8w8sh" in namespace "gc-6978"
  I1221 13:22:00.282124 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8wmkc" in namespace "gc-6978"
  I1221 13:22:00.300819 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-95vqf" in namespace "gc-6978"
  I1221 13:22:00.323535 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9khfx" in namespace "gc-6978"
  I1221 13:22:00.335539 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9spng" in namespace "gc-6978"
  I1221 13:22:00.350678 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-blpm5" in namespace "gc-6978"
  I1221 13:22:00.368580 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c6mkj" in namespace "gc-6978"
  I1221 13:22:00.384502 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c742s" in namespace "gc-6978"
  I1221 13:22:00.399012 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cr4ct" in namespace "gc-6978"
  I1221 13:22:00.415600 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-crnz7" in namespace "gc-6978"
  I1221 13:22:00.432158 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8fqb" in namespace "gc-6978"
  I1221 13:22:00.445169 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d8x9r" in namespace "gc-6978"
  I1221 13:22:00.460903 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtlcb" in namespace "gc-6978"
  I1221 13:22:00.485716 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fd44t" in namespace "gc-6978"
  I1221 13:22:00.510241 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fg95b" in namespace "gc-6978"
  I1221 13:22:00.537791 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgqv5" in namespace "gc-6978"
  I1221 13:22:00.563974 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwmlk" in namespace "gc-6978"
  I1221 13:22:00.581092 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fwpvh" in namespace "gc-6978"
  I1221 13:22:00.601236 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g74xv" in namespace "gc-6978"
  I1221 13:22:00.619048 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g8cwq" in namespace "gc-6978"
  I1221 13:22:00.640022 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ggqf5" in namespace "gc-6978"
  I1221 13:22:00.660574 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-glqvn" in namespace "gc-6978"
  I1221 13:22:00.677775 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gp6g9" in namespace "gc-6978"
  I1221 13:22:00.694382 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gs8t6" in namespace "gc-6978"
  I1221 13:22:00.717036 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-htpj6" in namespace "gc-6978"
  I1221 13:22:00.731394 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j2rwk" in namespace "gc-6978"
  I1221 13:22:00.749755 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j8gkk" in namespace "gc-6978"
  I1221 13:22:00.769153 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6978" for this suite. @ 12/21/24 13:22:00.773
• [17.466 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 12/21/24 13:22:00.782
  I1221 13:22:00.782541 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 13:22:00.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:22:00.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:22:00.807
  STEP: Creating service test in namespace statefulset-9389 @ 12/21/24 13:22:00.811
  STEP: Creating statefulset ss in namespace statefulset-9389 @ 12/21/24 13:22:00.821
  I1221 13:22:00.853668 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  I1221 13:22:10.845320 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/21/24 13:22:10.853
  STEP: Getting /status @ 12/21/24 13:22:10.863
  I1221 13:22:10.867636 19 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/21/24 13:22:10.867
  I1221 13:22:10.881039 19 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/21/24 13:22:10.881
  I1221 13:22:10.882685 19 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1221 13:22:10.882709 19 statefulset.go:1111] Found Statefulset ss in namespace statefulset-9389 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1221 13:22:10.882754 19 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/21/24 13:22:10.882
  I1221 13:22:10.882779 19 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1221 13:22:10.890586 19 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/21/24 13:22:10.89
  I1221 13:22:10.892039 19 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1221 13:22:10.892060 19 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-9389 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1221 13:22:10.892143 19 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1221 13:22:10.892185 19 statefulset.go:138] Deleting all statefulset in ns statefulset-9389
  I1221 13:22:10.896013 19 rest.go:150] Scaling statefulset ss to 0
  I1221 13:22:20.911594 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 13:22:20.916916 19 rest.go:88] Deleting statefulset ss
  I1221 13:22:20.932751 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9389" for this suite. @ 12/21/24 13:22:20.936
• [20.161 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/21/24 13:22:20.943
  I1221 13:22:20.943879 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:22:20.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:22:20.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:22:20.964
  STEP: Creating configMap with name cm-test-opt-del-3fe2976d-f1cf-4aa7-8bce-810f4d1602a6 @ 12/21/24 13:22:20.971
  STEP: Creating configMap with name cm-test-opt-upd-0eeab1e0-8a62-4f55-8cef-930ba68da3c6 @ 12/21/24 13:22:20.978
  STEP: Creating the pod @ 12/21/24 13:22:20.984
  STEP: Deleting configmap cm-test-opt-del-3fe2976d-f1cf-4aa7-8bce-810f4d1602a6 @ 12/21/24 13:22:23.043
  STEP: Updating configmap cm-test-opt-upd-0eeab1e0-8a62-4f55-8cef-930ba68da3c6 @ 12/21/24 13:22:23.051
  STEP: Creating configMap with name cm-test-opt-create-935e0da9-04d7-47a4-a5a5-286206040f64 @ 12/21/24 13:22:23.058
  STEP: waiting to observe update in volume @ 12/21/24 13:22:23.062
  I1221 13:23:41.484995 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8977" for this suite. @ 12/21/24 13:23:41.49
• [80.554 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/21/24 13:23:41.498
  I1221 13:23:41.498217 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename init-container @ 12/21/24 13:23:41.498
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:23:41.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:23:41.516
  STEP: creating the pod @ 12/21/24 13:23:41.519
  I1221 13:23:41.519064 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1221 13:24:28.124584 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-15568ebf-adf8-4733-95b9-e7b9a4545db8", GenerateName:"", Namespace:"init-container-6246", SelfLink:"", UID:"f007ddc0-d57b-4b96-9b31-8f7ab5f79384", ResourceVersion:"31491", Generation:0, CreationTimestamp:time.Date(2024, time.December, 21, 13, 23, 41, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"519056682"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 23, 41, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b3d638), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 21, 13, 24, 28, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003b3d668), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-zr4s8", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0056f0dc0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil), Image:(*v1.ImageVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zr4s8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zr4s8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.10", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zr4s8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc005a3cb68), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-18-134", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0057fca00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005a3cbf0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005a3cc10)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005a3cc18), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc005a3cc1c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000650ca0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 21, 13, 23, 43, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 21, 13, 23, 41, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 21, 13, 23, 41, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 21, 13, 23, 41, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 21, 13, 23, 41, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.18.134", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.18.134"}}, PodIP:"192.168.235.184", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.235.184"}}, StartTime:time.Date(2024, time.December, 21, 13, 23, 41, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00057b1f0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00057b260)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://8cf5f4f0211e95d8fbc5da14b2065ca68853d3e1818d3a4cac9d32dc7a9c5896", Started:(*bool)(0xc005a3ccca), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-zr4s8", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000650d00)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0056f0e20), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc005a3ccdd), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-zr4s8", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000650d10)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0056f0e00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.10", ImageID:"", ContainerID:"", Started:(*bool)(0xc005a3cc94), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus{v1.VolumeMountStatus{Name:"kube-api-access-zr4s8", MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(0xc000650cc0)}}, User:(*v1.ContainerUser)(nil), AllocatedResourcesStatus:[]v1.ResourceStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1221 13:24:28.124956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-6246" for this suite. @ 12/21/24 13:24:28.129
• [46.640 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/21/24 13:24:28.141
  I1221 13:24:28.141658 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:24:28.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:24:28.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:24:28.163
  STEP: Creating configMap with name configmap-test-volume-map-b4d66088-d1f3-4114-bbb2-03103c765cd6 @ 12/21/24 13:24:28.165
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:24:28.17
  STEP: Saw pod success @ 12/21/24 13:24:32.198
  I1221 13:24:32.203478 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-configmaps-e2b4020b-bd56-4b4f-8c6d-56cb1efb6f5c container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:24:32.212
  I1221 13:24:32.229497 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2771" for this suite. @ 12/21/24 13:24:32.234
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:287
  STEP: Creating a kubernetes client @ 12/21/24 13:24:32.243
  I1221 13:24:32.243570 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename field-validation @ 12/21/24 13:24:32.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:24:32.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:24:32.26
  I1221 13:24:32.262640 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:24:35.351795 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7866" for this suite. @ 12/21/24 13:24:35.355
• [3.121 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 12/21/24 13:24:35.364
  I1221 13:24:35.364879 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/21/24 13:24:35.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:24:35.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:24:35.382
  I1221 13:24:35.385483 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:24:38.437652 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8388" for this suite. @ 12/21/24 13:24:38.442
• [3.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/21/24 13:24:38.449
  I1221 13:24:38.449845 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename cronjob @ 12/21/24 13:24:38.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:24:38.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:24:38.471
  STEP: Creating a cronjob @ 12/21/24 13:24:38.473
  STEP: Ensuring more than one job is running at a time @ 12/21/24 13:24:38.478
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/21/24 13:26:00.484
  STEP: Removing cronjob @ 12/21/24 13:26:00.488
  I1221 13:26:00.495800 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9672" for this suite. @ 12/21/24 13:26:00.5
• [82.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/21/24 13:26:00.51
  I1221 13:26:00.510376 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:26:00.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:26:00.527
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:26:00.529
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/21/24 13:26:00.532
  STEP: Saw pod success @ 12/21/24 13:26:02.559
  I1221 13:26:02.565413 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-527686a7-17a8-4b08-80de-d32a1256bc88 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:26:02.581
  I1221 13:26:02.605819 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6082" for this suite. @ 12/21/24 13:26:02.611
• [2.110 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 12/21/24 13:26:02.62
  I1221 13:26:02.620854 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 13:26:02.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:26:02.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:26:02.638
  STEP: Creating pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559 @ 12/21/24 13:26:02.64
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 13:26:04.663
  I1221 13:26:04.668639 19 container_probe.go:1749] Initial restart count of pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 is 0
  I1221 13:26:04.672356 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:06.678579 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:08.684464 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:10.691013 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:12.698003 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:14.704003 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:16.709064 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:18.714724 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:20.719871 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:22.726189 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:24.733499 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:24.733535 19 container_probe.go:1763] Restart count of pod container-probe-8559/liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 is now 1 (20.064872201s elapsed)
  I1221 13:26:26.739904 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:28.746031 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:30.750715 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:32.756852 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:34.762047 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:36.768580 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:38.774853 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:40.782136 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:42.787761 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:44.793024 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:44.793063 19 container_probe.go:1763] Restart count of pod container-probe-8559/liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 is now 2 (40.124399034s elapsed)
  I1221 13:26:46.799471 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:48.805069 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:50.811570 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:52.817833 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:54.824074 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:56.830066 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:26:58.835582 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:00.841224 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:02.847727 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:04.855624 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:04.855662 19 container_probe.go:1763] Restart count of pod container-probe-8559/liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 is now 3 (1m0.186998567s elapsed)
  I1221 13:27:06.868620 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:08.875086 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:10.881310 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:12.887133 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:14.892298 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:16.898496 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:18.905372 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:20.912132 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:22.918314 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:24.923083 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:24.923120 19 container_probe.go:1763] Restart count of pod container-probe-8559/liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 is now 4 (1m20.254456801s elapsed)
  I1221 13:27:26.928675 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:28.934186 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:30.940914 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:32.947226 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:34.953732 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:36.959737 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:38.965742 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:40.972201 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:42.976373 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:44.983308 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:46.990184 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:48.996108 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:51.002664 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:53.008592 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:55.015136 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:57.021574 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:27:59.027996 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:01.033608 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:03.039490 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:05.046490 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:07.053799 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:09.060514 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:11.068065 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:13.073467 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:15.080493 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:17.086052 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:19.092289 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:21.098949 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:23.104196 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:25.110468 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:27.115850 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:29.122616 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:31.129612 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:33.135871 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:35.142573 19 container_probe.go:1759] Get pod liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 in namespace container-probe-8559
  I1221 13:28:35.142611 19 container_probe.go:1763] Restart count of pod container-probe-8559/liveness-b8d9091d-89bc-42f8-9a7b-d636793c12b4 is now 5 (2m30.473948074s elapsed)
  STEP: deleting the pod @ 12/21/24 13:28:35.142
  I1221 13:28:35.161271 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8559" for this suite. @ 12/21/24 13:28:35.166
• [152.554 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1624
  STEP: Creating a kubernetes client @ 12/21/24 13:28:35.174
  I1221 13:28:35.174952 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 13:28:35.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:35.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:35.192
  STEP: creating the pod @ 12/21/24 13:28:35.195
  I1221 13:28:35.196568 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 create -f -'
  I1221 13:28:35.346742 19 builder.go:146] stderr: ""
  I1221 13:28:35.346779 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/21/24 13:28:37.36
  I1221 13:28:37.360169 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 label pods pause testing-label=testing-label-value'
  I1221 13:28:37.410645 19 builder.go:146] stderr: ""
  I1221 13:28:37.410677 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/21/24 13:28:37.41
  I1221 13:28:37.410772 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 get pod pause -L testing-label'
  I1221 13:28:37.452251 19 builder.go:146] stderr: ""
  I1221 13:28:37.452288 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/21/24 13:28:37.452
  I1221 13:28:37.452386 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 label pods pause testing-label-'
  I1221 13:28:37.503306 19 builder.go:146] stderr: ""
  I1221 13:28:37.503366 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/21/24 13:28:37.503
  I1221 13:28:37.503437 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 get pod pause -L testing-label'
  I1221 13:28:37.544093 19 builder.go:146] stderr: ""
  I1221 13:28:37.544133 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/21/24 13:28:37.544
  I1221 13:28:37.544264 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 delete --grace-period=0 --force -f -'
  I1221 13:28:37.600653 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:28:37.600687 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1221 13:28:37.600782 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 get rc,svc -l name=pause --no-headers'
  I1221 13:28:37.648846 19 builder.go:146] stderr: "No resources found in kubectl-6247 namespace.\n"
  I1221 13:28:37.648897 19 builder.go:147] stdout: ""
  I1221 13:28:37.648941 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6247 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1221 13:28:37.689765 19 builder.go:146] stderr: ""
  I1221 13:28:37.689807 19 builder.go:147] stdout: ""
  I1221 13:28:37.689943 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6247" for this suite. @ 12/21/24 13:28:37.694
• [2.530 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 12/21/24 13:28:37.705
  I1221 13:28:37.705055 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 13:28:37.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:37.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:37.723
  STEP: Creating a pod to test substitution in container's args @ 12/21/24 13:28:37.725
  STEP: Saw pod success @ 12/21/24 13:28:39.749
  I1221 13:28:39.754526 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod var-expansion-9b2cf12e-f492-44f6-a470-a9536c1c1938 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 13:28:39.77
  I1221 13:28:39.791277 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6356" for this suite. @ 12/21/24 13:28:39.796
• [2.100 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/21/24 13:28:39.805
  I1221 13:28:39.805191 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename watch @ 12/21/24 13:28:39.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:39.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:39.833
  STEP: getting a starting resourceVersion @ 12/21/24 13:28:39.835
  STEP: starting a background goroutine to produce watch events @ 12/21/24 13:28:39.839
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/21/24 13:28:39.839
  I1221 13:28:42.612299 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4511" for this suite. @ 12/21/24 13:28:42.661
• [2.910 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:207
  STEP: Creating a kubernetes client @ 12/21/24 13:28:42.715
  I1221 13:28:42.715281 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:28:42.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:42.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:42.736
  STEP: Setting up server cert @ 12/21/24 13:28:42.764
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:28:42.949
  STEP: Deploying the webhook pod @ 12/21/24 13:28:42.957
  STEP: Wait for the deployment to be ready @ 12/21/24 13:28:42.971
  I1221 13:28:42.986508 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:28:45.004
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:28:45.015
  I1221 13:28:46.016453 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/21/24 13:28:46.027
  STEP: create a pod @ 12/21/24 13:28:46.042
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/21/24 13:28:48.058
  I1221 13:28:48.058836 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=webhook-4963 attach --namespace=webhook-4963 to-be-attached-pod -i -c=container1'
  I1221 13:28:48.114887 19 builder.go:135] rc: 1
  I1221 13:28:48.167097 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4963" for this suite. @ 12/21/24 13:28:48.172
  STEP: Destroying namespace "webhook-markers-6592" for this suite. @ 12/21/24 13:28:48.183
• [5.475 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:712
  STEP: Creating a kubernetes client @ 12/21/24 13:28:48.19
  I1221 13:28:48.190827 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:28:48.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:48.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:48.21
  STEP: Setting up server cert @ 12/21/24 13:28:48.234
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:28:48.432
  STEP: Deploying the webhook pod @ 12/21/24 13:28:48.439
  STEP: Wait for the deployment to be ready @ 12/21/24 13:28:48.454
  I1221 13:28:48.469126 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:28:50.483
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:28:50.5
  I1221 13:28:51.500863 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/21/24 13:28:51.511
  STEP: verifying the validating webhook match conditions @ 12/21/24 13:28:51.52
  STEP: updating the validating webhook match conditions @ 12/21/24 13:28:51.523
  STEP: verifying the validating webhook match conditions @ 12/21/24 13:28:51.532
  I1221 13:28:51.595576 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6785" for this suite. @ 12/21/24 13:28:51.602
  STEP: Destroying namespace "webhook-markers-5190" for this suite. @ 12/21/24 13:28:51.609
• [3.427 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/21/24 13:28:51.617
  I1221 13:28:51.617602 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/21/24 13:28:51.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:51.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:51.636
  STEP: getting /apis @ 12/21/24 13:28:51.639
  STEP: getting /apis/storage.k8s.io @ 12/21/24 13:28:51.642
  STEP: getting /apis/storage.k8s.io/v1 @ 12/21/24 13:28:51.643
  STEP: creating @ 12/21/24 13:28:51.645
  STEP: watching @ 12/21/24 13:28:51.665
  I1221 13:28:51.665295 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 12/21/24 13:28:51.672
  STEP: listing in namespace @ 12/21/24 13:28:51.676
  STEP: listing across namespaces @ 12/21/24 13:28:51.68
  STEP: patching @ 12/21/24 13:28:51.685
  STEP: updating @ 12/21/24 13:28:51.69
  I1221 13:28:51.696778 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1221 13:28:51.696860 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/21/24 13:28:51.696
  STEP: deleting a collection @ 12/21/24 13:28:51.713
  I1221 13:28:51.734246 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4415" for this suite. @ 12/21/24 13:28:51.738
• [0.131 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/21/24 13:28:51.748
  I1221 13:28:51.748196 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:28:51.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:51.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:51.766
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/21/24 13:28:51.769
  STEP: Saw pod success @ 12/21/24 13:28:53.79
  I1221 13:28:53.794922 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod pod-cd448e14-ab95-4588-b94b-a573bec7a606 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:28:53.807
  I1221 13:28:53.828585 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2781" for this suite. @ 12/21/24 13:28:53.833
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2216
  STEP: Creating a kubernetes client @ 12/21/24 13:28:53.841
  I1221 13:28:53.841469 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:28:53.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:28:53.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:28:53.861
  STEP: creating service in namespace services-1435 @ 12/21/24 13:28:53.863
  STEP: creating service affinity-nodeport-transition in namespace services-1435 @ 12/21/24 13:28:53.863
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1435 @ 12/21/24 13:28:53.882
  I1221 13:28:53.893684      19 runners.go:193] Created replication controller with name: affinity-nodeport-transition, namespace: services-1435, replica count: 3
  I1221 13:28:56.945420      19 runners.go:193] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 13:28:56.957897 19 resource.go:361] Creating new exec pod
  I1221 13:28:59.980484 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1435 exec execpod-affinityxt82s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1221 13:29:00.065567 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1221 13:29:00.065619 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:29:00.065746 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1435 exec execpod-affinityxt82s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.158 80'
  I1221 13:29:00.141311 19 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.158 80\necho hostName\nConnection to 10.152.183.158 80 port [tcp/http] succeeded!\n"
  I1221 13:29:00.141366 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:29:00.141712 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1435 exec execpod-affinityxt82s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.184 30877'
  I1221 13:29:00.222035 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.9.184 30877\nConnection to 172.31.9.184 30877 port [tcp/*] succeeded!\n"
  I1221 13:29:00.222092 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:29:00.222162 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1435 exec execpod-affinityxt82s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.134 30877'
  I1221 13:29:00.301486 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.134 30877\nConnection to 172.31.18.134 30877 port [tcp/*] succeeded!\n"
  I1221 13:29:00.301534 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:29:00.313006 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1435 exec execpod-affinityxt82s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.134:30877/ ; done'
  I1221 13:29:00.457982 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n"
  I1221 13:29:00.458027 19 builder.go:147] stdout: "\naffinity-nodeport-transition-4p6lg\naffinity-nodeport-transition-4p6lg\naffinity-nodeport-transition-4p6lg\naffinity-nodeport-transition-rkppj\naffinity-nodeport-transition-4p6lg\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-rkppj\naffinity-nodeport-transition-rkppj\naffinity-nodeport-transition-rkppj\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-4p6lg\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-4p6lg\naffinity-nodeport-transition-4p6lg"
  I1221 13:29:00.458039 19 service.go:242] Received response from host: affinity-nodeport-transition-4p6lg
  I1221 13:29:00.458069 19 service.go:242] Received response from host: affinity-nodeport-transition-4p6lg
  I1221 13:29:00.458083 19 service.go:242] Received response from host: affinity-nodeport-transition-4p6lg
  I1221 13:29:00.458091 19 service.go:242] Received response from host: affinity-nodeport-transition-rkppj
  I1221 13:29:00.458102 19 service.go:242] Received response from host: affinity-nodeport-transition-4p6lg
  I1221 13:29:00.458107 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.458112 19 service.go:242] Received response from host: affinity-nodeport-transition-rkppj
  I1221 13:29:00.458117 19 service.go:242] Received response from host: affinity-nodeport-transition-rkppj
  I1221 13:29:00.458231 19 service.go:242] Received response from host: affinity-nodeport-transition-rkppj
  I1221 13:29:00.458238 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.458254 19 service.go:242] Received response from host: affinity-nodeport-transition-4p6lg
  I1221 13:29:00.458260 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.458266 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.458291 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.458308 19 service.go:242] Received response from host: affinity-nodeport-transition-4p6lg
  I1221 13:29:00.458314 19 service.go:242] Received response from host: affinity-nodeport-transition-4p6lg
  I1221 13:29:00.471569 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1435 exec execpod-affinityxt82s -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.134:30877/ ; done'
  I1221 13:29:00.624705 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:30877/\n"
  I1221 13:29:00.624797 19 builder.go:147] stdout: "\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv\naffinity-nodeport-transition-8t4fv"
  I1221 13:29:00.624812 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624820 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624826 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624831 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624837 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624842 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624847 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624853 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624861 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624867 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624872 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624877 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624882 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624887 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624893 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624898 19 service.go:242] Received response from host: affinity-nodeport-transition-8t4fv
  I1221 13:29:00.624972 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1435, will wait for the garbage collector to delete the pods @ 12/21/24 13:29:00.644
  I1221 13:29:00.708031 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 8.589406ms
  I1221 13:29:00.809052 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.016081ms
  I1221 13:29:03.641418 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1435" for this suite. @ 12/21/24 13:29:03.645
• [9.812 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 12/21/24 13:29:03.653
  I1221 13:29:03.653557 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/21/24 13:29:03.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:03.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:03.674
  STEP: creating the policy @ 12/21/24 13:29:03.682
  STEP: waiting until the marker is denied @ 12/21/24 13:29:03.694
  STEP: testing a replicated Deployment to be allowed @ 12/21/24 13:29:04.603
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/21/24 13:29:04.623
  I1221 13:29:04.680238 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4972" for this suite. @ 12/21/24 13:29:04.685
• [1.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:454
  STEP: Creating a kubernetes client @ 12/21/24 13:29:04.693
  I1221 13:29:04.693874 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 13:29:04.694
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:04.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:04.712
  STEP: Counting existing ResourceQuota @ 12/21/24 13:29:04.714
  STEP: Creating a ResourceQuota @ 12/21/24 13:29:09.718
  STEP: Ensuring resource quota status is calculated @ 12/21/24 13:29:09.724
  STEP: Creating a ReplicaSet @ 12/21/24 13:29:11.73
  STEP: Ensuring resource quota status captures replicaset creation @ 12/21/24 13:29:11.744
  STEP: Deleting a ReplicaSet @ 12/21/24 13:29:13.751
  STEP: Ensuring resource quota status released usage @ 12/21/24 13:29:13.76
  I1221 13:29:15.766897 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5437" for this suite. @ 12/21/24 13:29:15.772
• [11.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/21/24 13:29:15.783
  I1221 13:29:15.783378 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename subpath @ 12/21/24 13:29:15.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:15.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:15.821
  STEP: Setting up data @ 12/21/24 13:29:15.825
  STEP: Creating pod pod-subpath-test-projected-bff6 @ 12/21/24 13:29:15.851
  STEP: Creating a pod to test atomic-volume-subpath @ 12/21/24 13:29:15.851
  STEP: Saw pod success @ 12/21/24 13:29:37.935
  I1221 13:29:37.940725 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-subpath-test-projected-bff6 container test-container-subpath-projected-bff6: <nil>
  STEP: delete the pod @ 12/21/24 13:29:37.948
  STEP: Deleting pod pod-subpath-test-projected-bff6 @ 12/21/24 13:29:37.972
  I1221 13:29:37.972442 19 delete.go:62] Deleting pod "pod-subpath-test-projected-bff6" in namespace "subpath-5554"
  I1221 13:29:37.975960 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5554" for this suite. @ 12/21/24 13:29:37.981
• [22.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:174
  STEP: Creating a kubernetes client @ 12/21/24 13:29:37.991
  I1221 13:29:37.991115 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-webhook @ 12/21/24 13:29:37.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:38.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:38.007
  STEP: Setting up server cert @ 12/21/24 13:29:38.011
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/21/24 13:29:38.209
  STEP: Deploying the custom resource conversion webhook pod @ 12/21/24 13:29:38.219
  STEP: Wait for the deployment to be ready @ 12/21/24 13:29:38.232
  I1221 13:29:38.244466 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:29:40.258
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:29:40.27
  I1221 13:29:41.270649 19 util.go:420] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1221 13:29:41.279247 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Creating a v1 custom resource @ 12/21/24 13:29:43.831
  STEP: Create a v2 custom resource @ 12/21/24 13:29:43.849
  STEP: List CRs in v1 @ 12/21/24 13:29:43.877
  STEP: List CRs in v2 @ 12/21/24 13:29:43.882
  I1221 13:29:44.456312 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8337" for this suite. @ 12/21/24 13:29:44.46
• [6.480 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1044
  STEP: Creating a kubernetes client @ 12/21/24 13:29:44.471
  I1221 13:29:44.471459 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 13:29:44.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:44.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:44.49
  STEP: create deployment with httpd image @ 12/21/24 13:29:44.493
  I1221 13:29:44.493273 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-5352 create -f -'
  I1221 13:29:44.561233 19 builder.go:146] stderr: ""
  I1221 13:29:44.561266 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/21/24 13:29:44.561
  I1221 13:29:44.561398 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-5352 diff -f -'
  I1221 13:29:44.644092 19 builder.go:135] rc: 1
  I1221 13:29:44.644163 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-5352 delete -f -'
  I1221 13:29:44.690635 19 builder.go:146] stderr: ""
  I1221 13:29:44.690670 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1221 13:29:44.690905 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5352" for this suite. @ 12/21/24 13:29:44.694
• [0.232 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/21/24 13:29:44.703
  I1221 13:29:44.703117 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename daemonsets @ 12/21/24 13:29:44.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:44.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:44.726
  I1221 13:29:44.749152 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/21/24 13:29:44.754
  I1221 13:29:44.761879 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:44.761913 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:44.767188 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 13:29:44.767202 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  I1221 13:29:45.759735 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:45.759778 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:45.763779 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1221 13:29:45.763800 19 fixtures.go:130] Node ip-172-31-9-184 is running 0 daemon pod, expected 1
  I1221 13:29:46.760103 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:46.760146 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:46.763947 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 13:29:46.763964 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/21/24 13:29:46.782
  STEP: Check that daemon pods images are updated. @ 12/21/24 13:29:46.794
  I1221 13:29:46.798113 19 daemon_set.go:1193] Wrong image for pod: daemon-set-4g46g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1221 13:29:46.798135 19 daemon_set.go:1193] Wrong image for pod: daemon-set-ddtlc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1221 13:29:46.798142 19 daemon_set.go:1193] Wrong image for pod: daemon-set-rmqbm. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1221 13:29:46.803926 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:46.803957 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:47.800710 19 daemon_set.go:1193] Wrong image for pod: daemon-set-4g46g. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1221 13:29:47.800744 19 daemon_set.go:1193] Wrong image for pod: daemon-set-ddtlc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1221 13:29:47.800751 19 daemon_set.go:1198] Pod daemon-set-l7hpj is not available
  I1221 13:29:47.804778 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:47.804809 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:48.799820 19 daemon_set.go:1193] Wrong image for pod: daemon-set-ddtlc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.52, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1221 13:29:48.804193 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:48.804224 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:49.808071 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:49.808111 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:50.805287 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:50.805324 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/21/24 13:29:50.805
  I1221 13:29:50.810461 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:50.810488 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:29:50.814447 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 13:29:50.814465 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/21/24 13:29:50.833
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7804, will wait for the garbage collector to delete the pods @ 12/21/24 13:29:50.833
  I1221 13:29:50.898821 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.978195ms
  I1221 13:29:50.999034 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.209085ms
  I1221 13:29:52.704580 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 13:29:52.704612 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1221 13:29:52.709498 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33491"},"items":null}

  I1221 13:29:52.713441 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33491"},"items":null}

  I1221 13:29:52.729726 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7804" for this suite. @ 12/21/24 13:29:52.733
• [8.040 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/21/24 13:29:52.743
  I1221 13:29:52.743585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:29:52.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:52.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:52.761
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/21/24 13:29:52.763
  STEP: Saw pod success @ 12/21/24 13:29:54.781
  I1221 13:29:54.786115 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-f813a962-f5f1-4d8c-9c4f-23ce6749a187 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:29:54.795
  I1221 13:29:54.817007 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6133" for this suite. @ 12/21/24 13:29:54.821
• [2.088 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/21/24 13:29:54.831
  I1221 13:29:54.831251 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/21/24 13:29:54.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:54.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:54.849
  STEP: creating @ 12/21/24 13:29:54.852
  STEP: getting @ 12/21/24 13:29:54.876
  STEP: listing in namespace @ 12/21/24 13:29:54.881
  STEP: patching @ 12/21/24 13:29:54.887
  STEP: deleting @ 12/21/24 13:29:54.896
  I1221 13:29:54.910693 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-3210" for this suite. @ 12/21/24 13:29:54.915
• [0.093 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:495
  STEP: Creating a kubernetes client @ 12/21/24 13:29:54.924
  I1221 13:29:54.924047 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:29:54.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:54.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:54.945
  STEP: Setting up server cert @ 12/21/24 13:29:54.969
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:29:55.262
  STEP: Deploying the webhook pod @ 12/21/24 13:29:55.27
  STEP: Wait for the deployment to be ready @ 12/21/24 13:29:55.285
  I1221 13:29:55.294625 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/21/24 13:29:57.309
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:29:57.32
  I1221 13:29:58.321518 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/21/24 13:29:58.33
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/21/24 13:29:58.348
  STEP: Creating a configMap that should not be mutated @ 12/21/24 13:29:58.354
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/21/24 13:29:58.368
  STEP: Creating a configMap that should be mutated @ 12/21/24 13:29:58.375
  I1221 13:29:58.443256 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7417" for this suite. @ 12/21/24 13:29:58.447
  STEP: Destroying namespace "webhook-markers-7127" for this suite. @ 12/21/24 13:29:58.458
• [3.542 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 12/21/24 13:29:58.465
  I1221 13:29:58.465981 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/21/24 13:29:58.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:29:58.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:29:58.484
  STEP: create the container to handle the HTTPGet hook request. @ 12/21/24 13:29:58.49
  STEP: create the pod with lifecycle hook @ 12/21/24 13:30:00.519
  STEP: delete the pod with lifecycle hook @ 12/21/24 13:30:02.542
  STEP: check prestop hook @ 12/21/24 13:30:04.563
  I1221 13:30:04.571921 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5698" for this suite. @ 12/21/24 13:30:04.576
• [6.120 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 12/21/24 13:30:04.586
  I1221 13:30:04.586260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 13:30:04.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:30:04.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:30:04.606
  I1221 13:30:04.608836 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/21/24 13:30:05.816
  I1221 13:30:05.816987 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-453 --namespace=crd-publish-openapi-453 create -f -'
  I1221 13:30:07.884410 19 builder.go:146] stderr: ""
  I1221 13:30:07.884453 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-191-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1221 13:30:07.884574 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-453 --namespace=crd-publish-openapi-453 delete e2e-test-crd-publish-openapi-191-crds test-cr'
  I1221 13:30:07.933685 19 builder.go:146] stderr: ""
  I1221 13:30:07.933735 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-191-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1221 13:30:07.933841 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-453 --namespace=crd-publish-openapi-453 apply -f -'
  I1221 13:30:07.999145 19 builder.go:146] stderr: ""
  I1221 13:30:07.999179 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-191-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1221 13:30:07.999240 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-453 --namespace=crd-publish-openapi-453 delete e2e-test-crd-publish-openapi-191-crds test-cr'
  I1221 13:30:08.049578 19 builder.go:146] stderr: ""
  I1221 13:30:08.049614 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-191-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/21/24 13:30:08.049
  I1221 13:30:08.049700 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-453 explain e2e-test-crd-publish-openapi-191-crds'
  I1221 13:30:08.089028 19 builder.go:146] stderr: ""
  I1221 13:30:08.089077 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-191-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1221 13:30:09.305895 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-453" for this suite. @ 12/21/24 13:30:09.312
• [4.734 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:139
  STEP: Creating a kubernetes client @ 12/21/24 13:30:09.32
  I1221 13:30:09.320552 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 13:30:09.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:30:09.336
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:30:09.338
  STEP: Creating a test headless service @ 12/21/24 13:30:09.34
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9470.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9470.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9470.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9470.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 123.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.123_udp@PTR;check="$$(dig +tcp +noall +answer +search 123.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.123_tcp@PTR;sleep 1; done
   @ 12/21/24 13:30:09.363
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9470.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9470.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9470.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9470.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9470.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 123.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.123_udp@PTR;check="$$(dig +tcp +noall +answer +search 123.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.123_tcp@PTR;sleep 1; done
   @ 12/21/24 13:30:09.363
  STEP: creating a pod to probe DNS @ 12/21/24 13:30:09.363
  STEP: submitting the pod to kubernetes @ 12/21/24 13:30:09.363
  STEP: retrieving the pod @ 12/21/24 13:30:15.401
  STEP: looking for the results for each expected name from probers @ 12/21/24 13:30:15.405
  I1221 13:30:15.411516 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-9470.svc.cluster.local from pod dns-9470/dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14: the server could not find the requested resource (get pods dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14)
  I1221 13:30:15.416723 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-9470.svc.cluster.local from pod dns-9470/dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14: the server could not find the requested resource (get pods dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14)
  I1221 13:30:15.420907 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local from pod dns-9470/dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14: the server could not find the requested resource (get pods dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14)
  I1221 13:30:15.425434 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local from pod dns-9470/dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14: the server could not find the requested resource (get pods dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14)
  I1221 13:30:15.481707 19 dns_common.go:489] Lookups using dns-9470/dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14 failed for: [wheezy_udp@dns-test-service.dns-9470.svc.cluster.local wheezy_tcp@dns-test-service.dns-9470.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9470.svc.cluster.local]

  I1221 13:30:15.490848 19 dns_common.go:495] Pod client logs for webserver: 
  I1221 13:30:15.498498 19 dns_common.go:495] Pod client logs for querier: 
  I1221 13:30:15.505916 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I1221 13:30:20.483871 19 dns_common.go:527] DNS probes using dns-9470/dns-test-c2f52404-d476-4dca-9e6a-12b13ed0bc14 succeeded

  STEP: deleting the pod @ 12/21/24 13:30:20.483
  STEP: deleting the test service @ 12/21/24 13:30:20.508
  STEP: deleting the test headless service @ 12/21/24 13:30:20.534
  I1221 13:30:20.551049 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9470" for this suite. @ 12/21/24 13:30:20.555
• [11.243 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 12/21/24 13:30:20.563
  I1221 13:30:20.563235 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-pred @ 12/21/24 13:30:20.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:30:20.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:30:20.584
  I1221 13:30:20.586770 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1221 13:30:20.594418 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1221 13:30:20.598249 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-134 before test
  I1221 13:30:20.603761 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-f4st4 from ingress-nginx-kubernetes-worker started at 2024-12-21 12:02:55 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.603777 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 13:30:20.603785 19 predicates.go:957] calico-node-lftqs from kube-system started at 2024-12-21 12:08:33 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.603789 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 13:30:20.603795 19 predicates.go:957] sonobuoy-e2e-job-b5a495975eb84fdf from sonobuoy started at 2024-12-21 12:10:57 +0000 UTC (2 container statuses recorded)
  I1221 13:30:20.603801 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1221 13:30:20.603805 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:30:20.603810 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-rx848 from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 13:30:20.603814 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:30:20.603819 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 13:30:20.603824 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-100 before test
  I1221 13:30:20.609717 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-lfggv from ingress-nginx-kubernetes-worker started at 2024-12-21 12:58:24 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.609734 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 13:30:20.609739 19 predicates.go:957] calico-node-npt9c from kube-system started at 2024-12-21 12:06:56 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.609746 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 13:30:20.609752 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-21 12:10:55 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.609756 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1221 13:30:20.609763 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-4tc8w from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 13:30:20.609771 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:30:20.609775 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 13:30:20.609781 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-184 before test
  I1221 13:30:20.616382 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5c9cx from ingress-nginx-kubernetes-worker started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.616398 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 13:30:20.616405 19 predicates.go:957] calico-node-qsfv4 from kube-system started at 2024-12-21 12:08:22 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.616410 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 13:30:20.616417 19 predicates.go:957] coredns-5b4857d7c8-vssh5 from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.616422 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1221 13:30:20.616428 19 predicates.go:957] kube-state-metrics-5d7bdccd49-tfhds from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.616433 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 4
  I1221 13:30:20.616439 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wp8st from kube-system started at 2024-12-21 12:00:58 +0000 UTC (2 container statuses recorded)
  I1221 13:30:20.616443 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1221 13:30:20.616454 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1221 13:30:20.616459 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-588bl from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.616463 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1221 13:30:20.616468 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-p8lb6 from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:30:20.616472 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 4
  I1221 13:30:20.616477 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-fqqth from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 13:30:20.616494 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:30:20.616500 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-18-134 @ 12/21/24 13:30:20.631
  STEP: verifying the node has the label node ip-172-31-68-100 @ 12/21/24 13:30:20.643
  STEP: verifying the node has the label node ip-172-31-9-184 @ 12/21/24 13:30:20.657
  I1221 13:30:20.669153 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-5c9cx requesting resource cpu=0m on Node ip-172-31-9-184
  I1221 13:30:20.669175 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-f4st4 requesting resource cpu=0m on Node ip-172-31-18-134
  I1221 13:30:20.669181 19 predicates.go:372] Pod nginx-ingress-controller-kubernetes-worker-lfggv requesting resource cpu=0m on Node ip-172-31-68-100
  I1221 13:30:20.669187 19 predicates.go:372] Pod calico-node-lftqs requesting resource cpu=250m on Node ip-172-31-18-134
  I1221 13:30:20.669193 19 predicates.go:372] Pod calico-node-npt9c requesting resource cpu=250m on Node ip-172-31-68-100
  I1221 13:30:20.669198 19 predicates.go:372] Pod calico-node-qsfv4 requesting resource cpu=250m on Node ip-172-31-9-184
  I1221 13:30:20.669204 19 predicates.go:372] Pod coredns-5b4857d7c8-vssh5 requesting resource cpu=100m on Node ip-172-31-9-184
  I1221 13:30:20.669210 19 predicates.go:372] Pod kube-state-metrics-5d7bdccd49-tfhds requesting resource cpu=0m on Node ip-172-31-9-184
  I1221 13:30:20.669222 19 predicates.go:372] Pod metrics-server-v0.7.1-6c77d69467-wp8st requesting resource cpu=5m on Node ip-172-31-9-184
  I1221 13:30:20.669227 19 predicates.go:372] Pod dashboard-metrics-scraper-64757cf48d-588bl requesting resource cpu=0m on Node ip-172-31-9-184
  I1221 13:30:20.669232 19 predicates.go:372] Pod kubernetes-dashboard-7b6b7bcb5d-p8lb6 requesting resource cpu=0m on Node ip-172-31-9-184
  I1221 13:30:20.669237 19 predicates.go:372] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-68-100
  I1221 13:30:20.669241 19 predicates.go:372] Pod sonobuoy-e2e-job-b5a495975eb84fdf requesting resource cpu=0m on Node ip-172-31-18-134
  I1221 13:30:20.669246 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-4tc8w requesting resource cpu=0m on Node ip-172-31-68-100
  I1221 13:30:20.669276 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-fqqth requesting resource cpu=0m on Node ip-172-31-9-184
  I1221 13:30:20.669308 19 predicates.go:372] Pod sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-rx848 requesting resource cpu=0m on Node ip-172-31-18-134
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/21/24 13:30:20.669
  I1221 13:30:20.669349 19 predicates.go:382] Creating a pod which consumes cpu=1151m on Node ip-172-31-9-184
  I1221 13:30:20.680183 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-18-134
  I1221 13:30:20.688964 19 predicates.go:382] Creating a pod which consumes cpu=1225m on Node ip-172-31-68-100
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/21/24 13:30:22.713
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f7ec009-a333-425e-8399-ceab8bc37cba.18133454e4b62666], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3266/filler-pod-9f7ec009-a333-425e-8399-ceab8bc37cba to ip-172-31-9-184] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f7ec009-a333-425e-8399-ceab8bc37cba.181334551404a096], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f7ec009-a333-425e-8399-ceab8bc37cba.18133455151747e7], Reason = [Created], Message = [Created container filler-pod-9f7ec009-a333-425e-8399-ceab8bc37cba] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9f7ec009-a333-425e-8399-ceab8bc37cba.1813345517c3477e], Reason = [Started], Message = [Started container filler-pod-9f7ec009-a333-425e-8399-ceab8bc37cba] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c0818a72-8233-4cb9-b905-fd4e5d26ce5d.18133454e5b0589b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3266/filler-pod-c0818a72-8233-4cb9-b905-fd4e5d26ce5d to ip-172-31-68-100] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c0818a72-8233-4cb9-b905-fd4e5d26ce5d.1813345506266784], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c0818a72-8233-4cb9-b905-fd4e5d26ce5d.181334550703ef4d], Reason = [Created], Message = [Created container filler-pod-c0818a72-8233-4cb9-b905-fd4e5d26ce5d] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c0818a72-8233-4cb9-b905-fd4e5d26ce5d.18133455094fb070], Reason = [Started], Message = [Started container filler-pod-c0818a72-8233-4cb9-b905-fd4e5d26ce5d] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cbd0837d-1406-4117-bdc8-0702543054d5.18133454e56b3ba0], Reason = [Scheduled], Message = [Successfully assigned sched-pred-3266/filler-pod-cbd0837d-1406-4117-bdc8-0702543054d5 to ip-172-31-18-134] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cbd0837d-1406-4117-bdc8-0702543054d5.1813345521fdfd8c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.10" already present on machine] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cbd0837d-1406-4117-bdc8-0702543054d5.18133455228fac33], Reason = [Created], Message = [Created container filler-pod-cbd0837d-1406-4117-bdc8-0702543054d5] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cbd0837d-1406-4117-bdc8-0702543054d5.1813345524826012], Reason = [Started], Message = [Started container filler-pod-cbd0837d-1406-4117-bdc8-0702543054d5] @ 12/21/24 13:30:22.719
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.181334555e4c5e78], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 12/21/24 13:30:22.732
  STEP: removing the label node off the node ip-172-31-18-134 @ 12/21/24 13:30:23.733
  STEP: verifying the node doesn't have the label node @ 12/21/24 13:30:23.767
  STEP: removing the label node off the node ip-172-31-68-100 @ 12/21/24 13:30:23.786
  STEP: verifying the node doesn't have the label node @ 12/21/24 13:30:23.814
  STEP: removing the label node off the node ip-172-31-9-184 @ 12/21/24 13:30:23.822
  STEP: verifying the node doesn't have the label node @ 12/21/24 13:30:23.835
  I1221 13:30:23.840080 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3266" for this suite. @ 12/21/24 13:30:23.844
• [3.288 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/21/24 13:30:23.851
  I1221 13:30:23.851463 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 13:30:23.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:30:23.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:30:23.869
  STEP: Creating secret with name secret-test-38d1b139-87cb-4100-a7cf-9bb89319fcf0 @ 12/21/24 13:30:23.871
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:30:23.876
  STEP: Saw pod success @ 12/21/24 13:30:25.894
  I1221 13:30:25.899929 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-d4e8d0b4-0d63-4bbc-be9e-07c037e48521 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 13:30:25.908
  I1221 13:30:25.927776 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8850" for this suite. @ 12/21/24 13:30:25.931
• [2.090 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 12/21/24 13:30:25.941
  I1221 13:30:25.941885 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 13:30:25.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:30:25.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:30:25.961
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/21/24 13:30:25.963
  I1221 13:30:25.963517 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/21/24 13:30:30.862
  I1221 13:30:30.862631 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:30:32.127305 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:30:37.115938 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2268" for this suite. @ 12/21/24 13:30:37.122
• [11.190 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/21/24 13:30:37.131
  I1221 13:30:37.131670 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename subpath @ 12/21/24 13:30:37.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:30:37.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:30:37.156
  STEP: Setting up data @ 12/21/24 13:30:37.158
  STEP: Creating pod pod-subpath-test-downwardapi-x4v6 @ 12/21/24 13:30:37.168
  STEP: Creating a pod to test atomic-volume-subpath @ 12/21/24 13:30:37.168
  STEP: Saw pod success @ 12/21/24 13:31:01.257
  I1221 13:31:01.261660 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-subpath-test-downwardapi-x4v6 container test-container-subpath-downwardapi-x4v6: <nil>
  STEP: delete the pod @ 12/21/24 13:31:01.273
  STEP: Deleting pod pod-subpath-test-downwardapi-x4v6 @ 12/21/24 13:31:01.291
  I1221 13:31:01.291322 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-x4v6" in namespace "subpath-4240"
  I1221 13:31:01.295570 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-4240" for this suite. @ 12/21/24 13:31:01.3
• [24.176 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 12/21/24 13:31:01.307
  I1221 13:31:01.308052 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 13:31:01.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:01.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:01.332
  I1221 13:31:01.334773 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/21/24 13:31:02.534
  I1221 13:31:02.534695 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-4948 --namespace=crd-publish-openapi-4948 create -f -'
  I1221 13:31:04.598408 19 builder.go:146] stderr: ""
  I1221 13:31:04.598447 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9677-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1221 13:31:04.598500 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-4948 --namespace=crd-publish-openapi-4948 delete e2e-test-crd-publish-openapi-9677-crds test-cr'
  I1221 13:31:04.649372 19 builder.go:146] stderr: ""
  I1221 13:31:04.649407 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9677-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1221 13:31:04.649454 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-4948 --namespace=crd-publish-openapi-4948 apply -f -'
  I1221 13:31:04.704813 19 builder.go:146] stderr: ""
  I1221 13:31:04.704849 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9677-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1221 13:31:04.704885 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-4948 --namespace=crd-publish-openapi-4948 delete e2e-test-crd-publish-openapi-9677-crds test-cr'
  I1221 13:31:04.754797 19 builder.go:146] stderr: ""
  I1221 13:31:04.754847 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9677-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/21/24 13:31:04.754
  I1221 13:31:04.754982 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-4948 explain e2e-test-crd-publish-openapi-9677-crds'
  I1221 13:31:04.793919 19 builder.go:146] stderr: ""
  I1221 13:31:04.793964 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9677-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1221 13:31:06.037091 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4948" for this suite. @ 12/21/24 13:31:06.045
• [4.745 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/21/24 13:31:06.053
  I1221 13:31:06.053465 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename watch @ 12/21/24 13:31:06.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:06.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:06.073
  STEP: creating a watch on configmaps with a certain label @ 12/21/24 13:31:06.075
  STEP: creating a new configmap @ 12/21/24 13:31:06.076
  STEP: modifying the configmap once @ 12/21/24 13:31:06.08
  STEP: changing the label value of the configmap @ 12/21/24 13:31:06.087
  STEP: Expecting to observe a delete notification for the watched object @ 12/21/24 13:31:06.095
  I1221 13:31:06.095810 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-393  f31f63bb-ac70-4a1d-a7d4-dcf5e5fed2e2 34198 0 2024-12-21 13:31:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-21 13:31:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:31:06.095986 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-393  f31f63bb-ac70-4a1d-a7d4-dcf5e5fed2e2 34199 0 2024-12-21 13:31:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-21 13:31:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:31:06.096039 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-393  f31f63bb-ac70-4a1d-a7d4-dcf5e5fed2e2 34200 0 2024-12-21 13:31:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-21 13:31:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/21/24 13:31:06.096
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/21/24 13:31:06.104
  STEP: changing the label value of the configmap back @ 12/21/24 13:31:16.106
  STEP: modifying the configmap a third time @ 12/21/24 13:31:16.117
  STEP: deleting the configmap @ 12/21/24 13:31:16.126
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/21/24 13:31:16.133
  I1221 13:31:16.133613 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-393  f31f63bb-ac70-4a1d-a7d4-dcf5e5fed2e2 34237 0 2024-12-21 13:31:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-21 13:31:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:31:16.133888 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-393  f31f63bb-ac70-4a1d-a7d4-dcf5e5fed2e2 34238 0 2024-12-21 13:31:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-21 13:31:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:31:16.133975 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-393  f31f63bb-ac70-4a1d-a7d4-dcf5e5fed2e2 34239 0 2024-12-21 13:31:06 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-21 13:31:16 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:31:16.134055 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-393" for this suite. @ 12/21/24 13:31:16.138
• [10.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/21/24 13:31:16.146
  I1221 13:31:16.146699 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:31:16.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:16.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:16.168
  STEP: Creating configMap with name projected-configmap-test-volume-7fe4c192-3c06-4445-a2b0-5f60992573c9 @ 12/21/24 13:31:16.169
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:31:16.175
  STEP: Saw pod success @ 12/21/24 13:31:20.2
  I1221 13:31:20.204453 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-configmaps-2345cc08-a4f3-47ad-8711-b00bd17ae019 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:31:20.211
  I1221 13:31:20.232911 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8187" for this suite. @ 12/21/24 13:31:20.237
• [4.098 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:52
  STEP: Creating a kubernetes client @ 12/21/24 13:31:20.244
  I1221 13:31:20.244873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 13:31:20.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:20.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:20.264
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/21/24 13:31:20.266
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/21/24 13:31:20.266
  STEP: creating a pod to probe DNS @ 12/21/24 13:31:20.266
  STEP: submitting the pod to kubernetes @ 12/21/24 13:31:20.266
  STEP: retrieving the pod @ 12/21/24 13:31:22.287
  STEP: looking for the results for each expected name from probers @ 12/21/24 13:31:22.291
  I1221 13:31:22.309457 19 dns_common.go:527] DNS probes using dns-5078/dns-test-c28dfea1-032d-4afa-8dde-5e5a07e00356 succeeded

  STEP: deleting the pod @ 12/21/24 13:31:22.309
  I1221 13:31:22.325824 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5078" for this suite. @ 12/21/24 13:31:22.329
• [2.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 12/21/24 13:31:22.336
  I1221 13:31:22.336500 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/21/24 13:31:22.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:22.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:22.358
  STEP: getting /apis @ 12/21/24 13:31:22.365
  STEP: getting /apis/admissionregistration.k8s.io @ 12/21/24 13:31:22.367
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/21/24 13:31:22.368
  STEP: creating @ 12/21/24 13:31:22.369
  STEP: getting @ 12/21/24 13:31:22.384
  STEP: listing @ 12/21/24 13:31:22.388
  STEP: watching @ 12/21/24 13:31:22.391
  I1221 13:31:22.391946 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 12/21/24 13:31:22.392
  STEP: updating @ 12/21/24 13:31:22.397
  I1221 13:31:22.406202 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 12/21/24 13:31:22.406
  STEP: deleting a collection @ 12/21/24 13:31:22.419
  I1221 13:31:22.442556 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1547" for this suite. @ 12/21/24 13:31:22.446
• [0.117 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/21/24 13:31:22.454
  I1221 13:31:22.454065 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 13:31:22.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:22.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:22.475
  I1221 13:31:22.477995 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1221 13:31:22.488815 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1221 13:31:22.496535 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I1221 13:31:24.506726 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1221 13:31:24.510519 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1221 13:31:24.519836 19 deployment.go:313] Updating deployment test-recreate-deployment
  I1221 13:31:24.519858 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1221 13:31:24.607446 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6314",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2189c8b1-4b82-4764-8cfd-522e978c7709",
      ResourceVersion: (string) (len=5) "34374",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870384682,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384682,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-88d47c55d\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1221 13:31:24.611453 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-88d47c55d" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6314",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd35e50b-40ff-4fd9-a2d7-110804d4d1be",
      ResourceVersion: (string) (len=5) "34371",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870384684,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2189c8b1-4b82-4764-8cfd-522e978c7709",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 38 39 63 38  62 31 2d 34 62 38 32 2d  |\"2189c8b1-4b82-|
              00000120  34 37 36 34 2d 38 63 66  64 2d 35 32 32 65 39 37  |4764-8cfd-522e97|
              00000130  38 63 37 37 30 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8c7709\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:31:24.611891 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1221 13:31:24.612052 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-7549bcf47c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6314",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f03c76f-adcf-490b-8307-19b97bd9d03f",
      ResourceVersion: (string) (len=5) "34363",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870384682,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2189c8b1-4b82-4764-8cfd-522e978c7709",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 31 38 39 63 38  62 31 2d 34 62 38 32 2d  |\"2189c8b1-4b82-|
              00000120  34 37 36 34 2d 38 63 66  64 2d 35 32 32 65 39 37  |4764-8cfd-522e97|
              00000130  38 63 37 37 30 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |8c7709\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7549bcf47c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:31:24.616537 19 deployment.go:67] Pod "test-recreate-deployment-88d47c55d-p6w96" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-88d47c55d-p6w96",
      GenerateName: (string) (len=35) "test-recreate-deployment-88d47c55d-",
      Namespace: (string) (len=15) "deployment-6314",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb83d9f0-357a-4189-9a99-6d1e986f7486",
      ResourceVersion: (string) (len=5) "34375",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870384684,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "88d47c55d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-88d47c55d",
          UID: (types.UID) (len=36) "dd35e50b-40ff-4fd9-a2d7-110804d4d1be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 64  33 35 65 35 30 62 2d 34  |d\":\"dd35e50b-4|
              00000090  30 66 66 2d 34 66 64 39  2d 61 32 64 37 2d 31 31  |0ff-4fd9-a2d7-11|
              000000a0  30 38 30 34 64 34 64 31  62 65 5c 22 7d 22 3a 7b  |0804d4d1be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k5rfk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k5rfk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870384684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870384684,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-k5rfk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:31:24.618424 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6314" for this suite. @ 12/21/24 13:31:24.622
• [2.178 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/21/24 13:31:24.631
  I1221 13:31:24.631949 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:31:24.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:24.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:24.652
  STEP: Creating configMap with name configmap-test-volume-map-3883ddd2-d953-449b-8d83-b21b9b188d14 @ 12/21/24 13:31:24.654
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:31:24.659
  STEP: Saw pod success @ 12/21/24 13:31:28.684
  I1221 13:31:28.688311 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-configmaps-366197a3-3f97-44a4-a6ae-c9a178017008 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:31:28.696
  I1221 13:31:28.717030 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-784" for this suite. @ 12/21/24 13:31:28.721
• [4.097 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 12/21/24 13:31:28.729
  I1221 13:31:28.729397 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-probe @ 12/21/24 13:31:28.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:31:28.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:31:28.749
  STEP: Creating pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866 @ 12/21/24 13:31:28.75
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/21/24 13:31:30.77
  I1221 13:31:30.774239 19 container_probe.go:1749] Initial restart count of pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 is 0
  I1221 13:31:30.777863 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:32.783877 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:34.788945 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:36.795280 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:38.800453 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:40.806646 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:42.813439 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:44.819353 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:46.825573 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:48.831583 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:50.837619 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:52.842912 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:54.848810 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:56.854112 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:31:58.859535 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:00.865184 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:02.870617 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:04.876482 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:06.882845 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:08.888859 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:10.894571 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:12.900857 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:14.906918 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:16.912661 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:18.918164 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:20.923661 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:22.928946 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:24.933737 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:26.940134 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:28.946595 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:30.952449 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:32.958608 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:34.964968 19 container_probe.go:1759] Get pod test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 in namespace container-probe-5866
  I1221 13:32:34.965001 19 container_probe.go:1763] Restart count of pod container-probe-5866/test-grpc-9ec291a6-0d2d-4905-9f33-d8ad01ac38d6 is now 1 (1m4.190738927s elapsed)
  STEP: deleting the pod @ 12/21/24 13:32:34.965
  I1221 13:32:34.983254 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5866" for this suite. @ 12/21/24 13:32:34.987
• [66.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/21/24 13:32:34.994
  I1221 13:32:34.994895 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:32:34.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:32:35.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:32:35.014
  STEP: Creating the pod @ 12/21/24 13:32:35.016
  I1221 13:32:37.558287 19 pod_client.go:173] Successfully updated pod "labelsupdate51de176e-29cf-4681-924b-41547e15a78a"
  I1221 13:32:39.580476 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4663" for this suite. @ 12/21/24 13:32:39.584
• [4.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/21/24 13:32:39.592
  I1221 13:32:39.592734 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:32:39.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:32:39.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:32:39.614
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:32:39.616
  STEP: Saw pod success @ 12/21/24 13:32:43.641
  I1221 13:32:43.645267 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-092d708b-0b0d-4bc6-b1f4-1739749c2fd5 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:32:43.653
  I1221 13:32:43.674212 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2096" for this suite. @ 12/21/24 13:32:43.678
• [4.093 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/21/24 13:32:43.685
  I1221 13:32:43.685790 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/21/24 13:32:43.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:32:43.709
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:32:43.711
  STEP: fetching the /apis discovery document @ 12/21/24 13:32:43.713
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/21/24 13:32:43.714
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/21/24 13:32:43.714
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/21/24 13:32:43.714
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/21/24 13:32:43.715
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/21/24 13:32:43.715
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/21/24 13:32:43.717
  I1221 13:32:43.717623 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7005" for this suite. @ 12/21/24 13:32:43.722
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/21/24 13:32:43.729
  I1221 13:32:43.729757 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replication-controller @ 12/21/24 13:32:43.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:32:43.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:32:43.751
  STEP: creating a ReplicationController @ 12/21/24 13:32:43.766
  STEP: waiting for RC to be added @ 12/21/24 13:32:43.776
  STEP: waiting for available Replicas @ 12/21/24 13:32:43.776
  STEP: patching ReplicationController @ 12/21/24 13:32:44.911
  STEP: waiting for RC to be modified @ 12/21/24 13:32:44.918
  STEP: patching ReplicationController status @ 12/21/24 13:32:44.918
  STEP: waiting for RC to be modified @ 12/21/24 13:32:44.924
  STEP: waiting for available Replicas @ 12/21/24 13:32:44.924
  STEP: fetching ReplicationController status @ 12/21/24 13:32:44.931
  STEP: patching ReplicationController scale @ 12/21/24 13:32:44.936
  STEP: waiting for RC to be modified @ 12/21/24 13:32:44.942
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/21/24 13:32:44.942
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/21/24 13:32:45.931
  STEP: updating ReplicationController status @ 12/21/24 13:32:45.935
  STEP: waiting for RC to be modified @ 12/21/24 13:32:45.941
  STEP: listing all ReplicationControllers @ 12/21/24 13:32:45.941
  STEP: checking that ReplicationController has expected values @ 12/21/24 13:32:45.946
  STEP: deleting ReplicationControllers by collection @ 12/21/24 13:32:45.946
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/21/24 13:32:45.957
  I1221 13:32:45.993904 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1221 13:32:45.994000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9600" for this suite. @ 12/21/24 13:32:45.998
• [2.277 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/21/24 13:32:46.006
  I1221 13:32:46.006785 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename cronjob @ 12/21/24 13:32:46.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:32:46.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:32:46.031
  STEP: Creating a suspended cronjob @ 12/21/24 13:32:46.033
  STEP: Ensuring no jobs are scheduled @ 12/21/24 13:32:46.039
  E1221 13:32:46.994701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:47.994813      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:48.994910      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:49.995004      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:50.995495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:51.995586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:52.995687      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:53.996529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:54.997548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:55.997652      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:56.997865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:57.998572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:58.998692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:32:59.998903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:00.999032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:01.999157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:02.999617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:03.999821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:04.999944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:06.000143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:07.000253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:08.000552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:09.000641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:10.000831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:11.001493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:12.001700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:13.002704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:14.002912      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:15.003118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:16.003220      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:17.003418      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:18.003718      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:19.004709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:20.004920      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:21.005014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:22.005104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:23.005686      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:24.006548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:25.007532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:26.007883      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:27.008497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:28.008661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:29.008919      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:30.009584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:31.009709      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:32.009801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:33.010617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:34.010837      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:35.011024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:36.011309      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:37.011496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:38.012474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:39.012867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:40.012990      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:41.013545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:42.013749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:43.014571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:44.015586      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:45.016528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:46.017518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:47.018560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:48.018615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:49.019452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:50.019501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:51.020528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:52.021367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:53.021615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:54.021830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:55.022018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:56.022147      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:57.022521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:58.023516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:33:59.024546      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:00.025617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:01.025714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:02.026520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:03.026559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:04.027532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:05.027858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:06.028036      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:07.028548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:08.029575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:09.029669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:10.030551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:11.030642      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:12.030905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:13.031723      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:14.031917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:15.032062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:16.032443      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:17.032828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:18.033259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:19.034292      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:20.034472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:21.035458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:22.035555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:23.036620      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:24.037650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:25.037757      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:26.037859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:27.038532      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:28.038675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:29.038893      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:30.039085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:31.039206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:32.039451      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:33.039863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:34.040043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:35.040162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:36.040423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:37.040598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:38.041009      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:39.041093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:40.041296      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:41.041464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:42.041570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:43.042159      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:44.042371      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:45.043398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:46.043496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:47.043697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:48.044161      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:49.044471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:50.045352      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:51.045669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:52.045784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:53.046455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:54.046544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:55.047520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:56.047767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:57.047916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:58.048550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:34:59.049570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:00.049758      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:01.050052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:02.050379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:03.050525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:04.050731      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:05.050857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:06.051043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:07.051139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:08.051716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:09.052376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:10.052564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:11.052690      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:12.052927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:13.053446      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:14.053628      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:15.054579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:16.054702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:17.054898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:18.055255      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:19.056072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:20.056173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:21.057212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:22.057561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:23.057977      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:24.058860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:25.059761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:26.059965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:27.060276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:28.060670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:29.061244      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:30.061458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:31.061540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:32.061646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:33.062649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:34.062894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:35.063143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:36.063384      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:37.064021      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:38.064738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:39.064985      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:40.065111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:41.065478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:42.066527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:43.067511      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:44.068523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:45.069202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:46.069396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:47.070423      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:48.070792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:49.070913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:50.071042      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:51.071926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:52.072182      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:53.072557      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:54.072742      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:55.072839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:56.073519      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:57.074149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:58.074739      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:35:59.075706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:00.075816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:01.076171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:02.076531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:03.076626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:04.077522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:05.078361      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:06.078470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:07.079227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:08.079895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:09.080031      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:10.080230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:11.081106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:12.081351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:13.081604      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:14.081748      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:15.081810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:16.081999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:17.082113      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:18.082516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:19.083554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:20.083699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:21.083801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:22.083997      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:23.084472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:24.084574      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:25.085479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:26.085576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:27.086344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:28.086722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:29.087553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:30.087715      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:31.088562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:32.088714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:33.089275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:34.089506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:35.089699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:36.089848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:37.090770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:38.091695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:39.091849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:40.092065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:41.092623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:42.092841      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:43.093569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:44.093790      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:45.094104      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:46.094211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:47.094763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:48.095714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:49.096555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:50.096685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:51.097382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:52.097506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:53.097668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:54.097783      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:55.097835      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:56.097996      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:57.098093      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:58.098698      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:36:59.099481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:00.099592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:01.100199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:02.100439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:03.101492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:04.101702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:05.102358      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:06.102565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:07.102624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:08.102681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:09.103459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:10.103593      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:11.104067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:12.104171      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:13.104560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:14.104651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:15.104750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:16.104844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:17.104966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:18.105285      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:19.105605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:20.105674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:21.105795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:22.105885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:23.106134      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:24.106224      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:25.106536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:26.106636      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:27.107549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:28.107648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:29.108122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:30.108273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:31.108858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:32.109013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:33.109966      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:34.110150      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:35.110863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:36.111084      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:37.111714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:38.111749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:39.112015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:40.112558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:41.112825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:42.113018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:43.113524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:44.113773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:45.114612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/21/24 13:37:46.039
  STEP: Removing cronjob @ 12/21/24 13:37:46.044
  I1221 13:37:46.052973 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1659" for this suite. @ 12/21/24 13:37:46.056
• [300.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/21/24 13:37:46.065
  I1221 13:37:46.065254 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/21/24 13:37:46.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:37:46.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:37:46.084
  I1221 13:37:46.086200 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  E1221 13:37:46.115442      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:47.115471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:48.116454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:49.116491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:50.116538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:51.117487      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:52.118295      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:37:52.304131 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2800" for this suite. @ 12/21/24 13:37:52.308
• [6.252 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/21/24 13:37:52.317
  I1221 13:37:52.317097 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svcaccounts @ 12/21/24 13:37:52.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:37:52.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:37:52.337
  I1221 13:37:52.356559 19 service_accounts.go:618] created pod
  E1221 13:37:53.118857      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:54.119644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:55.119737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:56.119900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:37:56.374
  E1221 13:37:57.119986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:58.120741      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:37:59.120967      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:00.121061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:01.121156      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:02.121393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:03.121798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:04.122078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:05.122173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:06.122539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:07.122745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:08.123169      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:09.123651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:10.123752      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:11.123939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:12.124129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:13.124823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:14.125521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:15.125623      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:16.126518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:17.126708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:18.127736      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:19.127850      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:20.128049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:21.128249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:22.128455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:23.128810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:24.128958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:25.129065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:26.129559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:26.374956 19 service_accounts.go:624] polling logs
  I1221 13:38:26.393435 19 service_accounts.go:634] Pod logs: 
  I1221 13:37:52.897669       1 log.go:245] OK: Got token
  I1221 13:37:52.897731       1 log.go:245] validating with in-cluster discovery
  I1221 13:37:52.897970       1 log.go:245] OK: got issuer https://kubernetes.default.svc
  I1221 13:37:52.898151       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-2154:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0002519a0), NotBefore:(*jwt.NumericDate)(0xc000251b20), IssuedAt:(*jwt.NumericDate)(0xc0002519b0), ID:"c083019d-8e2e-45fe-a452-f68546dab3f6"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2154", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c30b43dd-9e40-411a-9d08-a3c38a96b60d"}}}
  I1221 13:37:52.904267       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I1221 13:37:52.907630       1 log.go:245] OK: Validated signature on JWT
  I1221 13:37:52.907690       1 log.go:245] OK: Got valid claims from token!
  I1221 13:37:52.907710       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-2154:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001270f8), NotBefore:(*jwt.NumericDate)(0xc000127190), IssuedAt:(*jwt.NumericDate)(0xc000127100), ID:"c083019d-8e2e-45fe-a452-f68546dab3f6"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-2154", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"c30b43dd-9e40-411a-9d08-a3c38a96b60d"}}}

  I1221 13:38:26.393479 19 service_accounts.go:638] completed pod
  I1221 13:38:26.400548 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2154" for this suite. @ 12/21/24 13:38:26.404
• [34.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/21/24 13:38:26.413
  I1221 13:38:26.413290 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/21/24 13:38:26.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:26.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:26.435
  I1221 13:38:26.437269 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:38:26.976527 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2450" for this suite. @ 12/21/24 13:38:26.983
• [0.579 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/21/24 13:38:26.992
  I1221 13:38:26.992560 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 13:38:26.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:27.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:27.026
  STEP: creating a Deployment @ 12/21/24 13:38:27.034
  STEP: waiting for Deployment to be created @ 12/21/24 13:38:27.039
  STEP: waiting for all Replicas to be Ready @ 12/21/24 13:38:27.04
  I1221 13:38:27.041930 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1221 13:38:27.041946 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1221 13:38:27.069466 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1221 13:38:27.069490 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1221 13:38:27.107464 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1221 13:38:27.107481 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1221 13:38:27.130590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:27.164987 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1221 13:38:27.165010 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1221 13:38:28.130889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:28.418737 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1221 13:38:28.418769 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1221 13:38:28.453985 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/21/24 13:38:28.454
  I1221 13:38:28.463414 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/21/24 13:38:28.463
  I1221 13:38:28.464474 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464490 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464498 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464503 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464510 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464514 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464587 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464597 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 0
  I1221 13:38:28.464603 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  I1221 13:38:28.464608 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  I1221 13:38:28.464613 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.464618 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.464646 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.464655 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.476615 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.476637 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.495348 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.495369 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.518095 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.518122 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:28.526278 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  I1221 13:38:28.526296 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  E1221 13:38:29.131073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:29.445238 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:29.445272 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:29.471276 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  STEP: listing Deployments @ 12/21/24 13:38:29.471
  I1221 13:38:29.475757 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/21/24 13:38:29.475
  I1221 13:38:29.486632 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/21/24 13:38:29.486
  I1221 13:38:29.495869 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1221 13:38:29.504655 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1221 13:38:29.537643 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1221 13:38:29.556781 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1221 13:38:30.131454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:30.438911 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1221 13:38:30.473882 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1221 13:38:30.484520 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1221 13:38:31.131512      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:31.466319 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/21/24 13:38:31.49
  STEP: fetching the DeploymentStatus @ 12/21/24 13:38:31.499
  I1221 13:38:31.506322 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  I1221 13:38:31.506367 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  I1221 13:38:31.506442 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  I1221 13:38:31.506452 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 1
  I1221 13:38:31.506460 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:31.506498 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:31.506515 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 2
  I1221 13:38:31.506572 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-1372 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/21/24 13:38:31.506
  I1221 13:38:31.516902 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.516924 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.516932 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517013 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517084 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517119 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517136 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517172 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517194 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517219 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.517262 19 deployment.go:475] observed event type MODIFIED
  I1221 13:38:31.520425 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1221 13:38:31.526861 19 deployment.go:657] ReplicaSet "test-deployment-6c86c7f765":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6c86c7f765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1372",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "182579d9-a353-4ce0-86dc-0b3b12937373",
      ResourceVersion: (string) (len=5) "35760",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3cc1ad39-df42-4d73-975b-1eeffcfdeef8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 63 63 31  61 64 33 39 2d 64 66 34  |":\"3cc1ad39-df4|
              00000130  32 2d 34 64 37 33 2d 39  37 35 62 2d 31 65 65 66  |2-4d73-975b-1eef|
              00000140  66 63 66 64 65 65 66 38  5c 22 7d 22 3a 7b 7d 7d  |fcfdeef8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1221 13:38:31.532512 19 deployment.go:669] pod: "test-deployment-6c86c7f765-4wv59":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-4wv59",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-1372",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e128281-be09-4371-817c-c25536dea002",
      ResourceVersion: (string) (len=5) "35723",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "182579d9-a353-4ce0-86dc-0b3b12937373",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 38 32 35 37 39 64 39  |uid\":\"182579d9|
              000000a0  2d 61 33 35 33 2d 34 63  65 30 2d 38 36 64 63 2d  |-a353-4ce0-86dc-|
              000000b0  30 62 33 62 31 32 39 33  37 33 37 33 5c 22 7d 22  |0b3b12937373\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  30 2e 32 34 5c 22 7d 22  |2.168.200.24\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pwq4j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pwq4j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=14) "192.168.200.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "192.168.200.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870385110,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://12484974361b6d1aa405fe0840e63faeec9b2f25f50b5d09861a06d797ccbadc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-pwq4j",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1221 13:38:31.545765 19 deployment.go:669] pod: "test-deployment-6c86c7f765-c58ln":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6c86c7f765-c58ln",
      GenerateName: (string) (len=27) "test-deployment-6c86c7f765-",
      Namespace: (string) (len=15) "deployment-1372",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0a499d0-cf56-458d-9e65-b35cbfbf8946",
      ResourceVersion: (string) (len=5) "35759",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385110,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6c86c7f765",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6c86c7f765",
          UID: (types.UID) (len=36) "182579d9-a353-4ce0-86dc-0b3b12937373",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 38 32 35 37 39 64 39  |uid\":\"182579d9|
              000000a0  2d 61 33 35 33 2d 34 63  65 30 2d 38 36 64 63 2d  |-a353-4ce0-86dc-|
              000000b0  30 62 33 62 31 32 39 33  37 33 37 33 5c 22 7d 22  |0b3b12937373\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 34 35 5c 22 7d  |2.168.235.145\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2gnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2gnw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385110,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870385110,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e6cedb76be43afe8961687b371119cd42f3ba45c2a1aa9619d5483a385dccbda",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-v2gnw",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1221 13:38:31.555822 19 deployment.go:657] ReplicaSet "test-deployment-6ccdbb4d8c":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1372",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b271bdda-7207-4bcf-b68b-4153c84c60b5",
      ResourceVersion: (string) (len=5) "35770",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385108,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3cc1ad39-df42-4d73-975b-1eeffcfdeef8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 63 63 31  61 64 33 39 2d 64 66 34  |":\"3cc1ad39-df4|
              00000130  32 2d 34 64 37 33 2d 39  37 35 62 2d 31 65 65 66  |2-4d73-975b-1eef|
              00000140  66 63 66 64 65 65 66 38  5c 22 7d 22 3a 7b 7d 7d  |fcfdeef8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385111,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=26) "registry.k8s.io/pause:3.10",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1221 13:38:31.561196 19 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-7tfjc":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-7tfjc",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-1372",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be3d8e95-f83a-4862-84fd-f4b297e3f250",
      ResourceVersion: (string) (len=5) "35733",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "b271bdda-7207-4bcf-b68b-4153c84c60b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 32 37 31 62 64 64 61  |uid\":\"b271bdda|
              000000a0  2d 37 32 30 37 2d 34 62  63 66 2d 62 36 38 62 2d  |-7207-4bcf-b68b-|
              000000b0  34 31 35 33 63 38 34 63  36 30 62 35 5c 22 7d 22  |4153c84c60b5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 34 33 5c 22 7d  |2.168.235.143\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnwrk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnwrk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385109,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870385110,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://434471670f2267d108866d68c8e11b6a059968426e6e31432a96d085e3d0f24f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-wnwrk",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1221 13:38:31.566941 19 deployment.go:669] pod: "test-deployment-6ccdbb4d8c-wmrk4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6ccdbb4d8c-wmrk4",
      GenerateName: (string) (len=27) "test-deployment-6ccdbb4d8c-",
      Namespace: (string) (len=15) "deployment-1372",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18ee4967-353f-4352-8dda-afa93e9146b9",
      ResourceVersion: (string) (len=5) "35766",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385108,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6ccdbb4d8c",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6ccdbb4d8c",
          UID: (types.UID) (len=36) "b271bdda-7207-4bcf-b68b-4153c84c60b5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385108,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 32 37 31 62 64 64 61  |uid\":\"b271bdda|
              000000a0  2d 37 32 30 37 2d 34 62  63 66 2d 62 36 38 62 2d  |-7207-4bcf-b68b-|
              000000b0  34 31 35 33 63 38 34 63  36 30 62 35 5c 22 7d 22  |4153c84c60b5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 30  30 2e 37 5c 22 7d 22 3a  |2.168.200.7\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bptwq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bptwq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-68-100",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385108,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385108,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.68.100",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.68.100"
        }
      },
      PodIP: (string) (len=13) "192.168.200.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "192.168.200.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385108,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870385109,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=26) "registry.k8s.io/pause:3.10",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:ee6521f290b2168b6e0935a181d4cff9be1ac3f505666ef0e3c98fae8199917a",
          ContainerID: (string) (len=77) "containerd://ab8d88c458eaa3abe35f346c28253abb2c7f89050b64376d650ba101f8689bf7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bptwq",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1221 13:38:31.568812 19 deployment.go:657] ReplicaSet "test-deployment-77bdf6fb4b":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-77bdf6fb4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1372",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2498395f-edad-4c0f-9423-9b8e54be76a7",
      ResourceVersion: (string) (len=5) "35678",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "3cc1ad39-df42-4d73-975b-1eeffcfdeef8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 33 63 63 31  61 64 33 39 2d 64 66 34  |":\"3cc1ad39-df4|
              00000130  32 2d 34 64 37 33 2d 39  37 35 62 2d 31 65 65 66  |2-4d73-975b-1eef|
              00000140  66 63 66 64 65 65 66 38  5c 22 7d 22 3a 7b 7d 7d  |fcfdeef8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385109,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77bdf6fb4b",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1221 13:38:31.572852 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1372" for this suite. @ 12/21/24 13:38:31.576
• [4.591 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/21/24 13:38:31.584
  I1221 13:38:31.584315 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svcaccounts @ 12/21/24 13:38:31.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:31.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:31.61
  STEP: Creating a pod to test service account token:  @ 12/21/24 13:38:31.612
  E1221 13:38:32.132364      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:33.133154      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:38:33.627
  I1221 13:38:33.631305 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod test-pod-a23feb1d-9942-4ab5-bdec-e816ab247939 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:38:33.639
  I1221 13:38:33.660158 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9406" for this suite. @ 12/21/24 13:38:33.664
• [2.089 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:144
  STEP: Creating a kubernetes client @ 12/21/24 13:38:33.673
  I1221 13:38:33.673462 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename disruption @ 12/21/24 13:38:33.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:33.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:33.694
  STEP: Waiting for the pdb to be processed @ 12/21/24 13:38:33.703
  STEP: Waiting for all pods to be running @ 12/21/24 13:38:33.73
  I1221 13:38:33.740549 19 disruption.go:691] running pods: 0 < 3
  E1221 13:38:34.133353      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:35.133464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:35.740298 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1850" for this suite. @ 12/21/24 13:38:35.744
• [2.079 seconds]
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2194
  STEP: Creating a kubernetes client @ 12/21/24 13:38:35.752
  I1221 13:38:35.752635 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:38:35.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:35.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:35.774
  STEP: creating service in namespace services-1342 @ 12/21/24 13:38:35.776
  STEP: creating service affinity-nodeport in namespace services-1342 @ 12/21/24 13:38:35.776
  STEP: creating replication controller affinity-nodeport in namespace services-1342 @ 12/21/24 13:38:35.794
  I1221 13:38:35.800586      19 runners.go:193] Created replication controller with name: affinity-nodeport, namespace: services-1342, replica count: 3
  E1221 13:38:36.134346      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:37.134587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:38.135555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:38.852480      19 runners.go:193] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 13:38:38.864123 19 resource.go:361] Creating new exec pod
  E1221 13:38:39.136552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:40.137556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:41.138617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:41.888451 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1342 exec execpod-affinityggzv5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1221 13:38:41.978102 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1221 13:38:41.978143 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:38:41.978370 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1342 exec execpod-affinityggzv5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.19 80'
  I1221 13:38:42.061054 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.19 80\nConnection to 10.152.183.19 80 port [tcp/http] succeeded!\n"
  I1221 13:38:42.061092 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:38:42.061168 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1342 exec execpod-affinityggzv5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.9.184 32179'
  E1221 13:38:42.139376      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:42.139458 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.9.184 32179\n+ echo hostName\nConnection to 172.31.9.184 32179 port [tcp/*] succeeded!\n"
  I1221 13:38:42.139483 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:38:42.139540 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1342 exec execpod-affinityggzv5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.100 32179'
  I1221 13:38:42.231691 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.100 32179\nConnection to 172.31.68.100 32179 port [tcp/*] succeeded!\n"
  I1221 13:38:42.231737 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:38:42.231800 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-1342 exec execpod-affinityggzv5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.18.134:32179/ ; done'
  I1221 13:38:42.356532 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.18.134:32179/\n"
  I1221 13:38:42.356579 19 builder.go:147] stdout: "\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68\naffinity-nodeport-xvj68"
  I1221 13:38:42.356592 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356599 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356605 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356611 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356616 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356622 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356628 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356633 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356639 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356649 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356654 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356659 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356681 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356686 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356692 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356697 19 service.go:242] Received response from host: affinity-nodeport-xvj68
  I1221 13:38:42.356794 19 service.go:4061] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1342, will wait for the garbage collector to delete the pods @ 12/21/24 13:38:42.376
  I1221 13:38:42.439303 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 7.935212ms
  I1221 13:38:42.539973 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.658115ms
  E1221 13:38:43.139495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:44.139825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:45.140316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:45.565719 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1342" for this suite. @ 12/21/24 13:38:45.57
• [9.827 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/21/24 13:38:45.579
  I1221 13:38:45.579357 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename watch @ 12/21/24 13:38:45.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:45.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:45.635
  STEP: creating a new configmap @ 12/21/24 13:38:45.637
  STEP: modifying the configmap once @ 12/21/24 13:38:45.641
  STEP: modifying the configmap a second time @ 12/21/24 13:38:45.649
  STEP: deleting the configmap @ 12/21/24 13:38:45.657
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/21/24 13:38:45.664
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/21/24 13:38:45.665
  I1221 13:38:45.665391 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2138  a3759216-2e03-4caf-bdcb-2732e7328405 36143 0 2024-12-21 13:38:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-21 13:38:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:38:45.665502 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2138  a3759216-2e03-4caf-bdcb-2732e7328405 36144 0 2024-12-21 13:38:45 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-21 13:38:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:38:45.665597 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2138" for this suite. @ 12/21/24 13:38:45.669
• [0.098 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 12/21/24 13:38:45.677
  I1221 13:38:45.677701 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename statefulset @ 12/21/24 13:38:45.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:45.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:45.699
  STEP: Creating service test in namespace statefulset-4464 @ 12/21/24 13:38:45.702
  STEP: Looking for a node to schedule stateful set and pod @ 12/21/24 13:38:45.707
  STEP: Creating pod with conflicting port in namespace statefulset-4464 @ 12/21/24 13:38:45.712
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4464 @ 12/21/24 13:38:45.723
  E1221 13:38:46.140556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:47.140773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4464 @ 12/21/24 13:38:47.732
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4464 @ 12/21/24 13:38:47.74
  I1221 13:38:47.755151 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-4464, name: ss-0, uid: 52ea6728-fe01-4c7a-842d-a1f45a82d318, status phase: Pending. Waiting for statefulset controller to delete.
  I1221 13:38:47.770859 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-4464, name: ss-0, uid: 52ea6728-fe01-4c7a-842d-a1f45a82d318, status phase: Failed. Waiting for statefulset controller to delete.
  I1221 13:38:47.779559 19 statefulset.go:869] Observed stateful pod in namespace: statefulset-4464, name: ss-0, uid: 52ea6728-fe01-4c7a-842d-a1f45a82d318, status phase: Failed. Waiting for statefulset controller to delete.
  I1221 13:38:47.787175 19 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-4464
  STEP: Removing pod with conflicting port in namespace statefulset-4464 @ 12/21/24 13:38:47.787
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4464 and will be in running state @ 12/21/24 13:38:47.805
  E1221 13:38:48.141863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:49.142048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:49.814007 19 statefulset.go:138] Deleting all statefulset in ns statefulset-4464
  I1221 13:38:49.817894 19 rest.go:150] Scaling statefulset ss to 0
  E1221 13:38:50.142750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:51.142900      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:52.143011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:53.143820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:54.143923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:55.144046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:56.144258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:57.144350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:58.144653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:38:59.144763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:38:59.833202 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1221 13:38:59.836740 19 rest.go:88] Deleting statefulset ss
  I1221 13:38:59.854004 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4464" for this suite. @ 12/21/24 13:38:59.858
• [14.189 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/21/24 13:38:59.866
  I1221 13:38:59.866566 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:38:59.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:38:59.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:38:59.887
  STEP: Creating configMap with name projected-configmap-test-volume-fb5fc6b8-626c-4465-a237-bc6b4378a660 @ 12/21/24 13:38:59.889
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:38:59.894
  E1221 13:39:00.144840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:01.144925      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:02.145401      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:03.145706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:39:03.917
  I1221 13:39:03.921900 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-configmaps-f25c0536-5011-4143-ad15-8cd7a013bd2c container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:39:03.93
  I1221 13:39:03.950944 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6805" for this suite. @ 12/21/24 13:39:03.955
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/21/24 13:39:03.963
  I1221 13:39:03.963780 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svc-latency @ 12/21/24 13:39:03.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:39:03.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:39:03.984
  I1221 13:39:03.986433 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1355 @ 12/21/24 13:39:03.986
  I1221 13:39:03.992678      19 runners.go:193] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1355, replica count: 1
  E1221 13:39:04.145755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:05.043684      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1221 13:39:05.145854      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:06.043849      19 runners.go:193] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1221 13:39:06.146399      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:06.157714 19 service_latency.go:356] Created: latency-svc-57wwz
  I1221 13:39:06.164524 19 service_latency.go:363] Got endpoints: latency-svc-57wwz [20.308706ms]
  I1221 13:39:06.176789 19 service_latency.go:356] Created: latency-svc-r6n22
  I1221 13:39:06.183079 19 service_latency.go:356] Created: latency-svc-jfqwl
  I1221 13:39:06.185637 19 service_latency.go:363] Got endpoints: latency-svc-r6n22 [20.999497ms]
  I1221 13:39:06.189764 19 service_latency.go:363] Got endpoints: latency-svc-jfqwl [24.938976ms]
  I1221 13:39:06.192359 19 service_latency.go:356] Created: latency-svc-5jpkz
  I1221 13:39:06.197306 19 service_latency.go:363] Got endpoints: latency-svc-5jpkz [32.475197ms]
  I1221 13:39:06.201962 19 service_latency.go:356] Created: latency-svc-lz5gp
  I1221 13:39:06.206201 19 service_latency.go:363] Got endpoints: latency-svc-lz5gp [41.317695ms]
  I1221 13:39:06.210085 19 service_latency.go:356] Created: latency-svc-pxhtt
  I1221 13:39:06.215286 19 service_latency.go:363] Got endpoints: latency-svc-pxhtt [50.362171ms]
  I1221 13:39:06.218512 19 service_latency.go:356] Created: latency-svc-8jrpw
  I1221 13:39:06.226428 19 service_latency.go:363] Got endpoints: latency-svc-8jrpw [61.471617ms]
  I1221 13:39:06.231985 19 service_latency.go:356] Created: latency-svc-tshsx
  I1221 13:39:06.237063 19 service_latency.go:363] Got endpoints: latency-svc-tshsx [72.077002ms]
  I1221 13:39:06.242905 19 service_latency.go:356] Created: latency-svc-wlh89
  I1221 13:39:06.246970 19 service_latency.go:363] Got endpoints: latency-svc-wlh89 [81.971812ms]
  I1221 13:39:06.249343 19 service_latency.go:356] Created: latency-svc-sfj7z
  I1221 13:39:06.255811 19 service_latency.go:363] Got endpoints: latency-svc-sfj7z [90.764625ms]
  I1221 13:39:06.260806 19 service_latency.go:356] Created: latency-svc-6ltsn
  I1221 13:39:06.265111 19 service_latency.go:356] Created: latency-svc-m8s9x
  I1221 13:39:06.269106 19 service_latency.go:363] Got endpoints: latency-svc-6ltsn [104.030544ms]
  I1221 13:39:06.271979 19 service_latency.go:363] Got endpoints: latency-svc-m8s9x [106.881806ms]
  I1221 13:39:06.274961 19 service_latency.go:356] Created: latency-svc-p9fpc
  I1221 13:39:06.282549 19 service_latency.go:363] Got endpoints: latency-svc-p9fpc [117.400768ms]
  I1221 13:39:06.284189 19 service_latency.go:356] Created: latency-svc-qldzm
  I1221 13:39:06.290377 19 service_latency.go:363] Got endpoints: latency-svc-qldzm [125.194352ms]
  I1221 13:39:06.290897 19 service_latency.go:356] Created: latency-svc-2crsn
  I1221 13:39:06.297302 19 service_latency.go:363] Got endpoints: latency-svc-2crsn [132.0137ms]
  I1221 13:39:06.300689 19 service_latency.go:356] Created: latency-svc-dwg8f
  I1221 13:39:06.306713 19 service_latency.go:363] Got endpoints: latency-svc-dwg8f [141.475668ms]
  I1221 13:39:06.315915 19 service_latency.go:356] Created: latency-svc-dmkzg
  I1221 13:39:06.320348 19 service_latency.go:363] Got endpoints: latency-svc-dmkzg [134.683225ms]
  I1221 13:39:06.325132 19 service_latency.go:356] Created: latency-svc-td2cs
  I1221 13:39:06.330128 19 service_latency.go:363] Got endpoints: latency-svc-td2cs [140.340654ms]
  I1221 13:39:06.332714 19 service_latency.go:356] Created: latency-svc-nvjk4
  I1221 13:39:06.340101 19 service_latency.go:363] Got endpoints: latency-svc-nvjk4 [142.747294ms]
  I1221 13:39:06.344176 19 service_latency.go:356] Created: latency-svc-t5w28
  I1221 13:39:06.350103 19 service_latency.go:363] Got endpoints: latency-svc-t5w28 [143.87449ms]
  I1221 13:39:06.352783 19 service_latency.go:356] Created: latency-svc-r69d9
  I1221 13:39:06.358915 19 service_latency.go:363] Got endpoints: latency-svc-r69d9 [143.595496ms]
  I1221 13:39:06.359678 19 service_latency.go:356] Created: latency-svc-m9zxv
  I1221 13:39:06.365144 19 service_latency.go:363] Got endpoints: latency-svc-m9zxv [138.691801ms]
  I1221 13:39:06.370373 19 service_latency.go:356] Created: latency-svc-9fqzs
  I1221 13:39:06.377205 19 service_latency.go:356] Created: latency-svc-qmqrv
  I1221 13:39:06.377779 19 service_latency.go:363] Got endpoints: latency-svc-9fqzs [140.633023ms]
  I1221 13:39:06.383911 19 service_latency.go:363] Got endpoints: latency-svc-qmqrv [136.899746ms]
  I1221 13:39:06.384816 19 service_latency.go:356] Created: latency-svc-wrgpd
  I1221 13:39:06.392417 19 service_latency.go:363] Got endpoints: latency-svc-wrgpd [136.577935ms]
  I1221 13:39:06.396794 19 service_latency.go:356] Created: latency-svc-n8k6w
  I1221 13:39:06.403292 19 service_latency.go:363] Got endpoints: latency-svc-n8k6w [134.15844ms]
  I1221 13:39:06.405408 19 service_latency.go:356] Created: latency-svc-8lcft
  I1221 13:39:06.411245 19 service_latency.go:363] Got endpoints: latency-svc-8lcft [139.236858ms]
  I1221 13:39:06.412568 19 service_latency.go:356] Created: latency-svc-b6mgz
  I1221 13:39:06.418659 19 service_latency.go:363] Got endpoints: latency-svc-b6mgz [136.083102ms]
  I1221 13:39:06.425778 19 service_latency.go:356] Created: latency-svc-7h7hq
  I1221 13:39:06.432201 19 service_latency.go:363] Got endpoints: latency-svc-7h7hq [141.794521ms]
  I1221 13:39:06.435916 19 service_latency.go:356] Created: latency-svc-xqj2t
  I1221 13:39:06.443391 19 service_latency.go:363] Got endpoints: latency-svc-xqj2t [146.040529ms]
  I1221 13:39:06.444565 19 service_latency.go:356] Created: latency-svc-br2dz
  I1221 13:39:06.450044 19 service_latency.go:363] Got endpoints: latency-svc-br2dz [143.304822ms]
  I1221 13:39:06.455779 19 service_latency.go:356] Created: latency-svc-hg9gb
  I1221 13:39:06.461247 19 service_latency.go:356] Created: latency-svc-cwhww
  I1221 13:39:06.462986 19 service_latency.go:363] Got endpoints: latency-svc-hg9gb [142.61399ms]
  I1221 13:39:06.466649 19 service_latency.go:363] Got endpoints: latency-svc-cwhww [136.497727ms]
  I1221 13:39:06.469517 19 service_latency.go:356] Created: latency-svc-vgxjk
  I1221 13:39:06.475732 19 service_latency.go:363] Got endpoints: latency-svc-vgxjk [135.604646ms]
  I1221 13:39:06.480028 19 service_latency.go:356] Created: latency-svc-m5z7v
  I1221 13:39:06.484733 19 service_latency.go:363] Got endpoints: latency-svc-m5z7v [134.554788ms]
  I1221 13:39:06.488243 19 service_latency.go:356] Created: latency-svc-fmcml
  I1221 13:39:06.494494 19 service_latency.go:363] Got endpoints: latency-svc-fmcml [135.509539ms]
  I1221 13:39:06.497900 19 service_latency.go:356] Created: latency-svc-6g6bk
  I1221 13:39:06.504963 19 service_latency.go:356] Created: latency-svc-pt5bl
  I1221 13:39:06.512089 19 service_latency.go:356] Created: latency-svc-w6p4v
  I1221 13:39:06.513495 19 service_latency.go:363] Got endpoints: latency-svc-6g6bk [148.318675ms]
  I1221 13:39:06.520746 19 service_latency.go:356] Created: latency-svc-8kjk6
  I1221 13:39:06.529322 19 service_latency.go:356] Created: latency-svc-sgv8h
  I1221 13:39:06.534159 19 service_latency.go:356] Created: latency-svc-2m5jk
  I1221 13:39:06.541740 19 service_latency.go:356] Created: latency-svc-bg2ch
  I1221 13:39:06.548690 19 service_latency.go:356] Created: latency-svc-kjsrn
  I1221 13:39:06.555268 19 service_latency.go:356] Created: latency-svc-rtbcd
  I1221 13:39:06.559886 19 service_latency.go:356] Created: latency-svc-6j5mp
  I1221 13:39:06.563638 19 service_latency.go:363] Got endpoints: latency-svc-pt5bl [185.835568ms]
  I1221 13:39:06.569432 19 service_latency.go:356] Created: latency-svc-pfz7z
  I1221 13:39:06.575624 19 service_latency.go:356] Created: latency-svc-66lmb
  I1221 13:39:06.582294 19 service_latency.go:356] Created: latency-svc-ckx9d
  I1221 13:39:06.591521 19 service_latency.go:356] Created: latency-svc-xqxcf
  I1221 13:39:06.598350 19 service_latency.go:356] Created: latency-svc-hv7jm
  I1221 13:39:06.603710 19 service_latency.go:356] Created: latency-svc-cd29v
  I1221 13:39:06.609868 19 service_latency.go:356] Created: latency-svc-k5h5p
  I1221 13:39:06.614369 19 service_latency.go:363] Got endpoints: latency-svc-w6p4v [230.430595ms]
  I1221 13:39:06.625449 19 service_latency.go:356] Created: latency-svc-7x6jd
  I1221 13:39:06.666204 19 service_latency.go:363] Got endpoints: latency-svc-8kjk6 [273.756488ms]
  I1221 13:39:06.678287 19 service_latency.go:356] Created: latency-svc-jm4tl
  I1221 13:39:06.716072 19 service_latency.go:363] Got endpoints: latency-svc-sgv8h [312.717135ms]
  I1221 13:39:06.728411 19 service_latency.go:356] Created: latency-svc-6rkv7
  I1221 13:39:06.763586 19 service_latency.go:363] Got endpoints: latency-svc-2m5jk [352.304164ms]
  I1221 13:39:06.776381 19 service_latency.go:356] Created: latency-svc-42q2s
  I1221 13:39:06.813943 19 service_latency.go:363] Got endpoints: latency-svc-bg2ch [395.254696ms]
  I1221 13:39:06.826057 19 service_latency.go:356] Created: latency-svc-q9x2j
  I1221 13:39:06.865912 19 service_latency.go:363] Got endpoints: latency-svc-kjsrn [433.687576ms]
  I1221 13:39:06.877995 19 service_latency.go:356] Created: latency-svc-s2t7l
  I1221 13:39:06.915470 19 service_latency.go:363] Got endpoints: latency-svc-rtbcd [471.993948ms]
  I1221 13:39:06.927238 19 service_latency.go:356] Created: latency-svc-6p6b9
  I1221 13:39:06.965189 19 service_latency.go:363] Got endpoints: latency-svc-6j5mp [515.110237ms]
  I1221 13:39:06.978196 19 service_latency.go:356] Created: latency-svc-xbvd6
  I1221 13:39:07.015313 19 service_latency.go:363] Got endpoints: latency-svc-pfz7z [552.301333ms]
  I1221 13:39:07.027209 19 service_latency.go:356] Created: latency-svc-7tn7k
  I1221 13:39:07.063914 19 service_latency.go:363] Got endpoints: latency-svc-66lmb [597.231373ms]
  I1221 13:39:07.076392 19 service_latency.go:356] Created: latency-svc-444cx
  I1221 13:39:07.115960 19 service_latency.go:363] Got endpoints: latency-svc-ckx9d [640.197897ms]
  I1221 13:39:07.128793 19 service_latency.go:356] Created: latency-svc-gnnzb
  E1221 13:39:07.147177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:07.165688 19 service_latency.go:363] Got endpoints: latency-svc-xqxcf [680.92768ms]
  I1221 13:39:07.176665 19 service_latency.go:356] Created: latency-svc-6x5vz
  I1221 13:39:07.215532 19 service_latency.go:363] Got endpoints: latency-svc-hv7jm [721.013333ms]
  I1221 13:39:07.227920 19 service_latency.go:356] Created: latency-svc-p5qrg
  I1221 13:39:07.265926 19 service_latency.go:363] Got endpoints: latency-svc-cd29v [752.407403ms]
  I1221 13:39:07.278243 19 service_latency.go:356] Created: latency-svc-746fs
  I1221 13:39:07.314453 19 service_latency.go:363] Got endpoints: latency-svc-k5h5p [750.787101ms]
  I1221 13:39:07.325452 19 service_latency.go:356] Created: latency-svc-dl86x
  I1221 13:39:07.366669 19 service_latency.go:363] Got endpoints: latency-svc-7x6jd [752.272287ms]
  I1221 13:39:07.378383 19 service_latency.go:356] Created: latency-svc-fgks6
  I1221 13:39:07.417298 19 service_latency.go:363] Got endpoints: latency-svc-jm4tl [751.061985ms]
  I1221 13:39:07.429102 19 service_latency.go:356] Created: latency-svc-gml6b
  I1221 13:39:07.465248 19 service_latency.go:363] Got endpoints: latency-svc-6rkv7 [749.145659ms]
  I1221 13:39:07.476915 19 service_latency.go:356] Created: latency-svc-tqk9w
  I1221 13:39:07.514437 19 service_latency.go:363] Got endpoints: latency-svc-42q2s [750.789061ms]
  I1221 13:39:07.525300 19 service_latency.go:356] Created: latency-svc-9tvct
  I1221 13:39:07.565142 19 service_latency.go:363] Got endpoints: latency-svc-q9x2j [751.163197ms]
  I1221 13:39:07.577485 19 service_latency.go:356] Created: latency-svc-dt2kf
  I1221 13:39:07.616272 19 service_latency.go:363] Got endpoints: latency-svc-s2t7l [750.324736ms]
  I1221 13:39:07.629720 19 service_latency.go:356] Created: latency-svc-6ct99
  I1221 13:39:07.667553 19 service_latency.go:363] Got endpoints: latency-svc-6p6b9 [752.027511ms]
  I1221 13:39:07.678830 19 service_latency.go:356] Created: latency-svc-s7txl
  I1221 13:39:07.715225 19 service_latency.go:363] Got endpoints: latency-svc-xbvd6 [749.71677ms]
  I1221 13:39:07.729191 19 service_latency.go:356] Created: latency-svc-d4zhg
  I1221 13:39:07.765082 19 service_latency.go:363] Got endpoints: latency-svc-7tn7k [749.505988ms]
  I1221 13:39:07.777243 19 service_latency.go:356] Created: latency-svc-lfwmq
  I1221 13:39:07.817259 19 service_latency.go:363] Got endpoints: latency-svc-444cx [753.314777ms]
  I1221 13:39:07.829880 19 service_latency.go:356] Created: latency-svc-kktbl
  I1221 13:39:07.866529 19 service_latency.go:363] Got endpoints: latency-svc-gnnzb [750.535118ms]
  I1221 13:39:07.877303 19 service_latency.go:356] Created: latency-svc-vk45w
  I1221 13:39:07.914497 19 service_latency.go:363] Got endpoints: latency-svc-6x5vz [748.77694ms]
  I1221 13:39:07.926231 19 service_latency.go:356] Created: latency-svc-qkwbj
  I1221 13:39:07.965882 19 service_latency.go:363] Got endpoints: latency-svc-p5qrg [750.261197ms]
  I1221 13:39:07.977636 19 service_latency.go:356] Created: latency-svc-9blsp
  I1221 13:39:08.015477 19 service_latency.go:363] Got endpoints: latency-svc-746fs [749.520566ms]
  I1221 13:39:08.029256 19 service_latency.go:356] Created: latency-svc-c8qfm
  I1221 13:39:08.066102 19 service_latency.go:363] Got endpoints: latency-svc-dl86x [751.486513ms]
  I1221 13:39:08.077491 19 service_latency.go:356] Created: latency-svc-hkhw9
  I1221 13:39:08.114426 19 service_latency.go:363] Got endpoints: latency-svc-fgks6 [747.726525ms]
  I1221 13:39:08.126743 19 service_latency.go:356] Created: latency-svc-fllc2
  E1221 13:39:08.147822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:08.166377 19 service_latency.go:363] Got endpoints: latency-svc-gml6b [748.877793ms]
  I1221 13:39:08.179821 19 service_latency.go:356] Created: latency-svc-nf2jm
  I1221 13:39:08.215747 19 service_latency.go:363] Got endpoints: latency-svc-tqk9w [750.46812ms]
  I1221 13:39:08.226596 19 service_latency.go:356] Created: latency-svc-9z4nf
  I1221 13:39:08.264472 19 service_latency.go:363] Got endpoints: latency-svc-9tvct [749.845996ms]
  I1221 13:39:08.275453 19 service_latency.go:356] Created: latency-svc-rv489
  I1221 13:39:08.315676 19 service_latency.go:363] Got endpoints: latency-svc-dt2kf [750.503602ms]
  I1221 13:39:08.327499 19 service_latency.go:356] Created: latency-svc-7w88p
  I1221 13:39:08.364831 19 service_latency.go:363] Got endpoints: latency-svc-6ct99 [748.320112ms]
  I1221 13:39:08.378001 19 service_latency.go:356] Created: latency-svc-6rfjt
  I1221 13:39:08.414676 19 service_latency.go:363] Got endpoints: latency-svc-s7txl [747.010292ms]
  I1221 13:39:08.425438 19 service_latency.go:356] Created: latency-svc-klb82
  I1221 13:39:08.465977 19 service_latency.go:363] Got endpoints: latency-svc-d4zhg [750.720093ms]
  I1221 13:39:08.479133 19 service_latency.go:356] Created: latency-svc-rsjng
  I1221 13:39:08.518155 19 service_latency.go:363] Got endpoints: latency-svc-lfwmq [753.040143ms]
  I1221 13:39:08.530226 19 service_latency.go:356] Created: latency-svc-mthng
  I1221 13:39:08.568395 19 service_latency.go:363] Got endpoints: latency-svc-kktbl [751.104286ms]
  I1221 13:39:08.614132 19 service_latency.go:363] Got endpoints: latency-svc-vk45w [747.551575ms]
  I1221 13:39:08.617030 19 service_latency.go:356] Created: latency-svc-qqf9v
  I1221 13:39:08.626905 19 service_latency.go:356] Created: latency-svc-72l2q
  I1221 13:39:08.664974 19 service_latency.go:363] Got endpoints: latency-svc-qkwbj [750.443203ms]
  I1221 13:39:08.676694 19 service_latency.go:356] Created: latency-svc-d7vrs
  I1221 13:39:08.715966 19 service_latency.go:363] Got endpoints: latency-svc-9blsp [750.049117ms]
  I1221 13:39:08.728824 19 service_latency.go:356] Created: latency-svc-68h8r
  I1221 13:39:08.765505 19 service_latency.go:363] Got endpoints: latency-svc-c8qfm [749.985971ms]
  I1221 13:39:08.778097 19 service_latency.go:356] Created: latency-svc-k9qhx
  I1221 13:39:08.815447 19 service_latency.go:363] Got endpoints: latency-svc-hkhw9 [749.281552ms]
  I1221 13:39:08.827078 19 service_latency.go:356] Created: latency-svc-9k8rn
  I1221 13:39:08.864465 19 service_latency.go:363] Got endpoints: latency-svc-fllc2 [750.002171ms]
  I1221 13:39:08.877513 19 service_latency.go:356] Created: latency-svc-rfbp6
  I1221 13:39:08.914973 19 service_latency.go:363] Got endpoints: latency-svc-nf2jm [748.565638ms]
  I1221 13:39:08.927070 19 service_latency.go:356] Created: latency-svc-vr4sm
  I1221 13:39:08.967525 19 service_latency.go:363] Got endpoints: latency-svc-9z4nf [751.753083ms]
  I1221 13:39:08.980203 19 service_latency.go:356] Created: latency-svc-57ntb
  I1221 13:39:09.014310 19 service_latency.go:363] Got endpoints: latency-svc-rv489 [749.813699ms]
  I1221 13:39:09.026303 19 service_latency.go:356] Created: latency-svc-pnhzf
  I1221 13:39:09.065200 19 service_latency.go:363] Got endpoints: latency-svc-7w88p [749.494419ms]
  I1221 13:39:09.077084 19 service_latency.go:356] Created: latency-svc-j2qnl
  I1221 13:39:09.114711 19 service_latency.go:363] Got endpoints: latency-svc-6rfjt [749.836899ms]
  I1221 13:39:09.124971 19 service_latency.go:356] Created: latency-svc-42tn8
  E1221 13:39:09.148074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:09.166132 19 service_latency.go:363] Got endpoints: latency-svc-klb82 [751.426648ms]
  I1221 13:39:09.178071 19 service_latency.go:356] Created: latency-svc-n95sl
  I1221 13:39:09.214639 19 service_latency.go:363] Got endpoints: latency-svc-rsjng [748.606737ms]
  I1221 13:39:09.226045 19 service_latency.go:356] Created: latency-svc-pxglf
  I1221 13:39:09.265611 19 service_latency.go:363] Got endpoints: latency-svc-mthng [747.432454ms]
  I1221 13:39:09.276753 19 service_latency.go:356] Created: latency-svc-29k84
  I1221 13:39:09.314049 19 service_latency.go:363] Got endpoints: latency-svc-qqf9v [745.551706ms]
  I1221 13:39:09.324586 19 service_latency.go:356] Created: latency-svc-8fp5w
  I1221 13:39:09.366582 19 service_latency.go:363] Got endpoints: latency-svc-72l2q [752.417235ms]
  I1221 13:39:09.378592 19 service_latency.go:356] Created: latency-svc-sqbcq
  I1221 13:39:09.414840 19 service_latency.go:363] Got endpoints: latency-svc-d7vrs [749.704559ms]
  I1221 13:39:09.427032 19 service_latency.go:356] Created: latency-svc-2hnkn
  I1221 13:39:09.464350 19 service_latency.go:363] Got endpoints: latency-svc-68h8r [748.334609ms]
  I1221 13:39:09.476698 19 service_latency.go:356] Created: latency-svc-zlfk6
  I1221 13:39:09.515511 19 service_latency.go:363] Got endpoints: latency-svc-k9qhx [749.971217ms]
  I1221 13:39:09.527040 19 service_latency.go:356] Created: latency-svc-krcj5
  I1221 13:39:09.564985 19 service_latency.go:363] Got endpoints: latency-svc-9k8rn [749.499246ms]
  I1221 13:39:09.577085 19 service_latency.go:356] Created: latency-svc-95hkx
  I1221 13:39:09.615164 19 service_latency.go:363] Got endpoints: latency-svc-rfbp6 [750.666864ms]
  I1221 13:39:09.627466 19 service_latency.go:356] Created: latency-svc-rw9kr
  I1221 13:39:09.665517 19 service_latency.go:363] Got endpoints: latency-svc-vr4sm [750.516188ms]
  I1221 13:39:09.677822 19 service_latency.go:356] Created: latency-svc-vp9rw
  I1221 13:39:09.715579 19 service_latency.go:363] Got endpoints: latency-svc-57ntb [748.020663ms]
  I1221 13:39:09.726610 19 service_latency.go:356] Created: latency-svc-447cl
  I1221 13:39:09.763913 19 service_latency.go:363] Got endpoints: latency-svc-pnhzf [749.549985ms]
  I1221 13:39:09.776051 19 service_latency.go:356] Created: latency-svc-24f9g
  I1221 13:39:09.816988 19 service_latency.go:363] Got endpoints: latency-svc-j2qnl [751.744529ms]
  I1221 13:39:09.829857 19 service_latency.go:356] Created: latency-svc-gkttp
  I1221 13:39:09.866539 19 service_latency.go:363] Got endpoints: latency-svc-42tn8 [751.790046ms]
  I1221 13:39:09.877827 19 service_latency.go:356] Created: latency-svc-cs657
  I1221 13:39:09.914724 19 service_latency.go:363] Got endpoints: latency-svc-n95sl [748.537251ms]
  I1221 13:39:09.925824 19 service_latency.go:356] Created: latency-svc-vznk5
  I1221 13:39:09.966462 19 service_latency.go:363] Got endpoints: latency-svc-pxglf [751.793218ms]
  I1221 13:39:09.976796 19 service_latency.go:356] Created: latency-svc-c62c8
  I1221 13:39:10.015873 19 service_latency.go:363] Got endpoints: latency-svc-29k84 [750.224622ms]
  I1221 13:39:10.026778 19 service_latency.go:356] Created: latency-svc-lxpkk
  I1221 13:39:10.064957 19 service_latency.go:363] Got endpoints: latency-svc-8fp5w [750.870852ms]
  I1221 13:39:10.075931 19 service_latency.go:356] Created: latency-svc-x96jq
  I1221 13:39:10.114422 19 service_latency.go:363] Got endpoints: latency-svc-sqbcq [747.782119ms]
  I1221 13:39:10.128652 19 service_latency.go:356] Created: latency-svc-9rnqj
  E1221 13:39:10.148815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:10.164803 19 service_latency.go:363] Got endpoints: latency-svc-2hnkn [749.931252ms]
  I1221 13:39:10.175735 19 service_latency.go:356] Created: latency-svc-64brr
  I1221 13:39:10.214049 19 service_latency.go:363] Got endpoints: latency-svc-zlfk6 [749.669055ms]
  I1221 13:39:10.225974 19 service_latency.go:356] Created: latency-svc-gqm8l
  I1221 13:39:10.265904 19 service_latency.go:363] Got endpoints: latency-svc-krcj5 [750.359062ms]
  I1221 13:39:10.279494 19 service_latency.go:356] Created: latency-svc-jngm2
  I1221 13:39:10.315683 19 service_latency.go:363] Got endpoints: latency-svc-95hkx [750.66519ms]
  I1221 13:39:10.326144 19 service_latency.go:356] Created: latency-svc-72pnn
  I1221 13:39:10.365204 19 service_latency.go:363] Got endpoints: latency-svc-rw9kr [749.97665ms]
  I1221 13:39:10.376417 19 service_latency.go:356] Created: latency-svc-57xqj
  I1221 13:39:10.417693 19 service_latency.go:363] Got endpoints: latency-svc-vp9rw [752.139952ms]
  I1221 13:39:10.431183 19 service_latency.go:356] Created: latency-svc-vhwdh
  I1221 13:39:10.465383 19 service_latency.go:363] Got endpoints: latency-svc-447cl [749.768218ms]
  I1221 13:39:10.477099 19 service_latency.go:356] Created: latency-svc-qsvrr
  I1221 13:39:10.514176 19 service_latency.go:363] Got endpoints: latency-svc-24f9g [750.214587ms]
  I1221 13:39:10.526435 19 service_latency.go:356] Created: latency-svc-lf2zg
  I1221 13:39:10.564423 19 service_latency.go:363] Got endpoints: latency-svc-gkttp [747.397486ms]
  I1221 13:39:10.578120 19 service_latency.go:356] Created: latency-svc-r7kf8
  I1221 13:39:10.615044 19 service_latency.go:363] Got endpoints: latency-svc-cs657 [748.471818ms]
  I1221 13:39:10.626486 19 service_latency.go:356] Created: latency-svc-hlpv7
  I1221 13:39:10.665830 19 service_latency.go:363] Got endpoints: latency-svc-vznk5 [751.073827ms]
  I1221 13:39:10.678199 19 service_latency.go:356] Created: latency-svc-vvccv
  I1221 13:39:10.715999 19 service_latency.go:363] Got endpoints: latency-svc-c62c8 [749.491819ms]
  I1221 13:39:10.727904 19 service_latency.go:356] Created: latency-svc-8z56j
  I1221 13:39:10.764891 19 service_latency.go:363] Got endpoints: latency-svc-lxpkk [748.981609ms]
  I1221 13:39:10.776157 19 service_latency.go:356] Created: latency-svc-t4kms
  I1221 13:39:10.814295 19 service_latency.go:363] Got endpoints: latency-svc-x96jq [749.180821ms]
  I1221 13:39:10.826005 19 service_latency.go:356] Created: latency-svc-5nmd9
  I1221 13:39:10.866637 19 service_latency.go:363] Got endpoints: latency-svc-9rnqj [752.177426ms]
  I1221 13:39:10.880364 19 service_latency.go:356] Created: latency-svc-rrvph
  I1221 13:39:10.916072 19 service_latency.go:363] Got endpoints: latency-svc-64brr [751.236461ms]
  I1221 13:39:10.927031 19 service_latency.go:356] Created: latency-svc-7z4h2
  I1221 13:39:10.964167 19 service_latency.go:363] Got endpoints: latency-svc-gqm8l [750.090333ms]
  I1221 13:39:10.978097 19 service_latency.go:356] Created: latency-svc-2k859
  I1221 13:39:11.016319 19 service_latency.go:363] Got endpoints: latency-svc-jngm2 [750.384035ms]
  I1221 13:39:11.028581 19 service_latency.go:356] Created: latency-svc-6d2lr
  I1221 13:39:11.064536 19 service_latency.go:363] Got endpoints: latency-svc-72pnn [748.820159ms]
  I1221 13:39:11.077277 19 service_latency.go:356] Created: latency-svc-d9lj9
  I1221 13:39:11.114637 19 service_latency.go:363] Got endpoints: latency-svc-57xqj [749.226646ms]
  I1221 13:39:11.124888 19 service_latency.go:356] Created: latency-svc-hkm2t
  E1221 13:39:11.148992      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:11.168089 19 service_latency.go:363] Got endpoints: latency-svc-vhwdh [750.062092ms]
  I1221 13:39:11.180758 19 service_latency.go:356] Created: latency-svc-llszd
  I1221 13:39:11.218187 19 service_latency.go:363] Got endpoints: latency-svc-qsvrr [752.76828ms]
  I1221 13:39:11.229471 19 service_latency.go:356] Created: latency-svc-48nc6
  I1221 13:39:11.264460 19 service_latency.go:363] Got endpoints: latency-svc-lf2zg [749.482612ms]
  I1221 13:39:11.277393 19 service_latency.go:356] Created: latency-svc-pww76
  I1221 13:39:11.314595 19 service_latency.go:363] Got endpoints: latency-svc-r7kf8 [750.141189ms]
  I1221 13:39:11.326786 19 service_latency.go:356] Created: latency-svc-2ms6c
  I1221 13:39:11.365259 19 service_latency.go:363] Got endpoints: latency-svc-hlpv7 [750.006883ms]
  I1221 13:39:11.376233 19 service_latency.go:356] Created: latency-svc-vjg5l
  I1221 13:39:11.415491 19 service_latency.go:363] Got endpoints: latency-svc-vvccv [749.624627ms]
  I1221 13:39:11.428146 19 service_latency.go:356] Created: latency-svc-bckfq
  I1221 13:39:11.467121 19 service_latency.go:363] Got endpoints: latency-svc-8z56j [751.088435ms]
  I1221 13:39:11.479285 19 service_latency.go:356] Created: latency-svc-qvgt7
  I1221 13:39:11.515406 19 service_latency.go:363] Got endpoints: latency-svc-t4kms [750.457259ms]
  I1221 13:39:11.526738 19 service_latency.go:356] Created: latency-svc-r5jfg
  I1221 13:39:11.564309 19 service_latency.go:363] Got endpoints: latency-svc-5nmd9 [749.979834ms]
  I1221 13:39:11.577011 19 service_latency.go:356] Created: latency-svc-jcrqh
  I1221 13:39:11.615163 19 service_latency.go:363] Got endpoints: latency-svc-rrvph [748.333962ms]
  I1221 13:39:11.628400 19 service_latency.go:356] Created: latency-svc-hjcmm
  I1221 13:39:11.666068 19 service_latency.go:363] Got endpoints: latency-svc-7z4h2 [749.95594ms]
  I1221 13:39:11.677034 19 service_latency.go:356] Created: latency-svc-tl69b
  I1221 13:39:11.715672 19 service_latency.go:363] Got endpoints: latency-svc-2k859 [751.225094ms]
  I1221 13:39:11.727158 19 service_latency.go:356] Created: latency-svc-vr96d
  I1221 13:39:11.767437 19 service_latency.go:363] Got endpoints: latency-svc-6d2lr [750.752ms]
  I1221 13:39:11.782151 19 service_latency.go:356] Created: latency-svc-7zdb6
  I1221 13:39:11.814512 19 service_latency.go:363] Got endpoints: latency-svc-d9lj9 [749.726005ms]
  I1221 13:39:11.824703 19 service_latency.go:356] Created: latency-svc-sjhsz
  I1221 13:39:11.866898 19 service_latency.go:363] Got endpoints: latency-svc-hkm2t [752.216658ms]
  I1221 13:39:11.879157 19 service_latency.go:356] Created: latency-svc-l7s96
  I1221 13:39:11.916731 19 service_latency.go:363] Got endpoints: latency-svc-llszd [748.563646ms]
  I1221 13:39:11.927197 19 service_latency.go:356] Created: latency-svc-npvws
  I1221 13:39:11.964139 19 service_latency.go:363] Got endpoints: latency-svc-48nc6 [745.916511ms]
  I1221 13:39:11.975629 19 service_latency.go:356] Created: latency-svc-x5l4v
  I1221 13:39:12.014154 19 service_latency.go:363] Got endpoints: latency-svc-pww76 [749.634403ms]
  I1221 13:39:12.024817 19 service_latency.go:356] Created: latency-svc-fpj6b
  I1221 13:39:12.065982 19 service_latency.go:363] Got endpoints: latency-svc-2ms6c [751.349149ms]
  I1221 13:39:12.076969 19 service_latency.go:356] Created: latency-svc-4vrvt
  I1221 13:39:12.115897 19 service_latency.go:363] Got endpoints: latency-svc-vjg5l [750.579059ms]
  I1221 13:39:12.126557 19 service_latency.go:356] Created: latency-svc-24pwv
  E1221 13:39:12.149766      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:12.166430 19 service_latency.go:363] Got endpoints: latency-svc-bckfq [750.898474ms]
  I1221 13:39:12.180939 19 service_latency.go:356] Created: latency-svc-z6j74
  I1221 13:39:12.215382 19 service_latency.go:363] Got endpoints: latency-svc-qvgt7 [748.223888ms]
  I1221 13:39:12.228198 19 service_latency.go:356] Created: latency-svc-6x9jl
  I1221 13:39:12.264662 19 service_latency.go:363] Got endpoints: latency-svc-r5jfg [749.220757ms]
  I1221 13:39:12.274783 19 service_latency.go:356] Created: latency-svc-bs8s2
  I1221 13:39:12.315406 19 service_latency.go:363] Got endpoints: latency-svc-jcrqh [751.049938ms]
  I1221 13:39:12.326989 19 service_latency.go:356] Created: latency-svc-9chh9
  I1221 13:39:12.366254 19 service_latency.go:363] Got endpoints: latency-svc-hjcmm [751.034618ms]
  I1221 13:39:12.379820 19 service_latency.go:356] Created: latency-svc-8fbtz
  I1221 13:39:12.415825 19 service_latency.go:363] Got endpoints: latency-svc-tl69b [749.71038ms]
  I1221 13:39:12.429530 19 service_latency.go:356] Created: latency-svc-7vt9r
  I1221 13:39:12.465347 19 service_latency.go:363] Got endpoints: latency-svc-vr96d [749.621343ms]
  I1221 13:39:12.476211 19 service_latency.go:356] Created: latency-svc-7f6b9
  I1221 13:39:12.515848 19 service_latency.go:363] Got endpoints: latency-svc-7zdb6 [748.380364ms]
  I1221 13:39:12.527745 19 service_latency.go:356] Created: latency-svc-vggbk
  I1221 13:39:12.565891 19 service_latency.go:363] Got endpoints: latency-svc-sjhsz [751.333713ms]
  I1221 13:39:12.576212 19 service_latency.go:356] Created: latency-svc-sqznd
  I1221 13:39:12.615577 19 service_latency.go:363] Got endpoints: latency-svc-l7s96 [748.616821ms]
  I1221 13:39:12.627434 19 service_latency.go:356] Created: latency-svc-h6ncc
  I1221 13:39:12.665802 19 service_latency.go:363] Got endpoints: latency-svc-npvws [749.031766ms]
  I1221 13:39:12.678495 19 service_latency.go:356] Created: latency-svc-vgsk4
  I1221 13:39:12.714549 19 service_latency.go:363] Got endpoints: latency-svc-x5l4v [750.372809ms]
  I1221 13:39:12.725080 19 service_latency.go:356] Created: latency-svc-mh4k9
  I1221 13:39:12.766198 19 service_latency.go:363] Got endpoints: latency-svc-fpj6b [752.007681ms]
  I1221 13:39:12.778118 19 service_latency.go:356] Created: latency-svc-5zv44
  I1221 13:39:12.816794 19 service_latency.go:363] Got endpoints: latency-svc-4vrvt [750.778767ms]
  I1221 13:39:12.829317 19 service_latency.go:356] Created: latency-svc-4lrcv
  I1221 13:39:12.866010 19 service_latency.go:363] Got endpoints: latency-svc-24pwv [750.080707ms]
  I1221 13:39:12.878461 19 service_latency.go:356] Created: latency-svc-pq24f
  I1221 13:39:12.915242 19 service_latency.go:363] Got endpoints: latency-svc-z6j74 [748.726966ms]
  I1221 13:39:12.926823 19 service_latency.go:356] Created: latency-svc-zptk4
  I1221 13:39:12.965873 19 service_latency.go:363] Got endpoints: latency-svc-6x9jl [750.462664ms]
  I1221 13:39:12.977523 19 service_latency.go:356] Created: latency-svc-zsjjp
  I1221 13:39:13.017090 19 service_latency.go:363] Got endpoints: latency-svc-bs8s2 [752.388753ms]
  I1221 13:39:13.027033 19 service_latency.go:356] Created: latency-svc-mmsgm
  I1221 13:39:13.066182 19 service_latency.go:363] Got endpoints: latency-svc-9chh9 [750.750807ms]
  I1221 13:39:13.077865 19 service_latency.go:356] Created: latency-svc-rxktl
  I1221 13:39:13.114729 19 service_latency.go:363] Got endpoints: latency-svc-8fbtz [748.440628ms]
  I1221 13:39:13.127622 19 service_latency.go:356] Created: latency-svc-tlg7s
  E1221 13:39:13.150141      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:13.165060 19 service_latency.go:363] Got endpoints: latency-svc-7vt9r [749.187354ms]
  I1221 13:39:13.177548 19 service_latency.go:356] Created: latency-svc-68b9d
  I1221 13:39:13.215414 19 service_latency.go:363] Got endpoints: latency-svc-7f6b9 [750.028811ms]
  I1221 13:39:13.226819 19 service_latency.go:356] Created: latency-svc-4dbqn
  I1221 13:39:13.265723 19 service_latency.go:363] Got endpoints: latency-svc-vggbk [749.833523ms]
  I1221 13:39:13.278572 19 service_latency.go:356] Created: latency-svc-ndvl8
  I1221 13:39:13.315409 19 service_latency.go:363] Got endpoints: latency-svc-sqznd [749.470213ms]
  I1221 13:39:13.328270 19 service_latency.go:356] Created: latency-svc-xpbcq
  I1221 13:39:13.365477 19 service_latency.go:363] Got endpoints: latency-svc-h6ncc [749.831808ms]
  I1221 13:39:13.378185 19 service_latency.go:356] Created: latency-svc-gszvt
  I1221 13:39:13.415277 19 service_latency.go:363] Got endpoints: latency-svc-vgsk4 [749.42796ms]
  I1221 13:39:13.426771 19 service_latency.go:356] Created: latency-svc-ncbvj
  I1221 13:39:13.467061 19 service_latency.go:363] Got endpoints: latency-svc-mh4k9 [752.40674ms]
  I1221 13:39:13.478224 19 service_latency.go:356] Created: latency-svc-ljshj
  I1221 13:39:13.515849 19 service_latency.go:363] Got endpoints: latency-svc-5zv44 [749.627602ms]
  I1221 13:39:13.527029 19 service_latency.go:356] Created: latency-svc-l5h9d
  I1221 13:39:13.565166 19 service_latency.go:363] Got endpoints: latency-svc-4lrcv [748.329811ms]
  I1221 13:39:13.578197 19 service_latency.go:356] Created: latency-svc-dx7g4
  I1221 13:39:13.614684 19 service_latency.go:363] Got endpoints: latency-svc-pq24f [748.646121ms]
  I1221 13:39:13.626874 19 service_latency.go:356] Created: latency-svc-qw6lt
  I1221 13:39:13.666144 19 service_latency.go:363] Got endpoints: latency-svc-zptk4 [750.855126ms]
  I1221 13:39:13.678169 19 service_latency.go:356] Created: latency-svc-ld9pd
  I1221 13:39:13.717449 19 service_latency.go:363] Got endpoints: latency-svc-zsjjp [751.540864ms]
  I1221 13:39:13.730314 19 service_latency.go:356] Created: latency-svc-ckc4h
  I1221 13:39:13.766658 19 service_latency.go:363] Got endpoints: latency-svc-mmsgm [749.533967ms]
  I1221 13:39:13.781104 19 service_latency.go:356] Created: latency-svc-66mjh
  I1221 13:39:13.816356 19 service_latency.go:363] Got endpoints: latency-svc-rxktl [750.144578ms]
  I1221 13:39:13.826995 19 service_latency.go:356] Created: latency-svc-n78cl
  I1221 13:39:13.866762 19 service_latency.go:363] Got endpoints: latency-svc-tlg7s [751.968414ms]
  I1221 13:39:13.879568 19 service_latency.go:356] Created: latency-svc-rhlwk
  I1221 13:39:13.915674 19 service_latency.go:363] Got endpoints: latency-svc-68b9d [750.584951ms]
  I1221 13:39:13.927022 19 service_latency.go:356] Created: latency-svc-tzkr6
  I1221 13:39:13.965386 19 service_latency.go:363] Got endpoints: latency-svc-4dbqn [749.813675ms]
  I1221 13:39:13.976532 19 service_latency.go:356] Created: latency-svc-gt27x
  I1221 13:39:14.015838 19 service_latency.go:363] Got endpoints: latency-svc-ndvl8 [750.059479ms]
  I1221 13:39:14.064865 19 service_latency.go:363] Got endpoints: latency-svc-xpbcq [749.411984ms]
  I1221 13:39:14.118261 19 service_latency.go:363] Got endpoints: latency-svc-gszvt [752.7244ms]
  E1221 13:39:14.150253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:14.165093 19 service_latency.go:363] Got endpoints: latency-svc-ncbvj [749.764379ms]
  I1221 13:39:14.215625 19 service_latency.go:363] Got endpoints: latency-svc-ljshj [748.53115ms]
  I1221 13:39:14.265141 19 service_latency.go:363] Got endpoints: latency-svc-l5h9d [749.26137ms]
  I1221 13:39:14.316322 19 service_latency.go:363] Got endpoints: latency-svc-dx7g4 [751.125913ms]
  I1221 13:39:14.365557 19 service_latency.go:363] Got endpoints: latency-svc-qw6lt [750.832568ms]
  I1221 13:39:14.415988 19 service_latency.go:363] Got endpoints: latency-svc-ld9pd [749.813158ms]
  I1221 13:39:14.464777 19 service_latency.go:363] Got endpoints: latency-svc-ckc4h [747.064545ms]
  I1221 13:39:14.515208 19 service_latency.go:363] Got endpoints: latency-svc-66mjh [748.511657ms]
  I1221 13:39:14.567044 19 service_latency.go:363] Got endpoints: latency-svc-n78cl [750.658108ms]
  I1221 13:39:14.616073 19 service_latency.go:363] Got endpoints: latency-svc-rhlwk [749.279874ms]
  I1221 13:39:14.665747 19 service_latency.go:363] Got endpoints: latency-svc-tzkr6 [750.027346ms]
  I1221 13:39:14.718294 19 service_latency.go:363] Got endpoints: latency-svc-gt27x [752.873491ms]
  I1221 13:39:14.718401 19 service_latency.go:114] Latencies: [20.999497ms 24.938976ms 32.475197ms 41.317695ms 50.362171ms 61.471617ms 72.077002ms 81.971812ms 90.764625ms 104.030544ms 106.881806ms 117.400768ms 125.194352ms 132.0137ms 134.15844ms 134.554788ms 134.683225ms 135.509539ms 135.604646ms 136.083102ms 136.497727ms 136.577935ms 136.899746ms 138.691801ms 139.236858ms 140.340654ms 140.633023ms 141.475668ms 141.794521ms 142.61399ms 142.747294ms 143.304822ms 143.595496ms 143.87449ms 146.040529ms 148.318675ms 185.835568ms 230.430595ms 273.756488ms 312.717135ms 352.304164ms 395.254696ms 433.687576ms 471.993948ms 515.110237ms 552.301333ms 597.231373ms 640.197897ms 680.92768ms 721.013333ms 745.551706ms 745.916511ms 747.010292ms 747.064545ms 747.397486ms 747.432454ms 747.551575ms 747.726525ms 747.782119ms 748.020663ms 748.223888ms 748.320112ms 748.329811ms 748.333962ms 748.334609ms 748.380364ms 748.440628ms 748.471818ms 748.511657ms 748.53115ms 748.537251ms 748.563646ms 748.565638ms 748.606737ms 748.616821ms 748.646121ms 748.726966ms 748.77694ms 748.820159ms 748.877793ms 748.981609ms 749.031766ms 749.145659ms 749.180821ms 749.187354ms 749.220757ms 749.226646ms 749.26137ms 749.279874ms 749.281552ms 749.411984ms 749.42796ms 749.470213ms 749.482612ms 749.491819ms 749.494419ms 749.499246ms 749.505988ms 749.520566ms 749.533967ms 749.549985ms 749.621343ms 749.624627ms 749.627602ms 749.634403ms 749.669055ms 749.704559ms 749.71038ms 749.71677ms 749.726005ms 749.764379ms 749.768218ms 749.813158ms 749.813675ms 749.813699ms 749.831808ms 749.833523ms 749.836899ms 749.845996ms 749.931252ms 749.95594ms 749.971217ms 749.97665ms 749.979834ms 749.985971ms 750.002171ms 750.006883ms 750.027346ms 750.028811ms 750.049117ms 750.059479ms 750.062092ms 750.080707ms 750.090333ms 750.141189ms 750.144578ms 750.214587ms 750.224622ms 750.261197ms 750.324736ms 750.359062ms 750.372809ms 750.384035ms 750.443203ms 750.457259ms 750.462664ms 750.46812ms 750.503602ms 750.516188ms 750.535118ms 750.579059ms 750.584951ms 750.658108ms 750.66519ms 750.666864ms 750.720093ms 750.750807ms 750.752ms 750.778767ms 750.787101ms 750.789061ms 750.832568ms 750.855126ms 750.870852ms 750.898474ms 751.034618ms 751.049938ms 751.061985ms 751.073827ms 751.088435ms 751.104286ms 751.125913ms 751.163197ms 751.225094ms 751.236461ms 751.333713ms 751.349149ms 751.426648ms 751.486513ms 751.540864ms 751.744529ms 751.753083ms 751.790046ms 751.793218ms 751.968414ms 752.007681ms 752.027511ms 752.139952ms 752.177426ms 752.216658ms 752.272287ms 752.388753ms 752.40674ms 752.407403ms 752.417235ms 752.7244ms 752.76828ms 752.873491ms 753.040143ms 753.314777ms]
  I1221 13:39:14.718413 19 service_latency.go:118] 50 %ile: 749.549985ms
  I1221 13:39:14.718419 19 service_latency.go:119] 90 %ile: 751.744529ms
  I1221 13:39:14.718428 19 service_latency.go:120] 99 %ile: 753.040143ms
  I1221 13:39:14.718433 19 service_latency.go:121] Total sample count: 200
  I1221 13:39:14.718520 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1355" for this suite. @ 12/21/24 13:39:14.723
• [10.768 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:104
  STEP: Creating a kubernetes client @ 12/21/24 13:39:14.731
  I1221 13:39:14.731691 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename resourcequota @ 12/21/24 13:39:14.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:39:14.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:39:14.752
  STEP: Counting existing ResourceQuota @ 12/21/24 13:39:14.754
  E1221 13:39:15.150439      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:16.151324      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:17.152014      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:18.152836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:19.152979      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/21/24 13:39:19.76
  STEP: Ensuring resource quota status is calculated @ 12/21/24 13:39:19.766
  E1221 13:39:20.154001      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:21.154110      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 12/21/24 13:39:21.771
  STEP: Creating a NodePort Service @ 12/21/24 13:39:21.792
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/21/24 13:39:21.813
  STEP: Ensuring resource quota status captures service creation @ 12/21/24 13:39:21.842
  E1221 13:39:22.154559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:23.154772      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 12/21/24 13:39:23.846
  STEP: Ensuring resource quota status released usage @ 12/21/24 13:39:23.897
  E1221 13:39:24.154868      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:25.154959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:25.901948 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5208" for this suite. @ 12/21/24 13:39:25.906
• [11.182 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/21/24 13:39:25.913
  I1221 13:39:25.913787 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename gc @ 12/21/24 13:39:25.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:39:25.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:39:25.935
  STEP: create the rc @ 12/21/24 13:39:25.94
  W1221 13:39:25.947656      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1221 13:39:26.155047      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:27.157227      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:28.178417      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:29.178491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:30.179280      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:31.179590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/21/24 13:39:31.953
  STEP: wait for the rc to be deleted @ 12/21/24 13:39:31.967
  E1221 13:39:32.179840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:32.994245 19 garbage_collector.go:670] 80 pods remaining
  I1221 13:39:32.994286 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1221 13:39:32.994297 19 garbage_collector.go:678] 
  E1221 13:39:33.179915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:33.982924 19 garbage_collector.go:670] 71 pods remaining
  I1221 13:39:33.982970 19 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1221 13:39:33.982976 19 garbage_collector.go:678] 
  E1221 13:39:34.180165      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:34.977241 19 garbage_collector.go:670] 60 pods remaining
  I1221 13:39:34.977268 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1221 13:39:34.977273 19 garbage_collector.go:678] 
  E1221 13:39:35.181072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:35.997247 19 garbage_collector.go:670] 40 pods remaining
  I1221 13:39:35.997283 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1221 13:39:35.997289 19 garbage_collector.go:678] 
  E1221 13:39:36.181162      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:36.988904 19 garbage_collector.go:670] 31 pods remaining
  I1221 13:39:36.988942 19 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1221 13:39:36.988951 19 garbage_collector.go:678] 
  E1221 13:39:37.181955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:37.976245 19 garbage_collector.go:670] 20 pods remaining
  I1221 13:39:37.976267 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1221 13:39:37.976272 19 garbage_collector.go:678] 
  E1221 13:39:38.182409      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/21/24 13:39:38.98
  W1221 13:39:38.984878      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1221 13:39:38.984910 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1221 13:39:38.985108 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1670" for this suite. @ 12/21/24 13:39:38.988
• [13.084 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/21/24 13:39:38.998
  I1221 13:39:38.998278 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:39:38.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:39:39.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:39:39.019
  STEP: Creating projection with secret that has name projected-secret-test-map-c3ea990b-b4b6-43aa-9e5f-02633fb5f361 @ 12/21/24 13:39:39.021
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:39:39.026
  E1221 13:39:39.183381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:40.183508      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:41.184517      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:42.184667      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:39:43.054
  I1221 13:39:43.058746 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-secrets-e17b7422-9efa-4124-8915-1b19116051fd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 13:39:43.068
  I1221 13:39:43.087308 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7471" for this suite. @ 12/21/24 13:39:43.091
• [4.100 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/21/24 13:39:43.098
  I1221 13:39:43.098561 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:39:43.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:39:43.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:39:43.119
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/21/24 13:39:43.121
  E1221 13:39:43.185351      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:44.185643      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:45.186670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:46.187553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:39:47.153
  I1221 13:39:47.156374 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-6bbbb51a-b8de-417a-9084-6905c0d7a2fe container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:39:47.163
  I1221 13:39:47.181384 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7310" for this suite. @ 12/21/24 13:39:47.184
  E1221 13:39:47.187928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [4.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:368
  STEP: Creating a kubernetes client @ 12/21/24 13:39:47.191
  I1221 13:39:47.191815 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:39:47.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:39:47.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:39:47.215
  STEP: Setting up server cert @ 12/21/24 13:39:47.241
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:39:47.564
  STEP: Deploying the webhook pod @ 12/21/24 13:39:47.575
  STEP: Wait for the deployment to be ready @ 12/21/24 13:39:47.585
  I1221 13:39:47.593806 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1221 13:39:48.188788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:49.188890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/21/24 13:39:49.607
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:39:49.617
  E1221 13:39:50.189046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:39:50.618451 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/21/24 13:39:50.626
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/21/24 13:39:50.626
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/21/24 13:39:50.639
  E1221 13:39:51.189490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/21/24 13:39:51.651
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/21/24 13:39:51.651
  E1221 13:39:52.189581      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 12/21/24 13:39:52.687
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/21/24 13:39:52.687
  E1221 13:39:53.190566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:54.190652      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:55.190887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:56.191094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:57.191575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/21/24 13:39:57.724
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/21/24 13:39:57.724
  E1221 13:39:58.192621      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:39:59.192863      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:00.193026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:01.193119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:02.193211      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:02.818089 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5195" for this suite. @ 12/21/24 13:40:02.823
  STEP: Destroying namespace "webhook-markers-6485" for this suite. @ 12/21/24 13:40:02.832
• [15.648 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:472
  STEP: Creating a kubernetes client @ 12/21/24 13:40:02.839
  I1221 13:40:02.839840 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename field-validation @ 12/21/24 13:40:02.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:02.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:02.861
  I1221 13:40:02.864539 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  E1221 13:40:03.194017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:04.194855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:05.194891      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1221 13:40:05.398310      19 warnings.go:70] unknown field "alpha"
  W1221 13:40:05.398348      19 warnings.go:70] unknown field "beta"
  W1221 13:40:05.398351      19 warnings.go:70] unknown field "delta"
  W1221 13:40:05.398358      19 warnings.go:70] unknown field "epsilon"
  W1221 13:40:05.398361      19 warnings.go:70] unknown field "gamma"
  I1221 13:40:05.947305 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-25" for this suite. @ 12/21/24 13:40:05.951
• [3.120 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/21/24 13:40:05.959
  I1221 13:40:05.959599 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:40:05.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:05.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:05.982
  STEP: Creating the pod @ 12/21/24 13:40:05.984
  E1221 13:40:06.195488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:07.196550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:08.196640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:08.535554 19 pod_client.go:173] Successfully updated pod "annotationupdate6a96de82-b6dc-46be-9bfa-3752f8a680ee"
  E1221 13:40:09.196787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:10.196909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:10.553066 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2223" for this suite. @ 12/21/24 13:40:10.557
• [4.606 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/21/24 13:40:10.566
  I1221 13:40:10.566080 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename replicaset @ 12/21/24 13:40:10.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:10.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:10.588
  I1221 13:40:10.589980 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-4af116e6-7a41-4cce-a852-3aebc57e07ca
  I1221 13:40:10.607315 19 resource.go:87] Pod name my-hostname-basic-4af116e6-7a41-4cce-a852-3aebc57e07ca: Found 0 pods out of 1
  E1221 13:40:11.197007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:12.197203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:13.197768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:14.197969      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:15.198048      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:15.611723 19 resource.go:87] Pod name my-hostname-basic-4af116e6-7a41-4cce-a852-3aebc57e07ca: Found 1 pods out of 1
  I1221 13:40:15.611761 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-4af116e6-7a41-4cce-a852-3aebc57e07ca" is running
  I1221 13:40:15.615293 19 replica_set.go:220] Pod "my-hostname-basic-4af116e6-7a41-4cce-a852-3aebc57e07ca-k58gn" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:40:11 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:40:10 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:40:11 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:40:11 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-21 13:40:10 +0000 UTC Reason: Message:}])
  I1221 13:40:15.615313 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/21/24 13:40:15.615
  I1221 13:40:15.625996 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4186" for this suite. @ 12/21/24 13:40:15.629
• [5.071 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:350
  STEP: Creating a kubernetes client @ 12/21/24 13:40:15.636
  I1221 13:40:15.636735 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 13:40:15.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:15.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:15.661
  STEP: creating a replication controller @ 12/21/24 13:40:15.663
  I1221 13:40:15.663277 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 create -f -'
  I1221 13:40:15.742035 19 builder.go:146] stderr: ""
  I1221 13:40:15.742074 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/21/24 13:40:15.742
  I1221 13:40:15.742154 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1221 13:40:15.787579 19 builder.go:146] stderr: ""
  I1221 13:40:15.787618 19 builder.go:147] stdout: "update-demo-nautilus-6tl7f update-demo-nautilus-dscvz "
  I1221 13:40:15.787651 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-6tl7f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 13:40:15.827998 19 builder.go:146] stderr: ""
  I1221 13:40:15.828034 19 builder.go:147] stdout: ""
  I1221 13:40:15.828043 19 kubectl.go:2502] update-demo-nautilus-6tl7f is created but not running
  E1221 13:40:16.199086      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:17.199168      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:18.199732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:19.199869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:20.199933      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:20.828486 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1221 13:40:20.874616 19 builder.go:146] stderr: ""
  I1221 13:40:20.874652 19 builder.go:147] stdout: "update-demo-nautilus-6tl7f update-demo-nautilus-dscvz "
  I1221 13:40:20.874766 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-6tl7f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 13:40:20.915511 19 builder.go:146] stderr: ""
  I1221 13:40:20.915551 19 builder.go:147] stdout: "true"
  I1221 13:40:20.915598 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-6tl7f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1221 13:40:20.956579 19 builder.go:146] stderr: ""
  I1221 13:40:20.956617 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1221 13:40:20.956628 19 kubectl.go:2393] validating pod update-demo-nautilus-6tl7f
  I1221 13:40:20.963965 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1221 13:40:20.964021 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1221 13:40:20.964032 19 kubectl.go:2520] update-demo-nautilus-6tl7f is verified up and running
  I1221 13:40:20.964067 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-dscvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 13:40:21.009891 19 builder.go:146] stderr: ""
  I1221 13:40:21.009936 19 builder.go:147] stdout: "true"
  I1221 13:40:21.009990 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-dscvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1221 13:40:21.051160 19 builder.go:146] stderr: ""
  I1221 13:40:21.051206 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1221 13:40:21.051219 19 kubectl.go:2393] validating pod update-demo-nautilus-dscvz
  I1221 13:40:21.056556 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1221 13:40:21.056608 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1221 13:40:21.056620 19 kubectl.go:2520] update-demo-nautilus-dscvz is verified up and running
  STEP: scaling down the replication controller @ 12/21/24 13:40:21.056
  I1221 13:40:21.057402 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1221 13:40:21.057431 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1221 13:40:21.200905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:22.119250 19 builder.go:146] stderr: ""
  I1221 13:40:22.119286 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/21/24 13:40:22.119
  I1221 13:40:22.119398 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1221 13:40:22.163894 19 builder.go:146] stderr: ""
  I1221 13:40:22.163942 19 builder.go:147] stdout: "update-demo-nautilus-6tl7f update-demo-nautilus-dscvz "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 12/21/24 13:40:22.163
  E1221 13:40:22.201126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:23.201848      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:24.202070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:25.202299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:26.202624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:27.164423 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1221 13:40:27.202807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:27.207997 19 builder.go:146] stderr: ""
  I1221 13:40:27.208034 19 builder.go:147] stdout: "update-demo-nautilus-dscvz "
  I1221 13:40:27.208079 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-dscvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 13:40:27.249364 19 builder.go:146] stderr: ""
  I1221 13:40:27.249395 19 builder.go:147] stdout: "true"
  I1221 13:40:27.249431 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-dscvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1221 13:40:27.290410 19 builder.go:146] stderr: ""
  I1221 13:40:27.290453 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1221 13:40:27.290463 19 kubectl.go:2393] validating pod update-demo-nautilus-dscvz
  I1221 13:40:27.296088 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1221 13:40:27.296129 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1221 13:40:27.296141 19 kubectl.go:2520] update-demo-nautilus-dscvz is verified up and running
  STEP: scaling up the replication controller @ 12/21/24 13:40:27.296
  I1221 13:40:27.296851 19 kubectl.go:319] scanned /root for discovery docs: <nil>
  I1221 13:40:27.296877 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1221 13:40:28.203700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:28.359576 19 builder.go:146] stderr: ""
  I1221 13:40:28.359620 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/21/24 13:40:28.359
  I1221 13:40:28.359706 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1221 13:40:28.403174 19 builder.go:146] stderr: ""
  I1221 13:40:28.403221 19 builder.go:147] stdout: "update-demo-nautilus-dscvz update-demo-nautilus-wxgw9 "
  I1221 13:40:28.403272 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-dscvz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 13:40:28.445193 19 builder.go:146] stderr: ""
  I1221 13:40:28.445234 19 builder.go:147] stdout: "true"
  I1221 13:40:28.445293 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-dscvz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1221 13:40:28.488817 19 builder.go:146] stderr: ""
  I1221 13:40:28.488855 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1221 13:40:28.488866 19 kubectl.go:2393] validating pod update-demo-nautilus-dscvz
  I1221 13:40:28.492927 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1221 13:40:28.492972 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1221 13:40:28.492982 19 kubectl.go:2520] update-demo-nautilus-dscvz is verified up and running
  I1221 13:40:28.493017 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-wxgw9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1221 13:40:28.533936 19 builder.go:146] stderr: ""
  I1221 13:40:28.533971 19 builder.go:147] stdout: "true"
  I1221 13:40:28.534022 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods update-demo-nautilus-wxgw9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1221 13:40:28.579885 19 builder.go:146] stderr: ""
  I1221 13:40:28.579931 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1221 13:40:28.579942 19 kubectl.go:2393] validating pod update-demo-nautilus-wxgw9
  I1221 13:40:28.585764 19 kubectl.go:2413] got data: {
    "image": "nautilus.jpg"
  }

  I1221 13:40:28.585801 19 kubectl.go:2418] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1221 13:40:28.585817 19 kubectl.go:2520] update-demo-nautilus-wxgw9 is verified up and running
  STEP: using delete to clean up resources @ 12/21/24 13:40:28.585
  I1221 13:40:28.586001 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 delete --grace-period=0 --force -f -'
  I1221 13:40:28.634404 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:40:28.634440 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1221 13:40:28.634489 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get rc,svc -l name=update-demo --no-headers'
  I1221 13:40:28.698225 19 builder.go:146] stderr: "No resources found in kubectl-3735 namespace.\n"
  I1221 13:40:28.698276 19 builder.go:147] stdout: ""
  I1221 13:40:28.698519 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-3735 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1221 13:40:28.763993 19 builder.go:146] stderr: ""
  I1221 13:40:28.764098 19 builder.go:147] stdout: ""
  I1221 13:40:28.764322 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3735" for this suite. @ 12/21/24 13:40:28.767
• [13.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/21/24 13:40:28.782
  I1221 13:40:28.782686 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename containers @ 12/21/24 13:40:28.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:28.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:28.821
  STEP: Creating a pod to test override command @ 12/21/24 13:40:28.822
  E1221 13:40:29.204494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:30.205237      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:31.206120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:32.206214      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:40:32.847
  I1221 13:40:32.851859 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod client-containers-7219cc3a-c997-4ca5-90c2-80a033c37b36 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:40:32.859
  I1221 13:40:32.879297 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-586" for this suite. @ 12/21/24 13:40:32.883
• [4.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/21/24 13:40:32.891
  I1221 13:40:32.891532 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 13:40:32.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:32.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:32.912
  STEP: Creating secret with name secret-test-map-54001deb-22be-4e9c-aee4-2ca513331599 @ 12/21/24 13:40:32.913
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:40:32.918
  E1221 13:40:33.206298      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:34.206525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:35.207552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:36.207655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:40:36.944
  I1221 13:40:36.947955 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-96fe67e5-0cfa-4dc7-b569-b6540952986b container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 13:40:36.956
  I1221 13:40:36.978085 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3690" for this suite. @ 12/21/24 13:40:36.982
• [4.099 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/21/24 13:40:36.99
  I1221 13:40:36.990796 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename endpointslice @ 12/21/24 13:40:36.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:37.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:37.012
  STEP: getting /apis @ 12/21/24 13:40:37.014
  STEP: getting /apis/discovery.k8s.io @ 12/21/24 13:40:37.017
  STEP: getting /apis/discovery.k8s.iov1 @ 12/21/24 13:40:37.018
  STEP: creating @ 12/21/24 13:40:37.018
  STEP: getting @ 12/21/24 13:40:37.032
  STEP: listing @ 12/21/24 13:40:37.035
  STEP: watching @ 12/21/24 13:40:37.039
  I1221 13:40:37.039223 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 12/21/24 13:40:37.039
  STEP: cluster-wide watching @ 12/21/24 13:40:37.043
  I1221 13:40:37.043568 19 endpointslice.go:459] starting watch
  STEP: patching @ 12/21/24 13:40:37.044
  STEP: updating @ 12/21/24 13:40:37.05
  I1221 13:40:37.058688 19 endpointslice.go:482] waiting for watch events with expected annotations
  I1221 13:40:37.058719 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 12/21/24 13:40:37.058
  STEP: deleting a collection @ 12/21/24 13:40:37.073
  I1221 13:40:37.092834 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8487" for this suite. @ 12/21/24 13:40:37.097
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/21/24 13:40:37.104
  I1221 13:40:37.104833 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename hostport @ 12/21/24 13:40:37.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:37.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:37.126
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/21/24 13:40:37.132
  E1221 13:40:37.208340      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:38.208717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.18.134 on the node which pod1 resides and expect scheduled @ 12/21/24 13:40:39.151
  E1221 13:40:39.209571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:40.209692      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.18.134 but use UDP protocol on the node which pod2 resides @ 12/21/24 13:40:41.166
  E1221 13:40:41.210085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:42.210204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:43.210445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:44.210659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/21/24 13:40:45.204
  I1221 13:40:45.204446 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.18.134 http://127.0.0.1:54323/hostname] Namespace:hostport-7736 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:40:45.204472 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:40:45.204930 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:40:45.204968 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7736/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.18.134+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1221 13:40:45.211513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.134, port: 54323 @ 12/21/24 13:40:45.247
  I1221 13:40:45.247906 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.18.134:54323/hostname] Namespace:hostport-7736 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:40:45.247922 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:40:45.248320 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:40:45.248414 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7736/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.18.134%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.18.134, port: 54323 UDP @ 12/21/24 13:40:45.288
  I1221 13:40:45.288605 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.18.134 54323] Namespace:hostport-7736 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:40:45.288622 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:40:45.289085 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:40:45.289159 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-7736/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.18.134+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1221 13:40:46.211746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:47.211839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:48.212892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:49.213070      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:50.213226      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:50.332740 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7736" for this suite. @ 12/21/24 13:40:50.338
• [13.242 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/21/24 13:40:50.346
  I1221 13:40:50.346801 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename events @ 12/21/24 13:40:50.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:50.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:50.37
  STEP: creating a test event @ 12/21/24 13:40:50.372
  STEP: listing events in all namespaces @ 12/21/24 13:40:50.38
  STEP: listing events in test namespace @ 12/21/24 13:40:50.384
  STEP: listing events with field selection filtering on source @ 12/21/24 13:40:50.388
  STEP: listing events with field selection filtering on reportingController @ 12/21/24 13:40:50.391
  STEP: getting the test event @ 12/21/24 13:40:50.395
  STEP: patching the test event @ 12/21/24 13:40:50.398
  STEP: getting the test event @ 12/21/24 13:40:50.409
  STEP: updating the test event @ 12/21/24 13:40:50.412
  STEP: getting the test event @ 12/21/24 13:40:50.42
  STEP: deleting the test event @ 12/21/24 13:40:50.422
  STEP: listing events in all namespaces @ 12/21/24 13:40:50.433
  STEP: listing events in test namespace @ 12/21/24 13:40:50.437
  I1221 13:40:50.440642 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8559" for this suite. @ 12/21/24 13:40:50.444
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/21/24 13:40:50.453
  I1221 13:40:50.453126 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 13:40:50.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:50.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:50.476
  STEP: creating the pod @ 12/21/24 13:40:50.477
  STEP: submitting the pod to kubernetes @ 12/21/24 13:40:50.477
  STEP: verifying QOS class is set on the pod @ 12/21/24 13:40:50.487
  I1221 13:40:50.491808 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3171" for this suite. @ 12/21/24 13:40:50.495
• [0.049 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:760
  STEP: Creating a kubernetes client @ 12/21/24 13:40:50.502
  I1221 13:40:50.502292 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:40:50.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:40:50.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:40:50.524
  STEP: creating service endpoint-test2 in namespace services-5524 @ 12/21/24 13:40:50.526
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5524 to expose endpoints map[] @ 12/21/24 13:40:50.541
  I1221 13:40:50.546050 19 service.go:4267] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1221 13:40:51.213905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:51.557104 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5524 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5524 @ 12/21/24 13:40:51.557
  E1221 13:40:52.214035      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:53.214472      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5524 to expose endpoints map[pod1:[80]] @ 12/21/24 13:40:53.58
  I1221 13:40:53.591206 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5524 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/21/24 13:40:53.591
  I1221 13:40:53.591257 19 resource.go:361] Creating new exec pod
  E1221 13:40:54.214527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:55.214674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:56.215187      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:56.609589 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5524 exec execpodr8gtn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1221 13:40:56.702130 19 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1221 13:40:56.702180 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:40:56.702293 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5524 exec execpodr8gtn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.19 80'
  I1221 13:40:56.780196 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.19 80\nConnection to 10.152.183.19 80 port [tcp/http] succeeded!\n"
  I1221 13:40:56.780244 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5524 @ 12/21/24 13:40:56.78
  E1221 13:40:57.215530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:40:58.216548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5524 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/21/24 13:40:58.801
  I1221 13:40:58.817574 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5524 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/21/24 13:40:58.817
  E1221 13:40:59.217445      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:40:59.818278 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5524 exec execpodr8gtn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1221 13:40:59.901999 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1221 13:40:59.902042 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:40:59.902117 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5524 exec execpodr8gtn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.19 80'
  I1221 13:40:59.981530 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.19 80\nConnection to 10.152.183.19 80 port [tcp/http] succeeded!\n"
  I1221 13:40:59.981577 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5524 @ 12/21/24 13:40:59.981
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5524 to expose endpoints map[pod2:[80]] @ 12/21/24 13:41:00.002
  E1221 13:41:00.217937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:01.023528 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5524 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/21/24 13:41:01.023
  E1221 13:41:01.218003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:02.024536 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5524 exec execpodr8gtn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1221 13:41:02.100709 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1221 13:41:02.100756 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1221 13:41:02.100835 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5524 exec execpodr8gtn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.19 80'
  I1221 13:41:02.180835 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.19 80\nConnection to 10.152.183.19 80 port [tcp/http] succeeded!\n"
  I1221 13:41:02.180876 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5524 @ 12/21/24 13:41:02.18
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5524 to expose endpoints map[] @ 12/21/24 13:41:02.198
  E1221 13:41:02.218408      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:03.212423 19 service.go:4299] successfully validated that service endpoint-test2 in namespace services-5524 exposes endpoints map[]
  E1221 13:41:03.218603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:03.234288 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5524" for this suite. @ 12/21/24 13:41:03.238
• [12.744 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/21/24 13:41:03.246
  I1221 13:41:03.246473 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:41:03.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:41:03.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:41:03.269
  STEP: Creating projection with secret that has name projected-secret-test-23e0fc0c-5032-4369-ba20-736ee815257c @ 12/21/24 13:41:03.271
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:41:03.277
  E1221 13:41:04.218829      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:05.218968      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:06.219109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:07.219454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:41:07.303
  I1221 13:41:07.307847 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-secrets-92782fc4-92d6-4b20-8c40-714b4efe9b1b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 13:41:07.315
  I1221 13:41:07.334760 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-262" for this suite. @ 12/21/24 13:41:07.339
• [4.102 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/21/24 13:41:07.348
  I1221 13:41:07.348537 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 13:41:07.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:41:07.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:41:07.369
  I1221 13:41:07.372245 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1221 13:41:07.380268 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1221 13:41:08.220476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:09.220700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:10.220892      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:11.221105      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:12.221315      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:12.385183 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/21/24 13:41:12.385
  I1221 13:41:12.385259 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1221 13:41:12.391186 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1221 13:41:12.398450 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E1221 13:41:13.222125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:14.222362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:14.408644 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1221 13:41:14.412898 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1221 13:41:14.424704 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6767",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abbdb92d-dc9b-461a-adda-2c5b5bc6b475",
      ResourceVersion: (string) (len=5) "41498",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-56bb5bb765\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1221 13:41:14.430242 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-56bb5bb765" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6767",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eec8f3c8-870e-410c-94d5-cf817c875fa1",
      ResourceVersion: (string) (len=5) "41488",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "abbdb92d-dc9b-461a-adda-2c5b5bc6b475",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 62 62 64 62 39  32 64 2d 64 63 39 62 2d  |\"abbdb92d-dc9b-|
              00000120  34 36 31 61 2d 61 64 64  61 2d 32 63 35 62 35 62  |461a-adda-2c5b5b|
              00000130  63 36 62 34 37 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c6b475\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:41:14.430705 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1221 13:41:14.430932 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6767",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6380d203-135e-4d9f-893e-f03b9e1c1dca",
      ResourceVersion: (string) (len=5) "41497",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385267,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "abbdb92d-dc9b-461a-adda-2c5b5bc6b475",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385267,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 62 62 64 62 39 32  |"uid\":\"abbdb92|
              000000b0  64 2d 64 63 39 62 2d 34  36 31 61 2d 61 64 64 61  |d-dc9b-461a-adda|
              000000c0  2d 32 63 35 62 35 62 63  36 62 34 37 35 5c 22 7d  |-2c5b5bc6b475\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:41:14.435922 19 deployment.go:67] Pod "test-rolling-update-deployment-56bb5bb765-qvq9v" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-56bb5bb765-qvq9v",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-56bb5bb765-",
      Namespace: (string) (len=15) "deployment-6767",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "733b1bcd-7ee7-4751-a4ad-4fc05318f52d",
      ResourceVersion: (string) (len=5) "41487",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "56bb5bb765"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-56bb5bb765",
          UID: (types.UID) (len=36) "eec8f3c8-870e-410c-94d5-cf817c875fa1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 65  63 38 66 33 63 38 2d 38  |d\":\"eec8f3c8-8|
              00000090  37 30 65 2d 34 31 30 63  2d 39 34 64 35 2d 63 66  |70e-410c-94d5-cf|
              000000a0  38 31 37 63 38 37 35 66  61 31 5c 22 7d 22 3a 7b  |817c875fa1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 38 32 5c 22 7d  |2.168.235.182\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bqknb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bqknb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385273,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385272,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.182",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.182"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385272,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870385272,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://af70b92ce281cc833f54a9395d76ea161f7ddcc1a99b11fa94dad8e629b3832c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-bqknb",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:41:14.436956 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6767" for this suite. @ 12/21/24 13:41:14.442
• [7.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:166
  STEP: Creating a kubernetes client @ 12/21/24 13:41:14.45
  I1221 13:41:14.450049 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename field-validation @ 12/21/24 13:41:14.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:41:14.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:41:14.469
  I1221 13:41:14.471369 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  E1221 13:41:15.222520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:16.222602      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  W1221 13:41:17.003182      19 warnings.go:70] unknown field "alpha"
  W1221 13:41:17.003204      19 warnings.go:70] unknown field "beta"
  W1221 13:41:17.003208      19 warnings.go:70] unknown field "delta"
  W1221 13:41:17.003211      19 warnings.go:70] unknown field "epsilon"
  W1221 13:41:17.003214      19 warnings.go:70] unknown field "gamma"
  E1221 13:41:17.222750      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:17.553456 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6896" for this suite. @ 12/21/24 13:41:17.557
• [3.115 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/21/24 13:41:17.565
  I1221 13:41:17.565134 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pod-network-test @ 12/21/24 13:41:17.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:41:17.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:41:17.587
  STEP: Performing setup for networking test in namespace pod-network-test-8190 @ 12/21/24 13:41:17.589
  STEP: creating a selector @ 12/21/24 13:41:17.589
  STEP: Creating the service pods in kubernetes @ 12/21/24 13:41:17.589
  I1221 13:41:17.589116 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1221 13:41:18.223655      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:19.223889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:20.224811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:21.225477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:22.226157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:23.226908      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:24.227218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:25.227477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:26.227564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:27.228556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:28.228767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:29.228978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:30.229941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:31.230572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:32.231564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:33.231860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:34.232043      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:35.232277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:36.233130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:37.233301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:38.234264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:39.235148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/21/24 13:41:39.735
  E1221 13:41:40.235428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:41.235737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:41:41.768496 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1221 13:41:41.768531 19 utils.go:496] Going to poll 192.168.235.174 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1221 13:41:41.772205 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.235.174:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8190 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:41:41.772226 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:41:41.772646 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:41:41.772703 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8190/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.235.174%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1221 13:41:41.810966 19 utils.go:513] Found all 1 expected endpoints: [netserver-0]
  I1221 13:41:41.811003 19 utils.go:496] Going to poll 192.168.200.56 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1221 13:41:41.815571 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.200.56:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8190 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:41:41.815592 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:41:41.816027 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:41:41.816106 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8190/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.200.56%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1221 13:41:41.858541 19 utils.go:513] Found all 1 expected endpoints: [netserver-1]
  I1221 13:41:41.858578 19 utils.go:496] Going to poll 192.168.78.6 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1221 13:41:41.863908 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.78.6:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-8190 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:41:41.863929 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:41:41.864348 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:41:41.864391 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8190/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.78.6%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1221 13:41:41.902616 19 utils.go:513] Found all 1 expected endpoints: [netserver-2]
  I1221 13:41:41.902735 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8190" for this suite. @ 12/21/24 13:41:41.906
• [24.351 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:221
  STEP: Creating a kubernetes client @ 12/21/24 13:41:41.916
  I1221 13:41:41.916232 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-preemption @ 12/21/24 13:41:41.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:41:41.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:41:41.937
  I1221 13:41:41.956120 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1221 13:41:42.236245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:43.236649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:44.237570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:45.237673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:46.238393      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:47.238474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:48.238637      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:49.238733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:50.239377      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:51.239478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:52.240052      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:53.240909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:54.240970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:55.241572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:56.242381      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:57.242480      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:58.243204      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:41:59.243394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:00.244350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:01.244449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:02.245087      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:03.245176      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:04.245282      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:05.245458      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:06.246348      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:07.246471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:08.246654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:09.247575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:10.248452      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:11.248694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:12.249344      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:13.249528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:14.249630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:15.249875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:16.250917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:17.251120      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:18.252142      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:19.252378      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:20.253256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:21.253502      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:22.254066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:23.254888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:24.255374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:25.255475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:26.256038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:27.256129      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:28.256518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:29.256617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:30.257524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:31.257639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:32.258459      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:33.258719      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:34.258934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:35.259148      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:36.259271      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:37.259481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:38.260216      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:39.260473      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:40.261495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:41.261717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:42:41.961489 19 util.go:393] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/21/24 13:42:41.965
  I1221 13:42:41.987842 19 preemption.go:266] Created pod: pod0-0-sched-preemption-low-priority
  I1221 13:42:41.994633 19 preemption.go:266] Created pod: pod0-1-sched-preemption-medium-priority
  I1221 13:42:42.011459 19 preemption.go:266] Created pod: pod1-0-sched-preemption-medium-priority
  I1221 13:42:42.020248 19 preemption.go:266] Created pod: pod1-1-sched-preemption-medium-priority
  I1221 13:42:42.041266 19 preemption.go:266] Created pod: pod2-0-sched-preemption-medium-priority
  I1221 13:42:42.052257 19 preemption.go:266] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/21/24 13:42:42.052
  E1221 13:42:42.261865      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:43.261934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/21/24 13:42:44.088
  E1221 13:42:44.263007      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:45.262591      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:42:46.197046 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9525" for this suite. @ 12/21/24 13:42:46.201
• [64.292 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/21/24 13:42:46.208
  I1221 13:42:46.208837 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 13:42:46.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:42:46.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:42:46.227
  STEP: Create a pod @ 12/21/24 13:42:46.229
  E1221 13:42:46.263275      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:47.263809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching /status @ 12/21/24 13:42:48.249
  I1221 13:42:48.258230 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1221 13:42:48.258364 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1156" for this suite. @ 12/21/24 13:42:48.263
  E1221 13:42:48.263866      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/21/24 13:42:48.271
  I1221 13:42:48.271806 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:42:48.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:42:48.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:42:48.294
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:42:48.295
  E1221 13:42:49.264020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:50.264403      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:51.264622      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:52.264753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:42:52.326
  I1221 13:42:52.329736 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod downwardapi-volume-bf5f0c5a-045f-4f16-be7a-5981bb86389f container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:42:52.342
  I1221 13:42:52.361080 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9460" for this suite. @ 12/21/24 13:42:52.364
• [4.100 seconds]
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:490
  STEP: Creating a kubernetes client @ 12/21/24 13:42:52.372
  I1221 13:42:52.372174 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename job @ 12/21/24 13:42:52.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:42:52.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:42:52.391
  STEP: Creating Indexed job @ 12/21/24 13:42:52.393
  STEP: Ensuring job reaches completions @ 12/21/24 13:42:52.399
  E1221 13:42:53.265697      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:54.265785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:55.266558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:56.267559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:57.267694      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:58.267950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:42:59.268106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:00.268286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:01.268560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:02.269563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 12/21/24 13:43:02.412
  I1221 13:43:02.417348 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8614" for this suite. @ 12/21/24 13:43:02.422
• [10.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/21/24 13:43:02.451
  I1221 13:43:02.451955 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename gc @ 12/21/24 13:43:02.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:43:02.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:43:02.482
  STEP: create the rc @ 12/21/24 13:43:02.488
  W1221 13:43:02.493818      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1221 13:43:03.270587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:04.271494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:05.271896      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:06.272881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:07.273820      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:08.274101      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/21/24 13:43:08.498
  STEP: wait for the rc to be deleted @ 12/21/24 13:43:08.504
  E1221 13:43:09.274279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:10.274490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:11.275560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:12.275632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:13.276554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/21/24 13:43:13.509
  E1221 13:43:14.277577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:15.277761      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:16.277953      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:17.278153      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:18.278961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:19.279183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:20.279424      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:21.279482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:22.279670      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:23.279853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:24.280049      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:25.280239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:26.280531      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:27.280640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:28.280842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:29.281090      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:30.281527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:31.281668      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:32.282053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:33.282188      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:34.282415      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:35.282614      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:36.282822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:37.282929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:38.283482      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:39.283764      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:40.283864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:41.284050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:42.284567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:43.284810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/21/24 13:43:43.519
  W1221 13:43:43.524427      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1221 13:43:43.524452 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1221 13:43:43.524502 19 delete.go:95] Deleting pod "simpletest.rc-22xbt" in namespace "gc-8309"
  I1221 13:43:43.542244 19 delete.go:95] Deleting pod "simpletest.rc-2kxjr" in namespace "gc-8309"
  I1221 13:43:43.559226 19 delete.go:95] Deleting pod "simpletest.rc-2lnld" in namespace "gc-8309"
  I1221 13:43:43.583491 19 delete.go:95] Deleting pod "simpletest.rc-2qvds" in namespace "gc-8309"
  I1221 13:43:43.600033 19 delete.go:95] Deleting pod "simpletest.rc-2rn44" in namespace "gc-8309"
  I1221 13:43:43.613748 19 delete.go:95] Deleting pod "simpletest.rc-2v58j" in namespace "gc-8309"
  I1221 13:43:43.630575 19 delete.go:95] Deleting pod "simpletest.rc-497mx" in namespace "gc-8309"
  I1221 13:43:43.647229 19 delete.go:95] Deleting pod "simpletest.rc-4g6bd" in namespace "gc-8309"
  I1221 13:43:43.659794 19 delete.go:95] Deleting pod "simpletest.rc-4pghv" in namespace "gc-8309"
  I1221 13:43:43.675400 19 delete.go:95] Deleting pod "simpletest.rc-5rsh5" in namespace "gc-8309"
  I1221 13:43:43.691272 19 delete.go:95] Deleting pod "simpletest.rc-6bbw4" in namespace "gc-8309"
  I1221 13:43:43.707029 19 delete.go:95] Deleting pod "simpletest.rc-6fn7r" in namespace "gc-8309"
  I1221 13:43:43.720525 19 delete.go:95] Deleting pod "simpletest.rc-6qjch" in namespace "gc-8309"
  I1221 13:43:43.734964 19 delete.go:95] Deleting pod "simpletest.rc-6v8vr" in namespace "gc-8309"
  I1221 13:43:43.752279 19 delete.go:95] Deleting pod "simpletest.rc-75df5" in namespace "gc-8309"
  I1221 13:43:43.768944 19 delete.go:95] Deleting pod "simpletest.rc-77rd2" in namespace "gc-8309"
  I1221 13:43:43.788816 19 delete.go:95] Deleting pod "simpletest.rc-78jsv" in namespace "gc-8309"
  I1221 13:43:43.809770 19 delete.go:95] Deleting pod "simpletest.rc-7bxl2" in namespace "gc-8309"
  I1221 13:43:43.834886 19 delete.go:95] Deleting pod "simpletest.rc-7fsgn" in namespace "gc-8309"
  I1221 13:43:43.856377 19 delete.go:95] Deleting pod "simpletest.rc-7kpr5" in namespace "gc-8309"
  I1221 13:43:43.871978 19 delete.go:95] Deleting pod "simpletest.rc-8pffh" in namespace "gc-8309"
  I1221 13:43:43.887124 19 delete.go:95] Deleting pod "simpletest.rc-8pxlt" in namespace "gc-8309"
  I1221 13:43:43.911247 19 delete.go:95] Deleting pod "simpletest.rc-8vpj5" in namespace "gc-8309"
  I1221 13:43:43.930513 19 delete.go:95] Deleting pod "simpletest.rc-92s2f" in namespace "gc-8309"
  I1221 13:43:43.952404 19 delete.go:95] Deleting pod "simpletest.rc-9ft72" in namespace "gc-8309"
  I1221 13:43:43.974464 19 delete.go:95] Deleting pod "simpletest.rc-9fwmt" in namespace "gc-8309"
  I1221 13:43:43.987114 19 delete.go:95] Deleting pod "simpletest.rc-9l5x7" in namespace "gc-8309"
  I1221 13:43:44.000568 19 delete.go:95] Deleting pod "simpletest.rc-9lgfw" in namespace "gc-8309"
  I1221 13:43:44.019442 19 delete.go:95] Deleting pod "simpletest.rc-b4mrf" in namespace "gc-8309"
  I1221 13:43:44.050364 19 delete.go:95] Deleting pod "simpletest.rc-b8fgv" in namespace "gc-8309"
  I1221 13:43:44.065892 19 delete.go:95] Deleting pod "simpletest.rc-bj29l" in namespace "gc-8309"
  I1221 13:43:44.083494 19 delete.go:95] Deleting pod "simpletest.rc-c82x8" in namespace "gc-8309"
  I1221 13:43:44.094456 19 delete.go:95] Deleting pod "simpletest.rc-cbm7g" in namespace "gc-8309"
  I1221 13:43:44.114751 19 delete.go:95] Deleting pod "simpletest.rc-cjnmm" in namespace "gc-8309"
  I1221 13:43:44.145122 19 delete.go:95] Deleting pod "simpletest.rc-cmvvf" in namespace "gc-8309"
  I1221 13:43:44.159379 19 delete.go:95] Deleting pod "simpletest.rc-dpc5k" in namespace "gc-8309"
  I1221 13:43:44.180569 19 delete.go:95] Deleting pod "simpletest.rc-dvwxz" in namespace "gc-8309"
  I1221 13:43:44.204898 19 delete.go:95] Deleting pod "simpletest.rc-dwzph" in namespace "gc-8309"
  I1221 13:43:44.239908 19 delete.go:95] Deleting pod "simpletest.rc-f59dp" in namespace "gc-8309"
  I1221 13:43:44.261918 19 delete.go:95] Deleting pod "simpletest.rc-fk25z" in namespace "gc-8309"
  I1221 13:43:44.281578 19 delete.go:95] Deleting pod "simpletest.rc-fwmtv" in namespace "gc-8309"
  E1221 13:43:44.285795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:44.307674 19 delete.go:95] Deleting pod "simpletest.rc-g48n7" in namespace "gc-8309"
  I1221 13:43:44.332035 19 delete.go:95] Deleting pod "simpletest.rc-gf8jd" in namespace "gc-8309"
  I1221 13:43:44.356424 19 delete.go:95] Deleting pod "simpletest.rc-gj9cc" in namespace "gc-8309"
  I1221 13:43:44.375325 19 delete.go:95] Deleting pod "simpletest.rc-gkmt8" in namespace "gc-8309"
  I1221 13:43:44.391854 19 delete.go:95] Deleting pod "simpletest.rc-gql9p" in namespace "gc-8309"
  I1221 13:43:44.409563 19 delete.go:95] Deleting pod "simpletest.rc-gr6jz" in namespace "gc-8309"
  I1221 13:43:44.425535 19 delete.go:95] Deleting pod "simpletest.rc-gspb9" in namespace "gc-8309"
  I1221 13:43:44.443056 19 delete.go:95] Deleting pod "simpletest.rc-gspf6" in namespace "gc-8309"
  I1221 13:43:44.458072 19 delete.go:95] Deleting pod "simpletest.rc-gtpsm" in namespace "gc-8309"
  I1221 13:43:44.476185 19 delete.go:95] Deleting pod "simpletest.rc-gxkw4" in namespace "gc-8309"
  I1221 13:43:44.498837 19 delete.go:95] Deleting pod "simpletest.rc-hq6gw" in namespace "gc-8309"
  I1221 13:43:44.514874 19 delete.go:95] Deleting pod "simpletest.rc-hwx98" in namespace "gc-8309"
  I1221 13:43:44.532702 19 delete.go:95] Deleting pod "simpletest.rc-jhp56" in namespace "gc-8309"
  I1221 13:43:44.547825 19 delete.go:95] Deleting pod "simpletest.rc-jn56l" in namespace "gc-8309"
  I1221 13:43:44.571032 19 delete.go:95] Deleting pod "simpletest.rc-jpz56" in namespace "gc-8309"
  I1221 13:43:44.586151 19 delete.go:95] Deleting pod "simpletest.rc-kftts" in namespace "gc-8309"
  I1221 13:43:44.605897 19 delete.go:95] Deleting pod "simpletest.rc-kmnfs" in namespace "gc-8309"
  I1221 13:43:44.625716 19 delete.go:95] Deleting pod "simpletest.rc-kqmf7" in namespace "gc-8309"
  I1221 13:43:44.647564 19 delete.go:95] Deleting pod "simpletest.rc-ks69r" in namespace "gc-8309"
  I1221 13:43:44.674045 19 delete.go:95] Deleting pod "simpletest.rc-kt5wr" in namespace "gc-8309"
  I1221 13:43:44.691832 19 delete.go:95] Deleting pod "simpletest.rc-ljt7v" in namespace "gc-8309"
  I1221 13:43:44.705654 19 delete.go:95] Deleting pod "simpletest.rc-lssdp" in namespace "gc-8309"
  I1221 13:43:44.723399 19 delete.go:95] Deleting pod "simpletest.rc-m5sx9" in namespace "gc-8309"
  I1221 13:43:44.741010 19 delete.go:95] Deleting pod "simpletest.rc-mk4zc" in namespace "gc-8309"
  I1221 13:43:44.758638 19 delete.go:95] Deleting pod "simpletest.rc-mkfhb" in namespace "gc-8309"
  I1221 13:43:44.776438 19 delete.go:95] Deleting pod "simpletest.rc-ncwdq" in namespace "gc-8309"
  I1221 13:43:44.793901 19 delete.go:95] Deleting pod "simpletest.rc-nmt92" in namespace "gc-8309"
  I1221 13:43:44.809365 19 delete.go:95] Deleting pod "simpletest.rc-phpm7" in namespace "gc-8309"
  I1221 13:43:44.829078 19 delete.go:95] Deleting pod "simpletest.rc-pj5q5" in namespace "gc-8309"
  I1221 13:43:44.846709 19 delete.go:95] Deleting pod "simpletest.rc-pm8gj" in namespace "gc-8309"
  I1221 13:43:44.864756 19 delete.go:95] Deleting pod "simpletest.rc-pr2zk" in namespace "gc-8309"
  I1221 13:43:44.881860 19 delete.go:95] Deleting pod "simpletest.rc-pzdxp" in namespace "gc-8309"
  I1221 13:43:44.892621 19 delete.go:95] Deleting pod "simpletest.rc-q4wvs" in namespace "gc-8309"
  I1221 13:43:44.907545 19 delete.go:95] Deleting pod "simpletest.rc-qcbkd" in namespace "gc-8309"
  I1221 13:43:44.926369 19 delete.go:95] Deleting pod "simpletest.rc-qmlkl" in namespace "gc-8309"
  I1221 13:43:44.943949 19 delete.go:95] Deleting pod "simpletest.rc-rcb2j" in namespace "gc-8309"
  I1221 13:43:44.974793 19 delete.go:95] Deleting pod "simpletest.rc-rgzqn" in namespace "gc-8309"
  I1221 13:43:45.027516 19 delete.go:95] Deleting pod "simpletest.rc-sccgh" in namespace "gc-8309"
  I1221 13:43:45.077853 19 delete.go:95] Deleting pod "simpletest.rc-sq7v4" in namespace "gc-8309"
  I1221 13:43:45.126516 19 delete.go:95] Deleting pod "simpletest.rc-t9bm4" in namespace "gc-8309"
  I1221 13:43:45.175058 19 delete.go:95] Deleting pod "simpletest.rc-tkq5q" in namespace "gc-8309"
  I1221 13:43:45.226007 19 delete.go:95] Deleting pod "simpletest.rc-tqks7" in namespace "gc-8309"
  E1221 13:43:45.287572      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:45.287645 19 delete.go:95] Deleting pod "simpletest.rc-tz8r8" in namespace "gc-8309"
  I1221 13:43:45.326877 19 delete.go:95] Deleting pod "simpletest.rc-v8p5x" in namespace "gc-8309"
  I1221 13:43:45.377452 19 delete.go:95] Deleting pod "simpletest.rc-vbt44" in namespace "gc-8309"
  I1221 13:43:45.426881 19 delete.go:95] Deleting pod "simpletest.rc-vg9dz" in namespace "gc-8309"
  I1221 13:43:45.478057 19 delete.go:95] Deleting pod "simpletest.rc-vq6sx" in namespace "gc-8309"
  I1221 13:43:45.526793 19 delete.go:95] Deleting pod "simpletest.rc-vzjw8" in namespace "gc-8309"
  I1221 13:43:45.571756 19 delete.go:95] Deleting pod "simpletest.rc-wdckf" in namespace "gc-8309"
  I1221 13:43:45.626603 19 delete.go:95] Deleting pod "simpletest.rc-wmqrf" in namespace "gc-8309"
  I1221 13:43:45.687601 19 delete.go:95] Deleting pod "simpletest.rc-wpglg" in namespace "gc-8309"
  I1221 13:43:45.726374 19 delete.go:95] Deleting pod "simpletest.rc-xgv9v" in namespace "gc-8309"
  I1221 13:43:45.778245 19 delete.go:95] Deleting pod "simpletest.rc-xh7l6" in namespace "gc-8309"
  I1221 13:43:45.830117 19 delete.go:95] Deleting pod "simpletest.rc-xnwh2" in namespace "gc-8309"
  I1221 13:43:45.876275 19 delete.go:95] Deleting pod "simpletest.rc-z6f62" in namespace "gc-8309"
  I1221 13:43:45.926699 19 delete.go:95] Deleting pod "simpletest.rc-zhpcq" in namespace "gc-8309"
  I1221 13:43:45.976555 19 delete.go:95] Deleting pod "simpletest.rc-zpj8c" in namespace "gc-8309"
  I1221 13:43:46.027915 19 delete.go:95] Deleting pod "simpletest.rc-ztzjm" in namespace "gc-8309"
  I1221 13:43:46.083962 19 delete.go:95] Deleting pod "simpletest.rc-zwj7k" in namespace "gc-8309"
  I1221 13:43:46.127376 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8309" for this suite. @ 12/21/24 13:43:46.166
• [43.772 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/21/24 13:43:46.23
  I1221 13:43:46.230574 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename events @ 12/21/24 13:43:46.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:43:46.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:43:46.275
  STEP: creating a test event @ 12/21/24 13:43:46.277
  STEP: listing all events in all namespaces @ 12/21/24 13:43:46.282
  E1221 13:43:46.288277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: patching the test event @ 12/21/24 13:43:46.289
  STEP: fetching the test event @ 12/21/24 13:43:46.299
  STEP: updating the test event @ 12/21/24 13:43:46.307
  STEP: getting the test event @ 12/21/24 13:43:46.317
  STEP: deleting the test event @ 12/21/24 13:43:46.324
  STEP: listing all events in all namespaces @ 12/21/24 13:43:46.336
  I1221 13:43:46.348103 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5099" for this suite. @ 12/21/24 13:43:46.351
• [0.129 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/21/24 13:43:46.359
  I1221 13:43:46.359899 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename proxy @ 12/21/24 13:43:46.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:43:46.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:43:46.381
  STEP: starting an echo server on multiple ports @ 12/21/24 13:43:46.395
  STEP: creating replication controller proxy-service-kthgq in namespace proxy-5129 @ 12/21/24 13:43:46.396
  I1221 13:43:46.405442      19 runners.go:193] Created replication controller with name: proxy-service-kthgq, namespace: proxy-5129, replica count: 1
  E1221 13:43:47.290870      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:47.456804      19 runners.go:193] proxy-service-kthgq Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1221 13:43:48.290946      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:48.457345      19 runners.go:193] proxy-service-kthgq Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1221 13:43:49.291513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:49.457907      19 runners.go:193] proxy-service-kthgq Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1221 13:43:50.292464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:50.458841      19 runners.go:193] proxy-service-kthgq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 13:43:50.464098 19 proxy.go:230] setup took 4.080344739s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/21/24 13:43:50.464
  I1221 13:43:50.469658 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 5.369976ms)
  I1221 13:43:50.469668 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.436918ms)
  I1221 13:43:50.472368 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 7.916721ms)
  I1221 13:43:50.472379 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 8.072197ms)
  I1221 13:43:50.472368 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 7.84717ms)
  I1221 13:43:50.472390 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 7.817714ms)
  I1221 13:43:50.472531 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 8.037331ms)
  I1221 13:43:50.473165 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 8.982589ms)
  I1221 13:43:50.473777 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 9.400202ms)
  I1221 13:43:50.473782 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 9.228789ms)
  I1221 13:43:50.475759 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 11.322845ms)
  I1221 13:43:50.475767 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 11.418174ms)
  I1221 13:43:50.475948 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 11.411618ms)
  I1221 13:43:50.475957 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 11.481775ms)
  I1221 13:43:50.475969 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 11.574193ms)
  I1221 13:43:50.475972 19 proxy.go:558] (0) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 11.558156ms)
  I1221 13:43:50.480116 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 4.008647ms)
  I1221 13:43:50.480133 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.06559ms)
  I1221 13:43:50.480514 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 4.521978ms)
  I1221 13:43:50.480717 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.410897ms)
  I1221 13:43:50.480993 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 4.638681ms)
  I1221 13:43:50.481788 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 5.621321ms)
  I1221 13:43:50.481996 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.612157ms)
  I1221 13:43:50.482041 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.718543ms)
  I1221 13:43:50.482063 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 5.847425ms)
  I1221 13:43:50.482127 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 6.004958ms)
  I1221 13:43:50.483042 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 6.801329ms)
  I1221 13:43:50.483380 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.105398ms)
  I1221 13:43:50.483964 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 7.676304ms)
  I1221 13:43:50.483980 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.722642ms)
  I1221 13:43:50.484974 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 8.784774ms)
  I1221 13:43:50.485251 19 proxy.go:558] (1) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 8.881643ms)
  I1221 13:43:50.489111 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 3.8019ms)
  I1221 13:43:50.489135 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 3.782384ms)
  I1221 13:43:50.489139 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 3.8711ms)
  I1221 13:43:50.490548 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 4.95138ms)
  I1221 13:43:50.490973 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.500069ms)
  I1221 13:43:50.491268 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.65388ms)
  I1221 13:43:50.491425 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 5.864518ms)
  I1221 13:43:50.491427 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.916978ms)
  I1221 13:43:50.491745 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 6.290509ms)
  I1221 13:43:50.491834 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 6.347476ms)
  I1221 13:43:50.492137 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 6.761197ms)
  I1221 13:43:50.492536 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.120542ms)
  I1221 13:43:50.492794 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 7.250401ms)
  I1221 13:43:50.492962 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.572467ms)
  I1221 13:43:50.494112 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 8.678237ms)
  I1221 13:43:50.494646 19 proxy.go:558] (2) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 9.118062ms)
  I1221 13:43:50.498142 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 3.472742ms)
  I1221 13:43:50.498896 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 4.163505ms)
  I1221 13:43:50.498916 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 4.18902ms)
  I1221 13:43:50.499311 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 4.542987ms)
  I1221 13:43:50.500317 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 5.33955ms)
  I1221 13:43:50.500378 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 5.550442ms)
  I1221 13:43:50.500378 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 5.481128ms)
  I1221 13:43:50.500485 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.658424ms)
  I1221 13:43:50.500673 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.824096ms)
  I1221 13:43:50.500857 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 6.073179ms)
  I1221 13:43:50.501645 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 6.764719ms)
  I1221 13:43:50.502218 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.306148ms)
  I1221 13:43:50.502522 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.574413ms)
  I1221 13:43:50.502971 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 8.10951ms)
  I1221 13:43:50.503256 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 8.292752ms)
  I1221 13:43:50.504079 19 proxy.go:558] (3) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 9.150629ms)
  I1221 13:43:50.508478 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.320237ms)
  I1221 13:43:50.508507 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 4.396492ms)
  I1221 13:43:50.508611 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 4.510075ms)
  I1221 13:43:50.509180 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 4.852944ms)
  I1221 13:43:50.509181 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 4.908383ms)
  I1221 13:43:50.510524 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 6.235256ms)
  I1221 13:43:50.510529 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 6.270533ms)
  I1221 13:43:50.510542 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 6.153487ms)
  I1221 13:43:50.510556 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 6.238946ms)
  I1221 13:43:50.510613 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 6.436938ms)
  I1221 13:43:50.511289 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 7.093039ms)
  I1221 13:43:50.512099 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 7.726007ms)
  I1221 13:43:50.512106 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.892204ms)
  I1221 13:43:50.512219 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 7.865144ms)
  I1221 13:43:50.513441 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 9.212009ms)
  I1221 13:43:50.513459 19 proxy.go:558] (4) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 9.215236ms)
  I1221 13:43:50.517558 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 4.012663ms)
  I1221 13:43:50.517568 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.042596ms)
  I1221 13:43:50.517694 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 4.115939ms)
  I1221 13:43:50.518445 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 4.733135ms)
  I1221 13:43:50.518729 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 4.967038ms)
  I1221 13:43:50.519261 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 5.78148ms)
  I1221 13:43:50.519305 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.61321ms)
  I1221 13:43:50.519546 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 5.801999ms)
  I1221 13:43:50.519560 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.781746ms)
  I1221 13:43:50.519586 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.96827ms)
  I1221 13:43:50.519736 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.945634ms)
  I1221 13:43:50.520914 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.281309ms)
  I1221 13:43:50.521145 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 7.469274ms)
  I1221 13:43:50.521180 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 7.455955ms)
  I1221 13:43:50.522450 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 8.855342ms)
  I1221 13:43:50.522716 19 proxy.go:558] (5) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 9.05873ms)
  I1221 13:43:50.526542 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 3.803487ms)
  I1221 13:43:50.526566 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 3.777373ms)
  I1221 13:43:50.526588 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 3.782021ms)
  I1221 13:43:50.527428 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.451542ms)
  I1221 13:43:50.528119 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 5.20415ms)
  I1221 13:43:50.528425 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.59232ms)
  I1221 13:43:50.528802 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.872964ms)
  I1221 13:43:50.528872 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.878422ms)
  I1221 13:43:50.528880 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 6.029757ms)
  I1221 13:43:50.528955 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 6.087659ms)
  I1221 13:43:50.530008 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 7.064953ms)
  I1221 13:43:50.530080 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.073153ms)
  I1221 13:43:50.530978 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.956845ms)
  I1221 13:43:50.531137 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 8.173431ms)
  I1221 13:43:50.531599 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 8.716172ms)
  I1221 13:43:50.532884 19 proxy.go:558] (6) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 9.982643ms)
  I1221 13:43:50.536475 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 3.515035ms)
  I1221 13:43:50.536767 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 3.726138ms)
  I1221 13:43:50.537246 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 4.171076ms)
  I1221 13:43:50.537501 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 4.377059ms)
  I1221 13:43:50.538049 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.808242ms)
  I1221 13:43:50.538241 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.085163ms)
  I1221 13:43:50.538354 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.215033ms)
  I1221 13:43:50.538374 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.148313ms)
  I1221 13:43:50.538620 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.517443ms)
  I1221 13:43:50.538756 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.666696ms)
  I1221 13:43:50.539316 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 6.117251ms)
  I1221 13:43:50.540072 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 6.901853ms)
  I1221 13:43:50.540083 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.158268ms)
  I1221 13:43:50.540673 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 7.487785ms)
  I1221 13:43:50.541646 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 8.386992ms)
  I1221 13:43:50.541764 19 proxy.go:558] (7) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 8.552283ms)
  I1221 13:43:50.545385 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 3.601396ms)
  I1221 13:43:50.546397 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 4.426198ms)
  I1221 13:43:50.547446 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.508178ms)
  I1221 13:43:50.547446 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.489589ms)
  I1221 13:43:50.547501 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 5.487701ms)
  I1221 13:43:50.547923 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 5.894854ms)
  I1221 13:43:50.547939 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 6.147007ms)
  I1221 13:43:50.547950 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 6.045184ms)
  I1221 13:43:50.548057 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 6.01531ms)
  I1221 13:43:50.548388 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 6.465752ms)
  I1221 13:43:50.548669 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 6.780382ms)
  I1221 13:43:50.549134 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.288725ms)
  I1221 13:43:50.549191 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 7.208218ms)
  I1221 13:43:50.549443 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 7.444364ms)
  I1221 13:43:50.551196 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 9.135023ms)
  I1221 13:43:50.551467 19 proxy.go:558] (8) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 9.594705ms)
  I1221 13:43:50.555056 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 3.549086ms)
  I1221 13:43:50.555107 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 3.542523ms)
  I1221 13:43:50.555289 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 3.741425ms)
  I1221 13:43:50.556197 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 4.40847ms)
  I1221 13:43:50.556240 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 4.658529ms)
  I1221 13:43:50.556341 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.81471ms)
  I1221 13:43:50.556940 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.110059ms)
  I1221 13:43:50.557158 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.356105ms)
  I1221 13:43:50.557470 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.806011ms)
  I1221 13:43:50.557661 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 5.926988ms)
  I1221 13:43:50.558152 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 6.431281ms)
  I1221 13:43:50.558698 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 7.014422ms)
  I1221 13:43:50.558989 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 7.218773ms)
  I1221 13:43:50.559461 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 7.814274ms)
  I1221 13:43:50.559654 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.900874ms)
  I1221 13:43:50.560771 19 proxy.go:558] (9) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 9.070758ms)
  I1221 13:43:50.564439 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 3.640432ms)
  I1221 13:43:50.564535 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 3.690694ms)
  I1221 13:43:50.564535 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 3.667233ms)
  I1221 13:43:50.566509 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.599988ms)
  I1221 13:43:50.566507 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 5.404564ms)
  I1221 13:43:50.566663 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 5.573371ms)
  I1221 13:43:50.567229 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 6.280787ms)
  I1221 13:43:50.567309 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 6.327712ms)
  I1221 13:43:50.567363 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 6.432174ms)
  I1221 13:43:50.567410 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 6.518143ms)
  I1221 13:43:50.568025 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 7.028951ms)
  I1221 13:43:50.568026 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 6.972139ms)
  I1221 13:43:50.568323 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 7.35484ms)
  I1221 13:43:50.568371 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.335543ms)
  I1221 13:43:50.569435 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 8.362827ms)
  I1221 13:43:50.569647 19 proxy.go:558] (10) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 8.628533ms)
  I1221 13:43:50.582456 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 12.790174ms)
  I1221 13:43:50.588048 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 18.341979ms)
  I1221 13:43:50.591214 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 21.377845ms)
  I1221 13:43:50.591214 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 21.466561ms)
  I1221 13:43:50.591913 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 22.185751ms)
  I1221 13:43:50.593274 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 23.305651ms)
  I1221 13:43:50.593274 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 23.408317ms)
  I1221 13:43:50.597402 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 27.548363ms)
  I1221 13:43:50.597827 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 28.065335ms)
  I1221 13:43:50.597967 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 28.156547ms)
  I1221 13:43:50.597998 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 28.045807ms)
  I1221 13:43:50.598013 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 28.112811ms)
  I1221 13:43:50.599601 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 29.664898ms)
  I1221 13:43:50.600483 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 30.697492ms)
  I1221 13:43:50.600744 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 30.858959ms)
  I1221 13:43:50.600902 19 proxy.go:558] (11) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 30.986649ms)
  I1221 13:43:50.609980 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 8.780337ms)
  I1221 13:43:50.619446 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 18.218534ms)
  I1221 13:43:50.619446 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 18.520792ms)
  I1221 13:43:50.619465 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 18.468923ms)
  I1221 13:43:50.619483 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 18.437802ms)
  I1221 13:43:50.619485 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 18.304167ms)
  I1221 13:43:50.619493 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 18.47041ms)
  I1221 13:43:50.622502 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 21.366805ms)
  I1221 13:43:50.622515 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 21.430449ms)
  I1221 13:43:50.622498 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 21.525749ms)
  I1221 13:43:50.622525 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 21.315241ms)
  I1221 13:43:50.628279 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 27.126696ms)
  I1221 13:43:50.628301 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 27.197006ms)
  I1221 13:43:50.628501 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 27.379671ms)
  I1221 13:43:50.628708 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 27.541524ms)
  I1221 13:43:50.628998 19 proxy.go:558] (12) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 27.936534ms)
  I1221 13:43:50.646214 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 16.938848ms)
  I1221 13:43:50.646894 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 17.738299ms)
  I1221 13:43:50.648076 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 18.847104ms)
  I1221 13:43:50.648076 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 18.994981ms)
  I1221 13:43:50.651990 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 22.702289ms)
  I1221 13:43:50.655449 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 26.298078ms)
  I1221 13:43:50.655447 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 26.274667ms)
  I1221 13:43:50.655487 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 26.186572ms)
  I1221 13:43:50.656654 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 27.41021ms)
  I1221 13:43:50.658007 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 28.952578ms)
  I1221 13:43:50.658393 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 29.131764ms)
  I1221 13:43:50.658489 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 29.366369ms)
  I1221 13:43:50.658506 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 29.290734ms)
  I1221 13:43:50.658555 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 29.536658ms)
  I1221 13:43:50.658681 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 29.479894ms)
  I1221 13:43:50.658840 19 proxy.go:558] (13) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 29.655822ms)
  I1221 13:43:50.663437 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 4.521232ms)
  I1221 13:43:50.663920 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 5.059155ms)
  I1221 13:43:50.663925 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.005941ms)
  I1221 13:43:50.664954 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 5.978409ms)
  I1221 13:43:50.665206 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 6.342651ms)
  I1221 13:43:50.666109 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 7.059242ms)
  I1221 13:43:50.666121 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 7.038108ms)
  I1221 13:43:50.667362 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 8.291416ms)
  I1221 13:43:50.667371 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 8.436304ms)
  I1221 13:43:50.667568 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 8.544937ms)
  I1221 13:43:50.667738 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 8.777328ms)
  I1221 13:43:50.668121 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 9.001146ms)
  I1221 13:43:50.668124 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 9.088034ms)
  I1221 13:43:50.668252 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 9.244508ms)
  I1221 13:43:50.668729 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 9.737298ms)
  I1221 13:43:50.670700 19 proxy.go:558] (14) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 11.600093ms)
  I1221 13:43:50.674212 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 3.482177ms)
  I1221 13:43:50.674531 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 3.802031ms)
  I1221 13:43:50.674549 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 3.788867ms)
  I1221 13:43:50.675304 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 4.445876ms)
  I1221 13:43:50.675371 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 4.594285ms)
  I1221 13:43:50.675902 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 4.920284ms)
  I1221 13:43:50.676481 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.608265ms)
  I1221 13:43:50.676688 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 5.897058ms)
  I1221 13:43:50.676707 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.753777ms)
  I1221 13:43:50.676720 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.819089ms)
  I1221 13:43:50.677739 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 6.900678ms)
  I1221 13:43:50.677990 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.103105ms)
  I1221 13:43:50.678005 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 7.197512ms)
  I1221 13:43:50.678885 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 7.970036ms)
  I1221 13:43:50.679251 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 8.313917ms)
  I1221 13:43:50.679567 19 proxy.go:558] (15) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 8.599999ms)
  I1221 13:43:50.683449 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 3.852474ms)
  I1221 13:43:50.683673 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 4.003036ms)
  I1221 13:43:50.683699 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 3.927003ms)
  I1221 13:43:50.684510 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.671467ms)
  I1221 13:43:50.684726 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 4.921595ms)
  I1221 13:43:50.685084 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.211504ms)
  I1221 13:43:50.685237 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.48506ms)
  I1221 13:43:50.685239 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.337274ms)
  I1221 13:43:50.686044 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 6.395322ms)
  I1221 13:43:50.686249 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 6.362812ms)
  I1221 13:43:50.686425 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 6.603706ms)
  I1221 13:43:50.687301 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.565242ms)
  I1221 13:43:50.687466 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.754556ms)
  I1221 13:43:50.687701 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 7.911073ms)
  I1221 13:43:50.688596 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 8.901341ms)
  I1221 13:43:50.689806 19 proxy.go:558] (16) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 9.940936ms)
  I1221 13:43:50.693652 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 3.728409ms)
  I1221 13:43:50.693940 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 3.992336ms)
  I1221 13:43:50.694360 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 4.261053ms)
  I1221 13:43:50.694903 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 4.84794ms)
  I1221 13:43:50.695587 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.432505ms)
  I1221 13:43:50.696257 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 6.170426ms)
  I1221 13:43:50.696242 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 6.114484ms)
  I1221 13:43:50.696283 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 6.214871ms)
  I1221 13:43:50.696320 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 6.481135ms)
  I1221 13:43:50.696627 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 6.487344ms)
  I1221 13:43:50.696856 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 6.888798ms)
  I1221 13:43:50.697462 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.446183ms)
  I1221 13:43:50.697843 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 7.841279ms)
  I1221 13:43:50.697843 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 7.807036ms)
  I1221 13:43:50.699211 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 9.224305ms)
  I1221 13:43:50.699641 19 proxy.go:558] (17) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 9.5295ms)
  I1221 13:43:50.703111 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 3.433652ms)
  I1221 13:43:50.703798 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 4.097659ms)
  I1221 13:43:50.703915 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 4.134807ms)
  I1221 13:43:50.704144 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 4.378312ms)
  I1221 13:43:50.705038 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.161372ms)
  I1221 13:43:50.705385 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 5.479785ms)
  I1221 13:43:50.705752 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.925265ms)
  I1221 13:43:50.705845 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 6.180481ms)
  I1221 13:43:50.705932 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 6.133265ms)
  I1221 13:43:50.706079 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 6.216978ms)
  I1221 13:43:50.706667 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 6.95008ms)
  I1221 13:43:50.707086 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 7.19784ms)
  I1221 13:43:50.707390 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 7.576785ms)
  I1221 13:43:50.707953 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 8.108532ms)
  I1221 13:43:50.708209 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 8.478707ms)
  I1221 13:43:50.709125 19 proxy.go:558] (18) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 9.381216ms)
  I1221 13:43:50.712844 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:162/proxy/: bar (200; 3.658738ms)
  I1221 13:43:50.713125 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:1080/proxy/rewriteme">... (200; 3.981238ms)
  I1221 13:43:50.713215 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:462/proxy/: tls qux (200; 4.000059ms)
  I1221 13:43:50.714506 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:443/proxy/tlsrewritem... (200; 5.087405ms)
  I1221 13:43:50.714627 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/http:proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.269545ms)
  I1221 13:43:50.714953 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:162/proxy/: bar (200; 5.564701ms)
  I1221 13:43:50.714958 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/https:proxy-service-kthgq-x49nf:460/proxy/: tls baz (200; 5.584422ms)
  I1221 13:43:50.714969 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:160/proxy/: foo (200; 5.516335ms)
  I1221 13:43:50.715037 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf/proxy/rewriteme">test</a> (200; 5.602781ms)
  I1221 13:43:50.715064 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/: <a href="/api/v1/namespaces/proxy-5129/pods/proxy-service-kthgq-x49nf:1080/proxy/rewriteme">test<... (200; 5.741008ms)
  I1221 13:43:50.715638 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname1/proxy/: foo (200; 6.40152ms)
  I1221 13:43:50.716344 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/services/http:proxy-service-kthgq:portname2/proxy/: bar (200; 7.053013ms)
  I1221 13:43:50.716394 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname2/proxy/: tls qux (200; 7.084082ms)
  I1221 13:43:50.717212 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/services/https:proxy-service-kthgq:tlsportname1/proxy/: tls baz (200; 7.743794ms)
  I1221 13:43:50.718367 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname1/proxy/: foo (200; 8.964413ms)
  I1221 13:43:50.718686 19 proxy.go:558] (19) /api/v1/namespaces/proxy-5129/services/proxy-service-kthgq:portname2/proxy/: bar (200; 9.413319ms)
  STEP: deleting ReplicationController proxy-service-kthgq in namespace proxy-5129, will wait for the garbage collector to delete the pods @ 12/21/24 13:43:50.718
  I1221 13:43:50.782688 19 resources.go:139] Deleting ReplicationController proxy-service-kthgq took: 9.251211ms
  I1221 13:43:50.883673 19 resources.go:163] Terminating ReplicationController proxy-service-kthgq pods took: 100.97928ms
  E1221 13:43:51.292945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:52.293535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:53.294525      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:53.384320 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5129" for this suite. @ 12/21/24 13:43:53.388
• [7.036 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/21/24 13:43:53.396
  I1221 13:43:53.396039 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename tables @ 12/21/24 13:43:53.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:43:53.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:43:53.414
  I1221 13:43:53.420553 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7328" for this suite. @ 12/21/24 13:43:53.427
• [0.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 12/21/24 13:43:53.434
  I1221 13:43:53.434168 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:43:53.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:43:53.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:43:53.456
  STEP: Creating configMap configmap-6967/configmap-test-ff58dab3-30e4-401d-9f9c-ab58b04ac8ef @ 12/21/24 13:43:53.458
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:43:53.462
  E1221 13:43:54.294646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:55.295173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:43:55.482
  I1221 13:43:55.486788 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-configmaps-5aed5b11-7d24-408e-8f38-3637673f5028 container env-test: <nil>
  STEP: delete the pod @ 12/21/24 13:43:55.503
  I1221 13:43:55.528117 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6967" for this suite. @ 12/21/24 13:43:55.531
• [2.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:643
  STEP: Creating a kubernetes client @ 12/21/24 13:43:55.541
  I1221 13:43:55.541350 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:43:55.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:43:55.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:43:55.563
  STEP: Setting up server cert @ 12/21/24 13:43:55.589
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:43:55.917
  STEP: Deploying the webhook pod @ 12/21/24 13:43:55.927
  STEP: Wait for the deployment to be ready @ 12/21/24 13:43:55.939
  I1221 13:43:55.947500 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1221 13:43:56.296030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:43:57.296961      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/21/24 13:43:57.96
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:43:57.97
  E1221 13:43:58.297203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:43:58.971463 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/21/24 13:43:59.054
  STEP: Creating a configMap that should be mutated @ 12/21/24 13:43:59.064
  STEP: Deleting the collection of validation webhooks @ 12/21/24 13:43:59.087
  STEP: Creating a configMap that should not be mutated @ 12/21/24 13:43:59.153
  I1221 13:43:59.204283 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5209" for this suite. @ 12/21/24 13:43:59.208
  STEP: Destroying namespace "webhook-markers-6595" for this suite. @ 12/21/24 13:43:59.221
• [3.686 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/21/24 13:43:59.227
  I1221 13:43:59.227873 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:43:59.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:43:59.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:43:59.249
  STEP: Creating configMap with name cm-test-opt-del-41e08439-3f4f-49d5-b2e9-36e8118856f7 @ 12/21/24 13:43:59.255
  STEP: Creating configMap with name cm-test-opt-upd-68e3c02a-57d7-4534-a7b3-9514d45bcfc4 @ 12/21/24 13:43:59.259
  STEP: Creating the pod @ 12/21/24 13:43:59.264
  E1221 13:43:59.297196      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:00.297965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:01.297970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-41e08439-3f4f-49d5-b2e9-36e8118856f7 @ 12/21/24 13:44:01.316
  STEP: Updating configmap cm-test-opt-upd-68e3c02a-57d7-4534-a7b3-9514d45bcfc4 @ 12/21/24 13:44:01.324
  STEP: Creating configMap with name cm-test-opt-create-78b47b6d-1f61-45da-91bf-a3edeb1fed92 @ 12/21/24 13:44:01.33
  STEP: waiting to observe update in volume @ 12/21/24 13:44:01.335
  E1221 13:44:02.298173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:03.298555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:04.298676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:05.298832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:06.298928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:07.299078      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:08.299809      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:09.300029      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:10.300191      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:11.300454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:12.301067      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:13.301347      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:14.301498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:15.301610      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:16.301839      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:17.302026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:18.302862      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:19.303038      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:20.303233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:21.303476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:22.303588      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:23.304524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:24.304821      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:25.305026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:26.305497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:27.306550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:28.306860      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:29.306984      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:30.307072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:31.307589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:32.307702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:33.307830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:34.307956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:35.308083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:36.308491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:37.308596      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:38.309491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:39.310453      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:40.310624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:41.310834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:42.311030      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:43.312073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:44.312869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:45.313095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:46.313569      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:47.313671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:48.313894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:49.314108      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:50.314221      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:51.314363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:52.314394      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:53.314836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:54.315787      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:55.316551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:56.317529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:57.317666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:58.318573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:44:59.318774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:00.318898      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:01.319012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:02.319869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:03.320939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:04.321538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:05.321751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:06.322533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:07.323550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:08.324293      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:09.324478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:10.324491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:11.324564      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:12.324798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:13.324834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:14.325805      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:15.325928      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:16.326096      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:17.326548      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:18.327017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:19.327114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:20.328065      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:21.328131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:45:21.751766 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8767" for this suite. @ 12/21/24 13:45:21.755
• [82.536 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:193
  STEP: Creating a kubernetes client @ 12/21/24 13:45:21.764
  I1221 13:45:21.764063 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 13:45:21.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:45:21.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:45:21.785
  STEP: Creating a test headless service @ 12/21/24 13:45:21.787
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1540 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1540;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1540 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1540;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1540.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1540.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1540.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1540.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1540.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1540.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1540.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1540.svc;check="$$(dig +notcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_tcp@PTR;sleep 1; done
   @ 12/21/24 13:45:21.807
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1540 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1540;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1540 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1540;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1540.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1540.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1540.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1540.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1540.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1540.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1540.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1540.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1540.svc;check="$$(dig +notcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_udp@PTR;check="$$(dig +tcp +noall +answer +search 50.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.50_tcp@PTR;sleep 1; done
   @ 12/21/24 13:45:21.807
  STEP: creating a pod to probe DNS @ 12/21/24 13:45:21.807
  STEP: submitting the pod to kubernetes @ 12/21/24 13:45:21.807
  E1221 13:45:22.328544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:23.328556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/21/24 13:45:23.832
  STEP: looking for the results for each expected name from probers @ 12/21/24 13:45:23.836
  I1221 13:45:23.840764 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.844973 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.849641 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1540 from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.853414 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1540 from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.857555 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.861972 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.865487 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.869629 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.889553 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.895903 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.900113 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1540 from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.903680 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1540 from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.907762 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.912249 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.915707 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.919421 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1540.svc from pod dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b: the server could not find the requested resource (get pods dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b)
  I1221 13:45:23.935815 19 dns_common.go:489] Lookups using dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1540 wheezy_tcp@dns-test-service.dns-1540 wheezy_udp@dns-test-service.dns-1540.svc wheezy_tcp@dns-test-service.dns-1540.svc wheezy_udp@_http._tcp.dns-test-service.dns-1540.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1540.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1540 jessie_tcp@dns-test-service.dns-1540 jessie_udp@dns-test-service.dns-1540.svc jessie_tcp@dns-test-service.dns-1540.svc jessie_udp@_http._tcp.dns-test-service.dns-1540.svc jessie_tcp@_http._tcp.dns-test-service.dns-1540.svc]

  I1221 13:45:23.946381 19 dns_common.go:495] Pod client logs for webserver: 
  I1221 13:45:23.954505 19 dns_common.go:495] Pod client logs for querier: 
  I1221 13:45:23.962014 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1221 13:45:24.329536      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:25.329699      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:26.329807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:27.329899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:28.330905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:45:28.935954 19 dns_common.go:527] DNS probes using dns-1540/dns-test-a062f419-d2cd-4c3f-864c-9ae40aec550b succeeded

  STEP: deleting the pod @ 12/21/24 13:45:28.936
  STEP: deleting the test service @ 12/21/24 13:45:28.958
  STEP: deleting the test headless service @ 12/21/24 13:45:28.982
  I1221 13:45:28.997669 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1540" for this suite. @ 12/21/24 13:45:29
• [7.244 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:331
  STEP: Creating a kubernetes client @ 12/21/24 13:45:29.008
  I1221 13:45:29.008278 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename dns @ 12/21/24 13:45:29.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:45:29.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:45:29.027
  STEP: Creating a test externalName service @ 12/21/24 13:45:29.029
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-860.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-860.svc.cluster.local; sleep 1; done
   @ 12/21/24 13:45:29.034
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-860.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-860.svc.cluster.local; sleep 1; done
   @ 12/21/24 13:45:29.034
  STEP: creating a pod to probe DNS @ 12/21/24 13:45:29.034
  STEP: submitting the pod to kubernetes @ 12/21/24 13:45:29.034
  E1221 13:45:29.331039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:30.331554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/21/24 13:45:31.057
  STEP: looking for the results for each expected name from probers @ 12/21/24 13:45:31.062
  I1221 13:45:31.074563 19 dns_common.go:552] DNS probes using dns-test-d5666117-c6b6-448b-9460-faf4f88ebf21 succeeded

  STEP: changing the externalName to bar.example.com @ 12/21/24 13:45:31.074
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-860.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-860.svc.cluster.local; sleep 1; done
   @ 12/21/24 13:45:31.086
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-860.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-860.svc.cluster.local; sleep 1; done
   @ 12/21/24 13:45:31.086
  STEP: creating a second pod to probe DNS @ 12/21/24 13:45:31.087
  STEP: submitting the pod to kubernetes @ 12/21/24 13:45:31.087
  E1221 13:45:31.332465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:32.332659      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/21/24 13:45:33.106
  STEP: looking for the results for each expected name from probers @ 12/21/24 13:45:33.111
  I1221 13:45:33.115602 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-860.svc.cluster.local from pod  dns-860/dns-test-b44c3d67-177d-4034-bfe7-77d9caf64226 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1221 13:45:33.119515 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-860.svc.cluster.local from pod  dns-860/dns-test-b44c3d67-177d-4034-bfe7-77d9caf64226 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1221 13:45:33.119552 19 dns_common.go:489] Lookups using dns-860/dns-test-b44c3d67-177d-4034-bfe7-77d9caf64226 failed for: [wheezy_udp@dns-test-service-3.dns-860.svc.cluster.local jessie_udp@dns-test-service-3.dns-860.svc.cluster.local]

  I1221 13:45:33.127538 19 dns_common.go:495] Pod client logs for webserver: 
  I1221 13:45:33.133948 19 dns_common.go:495] Pod client logs for querier: 
  I1221 13:45:33.141422 19 dns_common.go:495] Pod client logs for jessie-querier: 
  E1221 13:45:33.332774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:34.332941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:35.333071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:36.333264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:37.334301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:45:38.121194 19 dns_common.go:552] DNS probes using dns-test-b44c3d67-177d-4034-bfe7-77d9caf64226 succeeded

  STEP: changing the service to type=ClusterIP @ 12/21/24 13:45:38.121
  W1221 13:45:38.135087      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-860.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-860.svc.cluster.local; sleep 1; done
   @ 12/21/24 13:45:38.135
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-860.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-860.svc.cluster.local; sleep 1; done
   @ 12/21/24 13:45:38.135
  STEP: creating a third pod to probe DNS @ 12/21/24 13:45:38.135
  STEP: submitting the pod to kubernetes @ 12/21/24 13:45:38.139
  E1221 13:45:38.334847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:39.335816      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 12/21/24 13:45:40.156
  STEP: looking for the results for each expected name from probers @ 12/21/24 13:45:40.16
  I1221 13:45:40.170979 19 dns_common.go:552] DNS probes using dns-test-b21ec6c1-67b0-4266-80b7-864b5bee81a1 succeeded

  STEP: deleting the pod @ 12/21/24 13:45:40.171
  STEP: deleting the pod @ 12/21/24 13:45:40.187
  STEP: deleting the pod @ 12/21/24 13:45:40.204
  STEP: deleting the test externalName service @ 12/21/24 13:45:40.22
  I1221 13:45:40.237193 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-860" for this suite. @ 12/21/24 13:45:40.241
• [11.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/21/24 13:45:40.249
  I1221 13:45:40.249713 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename configmap @ 12/21/24 13:45:40.25
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:45:40.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:45:40.267
  STEP: Creating configMap with name configmap-test-volume-8afb53b5-281c-4eec-8516-92b972bb8e37 @ 12/21/24 13:45:40.27
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:45:40.276
  E1221 13:45:40.336580      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:41.336767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:42.336905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:43.337057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:45:44.299
  I1221 13:45:44.303593 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-configmaps-cb92cad1-f951-4e84-9711-e2e55fb47543 container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:45:44.311
  I1221 13:45:44.332292 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7220" for this suite. @ 12/21/24 13:45:44.336
  E1221 13:45:44.337468      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 12/21/24 13:45:44.344
  I1221 13:45:44.344572 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename sched-pred @ 12/21/24 13:45:44.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:45:44.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:45:44.368
  I1221 13:45:44.373199 19 helper.go:122] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1221 13:45:44.387109 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1221 13:45:44.391689 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-18-134 before test
  I1221 13:45:44.397584 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-f4st4 from ingress-nginx-kubernetes-worker started at 2024-12-21 12:02:55 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.397602 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 13:45:44.397608 19 predicates.go:957] calico-node-lftqs from kube-system started at 2024-12-21 12:08:33 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.397613 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 13:45:44.397618 19 predicates.go:957] sonobuoy-e2e-job-b5a495975eb84fdf from sonobuoy started at 2024-12-21 12:10:57 +0000 UTC (2 container statuses recorded)
  I1221 13:45:44.397623 19 predicates.go:959] 	Container e2e ready: true, restart count 0
  I1221 13:45:44.397627 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:45:44.397632 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-rx848 from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 13:45:44.397638 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:45:44.397643 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 13:45:44.397650 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-68-100 before test
  I1221 13:45:44.404834 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-lfggv from ingress-nginx-kubernetes-worker started at 2024-12-21 12:58:24 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.404853 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 13:45:44.404858 19 predicates.go:957] calico-node-npt9c from kube-system started at 2024-12-21 12:06:56 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.404863 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 13:45:44.404868 19 predicates.go:957] sonobuoy from sonobuoy started at 2024-12-21 12:10:55 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.404874 19 predicates.go:959] 	Container kube-sonobuoy ready: true, restart count 0
  I1221 13:45:44.404911 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-4tc8w from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 13:45:44.404916 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:45:44.404921 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  I1221 13:45:44.404927 19 predicates.go:119] 
  Logging pods the apiserver thinks is on node ip-172-31-9-184 before test
  I1221 13:45:44.412397 19 predicates.go:957] nginx-ingress-controller-kubernetes-worker-5c9cx from ingress-nginx-kubernetes-worker started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.412417 19 predicates.go:959] 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  I1221 13:45:44.412423 19 predicates.go:957] calico-node-qsfv4 from kube-system started at 2024-12-21 12:08:22 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.412427 19 predicates.go:959] 	Container calico-node ready: true, restart count 0
  I1221 13:45:44.412433 19 predicates.go:957] coredns-5b4857d7c8-vssh5 from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.412437 19 predicates.go:959] 	Container coredns ready: true, restart count 0
  I1221 13:45:44.412443 19 predicates.go:957] kube-state-metrics-5d7bdccd49-tfhds from kube-system started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.412447 19 predicates.go:959] 	Container kube-state-metrics ready: true, restart count 4
  I1221 13:45:44.412452 19 predicates.go:957] metrics-server-v0.7.1-6c77d69467-wp8st from kube-system started at 2024-12-21 12:00:58 +0000 UTC (2 container statuses recorded)
  I1221 13:45:44.412456 19 predicates.go:959] 	Container metrics-server ready: true, restart count 0
  I1221 13:45:44.412460 19 predicates.go:959] 	Container metrics-server-nanny ready: true, restart count 0
  I1221 13:45:44.412464 19 predicates.go:957] dashboard-metrics-scraper-64757cf48d-588bl from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.412468 19 predicates.go:959] 	Container dashboard-metrics-scraper ready: true, restart count 0
  I1221 13:45:44.412473 19 predicates.go:957] kubernetes-dashboard-7b6b7bcb5d-p8lb6 from kubernetes-dashboard started at 2024-12-21 12:00:58 +0000 UTC (1 container statuses recorded)
  I1221 13:45:44.412477 19 predicates.go:959] 	Container kubernetes-dashboard ready: true, restart count 4
  I1221 13:45:44.412482 19 predicates.go:957] sonobuoy-systemd-logs-daemon-set-f194159b3c5647b0-fqqth from sonobuoy started at 2024-12-21 12:10:58 +0000 UTC (2 container statuses recorded)
  I1221 13:45:44.412487 19 predicates.go:959] 	Container sonobuoy-worker ready: true, restart count 0
  I1221 13:45:44.412492 19 predicates.go:959] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/21/24 13:45:44.412
  E1221 13:45:45.337648      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:46.337810      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/21/24 13:45:46.436
  STEP: Trying to apply a random label on the found node. @ 12/21/24 13:45:46.447
  STEP: verifying the node has the label kubernetes.io/e2e-5834ca9f-bcb4-434d-89f4-28c120ef11d7 42 @ 12/21/24 13:45:46.456
  STEP: Trying to relaunch the pod, now with labels. @ 12/21/24 13:45:46.46
  E1221 13:45:47.337993      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:48.338245      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-5834ca9f-bcb4-434d-89f4-28c120ef11d7 off the node ip-172-31-68-100 @ 12/21/24 13:45:48.484
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-5834ca9f-bcb4-434d-89f4-28c120ef11d7 @ 12/21/24 13:45:48.496
  I1221 13:45:48.500280 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5577" for this suite. @ 12/21/24 13:45:48.508
• [4.172 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 12/21/24 13:45:48.516
  I1221 13:45:48.516660 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 13:45:48.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:45:48.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:45:48.538
  STEP: Creating a pod to test substitution in container's command @ 12/21/24 13:45:48.54
  E1221 13:45:49.338881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:50.339005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:51.339106      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:52.339867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:45:52.564
  I1221 13:45:52.568485 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod var-expansion-eee423e7-a454-42e2-9708-77e9c5f2ed1f container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 13:45:52.576
  I1221 13:45:52.598111 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5955" for this suite. @ 12/21/24 13:45:52.602
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/21/24 13:45:52.612
  I1221 13:45:52.612198 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pod-network-test @ 12/21/24 13:45:52.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:45:52.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:45:52.634
  STEP: Performing setup for networking test in namespace pod-network-test-4789 @ 12/21/24 13:45:52.636
  STEP: creating a selector @ 12/21/24 13:45:52.636
  STEP: Creating the service pods in kubernetes @ 12/21/24 13:45:52.636
  I1221 13:45:52.636121 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1221 13:45:53.340578      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:54.341554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:55.341654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:56.341906      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:57.342074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:58.342922      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:45:59.343023      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:00.343202      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:01.343372      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:02.343545      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:03.344627      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:04.344714      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:05.345751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:06.346524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:07.346629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:08.346872      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:09.346983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:10.347173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:11.347471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:12.347658      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:13.347737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:14.348537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 12/21/24 13:46:14.756
  E1221 13:46:15.349577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:16.349701      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:46:16.777299 19 utils.go:803] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1221 13:46:16.777348 19 networking.go:42] Breadth first check of 192.168.235.180 on host 172.31.18.134...
  I1221 13:46:16.780985 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.200.47:9080/dial?request=hostname&protocol=udp&host=192.168.235.180&port=8081&tries=1'] Namespace:pod-network-test-4789 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:46:16.781012 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:46:16.781486 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:46:16.781533 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4789/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.200.47%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.235.180%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1221 13:46:16.827053 19 utils.go:356] Waiting for responses: map[]
  I1221 13:46:16.827104 19 utils.go:360] reached 192.168.235.180 after 0/1 tries
  I1221 13:46:16.827118 19 networking.go:42] Breadth first check of 192.168.200.48 on host 172.31.68.100...
  I1221 13:46:16.831948 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.200.47:9080/dial?request=hostname&protocol=udp&host=192.168.200.48&port=8081&tries=1'] Namespace:pod-network-test-4789 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:46:16.831971 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:46:16.832408 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:46:16.832448 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4789/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.200.47%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.200.48%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1221 13:46:16.871851 19 utils.go:356] Waiting for responses: map[]
  I1221 13:46:16.871878 19 utils.go:360] reached 192.168.200.48 after 0/1 tries
  I1221 13:46:16.871888 19 networking.go:42] Breadth first check of 192.168.78.24 on host 172.31.9.184...
  I1221 13:46:16.876616 19 exec_util.go:59] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.200.47:9080/dial?request=hostname&protocol=udp&host=192.168.78.24&port=8081&tries=1'] Namespace:pod-network-test-4789 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:46:16.876637 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:46:16.877039 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:46:16.877078 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4789/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.200.47%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.78.24%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1221 13:46:16.912451 19 utils.go:356] Waiting for responses: map[]
  I1221 13:46:16.912486 19 utils.go:360] reached 192.168.78.24 after 0/1 tries
  I1221 13:46:16.912521 19 networking.go:53] Going to retry 0 out of 3 pods....
  I1221 13:46:16.912690 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4789" for this suite. @ 12/21/24 13:46:16.916
• [24.314 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/21/24 13:46:16.926
  I1221 13:46:16.926173 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename secrets @ 12/21/24 13:46:16.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:46:16.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:46:16.95
  STEP: Creating secret with name secret-test-34585795-2ed2-4496-a45c-2f87b12a0dfc @ 12/21/24 13:46:16.952
  STEP: Creating a pod to test consume secrets @ 12/21/24 13:46:16.956
  E1221 13:46:17.350448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:18.351057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:46:18.981
  I1221 13:46:18.985801 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-secrets-b7ac4544-4613-438c-ac44-fdb8d5f5c141 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/21/24 13:46:18.994
  I1221 13:46:19.015143 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4303" for this suite. @ 12/21/24 13:46:19.019
• [2.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/21/24 13:46:19.031
  I1221 13:46:19.031907 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:46:19.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:46:19.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:46:19.051
  STEP: Creating a pod to test downward api env vars @ 12/21/24 13:46:19.053
  E1221 13:46:19.351630      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:20.352173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:21.352272      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:22.352379      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:46:23.082
  I1221 13:46:23.086853 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downward-api-d38e1670-ee9f-4446-816b-28f9e5fd27d7 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 13:46:23.094
  I1221 13:46:23.116321 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2296" for this suite. @ 12/21/24 13:46:23.12
• [4.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 12/21/24 13:46:23.127
  I1221 13:46:23.127406 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubelet-test @ 12/21/24 13:46:23.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:46:23.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:46:23.15
  E1221 13:46:23.352584      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:24.352756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:25.352945      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:26.353145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:46:27.172356 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8878" for this suite. @ 12/21/24 13:46:27.177
• [4.058 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:569
  STEP: Creating a kubernetes client @ 12/21/24 13:46:27.185
  I1221 13:46:27.185210 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:46:27.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:46:27.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:46:27.205
  STEP: Setting up server cert @ 12/21/24 13:46:27.23
  E1221 13:46:27.353497      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:46:27.446
  STEP: Deploying the webhook pod @ 12/21/24 13:46:27.455
  STEP: Wait for the deployment to be ready @ 12/21/24 13:46:27.468
  I1221 13:46:27.476538 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1221 13:46:28.353582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:29.353700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/21/24 13:46:29.49
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:46:29.503
  E1221 13:46:30.353983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:46:30.504376 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/21/24 13:46:30.584
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/21/24 13:46:30.612
  STEP: Deleting the collection of validation webhooks @ 12/21/24 13:46:30.635
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/21/24 13:46:30.707
  I1221 13:46:30.765950 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1036" for this suite. @ 12/21/24 13:46:30.77
  STEP: Destroying namespace "webhook-markers-2414" for this suite. @ 12/21/24 13:46:30.784
• [3.608 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/21/24 13:46:30.793
  I1221 13:46:30.793059 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename watch @ 12/21/24 13:46:30.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:46:30.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:46:30.812
  STEP: creating a watch on configmaps with label A @ 12/21/24 13:46:30.814
  STEP: creating a watch on configmaps with label B @ 12/21/24 13:46:30.815
  STEP: creating a watch on configmaps with label A or B @ 12/21/24 13:46:30.816
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/21/24 13:46:30.817
  I1221 13:46:30.822304 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45900 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:46:30.822411 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45900 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/21/24 13:46:30.822
  I1221 13:46:30.832028 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45901 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:46:30.832097 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45901 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/21/24 13:46:30.832
  I1221 13:46:30.843946 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45902 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:46:30.844011 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45902 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/21/24 13:46:30.844
  I1221 13:46:30.850786 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45903 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:46:30.850820 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8636  d8589fa3-ce7d-4151-8b08-ea336c3ec138 45903 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/21/24 13:46:30.85
  I1221 13:46:30.855966 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8636  309b828e-0875-4575-bbf5-7ac6c8628aef 45904 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:46:30.856031 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8636  309b828e-0875-4575-bbf5-7ac6c8628aef 45904 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1221 13:46:31.354796      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:32.354882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:33.355011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:34.355124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:35.355185      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:36.355302      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:37.355498      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:38.356524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:39.356676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:40.357535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/21/24 13:46:40.856
  I1221 13:46:40.865645 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8636  309b828e-0875-4575-bbf5-7ac6c8628aef 45957 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1221 13:46:40.865685 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8636  309b828e-0875-4575-bbf5-7ac6c8628aef 45957 0 2024-12-21 13:46:30 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-21 13:46:30 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1221 13:46:41.358256      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:42.359307      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:43.359539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:44.359647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:45.359842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:46.360102      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:47.360253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:48.361130      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:49.361312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:50.361475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:46:50.866197 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8636" for this suite. @ 12/21/24 13:46:50.871
• [20.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 12/21/24 13:46:50.88
  I1221 13:46:50.880069 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 13:46:50.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:46:50.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:46:50.906
  STEP: creating the pod with failed condition @ 12/21/24 13:46:50.908
  E1221 13:46:51.362432      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:52.362641      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:53.362889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:54.363111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:55.363874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:56.364062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:57.364842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:58.364938      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:46:59.365481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:00.365577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:01.366537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:02.366605      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:03.367157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:04.367671      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:05.368201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:06.368474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:07.369173      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:08.369970      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:09.370062      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:10.370184      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:11.370712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:12.371565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:13.371874      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:14.372551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:15.373615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:16.373705      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:17.373960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:18.374518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:19.375365      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:20.375516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:21.375631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:22.375712      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:23.376410      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:24.376535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:25.377241      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:26.377395      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:27.377490      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:28.377824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:29.377995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:30.378552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:31.379183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:32.379911      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:33.380485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:34.380756      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:35.380942      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:36.381125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:37.381373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:38.381530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:39.382268      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:40.382494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:41.382733      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:42.382978      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:43.383277      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:44.383753      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:45.384543      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:46.385594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:47.385695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:48.385986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:49.386527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:50.386629      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:51.387404      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:52.387501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:53.388420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:54.388634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:55.389626      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:56.390003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:57.390836      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:58.390929      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:47:59.391513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:00.391722      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:01.392350      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:02.392537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:03.393476      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:04.393597      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:05.394666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:06.394767      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:07.394856      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:08.394930      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:09.395998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:10.396523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:11.397037      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:12.397210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:13.398290      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:14.398455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:15.399276      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:16.399454      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:17.400053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:18.400884      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:19.401639      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:20.401833      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:21.401888      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:22.402199      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:23.402233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:24.402448      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:25.403460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:26.403520      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:27.404177      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:28.405178      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:29.406032      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:30.406111      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:31.406887      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:32.406986      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:33.407828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:34.407932      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:35.408144      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:36.408360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:37.408535      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:38.408632      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:39.408869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:40.408959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:41.409834      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:42.410012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:43.410987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:44.411754      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:45.412095      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:46.412311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:47.412438      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:48.412797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:49.413249      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:50.413461      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: updating the pod @ 12/21/24 13:48:50.92
  E1221 13:48:51.413873      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:48:51.435781 19 pod_client.go:173] Successfully updated pod "var-expansion-7e9ee91b-fa5b-47bd-8a15-46557ca0271c"
  STEP: waiting for pod running @ 12/21/24 13:48:51.435
  E1221 13:48:52.413995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:53.414020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 12/21/24 13:48:53.446
  I1221 13:48:53.446370 19 delete.go:62] Deleting pod "var-expansion-7e9ee91b-fa5b-47bd-8a15-46557ca0271c" in namespace "var-expansion-4743"
  I1221 13:48:53.457473 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-7e9ee91b-fa5b-47bd-8a15-46557ca0271c" to be fully deleted
  E1221 13:48:54.414200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:55.414374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:56.414470      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:57.414673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:58.415551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:48:59.415909      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:00.416005      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:01.416103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:02.416485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:03.417522      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:04.417738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:05.417955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:06.418556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:07.418717      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:08.419567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:09.420570      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:10.420804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:11.421000      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:12.421479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:13.421702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:14.421844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:15.422060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:16.422267      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:17.422495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:18.422765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:19.423125      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:20.423501      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:21.423782      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:22.423880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:23.424299      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:24.424506      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:25.425550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:25.559753 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4743" for this suite. @ 12/21/24 13:49:25.564
• [154.694 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/21/24 13:49:25.573
  I1221 13:49:25.573979 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename namespaces @ 12/21/24 13:49:25.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:25.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:49:25.597
  STEP: Creating a test namespace @ 12/21/24 13:49:25.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:25.617
  STEP: Creating a service in the namespace @ 12/21/24 13:49:25.618
  STEP: Deleting the namespace @ 12/21/24 13:49:25.631
  STEP: Waiting for the namespace to be removed. @ 12/21/24 13:49:25.642
  E1221 13:49:26.425653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:27.425743      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:28.426563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:29.426653      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:30.426749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:31.427567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 12/21/24 13:49:31.647
  STEP: Verifying there is no service in the namespace @ 12/21/24 13:49:31.675
  I1221 13:49:31.679374 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1938" for this suite. @ 12/21/24 13:49:31.683
  STEP: Destroying namespace "nsdeletetest-323" for this suite. @ 12/21/24 13:49:31.69
  I1221 13:49:31.693767 19 framework.go:370] Namespace nsdeletetest-323 was already deleted
  STEP: Destroying namespace "nsdeletetest-9656" for this suite. @ 12/21/24 13:49:31.693
• [6.129 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 12/21/24 13:49:31.702
  I1221 13:49:31.702545 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/21/24 13:49:31.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:31.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:49:31.721
  I1221 13:49:31.723163 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  E1221 13:49:32.428566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/21/24 13:49:32.919
  I1221 13:49:32.919461 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 create -f -'
  E1221 13:49:33.429555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:34.429702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:35.003593 19 builder.go:146] stderr: ""
  I1221 13:49:35.003628 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4060-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1221 13:49:35.003679 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 delete e2e-test-crd-publish-openapi-4060-crds test-foo'
  I1221 13:49:35.063760 19 builder.go:146] stderr: ""
  I1221 13:49:35.063800 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4060-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1221 13:49:35.063843 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 apply -f -'
  I1221 13:49:35.115793 19 builder.go:146] stderr: ""
  I1221 13:49:35.115832 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4060-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1221 13:49:35.115878 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 delete e2e-test-crd-publish-openapi-4060-crds test-foo'
  I1221 13:49:35.164212 19 builder.go:146] stderr: ""
  I1221 13:49:35.164281 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4060-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/21/24 13:49:35.164
  I1221 13:49:35.164366 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 create -f -'
  I1221 13:49:35.204879 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/21/24 13:49:35.204
  I1221 13:49:35.205066 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 create -f -'
  I1221 13:49:35.245016 19 builder.go:135] rc: 1
  I1221 13:49:35.245102 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 apply -f -'
  I1221 13:49:35.295622 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/21/24 13:49:35.295
  I1221 13:49:35.295735 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 create -f -'
  I1221 13:49:35.335538 19 builder.go:135] rc: 1
  I1221 13:49:35.335617 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 --namespace=crd-publish-openapi-3831 apply -f -'
  I1221 13:49:35.385603 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/21/24 13:49:35.385
  I1221 13:49:35.385728 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 explain e2e-test-crd-publish-openapi-4060-crds'
  I1221 13:49:35.426070 19 builder.go:146] stderr: ""
  I1221 13:49:35.426126 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4060-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/21/24 13:49:35.426
  I1221 13:49:35.426497 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 explain e2e-test-crd-publish-openapi-4060-crds.metadata'
  E1221 13:49:35.430775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:35.467420 19 builder.go:146] stderr: ""
  I1221 13:49:35.467529 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4060-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1221 13:49:35.467740 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 explain e2e-test-crd-publish-openapi-4060-crds.spec'
  I1221 13:49:35.506409 19 builder.go:146] stderr: ""
  I1221 13:49:35.506447 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4060-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1221 13:49:35.506566 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 explain e2e-test-crd-publish-openapi-4060-crds.spec.bars'
  I1221 13:49:35.546773 19 builder.go:146] stderr: ""
  I1221 13:49:35.546817 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4060-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/21/24 13:49:35.546
  I1221 13:49:35.547026 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=crd-publish-openapi-3831 explain e2e-test-crd-publish-openapi-4060-crds.spec.bars2'
  I1221 13:49:35.587139 19 builder.go:135] rc: 1
  E1221 13:49:36.430861      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:36.850674 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3831" for this suite. @ 12/21/24 13:49:36.857
• [5.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3393
  STEP: Creating a kubernetes client @ 12/21/24 13:49:36.866
  I1221 13:49:36.866797 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:49:36.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:36.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:49:36.885
  STEP: creating a Service @ 12/21/24 13:49:36.893
  STEP: watching for the Service to be added @ 12/21/24 13:49:36.909
  I1221 13:49:36.910725 19 service.go:3445] Found Service test-service-8bvzr in namespace services-3603 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30895}]
  I1221 13:49:36.910751 19 service.go:3452] Service test-service-8bvzr created
  STEP: Getting /status @ 12/21/24 13:49:36.91
  I1221 13:49:36.915483 19 service.go:3463] Service test-service-8bvzr has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/21/24 13:49:36.915
  STEP: watching for the Service to be patched @ 12/21/24 13:49:36.926
  I1221 13:49:36.927625 19 service.go:3486] observed Service test-service-8bvzr in namespace services-3603 with annotations: map[] & LoadBalancer: {[]}
  I1221 13:49:36.927657 19 service.go:3489] Found Service test-service-8bvzr in namespace services-3603 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000cecd00 []}]}
  I1221 13:49:36.927666 19 service.go:3496] Service test-service-8bvzr has service status patched
  STEP: updating the ServiceStatus @ 12/21/24 13:49:36.927
  I1221 13:49:36.939373 19 service.go:3516] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/21/24 13:49:36.939
  I1221 13:49:36.942290 19 service.go:3527] Observed Service test-service-8bvzr in namespace services-3603 with annotations: map[] & Conditions: []
  I1221 13:49:36.942315 19 service.go:3538] Observed Service test-service-8bvzr in namespace services-3603 with annotations: map[patchedstatus:true] & Conditions: []
  I1221 13:49:36.942351 19 service.go:3534] Found Service test-service-8bvzr in namespace services-3603 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1221 13:49:36.942362 19 service.go:3545] Service test-service-8bvzr has service status updated
  STEP: patching the service @ 12/21/24 13:49:36.942
  STEP: watching for the Service to be patched @ 12/21/24 13:49:36.955
  I1221 13:49:36.957633 19 service.go:3568] observed Service test-service-8bvzr in namespace services-3603 with labels: map[test-service-static:true]
  I1221 13:49:36.957659 19 service.go:3568] observed Service test-service-8bvzr in namespace services-3603 with labels: map[test-service-static:true]
  I1221 13:49:36.957762 19 service.go:3568] observed Service test-service-8bvzr in namespace services-3603 with labels: map[test-service-static:true]
  I1221 13:49:36.957774 19 service.go:3571] Found Service test-service-8bvzr in namespace services-3603 with labels: map[test-service:patched test-service-static:true]
  I1221 13:49:36.957782 19 service.go:3578] Service test-service-8bvzr patched
  STEP: deleting the service @ 12/21/24 13:49:36.957
  STEP: watching for the Service to be deleted @ 12/21/24 13:49:36.986
  I1221 13:49:36.988216 19 service.go:3602] Observed event: ADDED
  I1221 13:49:36.988239 19 service.go:3602] Observed event: MODIFIED
  I1221 13:49:36.988247 19 service.go:3602] Observed event: MODIFIED
  I1221 13:49:36.988291 19 service.go:3602] Observed event: MODIFIED
  I1221 13:49:36.988308 19 service.go:3598] Found Service test-service-8bvzr in namespace services-3603 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1221 13:49:36.988318 19 service.go:3607] Service test-service-8bvzr deleted
  I1221 13:49:36.988510 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3603" for this suite. @ 12/21/24 13:49:36.995
• [0.135 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 12/21/24 13:49:37.002
  I1221 13:49:37.002225 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/21/24 13:49:37.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:37.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:49:37.023
  I1221 13:49:37.027568 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  E1221 13:49:37.431109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:38.431121      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:39.431400      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:40.094266 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1255" for this suite. @ 12/21/24 13:49:40.098
• [3.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/21/24 13:49:40.109
  I1221 13:49:40.109557 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/21/24 13:49:40.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:40.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:49:40.13
  STEP: creating a target pod @ 12/21/24 13:49:40.132
  E1221 13:49:40.432197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:41.432475      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/21/24 13:49:42.159
  E1221 13:49:42.433449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:43.433798      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/21/24 13:49:44.179
  I1221 13:49:44.179649 19 exec_util.go:59] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4671 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1221 13:49:44.179665 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  I1221 13:49:44.180111 19 exec_util.go:66] ExecWithOptions: Clientset creation
  I1221 13:49:44.180186 19 exec_util.go:83] ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4671/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1221 13:49:44.218484 19 exec_util.go:111] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/21/24 13:49:44.236
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/21/24 13:49:44.241
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/21/24 13:49:44.253
  I1221 13:49:44.260745 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4671" for this suite. @ 12/21/24 13:49:44.265
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/21/24 13:49:44.276
  I1221 13:49:44.276901 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:49:44.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:44.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:49:44.298
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:49:44.3
  E1221 13:49:44.434251      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:45.434691      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:46.435751      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:47.435849      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:49:48.329
  I1221 13:49:48.333491 19 output.go:196] Trying to get logs from node ip-172-31-18-134 pod downwardapi-volume-d853cc5f-3e69-4784-9e75-ef5435b9ac61 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:49:48.353
  I1221 13:49:48.375803 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4146" for this suite. @ 12/21/24 13:49:48.38
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/21/24 13:49:48.391
  I1221 13:49:48.391630 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename deployment @ 12/21/24 13:49:48.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:49:48.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:49:48.414
  I1221 13:49:48.426519 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E1221 13:49:48.436635      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:49.436915      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:50.437018      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:51.437122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:52.437239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:53.430521 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/21/24 13:49:53.43
  I1221 13:49:53.430590 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1221 13:49:53.437631      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:54.437807      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:55.436475 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  E1221 13:49:55.438608      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:55.447865 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1221 13:49:56.439481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:57.439603      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:57.456821 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1221 13:49:57.465526 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1221 13:49:57.475365 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1221 13:49:57.486611 19 deployment.go:313] Updating deployment test-rollover-deployment
  I1221 13:49:57.486654 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1221 13:49:58.439675      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:49:59.439831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:49:59.497165 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1221 13:49:59.505421 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1221 13:49:59.514618 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1221 13:49:59.514666 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1221 13:50:00.440017      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:01.440149      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:01.525892 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1221 13:50:01.525952 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1221 13:50:02.440496      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:03.441273      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:03.525141 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1221 13:50:03.525198 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1221 13:50:04.441427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:05.441616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:05.525869 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1221 13:50:05.525929 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1221 13:50:06.441799      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:07.442679      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:07.524649 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1221 13:50:07.524702 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 21, 13, 49, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 21, 13, 49, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5f974d7468\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1221 13:50:08.443738      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:09.443831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:09.525876 19 deployment.go:94] 
  I1221 13:50:09.525920 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I1221 13:50:09.539044 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6699",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f9643890-8a63-4315-ab4e-b506b73e539c",
      ResourceVersion: (string) (len=5) "46695",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385795,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5f974d7468\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1221 13:50:09.544096 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-5f974d7468" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6699",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "47710db1-37ca-4d8d-bfa2-cf4fdbbbba13",
      ResourceVersion: (string) (len=5) "46685",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f9643890-8a63-4315-ab4e-b506b73e539c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 36 34 33 38  39 30 2d 38 61 36 33 2d  |\"f9643890-8a63-|
              00000120  34 33 31 35 2d 61 62 34  65 2d 62 35 30 36 62 37  |4315-ab4e-b506b7|
              00000130  33 65 35 33 39 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3e539c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:50:09.544543 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1221 13:50:09.544761 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6699",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "689f9ac2-1695-416c-bca1-8ffd4e8b564c",
      ResourceVersion: (string) (len=5) "46694",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385788,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f9643890-8a63-4315-ab4e-b506b73e539c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385788,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  66 39 36 34 33 38 39 30  2d 38 61 36 33 2d 34 33  |f9643890-8a63-43|
              000000c0  31 35 2d 61 62 34 65 2d  62 35 30 36 62 37 33 65  |15-ab4e-b506b73e|
              000000d0  35 33 39 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |539c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385808,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:50:09.545446 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-55f4dbffff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6699",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "163603f0-5f7b-4c27-aa48-214dd267da96",
      ResourceVersion: (string) (len=5) "46647",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385795,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "f9643890-8a63-4315-ab4e-b506b73e539c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 39 36 34 33 38  39 30 2d 38 61 36 33 2d  |\"f9643890-8a63-|
              00000120  34 33 31 35 2d 61 62 34  65 2d 62 35 30 36 62 37  |4315-ab4e-b506b7|
              00000130  33 65 35 33 39 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3e539c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "55f4dbffff"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1221 13:50:09.550972 19 deployment.go:67] Pod "test-rollover-deployment-5f974d7468-p8cf9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5f974d7468-p8cf9",
      GenerateName: (string) (len=36) "test-rollover-deployment-5f974d7468-",
      Namespace: (string) (len=15) "deployment-6699",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2b796b72-fee4-40b0-b322-08b1ce7e4c91",
      ResourceVersion: (string) (len=5) "46660",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5f974d7468"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5f974d7468",
          UID: (types.UID) (len=36) "47710db1-37ca-4d8d-bfa2-cf4fdbbbba13",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 37  37 31 30 64 62 31 2d 33  |d\":\"47710db1-3|
              00000090  37 63 61 2d 34 64 38 64  2d 62 66 61 32 2d 63 66  |7ca-4d8d-bfa2-cf|
              000000a0  34 66 64 62 62 62 62 61  31 33 5c 22 7d 22 3a 7b  |4fdbbbba13\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=664) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 39  |,"k:{\"ip\":\"19|
              00000260  32 2e 31 36 38 2e 32 33  35 2e 31 38 36 5c 22 7d  |2.168.235.186\"}|
              00000270  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              00000280  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000290  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tg922",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>),
            Image: (*v1.ImageVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tg922",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=16) "ip-172-31-18-134",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        SupplementalGroupsPolicy: (*v1.SupplementalGroupsPolicy)(<nil>),
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385798,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63870385797,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.18.134",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.31.18.134"
        }
      },
      PodIP: (string) (len=15) "192.168.235.186",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.235.186"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63870385797,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63870385798,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.52",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:b173c7d0ffe3d805d49f4dfe48375169b7b8d2e1feb81783efd61eb9d08042e6",
          ContainerID: (string) (len=77) "containerd://54750ccdef9f36d7750307764c299232db41e1a37bbe7e610bb993c38fa54c14",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) (len=1) {
            (v1.VolumeMountStatus) {
              Name: (string) (len=21) "kube-api-access-tg922",
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)((len=8) "Disabled")
            }
          },
          User: (*v1.ContainerUser)(<nil>),
          AllocatedResourcesStatus: ([]v1.ResourceStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1221 13:50:09.552027 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6699" for this suite. @ 12/21/24 13:50:09.556
• [21.174 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/21/24 13:50:09.565
  I1221 13:50:09.565691 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename subpath @ 12/21/24 13:50:09.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:50:09.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:50:09.582
  STEP: Setting up data @ 12/21/24 13:50:09.585
  STEP: Creating pod pod-subpath-test-configmap-b24v @ 12/21/24 13:50:09.595
  STEP: Creating a pod to test atomic-volume-subpath @ 12/21/24 13:50:09.595
  E1221 13:50:10.443882      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:11.443956      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:12.444071      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:13.445057      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:14.446094      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:15.446223      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:16.446488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:17.447559      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:18.448527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:19.448716      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:20.448923      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:21.449061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:22.449582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:23.449885      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:24.450020      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:25.450139      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:26.450259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:27.450405      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:28.450565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:29.450735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:30.450939      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:31.451003      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:32.451192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:33.452207      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:50:33.684
  I1221 13:50:33.689520 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-subpath-test-configmap-b24v container test-container-subpath-configmap-b24v: <nil>
  STEP: delete the pod @ 12/21/24 13:50:33.699
  STEP: Deleting pod pod-subpath-test-configmap-b24v @ 12/21/24 13:50:33.721
  I1221 13:50:33.721246 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-b24v" in namespace "subpath-6858"
  I1221 13:50:33.725894 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6858" for this suite. @ 12/21/24 13:50:33.731
• [24.175 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/21/24 13:50:33.74
  I1221 13:50:33.740429 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:50:33.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:50:33.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:50:33.772
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/21/24 13:50:33.777
  E1221 13:50:34.452503      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:35.452682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:36.452894      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:37.453039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:50:37.8
  I1221 13:50:37.805293 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-74be3ded-a341-4e50-88e3-2a3ab999cb57 container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:50:37.812
  I1221 13:50:37.833549 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6927" for this suite. @ 12/21/24 13:50:37.837
• [4.107 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/21/24 13:50:37.847
  I1221 13:50:37.847683 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 13:50:37.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:50:37.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:50:37.868
  I1221 13:50:37.871537 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: creating the pod @ 12/21/24 13:50:37.871
  STEP: submitting the pod to kubernetes @ 12/21/24 13:50:37.871
  E1221 13:50:38.453194      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:39.453373      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:39.913766 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1747" for this suite. @ 12/21/24 13:50:39.919
• [2.080 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 12/21/24 13:50:39.927
  I1221 13:50:39.927492 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/21/24 13:50:39.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:50:39.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:50:39.946
  STEP: create the container to handle the HTTPGet hook request. @ 12/21/24 13:50:39.953
  E1221 13:50:40.453491      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:41.453706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/21/24 13:50:41.983
  E1221 13:50:42.453895      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:43.454163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/21/24 13:50:44.005
  STEP: delete the pod with lifecycle hook @ 12/21/24 13:50:44.024
  E1221 13:50:44.455066      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:45.455558      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:46.044727 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-272" for this suite. @ 12/21/24 13:50:46.048
• [6.129 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/21/24 13:50:46.056
  I1221 13:50:46.056204 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename init-container @ 12/21/24 13:50:46.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:50:46.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:50:46.075
  STEP: creating the pod @ 12/21/24 13:50:46.078
  I1221 13:50:46.078502 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1221 13:50:46.455934      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:47.456469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:48.456521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:49.456615      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:49.536124 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1327" for this suite. @ 12/21/24 13:50:49.541
• [3.493 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/21/24 13:50:49.549
  I1221 13:50:49.549187 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename prestop @ 12/21/24 13:50:49.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:50:49.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:50:49.568
  STEP: Creating server pod server in namespace prestop-9605 @ 12/21/24 13:50:49.571
  STEP: Waiting for pods to come up. @ 12/21/24 13:50:49.58
  E1221 13:50:50.457550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:51.458612      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-9605 @ 12/21/24 13:50:51.595
  E1221 13:50:52.458746      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:53.458842      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 12/21/24 13:50:53.614
  E1221 13:50:54.458950      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:55.459651      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:56.459763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:57.459867      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:50:58.460061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:50:58.631923 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/21/24 13:50:58.632
  I1221 13:50:58.654377 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9605" for this suite. @ 12/21/24 13:50:58.658
• [9.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 12/21/24 13:50:58.667
  I1221 13:50:58.667232 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubelet-test @ 12/21/24 13:50:58.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:50:58.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:50:58.688
  STEP: Waiting for pod completion @ 12/21/24 13:50:58.699
  E1221 13:50:59.460197      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:00.460444      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:01.460587      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:02.461518      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:51:02.725741 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7029" for this suite. @ 12/21/24 13:51:02.731
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/21/24 13:51:02.741
  I1221 13:51:02.741753 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 13:51:02.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:02.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:02.762
  STEP: creating the pod @ 12/21/24 13:51:02.765
  STEP: submitting the pod to kubernetes @ 12/21/24 13:51:02.765
  W1221 13:51:02.774155      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1221 13:51:03.462561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:04.462778      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 12/21/24 13:51:04.793
  STEP: updating the pod @ 12/21/24 13:51:04.798
  I1221 13:51:05.313903 19 pod_client.go:173] Successfully updated pod "pod-update-activedeadlineseconds-1f5a9c5d-35a7-484e-bc7f-d518bb218c10"
  E1221 13:51:05.462958      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:06.463175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:07.464103      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:08.465083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:51:09.329714 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-572" for this suite. @ 12/21/24 13:51:09.333
• [6.601 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/21/24 13:51:09.342
  I1221 13:51:09.342827 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename events @ 12/21/24 13:51:09.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:09.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:09.364
  STEP: Create set of events @ 12/21/24 13:51:09.366
  I1221 13:51:09.371116 19 core_events.go:198] created test-event-1
  I1221 13:51:09.377215 19 core_events.go:198] created test-event-2
  I1221 13:51:09.383612 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/21/24 13:51:09.383
  STEP: delete collection of events @ 12/21/24 13:51:09.387
  I1221 13:51:09.387236 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/21/24 13:51:09.418
  I1221 13:51:09.418146 19 core_events.go:230] requesting list of events to confirm quantity
  I1221 13:51:09.422901 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-204" for this suite. @ 12/21/24 13:51:09.428
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 12/21/24 13:51:09.437
  I1221 13:51:09.437092 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename var-expansion @ 12/21/24 13:51:09.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:09.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:09.458
  STEP: Creating a pod to test substitution in volume subpath @ 12/21/24 13:51:09.46
  E1221 13:51:09.465998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:10.466554      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:11.467563      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:51:11.482
  I1221 13:51:11.486618 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod var-expansion-6876e98b-a52c-458b-84b5-e6ddd827d920 container dapi-container: <nil>
  STEP: delete the pod @ 12/21/24 13:51:11.496
  I1221 13:51:11.519207 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2913" for this suite. @ 12/21/24 13:51:11.523
• [2.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/21/24 13:51:11.532
  I1221 13:51:11.532845 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename gc @ 12/21/24 13:51:11.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:11.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:11.549
  STEP: create the rc @ 12/21/24 13:51:11.551
  W1221 13:51:11.557841      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1221 13:51:12.467669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:13.467917      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:14.468122      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:15.468577      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:16.468770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/21/24 13:51:16.562
  STEP: wait for all pods to be garbage collected @ 12/21/24 13:51:16.571
  E1221 13:51:17.469784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:18.470024      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:19.470287      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:20.470437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:21.470685      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/21/24 13:51:21.581
  W1221 13:51:21.587753      19 metrics_grabber.go:156] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I1221 13:51:21.587780 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1221 13:51:21.587904 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6239" for this suite. @ 12/21/24 13:51:21.592
• [10.069 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/21/24 13:51:21.602
  I1221 13:51:21.602363 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svcaccounts @ 12/21/24 13:51:21.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:21.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:21.625
  I1221 13:51:21.647403 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1221 13:51:21.647439 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1221 13:51:21.653487 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I1221 13:51:21.653509 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1221 13:51:21.661580 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1221 13:51:21.661603 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1221 13:51:21.670414 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1221 13:51:21.670437 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1221 13:51:21.676179 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1221 13:51:21.676198 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1221 13:51:21.685640 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1221 13:51:21.685662 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1221 13:51:21.691310 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1221 13:51:21.691359 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1221 13:51:21.703691 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1221 13:51:21.703717 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1221 13:51:21.715320 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1221 13:51:21.715392 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1221 13:51:21.715484 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8283" for this suite. @ 12/21/24 13:51:21.724
• [0.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/21/24 13:51:21.733
  I1221 13:51:21.734005 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename namespaces @ 12/21/24 13:51:21.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:21.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:21.754
  STEP: Creating namespace "e2e-ns-grnx5" @ 12/21/24 13:51:21.757
  I1221 13:51:21.774756 19 namespace.go:411] Namespace "e2e-ns-grnx5-1951" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-grnx5-1951" @ 12/21/24 13:51:21.774
  I1221 13:51:21.795750 19 namespace.go:434] Namespace "e2e-ns-grnx5-1951" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-grnx5-1951" @ 12/21/24 13:51:21.795
  I1221 13:51:21.805858 19 namespace.go:463] Namespace "e2e-ns-grnx5-1951" has []v1.FinalizerName{"kubernetes"}
  I1221 13:51:21.806468 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9857" for this suite. @ 12/21/24 13:51:21.81
  STEP: Destroying namespace "e2e-ns-grnx5-1951" for this suite. @ 12/21/24 13:51:21.819
• [0.095 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 12/21/24 13:51:21.829
  I1221 13:51:21.829585 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/21/24 13:51:21.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:21.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:21.854
  STEP: create the container to handle the HTTPGet hook request. @ 12/21/24 13:51:21.875
  E1221 13:51:22.471435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:23.471825      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 12/21/24 13:51:23.899
  E1221 13:51:24.472474      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:25.472650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 12/21/24 13:51:25.925
  STEP: delete the pod with lifecycle hook @ 12/21/24 13:51:25.939
  E1221 13:51:26.472880      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:27.472983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:51:27.959639 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9386" for this suite. @ 12/21/24 13:51:27.963
• [6.142 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/21/24 13:51:27.972
  I1221 13:51:27.972108 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename emptydir @ 12/21/24 13:51:27.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:27.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:27.988
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/21/24 13:51:27.99
  E1221 13:51:28.473015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:29.473119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:30.473201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:31.473386      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:51:32.019
  I1221 13:51:32.024498 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-489ad73a-e235-4d08-be53-ec5faf4b55ae container test-container: <nil>
  STEP: delete the pod @ 12/21/24 13:51:32.032
  I1221 13:51:32.055125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4741" for this suite. @ 12/21/24 13:51:32.06
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/21/24 13:51:32.07
  I1221 13:51:32.070247 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:51:32.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:51:32.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:51:32.088
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-c718de1f-319b-49b0-b60a-69ecf97bafea @ 12/21/24 13:51:32.095
  STEP: Creating the pod @ 12/21/24 13:51:32.1
  E1221 13:51:32.473526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:33.473576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-c718de1f-319b-49b0-b60a-69ecf97bafea @ 12/21/24 13:51:34.132
  STEP: waiting to observe update in volume @ 12/21/24 13:51:34.138
  E1221 13:51:34.473676      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:35.473788      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:36.473944      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:37.474735      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:38.475478      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:39.475567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:40.476016      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:41.476146      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:42.476840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:43.477238      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:44.477859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:45.478579      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:46.479562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:47.479702      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:48.480431      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:49.480495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:50.481050      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:51.481143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:52.481355      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:53.481481      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:54.481700      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:55.481875      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:56.482765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:57.482960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:58.483769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:51:59.483824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:00.484382      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:01.484495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:02.485229      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:03.485784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:04.486429      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:05.486493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:06.487562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:07.487646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:08.487965      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:09.488064      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:10.488556      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:11.488815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:12.489136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:13.490145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:14.490440      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:15.490661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:16.491613      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:17.491759      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:18.492200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:19.492360      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:20.492845      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:21.492937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:22.492987      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:23.493107      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:24.494083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:25.494203      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:26.494822      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:27.495069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:28.496132      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:29.496573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:30.497263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:31.497568      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:32.498127      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:33.499136      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:34.499263      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:35.499516      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:36.500479      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:37.500650      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:38.501601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:39.501823      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:40.502039      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:41.502286      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:42.502662      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:43.503555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:44.503565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:45.503682      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:46.503780      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:47.503905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:48.504218      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:49.504308      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:50.504492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:51.504571      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:52.504728      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:53.505704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:54.505794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:52:54.566020 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8574" for this suite. @ 12/21/24 13:52:54.571
• [82.510 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:284
  STEP: Creating a kubernetes client @ 12/21/24 13:52:54.58
  I1221 13:52:54.580935 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename taint-single-pod @ 12/21/24 13:52:54.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:52:54.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:52:54.599
  I1221 13:52:54.601811 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1221 13:52:55.505907      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:56.505955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:57.506080      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:58.507098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:52:59.507573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:00.507791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:01.507890      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:02.508566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:03.508794      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:04.509045      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:05.509119      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:06.509201      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:07.509301      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:08.509471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:09.510566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:10.510749      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:11.511592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:12.511673      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:13.512576      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:14.512706      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:15.512889      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:16.513098      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:17.513175      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:18.514208      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:19.514363      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:20.514562      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:21.514704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:22.515011      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:23.515791      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:24.515869      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:25.516521      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:26.517450      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:27.518515      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:28.518881      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:29.518937      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:30.519046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:31.519971      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:32.520157      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:33.521143      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:34.521398      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:35.522449      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:36.523539      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:37.523983      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:38.524074      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:39.524434      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:40.524507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:41.524672      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:42.525732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:43.525826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:44.525926      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:45.526528      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:46.527524      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:47.528530      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:48.528747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:49.529640      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:50.529840      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:51.530661      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:52.530844      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:53.530899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:54.531160      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:53:54.602530 19 util.go:393] Waiting for terminating namespaces to be deleted...
  I1221 13:53:54.608019 19 taints.go:144] Starting informer...
  STEP: Starting pod... @ 12/21/24 13:53:54.608
  I1221 13:53:54.825278 19 taints.go:294] Pod is running on ip-172-31-68-100. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/21/24 13:53:54.825
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/21/24 13:53:54.835
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/21/24 13:53:54.841
  I1221 13:53:54.841233 19 taints.go:313] Pod wasn't evicted. Proceeding
  I1221 13:53:54.841245 19 taints.go:320] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/21/24 13:53:54.853
  STEP: Waiting some time to make sure that toleration time passed. @ 12/21/24 13:53:54.862
  E1221 13:53:55.531864      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:56.531995      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:57.532232      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:58.532437      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:53:59.532774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:00.533769      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:01.533858      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:02.534853      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:03.535054      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:04.535755      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:05.535851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:06.536537      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:07.537552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:08.538538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:09.538609      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:10.539540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:11.540594      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:12.540785      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:13.540981      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:14.541225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:15.541441      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:16.541573      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:17.541765      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:18.542069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:19.542253      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:20.542455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:21.543540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:22.543724      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:23.544824      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:24.545544      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:25.546471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:26.547513      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:27.548527      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:28.549601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:29.549669      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:30.549851      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:31.549998      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:32.550319      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:33.550644      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:34.550855      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:35.551061      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:36.551303      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:37.551460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:38.552529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:39.552732      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:40.552957      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:41.553523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:42.553795      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:43.554069      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:44.554151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:45.554420      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:46.554616      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:47.554815      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:48.555072      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:49.555183      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:50.555284      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:51.555455      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:52.555553      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:53.556526      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:54.557523      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:55.558566      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:56.558649      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:57.558797      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:58.558989      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:54:59.559212      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:00.559460      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:01.559677      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:02.559775      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:03.560012      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:04.560316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:05.560555      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:06.560647      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:07.560737      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:08.561529      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:09.561817      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:09.863374 19 taints.go:329] Pod wasn't evicted. Test successful
  I1221 13:55:09.863543 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6205" for this suite. @ 12/21/24 13:55:09.869
• [135.298 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:235
  STEP: Creating a kubernetes client @ 12/21/24 13:55:09.878
  I1221 13:55:09.878755 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:55:09.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:09.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:09.898
  STEP: Setting up server cert @ 12/21/24 13:55:09.92
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:55:10.163
  STEP: Deploying the webhook pod @ 12/21/24 13:55:10.173
  STEP: Wait for the deployment to be ready @ 12/21/24 13:55:10.188
  I1221 13:55:10.197100 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1221 13:55:10.562565      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:11.563552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/21/24 13:55:12.212
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:55:12.227
  E1221 13:55:12.564477      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:13.228440 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/21/24 13:55:13.237
  STEP: create a namespace for the webhook @ 12/21/24 13:55:13.25
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/21/24 13:55:13.264
  I1221 13:55:13.335266 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7174" for this suite. @ 12/21/24 13:55:13.34
  STEP: Destroying namespace "webhook-markers-6815" for this suite. @ 12/21/24 13:55:13.348
  STEP: Destroying namespace "fail-closed-namespace-672" for this suite. @ 12/21/24 13:55:13.358
• [3.488 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:393
  STEP: Creating a kubernetes client @ 12/21/24 13:55:13.367
  I1221 13:55:13.367182 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 13:55:13.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:13.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:13.386
  STEP: creating all guestbook components @ 12/21/24 13:55:13.388
  I1221 13:55:13.388983 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1221 13:55:13.389041 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 create -f -'
  I1221 13:55:13.475935 19 builder.go:146] stderr: ""
  I1221 13:55:13.475967 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1221 13:55:13.476020 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1221 13:55:13.476084 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 create -f -'
  I1221 13:55:13.560664 19 builder.go:146] stderr: ""
  I1221 13:55:13.560699 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1221 13:55:13.560739 19 kubectl.go:399] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1221 13:55:13.560797 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 create -f -'
  E1221 13:55:13.565145      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:13.646781 19 builder.go:146] stderr: ""
  I1221 13:55:13.646816 19 builder.go:147] stdout: "service/frontend created\n"
  I1221 13:55:13.646912 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1221 13:55:13.647054 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 create -f -'
  I1221 13:55:13.709108 19 builder.go:146] stderr: ""
  I1221 13:55:13.709143 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1221 13:55:13.709204 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1221 13:55:13.709295 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 create -f -'
  I1221 13:55:13.833843 19 builder.go:146] stderr: ""
  I1221 13:55:13.833897 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1221 13:55:13.833986 19 kubectl.go:399] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.52
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1221 13:55:13.834113 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 create -f -'
  I1221 13:55:13.931855 19 builder.go:146] stderr: ""
  I1221 13:55:13.931900 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/21/24 13:55:13.931
  I1221 13:55:13.931941 19 kubectl.go:2272] Waiting for all frontend pods to be Running.
  E1221 13:55:14.565180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:15.565507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:16.565592      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:17.566493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:18.566601      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:18.983284 19 kubectl.go:2276] Waiting for frontend to serve content.
  I1221 13:55:18.995059 19 kubectl.go:2281] Trying to add a new entry to the guestbook.
  I1221 13:55:19.008156 19 kubectl.go:2286] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/21/24 13:55:19.019
  I1221 13:55:19.019911 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 delete --grace-period=0 --force -f -'
  I1221 13:55:19.085770 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:55:19.085804 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/21/24 13:55:19.085
  I1221 13:55:19.085904 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 delete --grace-period=0 --force -f -'
  I1221 13:55:19.146504 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:55:19.146539 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/21/24 13:55:19.146
  I1221 13:55:19.146645 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 delete --grace-period=0 --force -f -'
  I1221 13:55:19.206607 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:55:19.206643 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/21/24 13:55:19.206
  I1221 13:55:19.206869 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 delete --grace-period=0 --force -f -'
  I1221 13:55:19.255748 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:55:19.255783 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/21/24 13:55:19.255
  I1221 13:55:19.255918 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 delete --grace-period=0 --force -f -'
  I1221 13:55:19.308898 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:55:19.308947 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/21/24 13:55:19.309
  I1221 13:55:19.309088 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-4651 delete --grace-period=0 --force -f -'
  I1221 13:55:19.375210 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1221 13:55:19.375266 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1221 13:55:19.375678 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4651" for this suite. @ 12/21/24 13:55:19.379
• [6.021 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 12/21/24 13:55:19.388
  I1221 13:55:19.388683 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubelet-test @ 12/21/24 13:55:19.389
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:19.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:19.437
  E1221 13:55:19.567180      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:20.567367      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:21.491004 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7656" for this suite. @ 12/21/24 13:55:21.496
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/21/24 13:55:21.506
  I1221 13:55:21.506441 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename lease-test @ 12/21/24 13:55:21.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:21.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:21.525
  E1221 13:55:21.567469      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:21.598068 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-4131" for this suite. @ 12/21/24 13:55:21.602
• [0.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/21/24 13:55:21.61
  I1221 13:55:21.610675 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/21/24 13:55:21.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:21.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:21.63
  STEP: Creating two CSIDrivers @ 12/21/24 13:55:21.633
  STEP: Getting "inline-driver-b52814d2-b385-4731-8e51-b4e7b06881fd" & "inline-driver-9579b415-40ad-432d-bdd0-44c8508e09f5" @ 12/21/24 13:55:21.657
  STEP: Patching the CSIDriver "inline-driver-9579b415-40ad-432d-bdd0-44c8508e09f5" @ 12/21/24 13:55:21.665
  STEP: Updating the CSIDriver "inline-driver-9579b415-40ad-432d-bdd0-44c8508e09f5" @ 12/21/24 13:55:21.672
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-9490" @ 12/21/24 13:55:21.681
  STEP: Deleting CSIDriver "inline-driver-b52814d2-b385-4731-8e51-b4e7b06881fd" @ 12/21/24 13:55:21.685
  STEP: Confirm deletion of CSIDriver "inline-driver-b52814d2-b385-4731-8e51-b4e7b06881fd" @ 12/21/24 13:55:21.694
  STEP: Deleting CSIDriver "inline-driver-9579b415-40ad-432d-bdd0-44c8508e09f5" via DeleteCollection @ 12/21/24 13:55:21.698
  STEP: Confirm deletion of CSIDriver "inline-driver-9579b415-40ad-432d-bdd0-44c8508e09f5" @ 12/21/24 13:55:21.708
  I1221 13:55:21.712105 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9490" for this suite. @ 12/21/24 13:55:21.718
• [0.122 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/21/24 13:55:21.734
  I1221 13:55:21.734260 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename daemonsets @ 12/21/24 13:55:21.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:21.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:21.752
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/21/24 13:55:21.776
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/21/24 13:55:21.784
  I1221 13:55:21.788297 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:21.788375 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:21.791859 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 13:55:21.791880 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  E1221 13:55:22.567747      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:22.791099 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:22.791147 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:22.796103 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1221 13:55:22.796122 19 fixtures.go:130] Node ip-172-31-18-134 is running 0 daemon pod, expected 1
  E1221 13:55:23.568533      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:23.790920 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:23.790959 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:23.795017 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 13:55:23.795039 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/21/24 13:55:23.799
  I1221 13:55:23.818279 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-1-34 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:23.818317 19 fixtures.go:89] DaemonSet pods can't tolerate node ip-172-31-19-94 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1221 13:55:23.823356 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1221 13:55:23.823373 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/21/24 13:55:23.823
  E1221 13:55:24.568711      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting DaemonSet "daemon-set" @ 12/21/24 13:55:24.832
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7952, will wait for the garbage collector to delete the pods @ 12/21/24 13:55:24.832
  I1221 13:55:24.894510 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.275226ms
  I1221 13:55:24.995160 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.630272ms
  E1221 13:55:25.569126      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:26.569666      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:26.698841 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1221 13:55:26.698883 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1221 13:55:26.702847 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"48648"},"items":null}

  I1221 13:55:26.706557 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"48648"},"items":null}

  I1221 13:55:26.725190 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7952" for this suite. @ 12/21/24 13:55:26.729
• [5.008 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/21/24 13:55:26.741
  I1221 13:55:26.741921 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename svcaccounts @ 12/21/24 13:55:26.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:26.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:26.765
  I1221 13:55:26.772124 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-2185"
  I1221 13:55:26.782953 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-2185"
  STEP: waiting for a new root ca configmap created @ 12/21/24 13:55:27.283
  I1221 13:55:27.289999 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-2185"
  I1221 13:55:27.295478 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-2185"
  E1221 13:55:27.569913      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 12/21/24 13:55:27.796
  I1221 13:55:27.802313 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-2185"
  I1221 13:55:27.802491 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2185" for this suite. @ 12/21/24 13:55:27.806
• [1.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/21/24 13:55:27.815
  I1221 13:55:27.815526 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:55:27.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:27.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:27.835
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:55:27.838
  E1221 13:55:28.570046      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:29.570198      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:55:29.861
  I1221 13:55:29.865740 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-f39a3e41-c250-4f95-a964-2a608d96de32 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:55:29.884
  I1221 13:55:29.906038 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9357" for this suite. @ 12/21/24 13:55:29.91
• [2.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/21/24 13:55:29.919
  I1221 13:55:29.919058 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename downward-api @ 12/21/24 13:55:29.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:29.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:29.941
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:55:29.943
  E1221 13:55:30.570316      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:31.570495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:55:31.97
  I1221 13:55:31.973306 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-a9cdd106-74b5-4993-b08d-c3018c839814 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:55:31.98
  I1221 13:55:32.003631 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6227" for this suite. @ 12/21/24 13:55:32.007
• [2.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/21/24 13:55:32.016
  I1221 13:55:32.016504 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename container-runtime @ 12/21/24 13:55:32.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:32.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:32.037
  STEP: create the container @ 12/21/24 13:55:32.039
  W1221 13:55:32.050661      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/21/24 13:55:32.05
  E1221 13:55:32.571428      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:33.572312      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:34.572590      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/21/24 13:55:35.07
  STEP: the container should be terminated @ 12/21/24 13:55:35.073
  STEP: the termination message should be set @ 12/21/24 13:55:35.073
  I1221 13:55:35.073754 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/21/24 13:55:35.073
  I1221 13:55:35.097182 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3895" for this suite. @ 12/21/24 13:55:35.103
• [3.096 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/21/24 13:55:35.112
  I1221 13:55:35.112090 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename init-container @ 12/21/24 13:55:35.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:35.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:35.128
  STEP: creating the pod @ 12/21/24 13:55:35.131
  I1221 13:55:35.131106 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1221 13:55:35.572768      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:36.573109      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:37.573259      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:38.573549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:38.631111 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2105" for this suite. @ 12/21/24 13:55:38.635
• [3.532 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:282
  STEP: Creating a kubernetes client @ 12/21/24 13:55:38.643
  I1221 13:55:38.643952 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:55:38.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:38.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:38.664
  STEP: Setting up server cert @ 12/21/24 13:55:38.686
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:55:38.924
  STEP: Deploying the webhook pod @ 12/21/24 13:55:38.931
  STEP: Wait for the deployment to be ready @ 12/21/24 13:55:38.946
  I1221 13:55:38.957091 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1221 13:55:39.573634      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:40.573784      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/21/24 13:55:40.971
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:55:40.983
  E1221 13:55:41.574538      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:41.984043 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1221 13:55:41.994463 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-446-crds.webhook.example.com via the AdmissionRegistration API @ 12/21/24 13:55:42.504
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/21/24 13:55:42.517
  E1221 13:55:42.575582      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:43.575811      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:44.576488      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:45.119689 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4329" for this suite. @ 12/21/24 13:55:45.125
  STEP: Destroying namespace "webhook-markers-338" for this suite. @ 12/21/24 13:55:45.133
• [6.499 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:116
  STEP: Creating a kubernetes client @ 12/21/24 13:55:45.143
  I1221 13:55:45.143476 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename webhook @ 12/21/24 13:55:45.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:45.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:45.163
  STEP: Setting up server cert @ 12/21/24 13:55:45.19
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/21/24 13:55:45.281
  STEP: Deploying the webhook pod @ 12/21/24 13:55:45.291
  STEP: Wait for the deployment to be ready @ 12/21/24 13:55:45.307
  I1221 13:55:45.323559 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1221 13:55:45.576843      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:46.576936      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/21/24 13:55:47.337
  STEP: Verifying the service has paired with the endpoint @ 12/21/24 13:55:47.348
  E1221 13:55:47.577547      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:48.348519 19 util.go:420] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/21/24 13:55:48.358
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/21/24 13:55:48.359
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/21/24 13:55:48.359
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/21/24 13:55:48.359
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/21/24 13:55:48.36
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/21/24 13:55:48.36
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/21/24 13:55:48.361
  I1221 13:55:48.409166 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4691" for this suite. @ 12/21/24 13:55:48.413
  STEP: Destroying namespace "webhook-markers-5325" for this suite. @ 12/21/24 13:55:48.422
• [3.287 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/21/24 13:55:48.43
  I1221 13:55:48.430607 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:55:48.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:48.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:48.449
  STEP: Creating a pod to test downward API volume plugin @ 12/21/24 13:55:48.451
  E1221 13:55:48.578092      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:49.578206      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:50.579261      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:51.579465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:55:52.479
  I1221 13:55:52.482968 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod downwardapi-volume-85e915c4-c111-4176-b014-7974233c9e78 container client-container: <nil>
  STEP: delete the pod @ 12/21/24 13:55:52.491
  I1221 13:55:52.511125 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-914" for this suite. @ 12/21/24 13:55:52.515
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/21/24 13:55:52.524
  I1221 13:55:52.524478 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename pods @ 12/21/24 13:55:52.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:52.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:52.543
  STEP: creating pod @ 12/21/24 13:55:52.545
  E1221 13:55:52.580297      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:53.580552      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:55:54.575515 19 pods.go:83] Pod pod-hostip-4088dcff-2100-49e3-b670-ef15baea8bf1 has hostIP: 172.31.68.100
  I1221 13:55:54.575624 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9914" for this suite. @ 12/21/24 13:55:54.579
  E1221 13:55:54.581311      19 retrywatcher.go:131] "Watch failed" err="context canceled"
• [2.063 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/21/24 13:55:54.587
  I1221 13:55:54.587948 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename runtimeclass @ 12/21/24 13:55:54.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:54.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:54.607
  I1221 13:55:54.619666 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7068" for this suite. @ 12/21/24 13:55:54.623
• [0.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1723
  STEP: Creating a kubernetes client @ 12/21/24 13:55:54.631
  I1221 13:55:54.631881 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename kubectl @ 12/21/24 13:55:54.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:54.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:54.649
  I1221 13:55:54.651562 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=kubectl-6584 version'
  I1221 13:55:54.686487 19 builder.go:146] stderr: ""
  I1221 13:55:54.686528 19 builder.go:147] stdout: "Client Version: v1.31.4\nKustomize Version: v5.4.2\nServer Version: v1.31.4\n"
  I1221 13:55:54.686705 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6584" for this suite. @ 12/21/24 13:55:54.691
• [0.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/21/24 13:55:54.7
  I1221 13:55:54.700280 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:55:54.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:54.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:54.721
  STEP: Creating configMap with name projected-configmap-test-volume-5541b024-1999-42c9-a60b-642f2677a52a @ 12/21/24 13:55:54.723
  STEP: Creating a pod to test consume configMaps @ 12/21/24 13:55:54.727
  E1221 13:55:55.581617      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:56.581804      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:57.582068      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:55:58.582230      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/21/24 13:55:58.755
  I1221 13:55:58.759483 19 output.go:196] Trying to get logs from node ip-172-31-68-100 pod pod-projected-configmaps-8c3817d3-3f33-432b-b4f4-f52d9b46793b container agnhost-container: <nil>
  STEP: delete the pod @ 12/21/24 13:55:58.768
  I1221 13:55:58.788913 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8517" for this suite. @ 12/21/24 13:55:58.793
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1435
  STEP: Creating a kubernetes client @ 12/21/24 13:55:58.801
  I1221 13:55:58.801690 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename services @ 12/21/24 13:55:58.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:55:58.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:55:58.819
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-5225 @ 12/21/24 13:55:58.821
  STEP: changing the ExternalName service to type=NodePort @ 12/21/24 13:55:58.828
  STEP: creating replication controller externalname-service in namespace services-5225 @ 12/21/24 13:55:58.851
  I1221 13:55:58.861015      19 runners.go:193] Created replication controller with name: externalname-service, namespace: services-5225, replica count: 2
  E1221 13:55:59.583040      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:00.584083      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:01.584192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:56:01.912477      19 runners.go:193] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1221 13:56:01.912514 19 resource.go:361] Creating new exec pod
  E1221 13:56:02.584905      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:03.584916      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:04.585015      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:56:04.935532 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1221 13:56:05.018476 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1221 13:56:05.018517 19 builder.go:147] stdout: ""
  E1221 13:56:05.585999      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:56:05.936503 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1221 13:56:06.014313 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1221 13:56:06.014376 19 builder.go:147] stdout: "externalname-service-nltfp"
  I1221 13:56:06.014554 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  I1221 13:56:06.092377 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.219 80\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  I1221 13:56:06.092418 19 builder.go:147] stdout: ""
  E1221 13:56:06.587073      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:56:07.015501 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  I1221 13:56:07.097803 19 builder.go:146] stderr: "+ + nc -v -t -w 2 10.152.183.219 80\necho hostName\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  I1221 13:56:07.097844 19 builder.go:147] stdout: ""
  E1221 13:56:07.587192      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:56:08.014605 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  I1221 13:56:08.092583 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.219 80\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  I1221 13:56:08.092620 19 builder.go:147] stdout: ""
  E1221 13:56:08.587239      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:56:09.015510 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.219 80'
  I1221 13:56:09.091495 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.219 80\nConnection to 10.152.183.219 80 port [tcp/http] succeeded!\n"
  I1221 13:56:09.091532 19 builder.go:147] stdout: "externalname-service-nltfp"
  I1221 13:56:09.091613 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.18.134 31987'
  I1221 13:56:09.168294 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.18.134 31987\nConnection to 172.31.18.134 31987 port [tcp/*] succeeded!\n"
  I1221 13:56:09.168347 19 builder.go:147] stdout: "externalname-service-nltfp"
  I1221 13:56:09.168520 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-538464826 --namespace=services-5225 exec execpodtlplw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.68.100 31987'
  I1221 13:56:09.248588 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.68.100 31987\nConnection to 172.31.68.100 31987 port [tcp/*] succeeded!\n"
  I1221 13:56:09.248635 19 builder.go:147] stdout: "externalname-service-cl8r2"
  I1221 13:56:09.249015 19 service.go:1444] Cleaning up the ExternalName to NodePort test service
  I1221 13:56:09.279808 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5225" for this suite. @ 12/21/24 13:56:09.284
• [10.491 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/21/24 13:56:09.293
  I1221 13:56:09.293224 19 util.go:499] >>> kubeConfig: /tmp/kubeconfig-538464826
  STEP: Building a namespace api object, basename projected @ 12/21/24 13:56:09.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/21/24 13:56:09.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/21/24 13:56:09.313
  STEP: Creating secret with name s-test-opt-del-581a3a6f-55b2-4ef1-b4b0-13a293b0234f @ 12/21/24 13:56:09.32
  STEP: Creating secret with name s-test-opt-upd-e2c58acb-dbaf-4ab9-9907-1382ac19e732 @ 12/21/24 13:56:09.325
  STEP: Creating the pod @ 12/21/24 13:56:09.331
  E1221 13:56:09.588279      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:10.588388      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-581a3a6f-55b2-4ef1-b4b0-13a293b0234f @ 12/21/24 13:56:11.384
  STEP: Updating secret s-test-opt-upd-e2c58acb-dbaf-4ab9-9907-1382ac19e732 @ 12/21/24 13:56:11.392
  STEP: Creating secret with name s-test-opt-create-807825b6-4f06-45f9-8913-3fcc2b54d22b @ 12/21/24 13:56:11.399
  STEP: waiting to observe update in volume @ 12/21/24 13:56:11.406
  E1221 13:56:11.588954      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:12.589131      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:13.590060      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:14.590495      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:15.590427      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:16.590646      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:17.591704      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:18.591792      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:19.592258      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:20.592396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:21.592507      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:22.592803      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:23.593681      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:24.593763      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:25.594387      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:26.594494      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:27.594774      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:28.595163      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:29.595485      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:30.595589      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:31.596278      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:32.597374      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:33.598349      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:34.598549      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:35.599416      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:36.599567      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:37.600560      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:38.600826      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:39.601053      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:40.601225      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:41.601859      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:42.601959      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:43.602561      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:44.602695      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:45.603077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:46.603233      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:47.603903      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:48.604170      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:49.604801      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:50.604927      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:51.605118      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:52.605492      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:53.605575      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:54.605674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:55.605770      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:56.605879      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:57.605960      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:58.606551      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:56:59.606654      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:00.606745      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:01.606847      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:02.606941      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:03.607013      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:04.607493      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:05.607624      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:06.607725      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:07.607832      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:08.608210      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:09.608465      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:10.608598      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:11.608828      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:12.609026      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:13.609200      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:14.609362      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:15.609540      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:16.610085      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:17.610396      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:18.610689      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:19.610899      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:20.611471      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:21.611625      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:22.611830      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:23.612151      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:24.612435      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:25.612674      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:26.612940      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:27.613114      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:28.613509      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:29.613773      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:30.613955      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:31.614077      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:32.615124      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:33.615264      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:34.615708      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:35.615831      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:36.616464      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  E1221 13:57:37.617550      19 retrywatcher.go:131] "Watch failed" err="context canceled"
  I1221 13:57:37.876928 19 helper.go:122] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7619" for this suite. @ 12/21/24 13:57:37.881
• [88.595 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1221 13:57:37.888644 19 suites.go:34] Running AfterSuite actions on node 1
  I1221 13:57:37.888687 19 util.go:607] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:158
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.027 seconds]
------------------------------

Ran 404 of 6605 Specs in 6389.657 seconds
SUCCESS! -- 404 Passed | 0 Failed | 0 Pending | 6201 Skipped
PASS

Ginkgo ran 1 suite in 1h46m30.504441493s
Test Suite Passed
